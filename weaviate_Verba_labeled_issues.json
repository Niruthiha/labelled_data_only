{
  "repository": "weaviate/Verba",
  "repository_info": {
    "repo": "weaviate/Verba",
    "stars": 7171,
    "language": "Python",
    "description": "Retrieval Augmented Generation (RAG) chatbot powered by Weaviate",
    "url": "https://github.com/weaviate/Verba",
    "topics": [],
    "created_at": "2023-07-28T16:53:42Z",
    "updated_at": "2025-06-21T20:09:00Z",
    "search_query": "RAG retrieval augmented language:python stars:>3",
    "total_issues_estimate": 152,
    "labeled_issues_estimate": 133,
    "labeling_rate": 87.5,
    "sample_labeled": 35,
    "sample_total": 40,
    "has_issues": true,
    "repo_id": 672002598,
    "default_branch": "main",
    "size": 46987
  },
  "extraction_date": "2025-06-22T00:34:04.432090",
  "extraction_type": "LABELED_ISSUES_ONLY",
  "total_labeled_issues": 222,
  "issues": [
    {
      "issue_number": 381,
      "title": "MCP for Verba",
      "body": "## Description\n\nI think that at the moment, connecting Verba with other services is relatively complex and I was wondering if implementing MCP would help in the process of improving the number of people using Verba, simplifying its implementation elsewhere.\n",
      "state": "open",
      "author": "vk2r",
      "author_type": "User",
      "created_at": "2025-05-23T05:10:21Z",
      "updated_at": "2025-05-23T05:10:21Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/381/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/381",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/381",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:06.291944",
      "comments": []
    },
    {
      "issue_number": 347,
      "title": "`CORS Missing Allow Origin` when deployed using docker",
      "body": "## Description\r\n\r\n<!-- A clear and concise description of what the issue is. Please include any error messages and logs. If possible, also include your configuration. -->\r\nThere is a problem with verba when I deploy it on another machine (not on my local machine.\r\n\r\nWhen I want to open Verba UI I I get stuck on `Welcome to Verba Choose your deployment` view.\r\n\r\n![image](https://github.com/user-attachments/assets/d7b73c93-b9a2-498c-97dd-eb3cb9a137aa)\r\n\r\n\r\n## Installation\r\n\r\n<!-- Please specify how you installed Verba. Please always make sure to install Verba in a clean python environment and have at least 3.10.0 installed -->\r\n\r\n- [ ] pip install goldenverba\r\n- [ ] pip install from source\r\n- [X] Docker installation\r\n\r\n\r\n## Weaviate Deployment\r\n\r\n<!-- Please specify the Weaviate deployment you are using. -->\r\n\r\n- [ ] Local Deployment\r\n- [X] Docker Deployment\r\n- [ ] Cloud Deployment\r\n\r\n## Configuration\r\n\r\n<!-- If you can, please specify the what components you are using. -->\r\n\r\nReader:\r\nChunker:\r\nEmbedder:\r\nRetriever:\r\nGenerator:\r\n\r\n## Steps to Reproduce\r\n\r\n<!-- If this is a bug, please provide detailed steps on how to reproduce the issue. If this is a feature, please describe what you want to be added or changed. -->\r\n\r\nYou need 2 machines in your network:\r\n\r\n- Your local dev machine with IP: `192.168.0.100`\r\n- Your strong server with IP `192.168.0.200`\r\n\r\nSteps:\r\n\r\n1. Deploy verba using docker compose from this repo `docker compose up -d --build` on your server machine\r\n2. Open `http://192.168.0.200:8000` on your dev machine\r\n3. Press `Docker` option\r\n4. App is stuck\r\n\r\n## Additional context\r\n\r\nPossible workaround is using ssh tunnels to access Verba `ssh -L 8001:localhost:8000 user@192.168.0.200`, then website works under `http://localhost:8001` on dev machine",
      "state": "open",
      "author": "pktiuk",
      "author_type": "User",
      "created_at": "2024-12-11T14:16:44Z",
      "updated_at": "2025-05-12T02:38:45Z",
      "closed_at": null,
      "labels": [
        "documentation",
        "enhancement"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/347/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/347",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/347",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:06.291969",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey thanks for the issue! This is because of this `@middleware` section \r\n\r\nhttps://github.com/weaviate/Verba/blob/30ae51ef66279fa2d001ccbfbc7f5659277c3467/goldenverba/server/api.py#L82\r\n\r\nIt checks if the requests have the same origin, since it's deployed on another machine it fails with the CORS e",
          "created_at": "2024-12-11T19:37:54Z"
        },
        {
          "author": "pktiuk",
          "body": "@thomashacker \r\n\r\nThank you for fix. It helped me.",
          "created_at": "2024-12-18T10:15:27Z"
        },
        {
          "author": "jlar0che",
          "body": "> Hey thanks for the issue! This is because of this `@middleware` section\n> \n> [Verba/goldenverba/server/api.py](https://github.com/weaviate/Verba/blob/30ae51ef66279fa2d001ccbfbc7f5659277c3467/goldenverba/server/api.py#L82)\n> \n> Line 82 in [30ae51e](/weaviate/Verba/commit/30ae51ef66279fa2d001ccbfbc7",
          "created_at": "2025-05-12T02:38:43Z"
        }
      ]
    },
    {
      "issue_number": 380,
      "title": "Multitency and/or authtentication for Admin and regular users on Verba",
      "body": "## Description\n\n<!-- A clear and concise description of the new feature. -->\nWe could have an Admin panel, which I see is default, and a regular Users view, like how the main website demo shows. Having basic RBAC would be ideal so multiple people can use the same instance separately. \n\nUser View(Only chat and documents can be accessed and found on the main Verba demo at https://verba.weaviate.io/)\n![Image](https://github.com/user-attachments/assets/5cf1d93d-29de-447e-b58d-5aa4ebcc5ea7)\n\nAdmin View(Have the standard Admin view but also be able to grant users Admin access somehow in settings or a new section in settings)\n\n![Image](https://github.com/user-attachments/assets/515c833c-67ad-47a5-b335-3d7fe8d4c027)\n\n## Additional context\nI haven't found another application similar to Verba's features with RBAC, if you have any suggestions in case this feature cannot be implemented, please let me know.\n",
      "state": "open",
      "author": "Adi33-cloud",
      "author_type": "User",
      "created_at": "2025-04-14T15:43:34Z",
      "updated_at": "2025-04-14T15:43:34Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/380/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/380",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/380",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:06.543513",
      "comments": []
    },
    {
      "issue_number": 254,
      "title": "can i use verba via api ?",
      "body": "instead of using the frontend ??? thanks!",
      "state": "open",
      "author": "michabbb",
      "author_type": "User",
      "created_at": "2024-08-09T00:22:19Z",
      "updated_at": "2025-04-14T13:14:18Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 7,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/254/reactions",
        "total_count": 3,
        "+1": 3,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/254",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/254",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:06.543539",
      "comments": [
        {
          "author": "CarstenHoyer",
          "body": "It looks like the fetching of context happens through /api/query - but after that the Manager look (ie querying Ollama) happens through a websocket. So I don't think it can be used as an API, but I think you could write a thin middlelayer to do it.  ",
          "created_at": "2024-08-13T17:59:45Z"
        },
        {
          "author": "danielhangan",
          "body": "You can write custom route that follows the same pattern as websocket_generate_stream route.\r\n  \r\n```python\r\nasync def generate_stream(payload: GeneratePayload):\r\n    chunks, context = manager.retrieve_chunks([payload.query])\r\n\r\n    retrieved_chunks_text = [chunk.text for chunk in chunks]\r\n\r\n    ful",
          "created_at": "2024-08-30T14:27:14Z"
        },
        {
          "author": "thomashacker",
          "body": "Great idea, we're working on an API for this! 🚀 ",
          "created_at": "2024-09-03T13:16:15Z"
        },
        {
          "author": "asfour75",
          "body": "Any updates on this ... ?\n\nThanks",
          "created_at": "2025-04-13T20:25:26Z"
        },
        {
          "author": "thomashacker",
          "body": "Still in WIP! 🚀 ",
          "created_at": "2025-04-14T09:20:02Z"
        }
      ]
    },
    {
      "issue_number": 353,
      "title": "Middleware preventing to host Verba",
      "body": "## Description\r\n\r\n<!-- A clear and concise description of what the issue is. Please include any error messages and logs. If possible, also include your configuration. -->\r\n\r\nMiddleware that checks same-origin is preventing from deploying Verba\r\n\r\n## Installation\r\n\r\n<!-- Please specify how you installed Verba. Please always make sure to install Verba in a clean python environment and have at least 3.10.0 installed -->\r\n\r\n- [x] pip install goldenverba\r\n- [ ] pip install from source\r\n- [ ] Docker installation\r\n\r\nIf you installed via pip, please specify the version:\r\n\r\n## Weaviate Deployment\r\n\r\n<!-- Please specify the Weaviate deployment you are using. -->\r\n\r\n- [ ] Local Deployment\r\n- [x] Docker Deployment\r\n- [ ] Cloud Deployment\r\n\r\n## Configuration\r\n\r\n<!-- If you can, please specify the what components you are using. -->\r\n\r\nReader: /\r\nChunker: /\r\nEmbedder: /\r\nRetriever: / \r\nGenerator: / \r\n\r\n## Steps to Reproduce\r\n\r\n<!-- If this is a bug, please provide detailed steps on how to reproduce the issue. If this is a feature, please describe what you want to be added or changed. -->\r\n\r\nDeploy Verba externally and expose frontend to get access\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n\r\n\r\n",
      "state": "open",
      "author": "thomashacker",
      "author_type": "User",
      "created_at": "2024-12-14T14:54:15Z",
      "updated_at": "2025-04-14T09:17:57Z",
      "closed_at": null,
      "labels": [
        "bug",
        "enhancement"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/353/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/353",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/353",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:06.812379",
      "comments": [
        {
          "author": "SaiAkhil066",
          "body": "Yes, same issue, Iam not able to communicate with the other PCs when I connected with LAN. ",
          "created_at": "2024-12-17T07:07:54Z"
        },
        {
          "author": "Japhys",
          "body": "Has there been any progress on this? Just did a clean install but problem still exist, it seems.",
          "created_at": "2025-03-26T18:09:12Z"
        },
        {
          "author": "thomashacker",
          "body": "It's still WIP",
          "created_at": "2025-04-14T09:17:56Z"
        }
      ]
    },
    {
      "issue_number": 368,
      "title": "Support for reasoning models like Deepseek-R1 and/or distilled versions",
      "body": "## Description\n\nWould Verba UI be updated soon to include or hide thinking responses in the UI when the model provides it. \n\n## Additional context\n\nThis would target mostly widely available models like deepseek-r1 and/or distilled versions",
      "state": "open",
      "author": "edwardochoaphd",
      "author_type": "User",
      "created_at": "2025-01-30T00:10:36Z",
      "updated_at": "2025-04-13T12:45:38Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/368/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 1,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/368",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/368",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:07.028782",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Good point! We'll look into that for the future versions, thanks 🚀 ",
          "created_at": "2025-01-30T10:04:47Z"
        },
        {
          "author": "dromeuf",
          "body": "Can you add  DeepSeek v3 Generator please (like OpenAI, Anthropic, Groq....) ? Thanks for your great work.",
          "created_at": "2025-04-13T12:44:46Z"
        }
      ]
    },
    {
      "issue_number": 375,
      "title": "Verba with Docker can't connect to Ollama",
      "body": "## Description\n\nWhen I run Verba, deployed with `docker compose`, set up with Ollama, I manage to see the Verba frontend when opening localhost:8000 on my browser, but it gives this error: `0 documents embedded by Couldn't connect to Ollama http://host.docker.internal:11434`, and nothing works. I can send queries, but I receive errors, and I can't add any kind of document.\n\nThis problem occured when trying to deploy Verba with Docker on three different machines, with _CentOS 8_, _Ubuntu 20.04.5 LTS_ and _Rocky Linux 9.5_.\nThe problem did NOT occur when deploying with Docker, same settings (same `docker-compose.yaml`), on a _Windows 10_ machine with WSL.\n\n## Installation\n\n<!-- Please specify how you installed Verba. Please always make sure to install Verba in a clean python environment and have at least 3.10.0 installed -->\n\n- [ ] pip install goldenverba\n- [ ] pip install from source\n- [x] Docker installation\n\nIf you installed via pip, please specify the version:\n\n## Weaviate Deployment\n\n<!-- Please specify the Weaviate deployment you are using. -->\n\n- [ ] Local Deployment\n- [x] Docker Deployment\n- [ ] Cloud Deployment\n\n## Configuration\n\nI leave this section blank, since I didn't even manage to get to this part. I just tried to use llama3 model.\n\nReader:\nChunker:\nEmbedder:\nRetriever:\nGenerator:\n\n## Steps to Reproduce\n\n- Clone the repository with git\n- Start Ollama on the machine with the command `ollama serve` (checking that Ollama is running, with `curl`)\n- Set a couple of environment variables in the `docker-compose.yaml` (explained in Additional context)\n- Run `docker compose up -d`\n\n\n\n## Additional context\n\nThe variable that I changed in the yaml file is `OLLAMA_MODEL=llama3`. I also tried with `llama3:latest`, though, when running it directly from Python (without Verba) setting `OLLAMA_MODEL=llama3` in the `.env` file worked.\n\nI also tried changing `OLLAMA_URL=http://host.docker.internal:11434` to `OLLAMA_URL=http://localhost:11434`; the latter worked when running from Python, but I know that it shouldn't work with Docker (I just tried).\nIt is worth noting that, when setting `OLLAMA_URL=http://localhost:11434`, the error message on Verba became `0 documents embedded by Couldn't connect to Ollama http://localhost:11434`.\n\nI also tried adding `OLLAMA_HOST=0.0.0.0`, without success.\n\nThis is an image of the error\n\n![Image](https://github.com/user-attachments/assets/0800205d-bf9b-45ca-b597-6bf8bce985b5)\n\nNote that on the bottom the button says \"Reconnecting...\" because I closed the docker container instance, is it not related to my problem.",
      "state": "open",
      "author": "venanzi-1852473",
      "author_type": "User",
      "created_at": "2025-03-10T08:35:14Z",
      "updated_at": "2025-03-27T10:37:11Z",
      "closed_at": null,
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/375/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/375",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/375",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:07.262845",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! Did I understand correctly that you uncommented the `Ollama` section of the `docker-compose.yml`? \nSeems like Verba has problems reaching the Ollama instance...",
          "created_at": "2025-03-17T10:35:27Z"
        },
        {
          "author": "venanzi-1852473",
          "body": "It is commented, but there are two things to consider:\n\n- On Windows I managed to make Verba work with the Ollama part commented, I ran it (Ollama) from outside the Docker container, I manually opened an Ollama instance from the same machine\n- When I tried to uncomment that block I got a parsing err",
          "created_at": "2025-03-20T08:09:32Z"
        },
        {
          "author": "thomashacker",
          "body": "There might be some issues with the Docker Compose then, I'll look into it! ",
          "created_at": "2025-03-20T12:32:20Z"
        },
        {
          "author": "Japhys",
          "body": "Thanks! Running into the same.\n```\n\nversion: '3.8'\n\nservices:\n  verba:\n    image: semitechnologies/verba\n    ports:\n      - 8111:8000\n    environment:\n      - WEAVIATE_URL_VERBA=http://weaviate:8080\n      - OLLAMA_URL=http://host.docker.internal:11434\n      - OLLAMA_MODEL=$OLLAMA_MODEL\n      - OLLAM",
          "created_at": "2025-03-27T10:32:43Z"
        }
      ]
    },
    {
      "issue_number": 266,
      "title": "Support Google Embedding through Google AI Studio instead of Vertex AI",
      "body": "## Description\r\nGoogle AI Studio offers a way to rapid test and prototype Gemini models without the need to configure a GCP project nor setup a billing account as Vertex AI requests.\r\n\r\n## Is this a bug or a feature?\r\n- [ ] Bug\r\n- [x] Feature\r\n\r\n## Steps to Reproduce\r\nI would want to generate an API key on [https://aistudio.google.com/app/apikey](https://aistudio.google.com/app/apikey) , set it up as an environment variable on the docker compose and be able to use Gemini embeddings and model. \r\n",
      "state": "open",
      "author": "lpinilla",
      "author_type": "User",
      "created_at": "2024-08-28T15:12:09Z",
      "updated_at": "2025-03-18T11:56:41Z",
      "closed_at": null,
      "labels": [
        "Community PR"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/266/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/266",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/266",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:07.498350",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Good idea! Feel free to create a PR 🚀 ",
          "created_at": "2024-09-03T13:20:54Z"
        },
        {
          "author": "RYucel",
          "body": "Any development to use Google models in Verba?",
          "created_at": "2025-03-18T11:09:24Z"
        },
        {
          "author": "thomashacker",
          "body": "As of now, it's only possible to use Google models that are provided by services such as `HuggingFace` or `Ollama`",
          "created_at": "2025-03-18T11:56:41Z"
        }
      ]
    },
    {
      "issue_number": 364,
      "title": "Is there a Docker Compose that works and avoids using Ollama?",
      "body": "Hi!\n\nI'm trying to deploy Verba on a VPS. \n\nI was under the impression that it is possible to use an external LLM with the app. \n\nAs the VPS I'm running on isn't really provisioned for running an LLM, I would rather just use cloud LLMs via APIs. \n\nI attempted to modify the default docker-compose in this repo a little bit until I ended up with something like this:\n\n```\nservices:\n  verba:\n    image: semitechnologies/verba:latest\n    expose:\n      - 8000\n    environment:\n      - WEAVIATE_URL_VERBA=http://weaviate:8080\n      - OPENAI_API_KEY=${OPENAI_API_KEY}\n      - COHERE_API_KEY=${COHERE_API_KEY}\n      - UNSTRUCTURED_API_KEY=${UNSTRUCTURED_API_KEY:-}\n      - UNSTRUCTURED_API_URL=${UNSTRUCTURED_API_URL:-}\n      - GITHUB_TOKEN=${GITHUB_TOKEN:-}\n      - EMBEDDING_MODEL=openai # Specify to use OpenAI instead of Ollama\n      - LLM_MODEL=openai # Specify to use OpenAI instead of Ollama\n    volumes:\n      - /root/app-data/verba/data:/data/\n    depends_on:\n      weaviate:\n        condition: service_healthy\n    healthcheck:\n      test: wget --no-verbose --tries=3 --spider http://localhost:8000 || exit 1\n      interval: 5s\n      timeout: 10s\n      retries: 5\n      start_period: 10s\n    networks:\n      - cloudflared\n\n  weaviate:\n    command:\n      - --host\n      - 0.0.0.0\n      - --port\n      - '8080'\n      - --scheme\n      - http\n    image: semitechnologies/weaviate:1.25.10\n    expose:\n      - 8080\n    volumes:\n      - /root/app-data/verba/weaviate:/var/lib/weaviate\n    restart: on-failure:0\n    healthcheck:\n      test: wget --no-verbose --tries=3 --spider http://localhost:8080/v1/.well-known/ready || exit 1\n      interval: 5s\n      timeout: 10s\n      retries: 5\n      start_period: 10s\n    environment:\n      OPENAI_APIKEY: ${OPENAI_API_KEY}\n      COHERE_APIKEY: ${COHERE_API_KEY}\n      QUERY_DEFAULTS_LIMIT: 25\n      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'\n      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'\n      ENABLE_MODULES: 'e'\n      CLUSTER_HOSTNAME: 'node1'\n    networks:\n      - cloudflared\n\nnetworks:\n  cloudflared:\n    external: true\n```\n\nBut looking at the container logs, it seems as if the main container is expecting the OLAMA API to be available. \n\nIs there any way to avoid OLAMA entirely and if so, is there any chance you have a Docker Compose template for that? \n\n",
      "state": "open",
      "author": "danielrosehill",
      "author_type": "User",
      "created_at": "2025-01-20T20:05:36Z",
      "updated_at": "2025-03-17T10:00:03Z",
      "closed_at": null,
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/364/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/364",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/364",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:07.803041",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! Are you experiencing any errors in the console logs? `Ollama` is set as the default selection for embedding and generating text, but it shouldn't cause any problems if you don't have a Ollama Server setup. you should be able to simply modify your config via the frontend and sel",
          "created_at": "2025-01-27T10:01:05Z"
        },
        {
          "author": "nikhilno1",
          "body": "I am facing similar problem. On a VM I was able to get it to work. But upon restarting it is not working anymore. I am stuck at the main screen after selecting Docker option and it doesn't proceed further. Hence I am not able to make any changes. In the logs I can only see below log of any significa",
          "created_at": "2025-03-06T11:11:54Z"
        },
        {
          "author": "thomashacker",
          "body": "That's interesting! Could you provide more information about how you've set up your VM, the Dockerfile used, and how your other WSL instance was set up differently? I guess it can't find the Docker Weaviate instance for some reason; there's definitely an improvement for better logging for the initia",
          "created_at": "2025-03-17T10:00:01Z"
        }
      ]
    },
    {
      "issue_number": 272,
      "title": "Verba Welcome Page loads every time",
      "body": "## Description\r\n\r\nI installed goldenverba following the instructions (pip install) I created the .env file:\r\nOLLAMA_URL=http://localhost:11434\r\nOLLAMA_MODEL=llama3\r\nwhen I start verba everyhting is wokring. The issue only is, I always see the \"Welcome to Verba Choose your deployment\" Page. When browsing to http://MYIP:8000 How can I avoid this?\r\n\r\n## Installation\r\n\r\n<!-- Please specify how you installed Verba. Please always make sure to install Verba in a clean python environment and have at least 3.10.0 installed -->\r\n\r\n- [x ] pip install goldenverba\r\n- [ ] pip install from source\r\n- [ ] Docker installation\r\n\r\nIf you installed via pip, please specify the version:\r\npip 24.0 from /home/llm/verba_env/lib/python3.12/site-packages/pip (python 3.12)\r\n\r\n## Weaviate Deployment\r\n\r\n<!-- Please specify the Weaviate deployment you are using. -->\r\n\r\n- [x ] Local Deployment\r\n- [ ] Docker Deployment\r\n- [ ] Cloud Deployment\r\n\r\n## Configuration\r\n\r\n<!-- If you can, please specify the what components you are using. -->\r\n\r\nReader:\r\nChunker:\r\nEmbedder:\r\nRetriever:\r\nGenerator:\r\n\r\n## Steps to Reproduce\r\n\r\n<!-- If this is a bug, please provide detailed steps on how to reproduce the issue. If this is a feature, please describe what you want to be added or changed. -->\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
      "state": "closed",
      "author": "BreakerBaron",
      "author_type": "User",
      "created_at": "2024-09-06T15:35:16Z",
      "updated_at": "2025-03-15T01:32:34Z",
      "closed_at": "2024-12-09T11:25:09Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/272/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/272",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/272",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:08.061641",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! Can you give me more information about the issue you're experiencing? Verba now always starts with the starting page where you can select different deployment options of Weaviate",
          "created_at": "2024-09-13T03:00:04Z"
        },
        {
          "author": "John-Appleseed",
          "body": "Verba 2.0.0 forgets deployment selection. Users are hassled to select the correct deployment > Click `Let's Get Started` to use a new or refreshed Verba webpage. Same Issue with Docker installation. \r\n\r\n- Every refresh Verba forgets deployment selection. \r\n`Welcome to Verba, Choose your deployment` ",
          "created_at": "2024-09-13T03:52:42Z"
        },
        {
          "author": "thomashacker",
          "body": "Good point, we'll fix this! ",
          "created_at": "2024-09-16T08:39:14Z"
        },
        {
          "author": "thomashacker",
          "body": "Closing this for now, continuing conversation here (https://github.com/weaviate/Verba/issues/305)",
          "created_at": "2024-12-09T11:25:09Z"
        },
        {
          "author": "jyapayne",
          "body": "The welcome page still loads every time when using docker, even if DEFAULT_DEPLOYMENT is set. DEFAULT_DEPLOYMENT stops needing to select docker, etc, but does not stop the welcome page from showing.",
          "created_at": "2025-03-15T01:32:33Z"
        }
      ]
    },
    {
      "issue_number": 123,
      "title": "Connecting to VLLM OpenAI API Compatible Server",
      "body": "In my lab environment i am serving mixtral with VLLM using their OpenAI API compatible server and I'm hosting a weaviate instance as well. \r\n\r\nI just spun up verba, pointing to both my weaviate instance and VLLM instance using the .env file and connection to weaviate seems to be all good. I can see my schema and object count in the status tab but any queries i make seem to break... Unsure if this is a limitation on being able to handle models other than GPT-3.5 || GPT-4 being served from OpenAI. \r\n\r\nHas anyone been able to configure a setup like this?\r\n\r\nThanks!",
      "state": "open",
      "author": "JoshuaFurman",
      "author_type": "User",
      "created_at": "2024-03-08T16:35:47Z",
      "updated_at": "2025-03-04T16:57:18Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 10,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/123/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/123",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/123",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:08.278337",
      "comments": [
        {
          "author": "JoshuaFurman",
          "body": "Looks as though you are boxed in to use either ADA embedding from OpenAI or MiniLM or Cohere as well...",
          "created_at": "2024-03-08T16:37:27Z"
        },
        {
          "author": "thomashacker",
          "body": "Yes, right now there is no support for Mixtral models! But great point, we'll look into that for the next update",
          "created_at": "2024-04-11T09:04:05Z"
        },
        {
          "author": "samos123",
          "body": "I got this working end to end but had to make some changes to be able to use my custom embedding model server. I submitted a PR for the changes I needed to be able to use OpenAI compatible API server for both embeddings and LLM: https://github.com/weaviate/Verba/pull/148\r\n\r\nI plan to publish an end ",
          "created_at": "2024-05-08T05:25:30Z"
        },
        {
          "author": "samos123",
          "body": "I finished writing my guide for end-to-end private Verba RAG using Weaviate, Lingo, vLLM + Mistral 7b v2 and Sentence Transformers: https://www.substratus.ai/blog/lingo-weaviate-private-rag\r\n\r\nLooking forward to hearing feedback. The guide should help you with figuring out how to use vanilla vLLM wi",
          "created_at": "2024-05-09T05:56:43Z"
        },
        {
          "author": "gcheron",
          "body": "I am using the VLLM OpenAI API Compatible Server to serve Llama3 with Verba.\r\n\r\n@thomashacker, this issue is set as **completed**, but are we supposed to be able to set models other than OpenAI ones (GPT-4, GPT-3.5)?\r\nWhen I set OpenAI URL to point to my instance (e.g., `OPENAI_BASE_URL=http://local",
          "created_at": "2025-01-14T09:51:01Z"
        }
      ]
    },
    {
      "issue_number": 280,
      "title": "Firecrawl URL Importing is throwing error",
      "body": "## Description\n\n<!-- A clear and concise description of what the issue is. Please include any error messages and logs. If possible, also include your configuration. -->\n\n## Installation\n\n<!-- Please specify how you installed Verba. Please always make sure to install Verba in a clean python environment and have at least 3.10.0 installed -->\n\n- [x] pip install goldenverba\n- [ ] pip install from source\n- [ ] Docker installation\n\nIf you installed via pip, please specify the version:\n\n## Weaviate Deployment\n\n<!-- Please specify the Weaviate deployment you are using. -->\n\n- [x] Local Deployment\n- [ ] Docker Deployment\n- [x] Cloud Deployment\n\n## Configuration\n\n<!-- If you can, please specify the what components you are using. -->\n\nReader:\nChunker:\nEmbedder:\nRetriever:\nGenerator:\n\n## Steps to Reproduce\n\nTry to import using Firecrawl URL. It is throwing error:\nℹ FileStatus.ERROR | 2024-09-10T04:36:25.979Z | Import for New\nFirecrawl Job failed: Reader Firecrawl failed with: 1 validation error for\nFileConfig metadata   Field required [type=missing, input_value={'fileID':\n'2024-09-10T04... settings', 'took': 0}}}, input_type=dict]     For further\ninformation visit https://errors.pydantic.dev/2.9/v/missing | 0\n\n\n## Additional context\n\nIt is not working with any website I tried. Firecrawl has also updated its version so we might want to do that as well.\n",
      "state": "open",
      "author": "ukiras123",
      "author_type": "User",
      "created_at": "2024-09-10T04:43:37Z",
      "updated_at": "2025-03-04T10:27:04Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 7,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/280/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/280",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/280",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:08.532764",
      "comments": [
        {
          "author": "ukiras123",
          "body": "ℹ FileStatus.ERROR | 2024-09-10T04:36:25.979Z | Import for New\r\nFirecrawl Job failed: Reader Firecrawl failed with: 1 validation error for\r\nFileConfig metadata   Field required [type=missing, input_value={'fileID':\r\n'2024-09-10T04... settings', 'took': 0}}}, input_type=dict]     For further\r\ninforma",
          "created_at": "2024-09-10T04:44:18Z"
        },
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! We'll look into it",
          "created_at": "2024-09-13T03:04:54Z"
        },
        {
          "author": "narmaku",
          "body": "Same issue while trying to import github repo that contains python code.",
          "created_at": "2024-11-18T02:56:48Z"
        },
        {
          "author": "thomashacker",
          "body": "Thanks a lot, there was a bug in the `Firecrawl Reader` code, should be fixed in the upcoming version `2.1`",
          "created_at": "2024-12-09T11:36:49Z"
        },
        {
          "author": "thomashacker",
          "body": "Version 2.1 got released, let me know if the error still persists and feel free to reopen",
          "created_at": "2024-12-10T10:29:27Z"
        }
      ]
    },
    {
      "issue_number": 361,
      "title": "Critical Vulnerability in React PDF",
      "body": "## Description\r\n\r\nThe current version of Verba uses  @react-pdf/renderer@3.4.4 which consumes legacy-swc helpers (@react-pdf/renderer@3.4.4 › @react-pdf/font@2.5.1 › fontkit@2.0.2 › @swc/helpers@0.4.36 › legacy-swc-helpers@0.4.14). This library has a severe vulnerability which would need to be addressed before being able to trust the overall project. \r\n\r\nSnyk Report for Issues: https://security.snyk.io/vuln/SNYK-JS-LEGACYSWCHELPERS-7647380\r\nReact PDF Issue: https://github.com/diegomura/react-pdf/issues/2839\r\n\r\n## Installation\r\n\r\nN/A\r\n\r\nIf you installed via pip, please specify the version:\r\n\r\n## Weaviate Deployment\r\n\r\nN/A\r\n\r\n## Configuration\r\n\r\n\r\n## Steps to Reproduce\r\n\r\nRun a vulnerability scan on the repro (in this case Snyk). This vulnerability will be shown.\r\n\r\n## Additional context\r\n",
      "state": "open",
      "author": "levisiebensecfx",
      "author_type": "User",
      "created_at": "2025-01-06T21:58:29Z",
      "updated_at": "2025-02-28T11:47:26Z",
      "closed_at": null,
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/361/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/361",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/361",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:08.801582",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks a lot for the issue! We'll look into that",
          "created_at": "2025-01-07T16:32:33Z"
        }
      ]
    },
    {
      "issue_number": 270,
      "title": "The error encountered when the Chunker option is set to Code.",
      "body": "Hello,\r\n\r\nOn the Import Config page, when I select the Chunker option as Code, I choose either the Python or PHP option. Then, I select a file with the .py or .php extension according to my choice, and when I perform the import, I get the following error. I wonder if this error is related to LangChain? I feel like I might be missing something that needs to be done, but I also wanted to report it in case it might be a issue.\r\n\r\nImport for framework.py failed: '>' not supported between instances of 'int' and 'str' | 0\r\n\r\n-----------------------------------------------------------------------------------------------------\r\n✔ Collected all Batches of framework.py\r\nℹ Removing framework.py from BatchManager\r\nℹ Found existing Client\r\nℹ FileStatus.STARTING | framework.py | Starting Import | 0\r\nℹ Loading framework.py (py)\r\nℹ FileStatus.LOADING | framework.py | Loaded framework.py | 0.14\r\nℹ FileStatus.CHUNKING | framework.py |  | 0\r\nℹ FileStatus.ERROR | framework.py | Import for framework.py failed: '>'\r\nnot supported between instances of 'int' and 'str' | 0.0\r\n✘ No documents imported 0 of 1 succesful tasks\r\nℹ FileStatus.ERROR | framework.py | Import for framework.py failed:\r\nImport for framework.py failed: '>' not supported between instances of 'int' and\r\n'str' | 0\r\n",
      "state": "open",
      "author": "redkit75",
      "author_type": "User",
      "created_at": "2024-09-04T16:08:19Z",
      "updated_at": "2025-02-17T09:57:35Z",
      "closed_at": null,
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/270/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/270",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/270",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:09.064526",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue, I'll look into it!",
          "created_at": "2024-09-13T02:57:30Z"
        },
        {
          "author": "redkit75",
          "body": "It is clear that this is definitely a bug. Could you update the status as a bug? Thanks.",
          "created_at": "2024-09-19T10:57:18Z"
        },
        {
          "author": "thomashacker",
          "body": "Let me know if this issue still exists 😄 I wasn't able to recreate your issue, if it still exists can you let me know which python version you're using? (Sorry for the late reply 🙏 )",
          "created_at": "2024-12-09T11:05:49Z"
        },
        {
          "author": "BloodyHellcat",
          "body": "I can recreate it.\n\nEven on a simple python code, as soon as I set the Chunk overlap to something other than 50, in my case to 100, it failes with the same error in the log.\n\nAlso, changing it back to 50 doesn't work anymore.\nI have to remove the volume to make it work again.",
          "created_at": "2025-02-10T09:45:03Z"
        },
        {
          "author": "thomashacker",
          "body": "Thanks for the report, I'll try to recreate it! ",
          "created_at": "2025-02-17T09:57:34Z"
        }
      ]
    },
    {
      "issue_number": 369,
      "title": "JSON File Ingestion – Handling Metadata and Chunking",
      "body": "### **JSON File Ingestion – Handling Metadata and Chunking **  \n\n## **Description**  \nWhen uploading a JSON file, I need Verba to properly ingest structured metadata while still generating chunks automatically. Currently, the behavior is unclear, and it seems that the \"chunks\" field must be predefined, even though Verba can generate chunks for PDFs automatically.  \n\n**Expected Behavior:**  \n- Verba should recognize metadata fields without requiring predefined chunks.  \n- The \"content\" field should be processed as document text.  \n- Chunking should be handled automatically based on Verba’s settings.  \n\n**Actual Behavior:**  \n- The \"chunks\" field appears necessary, even though I want Verba to generate them dynamically.  \n- Metadata structure is unclear—what should be included for proper indexing?  \n\n**Example JSON File:**  \n\n```\n{\n  \"year\": 1995,\n  \"number\": \"50\",\n  \"title\": \"Circular Nº 50, del 13 de Diciembre de 1995 (modificada) (aclarada / complementada)\",\n  \"materia\": \"Crédito Tributario por inversiones en provincias de Arica y Parinacota\",\n  \"url\": \"https://www.sii.cl/documentos/circulares/1995/circu50.pdf\",\n  \"sin_efecto\": false,\n  \"downloaded_filename\": \"circu50.pdf\",\n  \"saved_filename\": \"circular_1995_50_2.pdf\",\n  \"content\": \"Modificada por Circular Nº 45, del 3 de septiembre de 2008 \\n\\nModificadas por Circular Nº 64, del 6 de noviembre de 1996 \\n\\nComplementada por Circular Nº 64, del 6 de noviembre de 1996 \\n\\nCIRCULAR Nº 50, DEL 13 DE D ETC ETC etc\",\n  \"modificada\": true,\n  \"aclarada_complementada\": true\n}\n```\n\n## **Installation**  \n<!-- Please specify how you installed Verba. Please always make sure to install Verba in a clean python environment and have at least 3.10.0 installed -->  \n\n- [ ] `pip install goldenverba`  \n\n\nIf you installed via pip, please specify the version:  \n\n## **Weaviate Deployment**  \n<!-- Please specify the Weaviate deployment you are using. -->  \n\n- [ ] Local Deployment  \n\n\n\n## **Steps to Reproduce**  \n1. Go to the dashboard.  \n2. Upload a JSON file with structured metadata.  \n3. Metadata doesnt load, not does the title of the document, etc.\n\n## **Additional Context**  \n- Do I need to structure metadata differently for proper indexing?  \n- Should Verba automatically generate chunks even when metadata is present?  \n- If so, how should metadata fields be formatted?  \n- Is there a recommended JSON structure for structured documents without manually defining chunks?  \n\n**@thomashacker Any guidance on this?**  \n",
      "state": "open",
      "author": "troublesprouter",
      "author_type": "User",
      "created_at": "2025-01-31T22:09:46Z",
      "updated_at": "2025-02-03T13:48:23Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/369/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/369",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/369",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:09.293772",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue, you're raising good points 🚀 \nRight now, it's not possible to ingest custom structured `JSON` files with custom fields that Verba can access later. \n\nVerba initially checks whether the imported JSON can be converted directly into a Verba `Document`object, which looks like this\n",
          "created_at": "2025-02-03T13:26:47Z"
        },
        {
          "author": "troublesprouter",
          "body": "Thank you, Thomas. I ended up re-creating the project in txtai over the weekend in an effort to make things work with metadata, but if I come across a dead end there I will return to your solution.\n\nIn principle just using the \"metadata\" field should work perfectly.",
          "created_at": "2025-02-03T13:48:22Z"
        }
      ]
    },
    {
      "issue_number": 370,
      "title": "Custom JSON Support",
      "body": "## Description\n\n<!-- A clear and concise description of what the new feature. -->\n\nSupport custom JSON ingestion with different fields\n\nhttps://github.com/weaviate/Verba/issues/369\n\n## Additional context\n\n<!-- Add any other context about the problem here. -->\n",
      "state": "open",
      "author": "thomashacker",
      "author_type": "User",
      "created_at": "2025-02-03T13:27:25Z",
      "updated_at": "2025-02-03T13:27:25Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/370/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/370",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/370",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:09.532189",
      "comments": []
    },
    {
      "issue_number": 160,
      "title": "Uploading Json file doesn't work",
      "body": "## Description\r\nWhen I try to upload a json file, it shows the message 'Embedding completed with 1 Documents and 0 chunks in 0.0s\r\n\r\n## Is this a bug or a feature?\r\n- [x] Bug\r\n- [ ] Feature\r\n\r\n## Steps to Reproduce\r\nVerba Start. On the dashboard, click on 'Add Documents' button at the top. Click on Add Files and Choose a Json file. Click Import button.\r\n\r\n## Additional context\r\nUploading PDFs works flawlessly. But Uploading .json files doesn't work.\r\n",
      "state": "closed",
      "author": "preddy4690",
      "author_type": "User",
      "created_at": "2024-05-17T00:32:21Z",
      "updated_at": "2025-01-31T21:48:17Z",
      "closed_at": "2024-09-03T12:48:22Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 6,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/160/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/160",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/160",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:09.532214",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Right now, Verba only accepts JSON files that looks like this:\r\nWe are still working on a general JSON import \r\n\r\n```json\r\n\r\n{\r\n    \"text\": \"Your Text\",\r\n    \"type\": \"Documentation\",\r\n    \"name\": \"document_name\",\r\n    \"path\": \"can_be_empty\",\r\n    \"link\": \"if_you_want_to_link_to_the_source\",\r\n    \"ti",
          "created_at": "2024-05-17T16:33:11Z"
        },
        {
          "author": "shoff",
          "body": "Could you comment please on exactly what is it looking for in json? I have json files that look very much like that, nothing out of the ordinary and it doesn't index them. \r\nI get the same error\r\n `(INFO) Starting Embedding with ADAEmbedder (SUCCESS) Embedding completed with 1 Documents and 0 chunks",
          "created_at": "2024-06-07T16:35:22Z"
        },
        {
          "author": "zaforcan",
          "body": "\r\n\r\n\r\n\r\n> Right now, Verba only accepts JSON files that looks like this: We are still working on a general JSON import\r\n> \r\n> ```json\r\n> {\r\n>     \"text\": \"Your Text\",\r\n>     \"type\": \"Documentation\",\r\n>     \"name\": \"document_name\",\r\n>     \"path\": \"can_be_empty\",\r\n>     \"link\": \"if_you_want_to_link_to",
          "created_at": "2024-06-26T11:09:31Z"
        },
        {
          "author": "thomashacker",
          "body": "I'll write up a guide in the README for ingesting JSON Files, explaining all fields. I'll give an update once we added it to the repo",
          "created_at": "2024-06-27T13:31:31Z"
        },
        {
          "author": "thomashacker",
          "body": "JSON ingestion is now possible in the latest release! ",
          "created_at": "2024-09-03T12:48:22Z"
        }
      ]
    },
    {
      "issue_number": 252,
      "title": "http://localhost:11434/api/embeddings\": dial tcp [::1]:11434: connect: connection refused",
      "body": "## Description\r\n<!-- A clear and concise description of what the issue is. Please include if this is a bug or a feature request. -->\r\n\r\nHi, nice application :)\r\n\r\nI try to use it with local ollama & weaviate vector DB \r\n\r\n\r\nSeems to be an default communication issue, verba try to connect on IPV6 tcp [::1] and receive this error\r\n\r\n✘ {'errors': {'error': [{'message': 'send POST request: Post\r\n\"http://localhost:11434/api/embeddings\": dial tcp [::1]:11434: connect:\r\nconnection refused'}]}, 'status': 'FAILED'}\r\n\r\nIPV4 request\r\ncurl -X POST http://localhost:11434/api/embeddings -d '{\r\n  \"model\": \"mxbai-embed-large\",\r\n  \"prompt\": \"Why is the sky blue?\"\r\n}'\r\n{\"embedding\":[-0.2021758258342743....\r\n\r\nIPV6 request\r\ncurl -X POST http://[::1]:11434/api/embeddings -d '{\r\n  \"model\": \"mxbai-embed-large\",\r\n  \"prompt\": \"Why is the sky blue?\"\r\n}' -H \"Content-Type: application/json\"\r\n{\"embedding\":[-0.2021758258342743,\r\n\r\ncat /etc/redhat-release \r\nFedora release 40 (Forty)\r\nuname -a\r\nLinux fedora-lab 6.9.11-200.fc40.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 25 18:17:34 UTC 2024 x86_64 GNU/Linux\r\n\r\nI tried to disable IPV6 from OS, the same issue\r\n\r\n## Is this a bug or a feature?\r\n- [x] Bug\r\n- [ ] Feature\r\n\r\n## Steps to Reproduce\r\n<!-- If this is a bug, please provide detailed steps on how to reproduce the issue. If this is a feature, please describe what you want to be added or changed. -->\r\n\r\ngoldenverba==1.0.4\r\n\r\ngrep -i host /etc/systemd/system/ollama.service\r\nEnvironment=\"OLLAMA_HOST=0.0.0.0:11434\"\r\n\r\nnetstat -tulpn | grep 11434\r\ntcp6       0      0 :::11434                :::*                    LISTEN      21062/ollama\r\n\r\n-------------\r\ncat .env \r\nWEAVIATE_URL_VERBA=http://WEAVIATE_LOCAL_IP:8080\r\n\r\nOLLAMA_URL=http://localhost:11434\r\nOLLAMA_MODEL=codestral:22b-v0.1-q5_0\r\nOLLAMA_EMBED_MODEL=mxbai-embed-large\r\n\r\n---------------\r\nverba start\r\nINFO:     Will watch for changes in these directories: ['/home/bogdan/codeVB/weaviate/verba']\r\nINFO:     Uvicorn running on http://localhost:8000 (Press CTRL+C to quit)\r\nINFO:     Started reloader process [23724] using WatchFiles\r\n/home/bogdan/venvs/verba/lib64/python3.12/site-packages/pypdf/_crypt_providers/_cryptography.py:32: CryptographyDeprecationWarning: ARC4 has been moved to cryptography.hazmat.decrepit.ciphers.algorithms.ARC4 and will be removed from this module in 48.0.0.\r\n  from cryptography.hazmat.primitives.ciphers.algorithms import AES, ARC4\r\nℹ Setting up client\r\nℹ No Auth information provided\r\n✔ Connected to Weaviate\r\n✘ Schema initialization failed Create class! Unexpected status code:\r\n422, with response body: {'error': [{'message': 'vectorizer: no module with name\r\n\"text2vec-openai\" present'}]}.\r\n✘ Schema initialization failed Create class! Unexpected status code:\r\n422, with response body: {'error': [{'message': 'vectorizer: no module with name\r\n\"text2vec-cohere\" present'}]}.\r\nℹ Setting up components\r\n✔ Config Saved in Weaviate\r\n✘ {'errors': {'error': [{'message': 'send POST request: Post\r\n\"http://localhost:11434/api/embeddings\": dial tcp [::1]:11434: connect:\r\nconnection refused'}]}, 'status': 'FAILED'}\r\nℹ Setting READER to BasicReader\r\nℹ Setting CHUNKER to TokenChunker\r\nℹ Setting EMBEDDER to ADAEmbedder\r\nℹ Setting RETRIEVER to WindowRetriever\r\nℹ Setting GENERATOR to GPT3\r\nINFO:     Started server process [23726]\r\nINFO:     Waiting for application startup.\r\nINFO:     Application startup complete.\r\n\r\nGUI side:\r\n\r\nIf i try to import a document i revive this errors  \r\n(INFO) Importing...\r\n(INFO) Importing 1 files with BasicReader\r\n(INFO) Importing cerere_vieriu_bogdan_serviciul_politiei_rutiere_bac_u-1.pdf\r\n(SUCCESS) Loaded 1 documents in 0.5s\r\n(INFO) Starting Chunking with TokenChunker\r\n(SUCCESS) Chunking completed with 30 chunks in 0.0s\r\n(INFO) Starting Embedding with OllamaEmbedder\r\n(ERROR) Embedding not successful: Document 4429dadd-7701-4865-adea-a009451e8ddd not found None\r\n(ERROR) Unexpected error: Document 4429dadd-7701-4865-adea-a009451e8ddd not found None\r\n\r\nserver side:\r\n\r\n✔ Loaded 1 documents in 0.5s\r\nChunking documents: 100%|████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 1014.59it/s]\r\n✔ Chunking completed with 30 chunks in 0.0s\r\nVectorizing Chunks: 100%|████████████████████████████████████████████████████████| 30/30 [00:03<00:00,  8.70it/s]\r\nVectorizing document chunks: 100%|█████████████████████████████████████████████████| 1/1 [00:03<00:00,  3.45s/it]\r\nℹ (1/1) Importing document\r\nxyz.pdf with 1 batches\r\n✘ {'errors': {'error': [{'message': 'send POST request: Post\r\n\"http://localhost:11434/api/embeddings\": dial tcp [::1]:11434: connect:\r\nconnection refused'}]}, 'status': 'FAILED'}\r\nImporting batches: 100%|███████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 28.31it/s]\r\nINFO:     127.0.0.1:39730 - \"POST /api/import HTTP/1.1\" 200 OK\r\n\r\n## Additional context\r\n<!-- Add any other context about the problem here. -->\r\n",
      "state": "open",
      "author": "vbogdanro",
      "author_type": "User",
      "created_at": "2024-08-02T06:41:14Z",
      "updated_at": "2025-01-31T07:54:22Z",
      "closed_at": null,
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 6,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/252/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/252",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/252",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:09.780958",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! Can you communicate with Ollama through the terminal? We just released the new v2 version, maybe upgrading might fix the issue",
          "created_at": "2024-09-03T13:15:20Z"
        },
        {
          "author": "geeman11",
          "body": "Im having the same issue, even after updating to v2!",
          "created_at": "2024-09-10T02:46:22Z"
        },
        {
          "author": "thomashacker",
          "body": "Are you receiving the same error?",
          "created_at": "2024-09-13T03:12:17Z"
        },
        {
          "author": "OctAg0nO",
          "body": "hi,, there is any solution for this, im having the same problem\r\n\r\n2024-11-18 15:11:12 verba-1     | ⚠ Failed to set new RAG Config Object was not added! Unexpected status\r\n2024-11-18 15:11:12 verba-1     | code: 500, with response body: {'error': [{'message': 'update vector: send POST\r\n2024-11-18 1",
          "created_at": "2024-11-18T19:13:52Z"
        },
        {
          "author": "thomashacker",
          "body": "Are you able to send requests to your ollama server? How did you deploy Verba? Are you using Docker or the Embedded version? ",
          "created_at": "2024-12-07T19:50:19Z"
        }
      ]
    },
    {
      "issue_number": 352,
      "title": "Can't upload documents with different languages",
      "body": "## Description\r\n\r\n<!-- A clear and concise description of what the issue is. Please include any error messages and logs. If possible, also include your configuration. -->\r\n\r\nImport fails at the tokenization step when the document contains multiple languages. This is due merging different spaCy docs with different `vocab` objects.\r\n\r\n## Installation\r\n\r\n<!-- Please specify how you installed Verba. Please always make sure to install Verba in a clean python environment and have at least 3.10.0 installed -->\r\n\r\n- [x] pip install goldenverba\r\n- [ ] pip install from source\r\n- [ ] Docker installation\r\n\r\nIf you installed via pip, please specify the version:\r\n\r\n## Weaviate Deployment\r\n\r\n<!-- Please specify the Weaviate deployment you are using. -->\r\n\r\n- [x] Local Deployment\r\n- [ ] Docker Deployment\r\n- [ ] Cloud Deployment\r\n\r\n## Configuration\r\n\r\n<!-- If you can, please specify the what components you are using. -->\r\n\r\nReader: Any\r\nChunker: /\r\nEmbedder: /\r\nRetriever: /\r\nGenerator: / \r\n\r\n## Steps to Reproduce\r\n\r\n<!-- If this is a bug, please provide detailed steps on how to reproduce the issue. If this is a feature, please describe what you want to be added or changed. -->\r\n\r\nUpload longer documents over 500.000 tokens with different languages \r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n\r\nThis will be fixed with `v2.2`\r\n",
      "state": "closed",
      "author": "thomashacker",
      "author_type": "User",
      "created_at": "2024-12-14T14:07:39Z",
      "updated_at": "2025-01-27T10:13:59Z",
      "closed_at": "2025-01-27T10:13:58Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/352/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/352",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/352",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:10.004124",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Fixed with 2.1.2",
          "created_at": "2025-01-27T10:13:58Z"
        }
      ]
    },
    {
      "issue_number": 359,
      "title": "Special characters gets removed",
      "body": "## Description\r\nI'm using Verba (1.28.2) together with Weaviate Cloud. When uploading both .txt- and .pdf-files including the characters åäö, they get stripped out when inspecting the documents uploaded.\r\n\r\nE.g example.txt\r\nUploaded: \"Hej detta är ett test, jag bor på en ö\"\r\nOutput: \"Hej detta r ett test, jag bor p en \"\r\n\r\nWhen using the built in chat in Verba, it performs well but the referenced document is - as stated - stripped out of åäö. What could be the issue? \r\n\r\n## Installation\r\n\r\n<!-- Please specify how you installed Verba. Please always make sure to install Verba in a clean python environment and have at least 3.10.0 installed -->\r\n\r\n- [ ] pip install goldenverba\r\n- [ ] pip install from source\r\n- [X] Docker installation\r\n\r\nIf you installed via pip, please specify the version:\r\n\r\n## Weaviate Deployment\r\n\r\n<!-- Please specify the Weaviate deployment you are using. -->\r\n\r\n- [ ] Local Deployment\r\n- [ ] Docker Deployment\r\n- [X] Cloud Deployment\r\n\r\n## Configuration\r\n\r\n<!-- If you can, please specify the what components you are using. -->\r\n\r\nReader:\r\nChunker: Token\r\nEmbedder: VoyageAI (Model: voyage-multilingual-2, should support Swedish)\r\nRetriever: Advanced\r\nGenerator: OpenAI (Model: gpt-4o)\r\n\r\n## Steps to Reproduce\r\n\r\n1. Uploading a .txt- or a .pdf containing the character åäö through the \"Import Data\" function in Verba GUI. \r\n2. Select the uploaded file in the list to the left, press \"Import selected\". \r\n3. Go to \"Documents\".\r\n4. Click the uploaded document in the list to the left\r\n5. Inspect the document (which is now opened to the right) and find a sentence that should contain either å, ä or ö. Confirm that the letter is not there.",
      "state": "closed",
      "author": "cfgs",
      "author_type": "User",
      "created_at": "2025-01-05T19:48:06Z",
      "updated_at": "2025-01-27T10:13:41Z",
      "closed_at": "2025-01-27T10:13:40Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 6,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/359/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/359",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/359",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:10.216218",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Interesting, thanks for the issue! I'll look into this 🚀 ",
          "created_at": "2025-01-06T11:59:43Z"
        },
        {
          "author": "wesamalnabki",
          "body": "I'm facing the same issue. I have both, Verba and weaviate running via docker compose. And, I use OpenAI for embeddings. When uploading UTF-8 text (Arabic text), all the Arabic letters are stripped out except the special characters. \n\n![Image](https://github.com/user-attachments/assets/8afe4b72-c47a",
          "created_at": "2025-01-20T19:27:47Z"
        },
        {
          "author": "wesamalnabki",
          "body": "I found the error why Arabic language was not printer. Simply because there is a language detection function in the BasicReader class where you use Spacy to identify the language. Since Arabic is not supported by Spacy, the whole text is ignored. However, the LLM is able to process Arabic. I just ma",
          "created_at": "2025-01-20T20:50:08Z"
        },
        {
          "author": "thomashacker",
          "body": "Oh good catch! That's definitely a huge bug 🚀 \nThe original idea was to use different tokenization techniques for different languages -> I'll fix this asap\n\nThanks a lot",
          "created_at": "2025-01-24T10:52:19Z"
        },
        {
          "author": "wesamalnabki",
          "body": "@thomashacker appreciated! and thanks for your fast support.\n",
          "created_at": "2025-01-24T11:14:22Z"
        }
      ]
    },
    {
      "issue_number": 366,
      "title": "Undetected languages getting special characters stripped",
      "body": "## Description\n\n<!-- A clear and concise description of what the issue is. Please include any error messages and logs. If possible, also include your configuration. -->\n\nspaCy Language Detection is removing special characters\n\nhttps://github.com/weaviate/Verba/issues/359#issuecomment-2612233766\n",
      "state": "closed",
      "author": "thomashacker",
      "author_type": "User",
      "created_at": "2025-01-24T10:54:12Z",
      "updated_at": "2025-01-27T10:13:00Z",
      "closed_at": "2025-01-27T10:12:58Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/366/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/366",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/366",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:10.397892",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Fixed in latest `v2.1.2`",
          "created_at": "2025-01-27T10:12:58Z"
        }
      ]
    },
    {
      "issue_number": 362,
      "title": "Retrieve models from custom OpenAI URL",
      "body": "## Description\n\n<!-- A clear and concise description of what the new feature. -->\n\nRetrieve model names from custom `OpenAI URL` on start up\n\nhttps://github.com/weaviate/Verba/issues/123\n\n## Additional context\n\n<!-- Add any other context about the problem here. -->\n",
      "state": "closed",
      "author": "thomashacker",
      "author_type": "User",
      "created_at": "2025-01-15T10:48:10Z",
      "updated_at": "2025-01-15T11:08:22Z",
      "closed_at": "2025-01-15T11:08:22Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/362/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/362",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/362",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:10.643773",
      "comments": []
    },
    {
      "issue_number": 357,
      "title": "Import for Unit_5.pdf failed: Import for Unit_5.pdf failed: Batch vectorization failed: Vectorization failed for some batches: ",
      "body": "## Description\r\n\r\n<!-- A clear and concise description of what the issue is. Please include any error messages and logs. If possible, also include your configuration. -->\r\n\r\n## Installation\r\n\r\n<!-- Please specify how you installed Verba. Please always make sure to install Verba in a clean python environment and have at least 3.10.0 installed -->\r\n\r\n- [x] pip install goldenverba\r\n- [ ] pip install from source\r\n- [ ] Docker installation\r\n\r\nIf you installed via pip, please specify the version:\r\n\r\n## Weaviate Deployment\r\n\r\n<!-- Please specify the Weaviate deployment you are using. -->\r\n\r\n- [ ] Local Deployment\r\n- [ ] Docker Deployment\r\n- [ ] Cloud Deployment\r\n\r\n## Configuration\r\n\r\n<!-- If you can, please specify the what components you are using. -->\r\n\r\nReader:\r\nChunker:\r\nEmbedder:\r\nRetriever:\r\nGenerator:\r\n\r\n## Steps to Reproduce\r\n\r\n<!-- If this is a bug, please provide detailed steps on how to reproduce the issue. If this is a feature, please describe what you want to be added or changed. -->\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
      "state": "open",
      "author": "gokulcoder7",
      "author_type": "User",
      "created_at": "2024-12-27T06:00:03Z",
      "updated_at": "2025-01-15T10:25:24Z",
      "closed_at": null,
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/357/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/357",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/357",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:10.643798",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue, could you provide more information about your error? 🚀 ",
          "created_at": "2025-01-02T13:45:17Z"
        },
        {
          "author": "gokulcoder7",
          "body": "how to find log files of verba?",
          "created_at": "2025-01-12T08:29:20Z"
        },
        {
          "author": "thomashacker",
          "body": "Unfortunately, Verba doesn't produce any logs yet. Can you reproduce this error?",
          "created_at": "2025-01-15T10:25:23Z"
        }
      ]
    },
    {
      "issue_number": 358,
      "title": "Using hugginge face model when installing through docker compose and newly provided image",
      "body": "## Description\r\n\r\nI have Verba installed using the [new provided docker image.](https://github.com/weaviate/Verba/issues/153) In my previous installation I was able to install hugging face local models through the dockerfile. Is it possible to use  huggjng face with this method as well? Don´t really know how to include it.\r\n\r\nMy docker-compose\r\n\r\n```\r\nversion: '3.8'\r\n\r\nservices:\r\n  verba:\r\n    image: semitechnologies/verba\r\n    ports:\r\n      - 8111:8000\r\n    environment:\r\n      - WEAVIATE_URL_VERBA=http://weaviate:8080\r\n      - OPENAI_API_KEY=${OPENAI_API_KEY}\r\n      - COHERE_API_KEY=${COHERE_API_KEY}\r\n    volumes:\r\n      - /srv/verba/data:/data/\r\n    depends_on:\r\n      weaviate:\r\n        condition: service_healthy\r\n    healthcheck:\r\n      test: wget --no-verbose --tries=3 --spider http://localhost:8111 || exit 1\r\n      interval: 5s\r\n      timeout: 10s\r\n      retries: 5\r\n      start_period: 10s\r\n    networks:\r\n      - proxy\r\n\r\n  weaviate:\r\n    command:\r\n      - --host\r\n      - 0.0.0.0\r\n      - --port\r\n      - '8080'\r\n      - --scheme\r\n      - http\r\n    image: semitechnologies/weaviate:1.25.10\r\n    ports:\r\n      - 8080:8080\r\n      - 3000:8080\r\n    volumes:\r\n      - /srv/verba/weaviate/weaviate_data:/var/lib/weaviate\r\n    restart: on-failure:0\r\n    healthcheck:\r\n      test: wget --no-verbose --tries=3 --spider http://localhost:8080/v1/.well-known/ready || exit 1\r\n      interval: 5s\r\n      timeout: 10s\r\n      retries: 5\r\n      start_period: 10s\r\n    networks:\r\n      - proxy\r\n    environment:\r\n      OPENAI_APIKEY: ${OPENAI_API_KEY}\r\n      COHERE_APIKEY: ${COHERE_API_KEY}\r\n      QUERY_DEFAULTS_LIMIT: 25\r\n      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'\r\n      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'\r\n      ENABLE_MODULES: 'e'\r\n      CLUSTER_HOSTNAME: 'node1'\r\n\r\nnetworks:\r\n  proxy:\r\n    external: true\r\n\r\nvolumes:\r\n  weaviate_data: {}\r\n```",
      "state": "closed",
      "author": "Japhys",
      "author_type": "User",
      "created_at": "2024-12-28T05:42:02Z",
      "updated_at": "2025-01-02T13:47:20Z",
      "closed_at": "2025-01-02T13:47:16Z",
      "labels": [
        "installation"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/358/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/358",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/358",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:10.854320",
      "comments": [
        {
          "author": "thomashacker",
          "body": "For custom installations (e.g HuggingFace), you'd need to install from source by cloning the repo and modifying the `Dockerfile` 🚀 ",
          "created_at": "2025-01-02T13:47:16Z"
        }
      ]
    },
    {
      "issue_number": 293,
      "title": "Need a bit of help accessing this outside the network, CORS issue",
      "body": "First of all: I really enjoyed playing around with this. I got it all working and it's a lot of fun!\r\n\r\nI wanted to show some people in my office this application. Usually I just use nginx proxy manager to open it up *with access rules) but this time it didn't work. Seems to be CORS according to my browser console. Not sure how to fix this though.\r\n\r\nRunning Docker, Weaviate and Ollama versions on Linux. \r\n\r\n![2024-09-23_08-00](https://github.com/user-attachments/assets/9835586e-535d-46cb-b7e7-039349057e38)\r\n",
      "state": "open",
      "author": "Japhys",
      "author_type": "User",
      "created_at": "2024-09-24T06:30:31Z",
      "updated_at": "2025-01-02T13:44:49Z",
      "closed_at": null,
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/293/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/293",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/293",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:11.051466",
      "comments": [
        {
          "author": "wtavares",
          "body": "+1 here... \r\n\r\nI tried to remove the check origin at the api.py. But the front keeps the CORS error. The API is working. \r\n\r\n\r\n`# Allow requests only from the same origin\r\n# app.add_middleware(\r\n#     CORSMiddleware,\r\n#     allow_origins=[\"*\"],  # This will be restricted by the custom middleware\r\n# ",
          "created_at": "2024-10-15T19:26:24Z"
        },
        {
          "author": "thomashacker",
          "body": "Hey everyone! Sorry for the late reply 🙏 \r\nCould you share a more information about your setup with `nginx`",
          "created_at": "2024-12-09T12:21:47Z"
        },
        {
          "author": "Japhys",
          "body": "@thomashacker \r\n\r\nI only say this now :)\r\n\r\nI am using this docker compose file\r\n\r\n```\r\nversion: '3.8'\r\n\r\nservices:\r\n  verba:\r\n    image: semitechnologies/verba\r\n    ports:\r\n      - 8111:8000\r\n    environment:\r\n      - WEAVIATE_URL_VERBA=http://weaviate:8080\r\n      - OPENAI_API_KEY=${OPENAI_API_KEY}",
          "created_at": "2024-12-30T18:50:34Z"
        },
        {
          "author": "thomashacker",
          "body": "I think it's related to this issue https://github.com/weaviate/Verba/issues/353\r\nThe workaround for now is to delete the custom middleware logic completely. Working on a fix for this 🚀 ",
          "created_at": "2025-01-02T13:44:48Z"
        }
      ]
    },
    {
      "issue_number": 271,
      "title": "Minified React error: Verba gui stops loading",
      "body": "## Description\r\n\r\nTrying to get Verba running in Docker. Containers are build and running without errors.\r\nWhen starting gui with http://ipadres_local:8000 gui hangs with browser developer tool complaining about React:\r\n\r\nMinified React error #418\r\nHydration failed because the server rendered HTML didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:\r\n\r\n- A server/client branch `if (typeof window !== 'undefined')`.\r\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\r\n- Date formatting in a user's locale which doesn't match the server.\r\n- External changing data without sending a snapshot of it along with the HTML.\r\n- Invalid HTML tag nesting.\r\n\r\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\r\n\r\nhttps://react.dev/link/hydration-mismatch[missing argument]\r\n\r\nMinified React error #423\r\nThere was an error while hydrating but React was able to recover by instead client rendering the entire root.\r\n\r\nFailed to fetch from http://localhost:8000/api/health: TypeError: Failed to fetch\r\n\r\nFailed to load resource: net::ERR_CONNECTION_REFUSED\r\n\r\nMinified React error #425\r\nText content does not match server-rendered HTML.\r\n\r\n## Installation\r\n\r\n- [ ] pip install goldenverba\r\n- [ ] pip install from source\r\n- [x] Docker installation\r\n\r\nIf you installed via pip, please specify the version:\r\n\r\n## Weaviate Deployment\r\n\r\n- [ ] Local Deployment\r\n- [x] Docker Deployment\r\n- [ ] Cloud Deployment\r\n\r\n## Configuration\r\n\r\nRunning Docker / Docker compose on Ubuntu\r\n\r\n## Additional context\r\n\r\nNo problem with code before merge 2.0\r\nI'm using a browser without extensions.\r\n",
      "state": "open",
      "author": "Marc-Vreeburg",
      "author_type": "User",
      "created_at": "2024-09-05T08:30:27Z",
      "updated_at": "2024-12-30T20:08:28Z",
      "closed_at": null,
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 9,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/271/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/271",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/271",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:11.271091",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Interesting, thanks a lot for the issue! I will look into it",
          "created_at": "2024-09-13T02:58:14Z"
        },
        {
          "author": "thomashacker",
          "body": "Hey, sorry for the late reply! \r\nAre you still receiving the same issue? ",
          "created_at": "2024-12-09T11:58:08Z"
        },
        {
          "author": "Marc-Vreeburg",
          "body": "I don't get the deployment menu:\r\n![Incomplete gui](https://github.com/user-attachments/assets/6cc22d51-3933-454a-acc5-0c9aad758469)\r\n\r\nI think it's a connection problem:\r\n![Connection error](https://github.com/user-attachments/assets/d18458a5-df15-4338-b649-1d486ab176bb)\r\n",
          "created_at": "2024-12-09T18:28:59Z"
        },
        {
          "author": "thomashacker",
          "body": "Interesting, thanks a lot! I just released the newest v2.1 version and made some changes to the Docker implementation. Could you retry and let me know if the error persists?\r\n\r\nIf yes, can you share more information about how you installed Verba? Thanks 🚀 ",
          "created_at": "2024-12-10T10:27:41Z"
        },
        {
          "author": "Marc-Vreeburg",
          "body": "Thank you. The error has disappeared.\r\n\r\nHowever now i'm having time out issues using batch vectorization with large pdf files and ingesting multiple files in one go. Looks like websocket connection times out way too early.",
          "created_at": "2024-12-15T13:48:51Z"
        }
      ]
    },
    {
      "issue_number": 356,
      "title": "Iam not able to communicate with the other PCs when I connected with LAN. ",
      "body": "## Description\r\n\r\n<!-- A clear and concise description of what the issue is. Please include any error messages and logs. If possible, also include your configuration. -->\r\n\r\n## Installation\r\n\r\n<!-- Please specify how you installed Verba. Please always make sure to install Verba in a clean python environment and have at least 3.10.0 installed -->\r\n\r\n- [ ] pip install goldenverba\r\n- [*] pip install from source\r\n- [ ] Docker installation\r\n\r\nIf you installed via pip, please specify the version:\r\n\r\n## Weaviate Deployment\r\n\r\n<!-- Please specify the Weaviate deployment you are using. -->\r\n\r\n- [* ] Local Deployment\r\n- [ ] Docker Deployment\r\n- [ ] Cloud Deployment\r\n\r\n## Configuration\r\n\r\n<!-- If you can, please specify the what components you are using. -->\r\n\r\nReader:\r\nChunker:\r\nEmbedder:\r\nRetriever:\r\nGenerator:\r\n\r\n## Steps to Reproduce\r\nFirstofall, Iam running this project in a VM, so the URL Networking would have some changes, Please suggest me\r\nI have installed Verba freshly from GITHUB.. then exactly same as process given in the README file and then I built npm installations in frontend file and run npm run dev... and in the backend i ran verba start...., in the localhost those are running, But which are binded with the LAN, in those LAN PCs these are not opening, \r\nPlease suggest me what to do with this. Will be very happy If I clear this Issue!!!!\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
      "state": "closed",
      "author": "SaiAkhil066",
      "author_type": "User",
      "created_at": "2024-12-17T07:15:59Z",
      "updated_at": "2024-12-21T06:00:22Z",
      "closed_at": "2024-12-21T06:00:11Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/356/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/356",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/356",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:11.496814",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey thanks for the issue, it think it's related to this issue (https://github.com/weaviate/Verba/issues/353)\r\n",
          "created_at": "2024-12-17T12:05:28Z"
        },
        {
          "author": "SaiAkhil066",
          "body": "Yes, I got the trick.\r\nfirstly, we have to mention server's IP address in api.py and cli.py (fastapi).\r\nBoom it works",
          "created_at": "2024-12-21T06:00:07Z"
        }
      ]
    },
    {
      "issue_number": 355,
      "title": "Add AWS Bedrock as Embedding and Generator ",
      "body": "## Description\r\n\r\n<!-- A clear and concise description of what the new feature. -->\r\n\r\nAdd AWS Bedrock as Embedding and Generator\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
      "state": "open",
      "author": "thomashacker",
      "author_type": "User",
      "created_at": "2024-12-16T17:37:52Z",
      "updated_at": "2024-12-16T17:37:52Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/355/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/355",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/355",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:11.686795",
      "comments": []
    },
    {
      "issue_number": 354,
      "title": "Improve Deployment Screen with description and better naming",
      "body": "## Description\r\n\r\n<!-- A clear and concise description of what the new feature. -->\r\n\r\nImprove the login screen by provide better information about the different Weaviate deployments and add descriptions for each option\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
      "state": "open",
      "author": "thomashacker",
      "author_type": "User",
      "created_at": "2024-12-16T17:34:47Z",
      "updated_at": "2024-12-16T17:36:26Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "frontend"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/354/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/354",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/354",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:11.686816",
      "comments": []
    },
    {
      "issue_number": 227,
      "title": "frontend dev error",
      "body": "## Description\r\nnpm run dev report:\r\n ✓ Compiled / in 8.8s (2246 modules)\r\n GET / 200 in 9585ms\r\n ✓ Compiled in 701ms (1108 modules)\r\n ✓ Compiled /_not-found in 252ms (2199 modules)\r\n GET /static/icon.ico 404 in 356ms\r\n GET /api/health 404 in 22ms\r\n GET /api/health 404 in 43ms\r\n![image](https://github.com/weaviate/Verba/assets/107376080/5c4eb3e1-17d4-4de1-87e1-b1ddd18f4119)\r\n\r\nno problem in npm run build. When I put icon.ico in the /frontend,  still report the /api/health 404\r\n## Is this a bug or a feature?\r\n- [√] Bug\r\n- [ ] Feature\r\n\r\n## Steps to Reproduce\r\nFollowing the instruction in FRONTEND.md. npm run dev. Then open localhost:3000.\r\n\r\n## Additional context\r\nnodejs v22.3.0\r\n",
      "state": "closed",
      "author": "EscaticZheng",
      "author_type": "User",
      "created_at": "2024-06-27T08:09:40Z",
      "updated_at": "2024-12-16T17:33:25Z",
      "closed_at": "2024-09-03T13:12:18Z",
      "labels": [
        "frontend"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/227/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/227",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/227",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:11.686823",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue, we're looking into it",
          "created_at": "2024-06-27T13:10:46Z"
        },
        {
          "author": "thomashacker",
          "body": "Ah I see, you need to start the verba server, so the frontend can communicate with it",
          "created_at": "2024-09-03T13:12:18Z"
        },
        {
          "author": "SaiAkhil066",
          "body": "those two folders should be in the same path?\r\nI have started my backend also, but the same error is showing... what may be the issue pertains?\r\n",
          "created_at": "2024-12-16T10:15:13Z"
        },
        {
          "author": "thomashacker",
          "body": "Can you share more information about what you're trying to do, thanks!",
          "created_at": "2024-12-16T17:33:24Z"
        }
      ]
    },
    {
      "issue_number": 350,
      "title": "CHAT MEMORY is not happening",
      "body": "How to switch on Chat memory option from the current chat messages, It is instantly forgetting what i told about the last message what i said,.. How to switch that on?",
      "state": "open",
      "author": "SaiAkhil066",
      "author_type": "User",
      "created_at": "2024-12-12T06:23:00Z",
      "updated_at": "2024-12-16T17:32:32Z",
      "closed_at": null,
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/350/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/350",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/350",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:11.939190",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey thanks for the issue, can you share more information about your problem and what setup you're using? thanks!",
          "created_at": "2024-12-14T14:49:17Z"
        },
        {
          "author": "SaiAkhil066",
          "body": "Iam using in Local PC.. Python Env... ",
          "created_at": "2024-12-16T08:03:05Z"
        },
        {
          "author": "thomashacker",
          "body": "Can you share more about the example where Verba wasn't including the conversation history? What `LLM` did you choose for the chat? ",
          "created_at": "2024-12-16T17:32:31Z"
        }
      ]
    },
    {
      "issue_number": 351,
      "title": "Support Excel files",
      "body": "Verba Weaviate should support Excel files also. Please make it in the next release",
      "state": "open",
      "author": "SaiAkhil066",
      "author_type": "User",
      "created_at": "2024-12-12T14:55:15Z",
      "updated_at": "2024-12-16T17:31:15Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/351/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/351",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/351",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:12.130015",
      "comments": [
        {
          "author": "thomashacker",
          "body": "`xlsx` should be possible with `Unstructured` ",
          "created_at": "2024-12-14T14:48:34Z"
        },
        {
          "author": "SaiAkhil066",
          "body": "But we need it for offline purpose, some critical official and personal info should not leak out\r\n",
          "created_at": "2024-12-15T15:44:05Z"
        },
        {
          "author": "thomashacker",
          "body": "Ah good point, I'll look into offline xlsx ingestion! Thanks a lot ",
          "created_at": "2024-12-16T17:31:09Z"
        }
      ]
    },
    {
      "issue_number": 321,
      "title": "Error: Connection was interrupted",
      "body": "## Description\r\n\r\nImporting couple of documents, Verba load and starts chunking but fails during embedding with error: Connection was interrupted\r\n\r\n## Installation\r\n\r\n- [ ] pip install goldenverba\r\n- [ ] pip install from source\r\n- [x ] Docker installation\r\n\r\nIf you installed via pip, please specify the version:\r\n\r\n## Weaviate Deployment\r\n\r\n<!-- Please specify the Weaviate deployment you are using. -->\r\n\r\n- [ ] Local Deployment\r\n- [ x] Docker Deployment\r\n- [ ] Cloud Deployment\r\n\r\n## Configuration\r\n\r\nReader:\r\nChunker:\r\nEmbedder: seems to be the problem\r\nRetriever:\r\nGenerator:\r\n\r\n## Steps to Reproduce\r\nFollow installation instruction. \r\nUpload few markdown files. \r\nSet metadata data as needed.\r\nImport all.\r\n\r\n## Additional context\r\n\r\nEmbedding model via ollama running locally fails with `chatfire/bge-m3:q8_0 ` and `nomic-embed-text`. Chunkder is sentence, with defaults. Embedding one by one does seem to work.",
      "state": "open",
      "author": "oatmealm",
      "author_type": "User",
      "created_at": "2024-11-08T16:06:58Z",
      "updated_at": "2024-12-14T14:55:45Z",
      "closed_at": null,
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/321/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/321",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/321",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:12.348122",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey thanks for the issue, are you receiving this error from the docker console?",
          "created_at": "2024-12-07T16:40:47Z"
        },
        {
          "author": "SaiAkhil066",
          "body": "Yes same issue here, I didnt tried with Docker, But in WSL UBUNTU version it is showing the same error, I think the websocket timeout is happening, we have to increase the time in ingesting docs section, please see that",
          "created_at": "2024-12-12T06:24:48Z"
        },
        {
          "author": "thomashacker",
          "body": "I created an issue for this (https://github.com/weaviate/Verba/issues/346), will fix this in the next version. I'll let you know when we do 🚀 ",
          "created_at": "2024-12-14T14:55:44Z"
        }
      ]
    },
    {
      "issue_number": 348,
      "title": "No options appear under Config",
      "body": "## Description\r\n\r\nI am attempting to stand up Weaviate and Verba using Run.AI job configuration. I have successfully done this using a Verba docker-compose.yml file, but was attempting to use the docker.io/semitechnologies/verba:latest option. I have no changed my Weaviate configuration. I am able to reach the Verba instance however the options under Config do not appear. Within Settings > Admin Panel this is the information under Weaviate Information:\r\n- Connected to <weaviate instance>\r\n- Deployement: Custom\r\n- Version: (spinning)\r\n- Nodes: (spinning)\r\n- Collections: (spinning)\r\n\r\n## Installation\r\n\r\n- [ ] pip install goldenverba\r\n- [ ] pip install from source\r\n- [x ] Docker installation (from docker.io/semitechnologies/verba:latest)\r\n\r\nIf you installed via pip, please specify the version:\r\n\r\n## Weaviate Deployment\r\n\r\n- [ ] Local Deployment\r\n- [ ] Docker Deployment\r\n- [ x] Custom Deployment\r\n- [ ] Cloud Deployment\r\n\r\n## Configuration\r\n\r\nReader:\r\nChunker:\r\nEmbedder:\r\nRetriever:\r\nGenerator:\r\n\r\n## Steps to Reproduce\r\n\r\n1. I am using Run.AI Job builder to stand up Instances\r\n2. **Weaviate**\r\nAUTHENTICATION_ANONYMOUS_ACCESS_ENABLED = true\r\nCLUSTER_HOSTNAME = node1\r\nDEFAULT_VECTORIZER_MODULE = none\r\nENABLE_API_BASED_MODULES = true\r\nPERSISTENCE_DATA_PATH = /var/lib/weaviate\r\nQUERY_DEFAULTS_LIMIT = 25\r\n3. **Verba**\r\nDEFAULT_DEPLOYMENT = Custom\r\nOLLAMA_URL = http://olama:11434\r\nWEAVIATE_URL_VERBA = <weaviate_url>\r\n\r\n## Additional context\r\n\r\nN/A\r\n",
      "state": "open",
      "author": "logangage03",
      "author_type": "User",
      "created_at": "2024-12-11T14:40:09Z",
      "updated_at": "2024-12-14T14:54:43Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/348/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/348",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/348",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:12.581436",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! Can you share more information about what `RunAI` is and how you're using it. Are you receiving any console outputs, any error message in the frontend dev console or on your docker console? Let me know, thanks! 🚀 ",
          "created_at": "2024-12-11T19:39:43Z"
        },
        {
          "author": "logangage03",
          "body": "Hello, \r\n\r\nRun:AI is a Kubernetes-based software platform that automates the allocation of compute power to users. It's designed to speed up data science initiatives by: pooling available resources, dynamically allocating resources based on need, maximizing accessible compute, reducing operational c",
          "created_at": "2024-12-11T21:01:32Z"
        },
        {
          "author": "thomashacker",
          "body": "Thanks for the info! As I can see in the logs, you're getting `403 Forbidden` when the frontend is interacting with the backend. This is due to the `middleware` that checks whether requests have the same origin as the backend. I think since you're running Verba on an external server, you're getting ",
          "created_at": "2024-12-14T14:52:41Z"
        },
        {
          "author": "thomashacker",
          "body": "Created an issue for it, will let you know once we fixed it! 🚀 https://github.com/weaviate/Verba/issues/353",
          "created_at": "2024-12-14T14:54:42Z"
        }
      ]
    },
    {
      "issue_number": 349,
      "title": "HELPPPPP: How many Workers can i handle if iam having 48GB VRAM RTX A6000 (SINGLE GPU) and using 72B llama3.3 model",
      "body": "How many Workers can i handle if iam having 48GB VRAM RTX A6000 (SINGLE GPU) and using 72B llama3.3 model and also tell that can i use my CPU bcs it is of having 32 threads, so as per that we can run 32 workers inferencing parallely if we are using verba project in LAN network, please HELP me with this... tell me clearly what to do and how to switch from GPU to CPU if I want to do",
      "state": "open",
      "author": "SaiAkhil066",
      "author_type": "User",
      "created_at": "2024-12-12T05:08:22Z",
      "updated_at": "2024-12-14T14:47:38Z",
      "closed_at": null,
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/349/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/349",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/349",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:12.777715",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey, thanks for the issue! Can you share more information about what you're trying to achieve? \r\n\r\nI think it would make sense to direct your question to the Ollama GitHub (https://github.com/ollama/ollama) since this will be the most computationally expensive part of using Verba. ",
          "created_at": "2024-12-14T14:47:34Z"
        }
      ]
    },
    {
      "issue_number": 346,
      "title": "Import Websocket Timing out after 1 minute",
      "body": "## Description\r\n\r\n<!-- A clear and concise description of what the issue is. Please include any error messages and logs. If possible, also include your configuration. -->\r\n\r\n## Installation\r\n\r\n<!-- Please specify how you installed Verba. Please always make sure to install Verba in a clean python environment and have at least 3.10.0 installed -->\r\n\r\n- [ ] pip install goldenverba\r\n- [x] pip install from source\r\n- [ ] Docker installation\r\n\r\nIf you installed via pip, please specify the version:\r\n\r\n## Weaviate Deployment\r\n\r\n<!-- Please specify the Weaviate deployment you are using. -->\r\n\r\n- [ ] Local Deployment\r\n- [ ] Docker Deployment\r\n- [x] Cloud Deployment\r\n\r\n## Configuration\r\n\r\n<!-- If you can, please specify the what components you are using. -->\r\n\r\nReader: Default\r\nChunker: TokenChunker\r\nEmbedder: text-embedding-small\r\nRetriever: /\r\nGenerator: /\r\n\r\n## Steps to Reproduce\r\n\r\n<!-- If this is a bug, please provide detailed steps on how to reproduce the issue. If this is a feature, please describe what you want to be added or changed. -->\r\n\r\nImport 500 files\r\n\r\n## Additional context\r\n\r\nImport Socket is timing out after 1 minute\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
      "state": "open",
      "author": "thomashacker",
      "author_type": "User",
      "created_at": "2024-12-11T13:49:01Z",
      "updated_at": "2024-12-11T13:49:02Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/346/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/346",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/346",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:12.959330",
      "comments": []
    },
    {
      "issue_number": 344,
      "title": "what is behind verba start?",
      "body": "I want to increase the workers flag, because iam going to use this project in our Office and connected through the LAN. I want to make the application available to every PC which is connected through LAN in the Office. How to make the application work for many clients? and how to change the IP address from 127.0.0.1:3000 (for frontend) to http://<my-ip-address>:3000",
      "state": "open",
      "author": "SaiAkhil066",
      "author_type": "User",
      "created_at": "2024-12-11T07:01:57Z",
      "updated_at": "2024-12-11T11:20:03Z",
      "closed_at": null,
      "labels": [
        "documentation",
        "enhancement"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/344/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/344",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/344",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:12.959353",
      "comments": [
        {
          "author": "thomashacker",
          "body": "You can have a look at the `cli.py` that defines the commands and adjust it to your needs 🚀  (https://github.com/weaviate/Verba/blob/main/goldenverba/server/cli.py)\r\n\r\nI'll add this information to the README  / TECHNICAL as well ",
          "created_at": "2024-12-11T11:19:59Z"
        }
      ]
    },
    {
      "issue_number": 345,
      "title": "best way to update Verba on an old installation",
      "body": "## Description\r\n\r\nI have an old Verba installation that I installed this way:\r\n\r\n```\r\n$ git clone https://github.com/weaviate/Verba.git\r\n$ python3 -m virtualenv verba_env\r\n$ source verba_env/bin/activate\r\n(verba_env) $ cd Verba\r\n(verba_env) :~/Verba$ pip install -e .\r\n(verba_env) $ whereis verba\r\nverba: /home/xxxx/verba_env/bin/verba\r\n(verba_env) :~/Verba$ verba start\r\n\r\n```\r\nYesterday I used for update :\r\n`(verba_env) $ git pull\r\n`\r\nIn setting admin Verba panel I see : **Version 1.26.6** . I was expecting 2.1.0 but maybe it's the version number of something else.\r\n\r\nCould you please add to your installation description page the update procedure you recommend for each type of installation. \r\n\r\nThank you for your great work.\r\n\r\n",
      "state": "open",
      "author": "dromeuf",
      "author_type": "User",
      "created_at": "2024-12-11T10:42:49Z",
      "updated_at": "2024-12-11T11:18:22Z",
      "closed_at": null,
      "labels": [
        "documentation",
        "enhancement"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/345/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/345",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/345",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:13.187664",
      "comments": [
        {
          "author": "thomashacker",
          "body": "The version 1.26.6 describes your current Weaviate version and is not related to Verba's version! But I agree, I'll add it to the frontend as well so that it's more transparent 🚀 ",
          "created_at": "2024-12-11T11:18:18Z"
        }
      ]
    },
    {
      "issue_number": 273,
      "title": "Upgrading from 1.0.3 to 2.0.0 fails",
      "body": "## Description\r\n\r\nI upgraded my verba 1.0.3 install to 2.0.0 and I cannot create a local verba instance. When I click on 'Local' I get the error:\r\n\r\n`Failed to connect to Weaviate Collection may not have been created properly.! Unexpected status code: 422, with response body: {'error': [{'message': 'class already exists: found similar class \"VERBA_Config\"'}]}.`\r\n\r\nHow can I wipe my existing install or migrate it to 2.0.0?\r\n\r\n## Installation\r\n\r\n- [ ] pip install goldenverba\r\n- [X] pip install from source\r\n- [ ] Docker installation\r\n\r\nIf you installed via pip, please specify the version: 24.2\r\n\r\n## Weaviate Deployment\r\n\r\n- [X] Local Deployment\r\n- [ ] Docker Deployment\r\n- [ ] Cloud Deployment\r\n\r\n## Configuration\r\n\r\n<!-- If you can, please specify the what components you are using. -->\r\n\r\nReader: N/A\r\nChunker: N/A\r\nEmbedder: N/A\r\nRetriever: N/A\r\nGenerator: N/A\r\n\r\n## Steps to Reproduce\r\n\r\n1) Install verba 1.0.3\r\n2) import documents , issue queries, etc.\r\n3) pip install verba 2.0.0\r\n4) restart verba\r\n5) access https://loaclhost:8000\r\n6) click on 'local'\r\n\r\n## Additional context\r\n\r\n\r\n",
      "state": "closed",
      "author": "craigpfeifer",
      "author_type": "User",
      "created_at": "2024-09-07T16:34:23Z",
      "updated_at": "2024-12-10T22:08:00Z",
      "closed_at": "2024-12-10T10:28:02Z",
      "labels": [
        "bug",
        "documentation"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/273/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/273",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/273",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:13.507620",
      "comments": [
        {
          "author": "craigpfeifer",
          "body": "One solution for embedded weaviate (nuclear option):\r\n1) go to local storage directory (default is [here](https://weaviate.io/developers/weaviate/installation/embedded#configuration-options))\r\n2) delete all files\r\n3) restart verba `verba restart`\r\n4) reload https://localhost:8000\r\n5) click on local\r",
          "created_at": "2024-09-07T16:51:42Z"
        },
        {
          "author": "thomashacker",
          "body": "Good catch! Same happend to me, will add some CLI commands to fix this in the future + documentation.\r\nThanks a lot for the issue 🚀 ",
          "created_at": "2024-09-13T03:02:38Z"
        },
        {
          "author": "thomashacker",
          "body": "Thanks a lot for the issue, I fixed it in the newest release and added it to the documentation as well 🚀 ",
          "created_at": "2024-12-10T10:28:02Z"
        },
        {
          "author": "craigpfeifer",
          "body": "Awesome, looking forward to testing the new version!",
          "created_at": "2024-12-10T22:07:59Z"
        }
      ]
    },
    {
      "issue_number": 343,
      "title": "Verba User-API",
      "body": "## Description\r\n\r\n<!-- A clear and concise description of what the new feature. -->\r\n\r\nBuild a user-facing API to use Verba programmatically\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
      "state": "open",
      "author": "thomashacker",
      "author_type": "User",
      "created_at": "2024-12-10T10:53:42Z",
      "updated_at": "2024-12-10T10:53:43Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/343/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 1,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/343",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/343",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:13.701679",
      "comments": []
    },
    {
      "issue_number": 335,
      "title": "\"Couldn't connect to Weaviate, check your URL/API KEY\"",
      "body": "## Description\r\n\r\nI am running into inconsistent errors regarding not being able to connect to weaviate. This is when I am attempting to run locally with Ollama. The error only appears occasionally; often, regenerating the message will be enough to fix it, but it is occurring very often and is quite annoying:\r\n\r\n```\r\nINFO:     127.0.0.1:61907 - \"POST /api/get_suggestions HTTP/1.1\" 200 OK\r\n✔ Received query: somequery\r\n✔ Connecting new Client\r\nℹ Connecting to Weaviate Embedded\r\n✘ Couldn't connect to Weaviate, check your URL/API KEY: Embedded DB did\r\nnot start because processes are already listening on ports http:8079 and\r\ngrpc:50050use weaviate.connect_to_local(port=8079, grpc_port=50050) to connect\r\nto the existing instance\r\n⚠ Query failed: Couldn't connect to Weaviate, check your URL/API KEY:\r\nEmbedded DB did not start because processes are already listening on ports\r\nhttp:8079 and grpc:50050use weaviate.connect_to_local(port=8079,\r\ngrpc_port=50050) to connect to the existing instance\r\nINFO:     127.0.0.1:61898 - \"POST /api/query HTTP/1.1\" 200 OK\r\n✔ Succesfully Connected to Weaviate\r\n```\r\n\r\nI tried checking out what is at port 8079, it seems to be weaviate?\r\n![image](https://github.com/user-attachments/assets/0ff1473e-c498-4c54-abf2-f0869559bb5f)\r\n\r\nSo I don't know why this is failing\r\n\r\n![image](https://github.com/user-attachments/assets/379a07b9-b892-468e-a561-b2c24af79cf8)\r\n\r\n^ Example of two failed tries and one success, the only difference between them being the time of the submission\r\n\r\n## Installation\r\n\r\n- [ x ] pip install goldenverba\r\n- [ ] pip install from source\r\n- [ ] Docker installation\r\n\r\nIf you installed via pip, please specify the version:\r\n\r\nPython version? 3.11\r\npackage version? Whatever's latest on pip\r\n\r\n## Weaviate Deployment\r\n\r\n\r\n- [x ] Local Deployment\r\n- [ ] Docker Deployment\r\n- [ ] Cloud Deployment\r\n\r\n## Configuration\r\n\r\nReader: ?\r\nChunker: ?\r\nEmbedder: Ollama (nomic embed text)\r\nRetriever: Advanced\r\nGenerator: Ollama (custom finetuned llama 3)\r\n\r\n## Steps to Reproduce\r\n\r\nPip install;\r\nRun both embedding and generator with ollama\r\nUpload 47 .md documents\r\nchat a few times\r\nexperience issue\r\n\r\n## Additional context\r\n\r\nFor some reason Verba does not seem to be working when offline either, even though I assume local deployment is just that -- local. What's going on and how do I force this to 1) run locally and 2) correctly connect to the server so I don't get this issue?",
      "state": "closed",
      "author": "e-p-armstrong",
      "author_type": "User",
      "created_at": "2024-12-02T02:12:23Z",
      "updated_at": "2024-12-10T10:32:45Z",
      "closed_at": "2024-12-10T10:32:45Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/335/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/335",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/335",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:13.701694",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue. When you start Verba in `local` mode, it will run Weaviate Embedded in the background.(https://weaviate.io/developers/weaviate/installation/embedded). \r\n\r\nLooks like a Weaviate Instance is already running on a specific port of yours, and it might be the issue that there is a pr",
          "created_at": "2024-12-07T11:48:41Z"
        },
        {
          "author": "thomashacker",
          "body": "Ok I found out the source of the issue, there was a race condition when creating the client. Multiple requests would try to build the same client with the same credentials, resulting in an error that the client already exists. I've built in an async lock mechanism and it should work in the next vers",
          "created_at": "2024-12-07T14:40:40Z"
        },
        {
          "author": "thomashacker",
          "body": "Should be fixed in the newest `v2.1` version",
          "created_at": "2024-12-10T10:32:45Z"
        }
      ]
    },
    {
      "issue_number": 310,
      "title": "Export/backup database",
      "body": "## Description\r\n\r\nDear maintainers, if I understand correctly, Verba's local option makes use weaviate embedded. Which as of weaviate's documentation is still in experimental stages. Is it possible to migrate a vector database from weaviate embedded to the dockerized weaviate version?\r\n\r\n## Additional context\r\n\r\nI have installed `pip install weaviate-client`  in order to gain access to an embedded weaviate client, to perform a backup of my data following the basic tutorial.\r\n\r\n```\r\nimport weaviate\r\nfrom weaviate.embedded import EmbeddedOptions\r\nimport os\r\n\r\nclient = weaviate.WeaviateClient(\r\n    embedded_options=EmbeddedOptions(\r\n        additional_env_vars={\r\n            \"ENABLE_MODULES\": \"backup-filesystem\",\r\n            \"BACKUP_FILESYSTEM_PATH\": \"/tmp/backups\"\r\n        }\r\n    )\r\n    # Add additional options here (see Python client docs for syntax)\r\n)\r\n\r\nclient.connect()\r\n```\r\n\r\nHowever I'm not sure where to proceed from there.\r\nThank you for your time.",
      "state": "open",
      "author": "Wehzie",
      "author_type": "User",
      "created_at": "2024-10-29T20:24:31Z",
      "updated_at": "2024-12-10T10:32:26Z",
      "closed_at": null,
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/310/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/310",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/310",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:13.887433",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey, thanks for your issue! \r\n\r\nDid I understand correctly that you want to migrate your data stored in Weaviate Embedded into a Docker-deployed Weaviate instance? Verba does not support data migration functionality, but you can write your own script to do so.\r\n\r\nI'm happy to help you figuring out h",
          "created_at": "2024-12-07T17:02:40Z"
        }
      ]
    },
    {
      "issue_number": 337,
      "title": "Can not find option Groq for generator",
      "body": "## Description\r\n\r\nI installed verba via pip. But when i go to config, generator settting, i can not find the option to choose Groq\r\n\r\n## Installation\r\n\r\n<!-- Please specify how you installed Verba. Please always make sure to install Verba in a clean python environment and have at least 3.10.0 installed -->\r\n\r\n- [x ] pip install goldenverba\r\n- [ ] pip install from source\r\n- [ ] Docker installation\r\n\r\nIf you installed via pip, please specify the version: 2.0.0\r\n\r\n## Weaviate Deployment\r\n\r\n<!-- Please specify the Weaviate deployment you are using. -->\r\n\r\n- [x ] Local Deployment\r\n- [ ] Docker Deployment\r\n- [ ] Cloud Deployment\r\n\r\n## Configuration\r\n\r\n<!-- If you can, please specify the what components you are using. -->\r\n\r\nReader: txt\r\nChunker: Recursive\r\nEmbedder: SentenceTransformer\r\nRetriever: Hybrid\r\nGenerator:  Groq\r\n\r\n## Steps to Reproduce\r\nAs you can see in the image, there is no option to use Groq in Generator setting.\r\n\r\n![image](https://github.com/user-attachments/assets/4dcd7e25-c5aa-4c06-9561-447a819a2ac2)\r\n",
      "state": "closed",
      "author": "HEYBOY789",
      "author_type": "User",
      "created_at": "2024-12-04T10:11:10Z",
      "updated_at": "2024-12-10T10:31:45Z",
      "closed_at": "2024-12-10T10:31:44Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/337/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/337",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/337",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:14.112572",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey, thanks for your issue! Right now it's only available on the `dev` branch but will be published to the `main` soon, I'll let you know 😄 ",
          "created_at": "2024-12-06T15:41:57Z"
        },
        {
          "author": "thomashacker",
          "body": "Done! 🚀 ",
          "created_at": "2024-12-10T10:31:44Z"
        }
      ]
    },
    {
      "issue_number": 334,
      "title": "Please allow newlines in the system prompt",
      "body": "Hi,\r\n\r\nIt'd be really good for customization if you would let us use newlines in the system prompt, they're a very common delimiter and forcing the prompt to be on one line makes customization somewhat limited.\r\n\r\nAnother thing that would be great to be able to customize is where the RAG context is inserted.\r\n\r\nReally want to be able to use this UI with a client because it's very easy to setup;\r\n\r\nThanks for considering this!",
      "state": "closed",
      "author": "e-p-armstrong",
      "author_type": "User",
      "created_at": "2024-12-02T01:25:08Z",
      "updated_at": "2024-12-10T10:31:26Z",
      "closed_at": "2024-12-10T10:31:26Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/334/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/334",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/334",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:14.344138",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Great idea! I'll make the system prompt a textarea and a bit more UI friendly. \r\n\r\nEvery `generator` class has a `prepare_messages` method. This method is used to format the messages that are sent to the LLM. The position of the context in the messages is important because it determines where the co",
          "created_at": "2024-12-07T12:20:16Z"
        }
      ]
    },
    {
      "issue_number": 316,
      "title": "Missing Technical.md from the README's Contribution section's link",
      "body": "## Description\r\n\r\nJust noticed that the documentation for contributing is pointing at a non existent document called [technical.md](https://github.com/weaviate/Verba/TECHNICAL.md).\r\n\r\nWhere's this live now? And can we update the docs to point to it if it's still relevant? Otherwise, I think it should be removed to avoid confusion.\r\n",
      "state": "closed",
      "author": "Kieran-Sears",
      "author_type": "User",
      "created_at": "2024-11-05T00:56:12Z",
      "updated_at": "2024-12-10T10:31:13Z",
      "closed_at": "2024-12-10T10:31:12Z",
      "labels": [
        "documentation"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/316/reactions",
        "total_count": 2,
        "+1": 2,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/316",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/316",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:14.634102",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Oh, thanks a lot for pointing it out! I'll add it for the upcoming release 🚀 ",
          "created_at": "2024-12-07T13:56:58Z"
        },
        {
          "author": "thomashacker",
          "body": "Done in the latest version! 🚀 ",
          "created_at": "2024-12-10T10:31:12Z"
        }
      ]
    },
    {
      "issue_number": 309,
      "title": "Bunch of Questions",
      "body": "## Description\r\n\r\nDoes this support ingesting existing metadata on PDFs or does it all have to be manual? Can you embed images/use VLM's? does it link back to the original source file if stored in the same location? how do you remove things from the database/update saved locations/re-embed after something is deleted? is there a way to change the size of the points in the 3d view? mapplotlib may be good to integrate instead of the 3d visual. also, is there a way to merge embeddings if you previously embedded so you dont have to redo it?\r\n\r\n## Additional context\r\n\r\nsorry, a lot of questions",
      "state": "closed",
      "author": "kllgjc",
      "author_type": "User",
      "created_at": "2024-10-26T23:31:56Z",
      "updated_at": "2024-12-10T10:30:56Z",
      "closed_at": "2024-12-10T10:30:56Z",
      "labels": [
        "documentation"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/309/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/309",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/309",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:14.859384",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey, thanks for the questions! \r\n\r\n1. Currently, you have to add any metadata manually\r\n2. You cannot embed images \r\n3. It cannot link back to the original file in your filesystem\r\n4. You can delete documents via the `Document Tab` or you can directly modify the data in your Weaviate instance (depen",
          "created_at": "2024-12-07T14:03:49Z"
        }
      ]
    },
    {
      "issue_number": 305,
      "title": "Setting/Variable for default deployment type",
      "body": "## Description\r\nAdd the ability to set a default deployment type for Verba through a configuration setting or environment variable. This feature would allow users to bypass the initial deployment type selection screen when accessing the Verba site, streamlining the user experience for frequent users or specific deployment scenarios.\r\nProposed implementation:\r\nIntroduce a new configuration option or environment variable, e.g., VERBA_DEFAULT_DEPLOYMENT_TYPE.\r\nAllow users to set this variable to one of the available deployment types (e.g., \"docker\", \"custom_local\", etc.).\r\nWhen the Verba site is accessed, if this variable is set, automatically use the specified deployment type without showing the selection screen.\r\nOptionally, provide a way to override this setting for users who occasionally need to choose a different deployment type.\r\n\r\n\r\n## Additional context\r\nThis feature would be particularly useful for:\r\nDevelopment environments where the same deployment type is consistently used.\r\nProduction setups where a specific configuration is always required.\r\nImproving workflow efficiency by reducing repetitive selections.\r\nThe ability to set a default deployment type would significantly enhance user experience, especially for users who consistently use the same deployment method.\r\n\r\n",
      "state": "closed",
      "author": "N3XPW",
      "author_type": "User",
      "created_at": "2024-10-17T10:18:39Z",
      "updated_at": "2024-12-10T10:30:45Z",
      "closed_at": "2024-12-10T10:30:45Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/305/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/305",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/305",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:15.080994",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Great idea, thanks a lot! We'll add this 🚀 ",
          "created_at": "2024-12-07T17:06:21Z"
        }
      ]
    },
    {
      "issue_number": 286,
      "title": "using Docker in the welcome page ",
      "body": "## Description\r\n\r\nwhen I try to use Docker in the welcome page after I locally deployed my verba using docker I get this error :\r\n**Failed to connect to Weaviate Collection may not have been created properly.! Unexpected status code: 422, with response body: {'error': [{'message': 'class already exists: found similar class \"VERBA_Config\"'}]}.**\r\n\r\n## Installation\r\n\r\n<!-- Please specify how you installed Verba. Please always make sure to install Verba in a clean python environment and have at least 3.10.0 installed -->\r\n\r\n- [ ] pip install goldenverba\r\n- [ ] pip install from source\r\n- [ X] Docker installation\r\n\r\nIf you installed via pip, please specify the version:\r\n\r\n## Weaviate Deployment\r\n\r\n<!-- Please specify the Weaviate deployment you are using. -->\r\n\r\n- [ ] Local Deployment\r\n- [X ] Docker Deployment\r\n- [ ] Cloud Deployment\r\n\r\n## Configuration\r\n\r\n<!-- If you can, please specify the what components you are using. -->\r\n\r\nReader:\r\nChunker:\r\nEmbedder:\r\nRetriever:\r\nGenerator:\r\n\r\n## Steps to Reproduce\r\n\r\nI just downloaded all files and build my docker using the commands below: \r\n\r\ngit clone https://github.com/weaviate/Verba\r\n\r\ndocker compose --env-file <your-env-file> up -d --build\r\n\r\n## Additional context\r\n\r\nI am on Mac Apple M1 Max , local link is the only thing working for me on the welcome page\r\n",
      "state": "closed",
      "author": "kmashal",
      "author_type": "User",
      "created_at": "2024-09-16T13:54:18Z",
      "updated_at": "2024-12-10T10:30:32Z",
      "closed_at": "2024-12-10T10:30:32Z",
      "labels": [
        "bug",
        "documentation"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 8,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/286/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/286",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/286",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:15.309441",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! It's happening because the v2 Verba is trying to create a new collection called VERBA_Config, if you used v1 before, the old VERBA_Config is already existing, but the v2 can't recognize it because we're using the UUID as ID. \r\nWe'll add a fix to that to automatically detect the",
          "created_at": "2024-09-17T11:04:42Z"
        },
        {
          "author": "kmashal",
          "body": "where do I look on a Mac for the collection so I can  delete them ?",
          "created_at": "2024-09-17T18:44:02Z"
        },
        {
          "author": "thomashacker",
          "body": "If you're using Verba with Weaviate Embedded, the data should be located `~/.local/share/weaviate`\r\nIf you're using Verba with a Weaviate Cluster you can use `Collection` interface to individually edit your data there as well",
          "created_at": "2024-09-23T10:17:48Z"
        },
        {
          "author": "kmashal",
          "body": "> If you're using Verba with Weaviate Embedded, the data should be located `~/.local/share/weaviate` If you're using Verba with a Weaviate Cluster you can use `Collection` interface to individually edit your data there as well\r\n\r\nI deleted all things under share and still see this issue with the sam",
          "created_at": "2024-09-25T19:46:10Z"
        },
        {
          "author": "thomashacker",
          "body": "Are you using Weaviate Embedded or a Cluster?",
          "created_at": "2024-09-27T14:05:33Z"
        }
      ]
    },
    {
      "issue_number": 284,
      "title": "interface code cannot find  strip_non_letters func  ",
      "body": "## Description\r\n\r\ninterface code cannot find  strip_non_letters func  ,I use python 3.11 \r\n\r\n![image](https://github.com/user-attachments/assets/3fcd589b-918b-4b28-a935-b51fd2effeb0)\r\n\r\n## Installation\r\n\r\n<!-- Please specify how you installed Verba. Please always make sure to install Verba in a clean python environment and have at least 3.10.0 installed -->\r\n\r\n- [ ] pip install goldenverba\r\n- [ ] pip install from source\r\n- [ ] Docker installation\r\n\r\nIf you installed via pip, please specify the version:\r\n\r\n## Weaviate Deployment\r\n\r\n<!-- Please specify the Weaviate deployment you are using. -->\r\n\r\n- [ ] Local Deployment\r\n- [ ] Docker Deployment\r\n- [ ] Cloud Deployment\r\n\r\n## Configuration\r\n\r\n<!-- If you can, please specify the what components you are using. -->\r\n\r\nReader:\r\nChunker:\r\nEmbedder:\r\nRetriever:\r\nGenerator:\r\n\r\n## Steps to Reproduce\r\n\r\n<!-- If this is a bug, please provide detailed steps on how to reproduce the issue. If this is a feature, please describe what you want to be added or changed. -->\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
      "state": "closed",
      "author": "DavidSche",
      "author_type": "User",
      "created_at": "2024-09-12T09:25:51Z",
      "updated_at": "2024-12-10T10:30:15Z",
      "closed_at": "2024-12-10T10:30:15Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/284/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/284",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/284",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:15.577606",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Good catch, thanks a lot! We'll fix this",
          "created_at": "2024-09-13T03:05:54Z"
        },
        {
          "author": "DavidSche",
          "body": "Is there any progress?",
          "created_at": "2024-11-12T09:17:49Z"
        },
        {
          "author": "thomashacker",
          "body": "Yes, the legacy code will be removed in the upcoming version! Thanks 🚀 ",
          "created_at": "2024-12-07T15:07:11Z"
        },
        {
          "author": "thomashacker",
          "body": "Should be fixed in the newest version 🚀 ",
          "created_at": "2024-12-10T10:30:15Z"
        }
      ]
    },
    {
      "issue_number": 282,
      "title": "Unable to access weaviate cluster installed on K8S through verba 2.0 ",
      "body": "## Description\r\n\r\nI am trying to access verba 2.0 version with weaviate cluster 1.26.3 version installed on kubernetes.\r\n\r\n**export params**\r\n\r\nexport WEAVIATE_API_KEY_VERBA=“password”\r\nexport WEAVIATE_URL_VERBA=https://<weaviate-url-k8s>:6383\r\n\r\n**Error :**\r\n\r\nhttps://::6383 with Auth\r\n✘ Couldn’t connect to Weaviate, check your URL/API KEY: Invalid port:\r\n‘6383:443’\r\n✘ Failed to connect to Weaviate Couldn’t connect to Weaviate, check\r\nyour URL/API KEY: Invalid port: ‘6383:443’\r\nINFO: 10.82.204.17:65400 - “POST /api/connect HTTP/1.1” 400 Bad Request\r\n\r\n**Note** : It was working fine with verba 1.0 version ! with weaviate-client v3\r\n\r\n## Installation\r\n\r\n1. installed python 3.12.4 version \r\n2. installed weaviate-client v4\r\n3. installed verba using \"pip install goldenverba\"\r\n4. started the verba server using \"verba start --port 27048 --host <verba-host>\r\n\r\n<img width=\"750\" alt=\"image\" src=\"https://github.com/user-attachments/assets/895e961e-d6a4-4797-8028-af149ef22ca4\">\r\n\r\n(myenv) pip3 freeze|grep verba\r\ngoldenverba==2.0.0\r\n(myenv) pip3 freeze|grep weav\r\nweaviate-client==4.7.1\r\n## Weaviate Deployment\r\n\r\n<!-- Please specify the Weaviate deployment you are using. -->\r\n\r\nWeaviate cluster created using helm charts on kubernetes cluster, http and grpc url's exposed through istio virtual service to access outside the cluster.\r\n\r\n## Configuration\r\n\r\nInstallation issue \r\n\r\n## Steps to Reproduce\r\n\r\nProvided the steps i followed for installation and reproducing the issue above.\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
      "state": "closed",
      "author": "adchadal",
      "author_type": "User",
      "created_at": "2024-09-10T21:54:15Z",
      "updated_at": "2024-12-10T10:30:03Z",
      "closed_at": "2024-12-10T10:30:03Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/282/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/282",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/282",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:15.793424",
      "comments": [
        {
          "author": "thomashacker",
          "body": "I added a new deployment option `Custom` which should allow to connect to custom Weaviate instances with custom hosts + ports. Let me know if this works for your kubernetes setup!",
          "created_at": "2024-09-23T17:25:31Z"
        },
        {
          "author": "adchadal",
          "body": "> I added a new deployment option `Custom` which should allow to connect to custom Weaviate instances with custom hosts + ports. Let me know if this works for your kubernetes setup!\r\n\r\nThank you for fixing this ! @thomashacker \r\n\r\nBut when i use pip install goldenverba, it still installs [v2.0.0]. W",
          "created_at": "2024-09-26T16:07:52Z"
        },
        {
          "author": "thomashacker",
          "body": "For now, I would recommend installing from source since it's the most up-to-date, we'll release `v2.1.0` version to PyPI a bit later",
          "created_at": "2024-09-27T14:06:32Z"
        },
        {
          "author": "thomashacker",
          "body": "Hey, I just to released 2.1! 🚀 Let me know if the issue still persists ",
          "created_at": "2024-12-10T10:30:03Z"
        }
      ]
    },
    {
      "issue_number": 299,
      "title": "failed: Batch vectorization failed: Vectorization failed for some batches: No Weaviate Embedding Service Key found",
      "body": "## Description\r\n\r\nI followed the YT video with weaviate local setup. I could start the verba, but the file imports failed. It is looking for EMBEDDING_SERVICE_KEY. The video doesn't mention it if using Local weaviate. In fact, the verba UI in video doesn't have EMBEDDING_SERVICE_KEY and EMBEDDING_SERVICE_URL fields.\r\n\r\n## Installation\r\n\r\n<!-- Please specify how you installed Verba. Please always make sure to install Verba in a clean python environment and have at least 3.10.0 installed -->\r\n\r\n- [ x] pip install goldenverba\r\n- [ ] pip install from source\r\n- [ ] Docker installation\r\n\r\nIf you installed via pip, please specify the version:\r\n\r\nI created virtual env as suggested in video and then started verba. Launched the UI in browser, selected few pdf files. Set up labels for all and then Import All. It failed for all files.\r\n\r\n## Weaviate Deployment\r\n\r\n<!-- Please specify the Weaviate deployment you are using. -->\r\n\r\n- [x ] Local Deployment\r\n- [ ] Docker Deployment\r\n- [ ] Cloud Deployment\r\n\r\n## Configuration\r\n\r\n<!-- If you can, please specify the what components you are using. -->\r\n\r\nReader: Default\r\nChunker: Token\r\nEmbedder: Weaviate \r\nRetriever:\r\nGenerator:\r\n\r\n## Steps to Reproduce\r\n\r\n<!-- If this is a bug, please provide detailed steps on how to reproduce the issue. If this is a feature, please describe what you want to be added or changed. -->\r\n\r\nFollow the steps from video.\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
      "state": "closed",
      "author": "durgeshverma",
      "author_type": "User",
      "created_at": "2024-10-03T19:40:55Z",
      "updated_at": "2024-12-09T12:23:09Z",
      "closed_at": "2024-12-09T12:23:08Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/299/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/299",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/299",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:16.014407",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey, seems like you dont have the required fields for the embedding service.\r\nHave you tried out a different embedding model?",
          "created_at": "2024-10-18T08:54:45Z"
        },
        {
          "author": "wtavares",
          "body": "+1 here. \r\n\r\nI'm a little bit lost actuality. \r\n\r\nWhen tried the Weaviate Embedder i'm having this error: \r\n\r\n```\r\nℹ FileStatus.ERROR | xpto.pdf | Import for Por dentro\r\nMelissa.pdf failed: Import for xpto.pdf failed: Batch\r\nvectorization failed: Vectorization failed for some batches: 404, message='",
          "created_at": "2024-10-19T21:26:29Z"
        },
        {
          "author": "thomashacker",
          "body": "Ah, I see how this can be confusing! The Weaviate Embedding service is currently still in an alpha testing phase and you can get the credentials by joining as a tester or wait until its official release. \r\n\r\nMeanwhile you can use other options HuggingFace, Ollama or providers such as Cohere, Voyage ",
          "created_at": "2024-10-21T09:42:51Z"
        },
        {
          "author": "wtavares",
          "body": "> Ah, I see how this can be confusing! The Weaviate Embedding service is currently still in an alpha testing phase and you can get the credentials by joining as a tester or wait until its official release.\r\n> \r\n> Meanwhile you can use other options HuggingFace, Ollama or providers such as Cohere, Vo",
          "created_at": "2024-10-22T12:40:00Z"
        },
        {
          "author": "thomashacker",
          "body": "Sorry for the late reply and not following up 🙏 \r\nYou can change the `Dockerfile` to install the verba with HuggingFace dependencies `pip install `.[huggingface]`, which will install all required libraries to use SentenceTransformer models inside Verba",
          "created_at": "2024-12-09T12:23:08Z"
        }
      ]
    },
    {
      "issue_number": 294,
      "title": "⚠ Query failed: Invalid URL '/api/embeddings': No scheme supplied. Perhaps you meant https:///api/embeddings",
      "body": "⚠ Query failed: Invalid URL '/api/embeddings': No scheme supplied.\r\nPerhaps you meant https:///api/embeddings?\r\nINFO:     127.0.0.1:50092 - \"POST /api/query HTTP/1.1\" 500 Internal Server Error",
      "state": "open",
      "author": "Abhay-Karthik",
      "author_type": "User",
      "created_at": "2024-09-24T09:13:55Z",
      "updated_at": "2024-12-09T12:19:19Z",
      "closed_at": null,
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/294/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/294",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/294",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:16.224030",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey, sorry for the late replay and thanks for the issue! \r\nCan you share more information about your issue, if it still exists? 🚀 ",
          "created_at": "2024-12-09T12:19:15Z"
        }
      ]
    },
    {
      "issue_number": 291,
      "title": "Fix Weaviate Embedded Breaking When Idle",
      "body": "## Description\r\n\r\n<!-- A clear and concise description of what the issue is. Please include any error messages and logs. If possible, also include your configuration. -->\r\n\r\n## Installation\r\n\r\n<!-- Please specify how you installed Verba. Please always make sure to install Verba in a clean python environment and have at least 3.10.0 installed -->\r\n\r\n- [ ] pip install goldenverba\r\n- [x] pip install from source\r\n- [ ] Docker installation\r\n\r\nIf you installed via pip, please specify the version:\r\n\r\n## Weaviate Deployment\r\n\r\n<!-- Please specify the Weaviate deployment you are using. -->\r\n\r\n- [x] Local Deployment\r\n- [ ] Docker Deployment\r\n- [ ] Cloud Deployment\r\n\r\n## Steps to Reproduce\r\n\r\n<!-- If this is a bug, please provide detailed steps on how to reproduce the issue. If this is a feature, please describe what you want to be added or changed. -->\r\n\r\nUsing Weaviate Embedded causes the ClientManager to create redundant processes on the same port causing the client to throw Exception.\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
      "state": "closed",
      "author": "thomashacker",
      "author_type": "User",
      "created_at": "2024-09-23T15:14:53Z",
      "updated_at": "2024-12-09T12:18:20Z",
      "closed_at": "2024-12-09T12:18:19Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/291/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/291",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/291",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:16.417124",
      "comments": []
    },
    {
      "issue_number": 287,
      "title": "Ollama locally with verba",
      "body": "## Description\r\n\r\n<!-- using ollama locally whenerver starting start verba,  and clicking on http://localhost:8000/ with local option getting an error as \"✔ Connecting new Client\r\nℹ Connecting to Weaviate Embedded\r\n✘ Couldn't connect to Weaviate, check your URL/API KEY: <urlopen error\r\n[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local\r\nissuer certificate (_ssl.c:1000)>\r\n✘ Failed to connect to Weaviate Couldn't connect to Weaviate, check\r\nyour URL/API KEY: <urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate\r\nverify failed: unable to get local issuer certificate (_ssl.c:1000)>\" -->\r\n\r\n## Installation\r\n\r\n<!-- Please specify how you installed Verba. Please always make sure to install Verba in a clean python environment and have at least 3.10.0 installed -->\r\n\r\n- [ ] pip install goldenverba\r\n- [ ] pip install from source\r\n\r\n\r\n installed via pip, please specify the version: (24.2)\r\n\r\n## Weaviate Deployment\r\n\r\n<!-- Please specify the Weaviate deployment you are using. -->\r\n\r\n- [ ] Local Deployment\r\n\r\n\r\n## Additional context\r\n\r\n<!-- running rag locally following video. -->\r\n",
      "state": "closed",
      "author": "tusharrasal",
      "author_type": "User",
      "created_at": "2024-09-19T04:37:04Z",
      "updated_at": "2024-12-09T12:18:04Z",
      "closed_at": "2024-12-09T12:18:04Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/287/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/287",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/287",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:16.417148",
      "comments": [
        {
          "author": "tusharrasal",
          "body": "✔ Connecting new Client\r\nℹ Connecting to Weaviate Embedded\r\n✘ Couldn't connect to Weaviate, check your URL/API KEY: <urlopen error\r\n[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local\r\nissuer certificate (_ssl.c:1000)>\r\n✘ Failed to connect to Weaviate Couldn't connect to ",
          "created_at": "2024-09-19T04:38:07Z"
        },
        {
          "author": "thomashacker",
          "body": "This issue is related to `urllib` and not directly `verba`\r\nYou can take a look at this thread: https://stackoverflow.com/questions/68275857/urllib-error-urlerror-urlopen-error-ssl-certificate-verify-failed-certifica\r\n\r\nLet me know if this fixes your problem 😄 ",
          "created_at": "2024-09-23T10:26:38Z"
        }
      ]
    },
    {
      "issue_number": 279,
      "title": "Can't connect to local Weaviate URL",
      "body": "I went through the code and seems it will always try to use WCS. There is no way to provide a URL to self-hosted Weaviate in Verba.\r\n\r\n![image](https://github.com/user-attachments/assets/99e91ec0-1146-49ae-b1b7-57b93ba7b468)\r\nFailed to connect to Weaviate Couldn't connect to Weaviate, check your URL/API KEY: Invalid port: '8080:443'\r\n\r\nTrying latest Verba with my local Weaviate installation with local KubeAI install.\r\n\r\nI will add more details later.\r\n\r\n```\r\nexport OPENAI_API_KEY=thisIsIgnored\r\nexport WEAVIATE_URL_VERBA=http://localhost:8080\r\nexport OPENAI_BASE_URL=http://localhost:8000/openai/v1\r\nverba start --port 8001\r\n```\r\n\r\n\r\n## Installation\r\n\r\n<!-- Please specify how you installed Verba. Please always make sure to install Verba in a clean python environment and have at least 3.10.0 installed -->\r\n\r\n- [X] pip install goldenverba\r\n- [ ] pip install from source\r\n- [ ] Docker installation\r\n\r\nIf you installed via pip, please specify the version:\r\n\r\n## Weaviate Deployment\r\n\r\n<!-- Please specify the Weaviate deployment you are using. -->\r\n\r\n- [x] Local Deployment\r\n- [ ] Docker Deployment\r\n- [ ] Cloud Deployment\r\n\r\n## Configuration\r\n\r\n<!-- If you can, please specify the what components you are using. -->\r\n\r\nReader:\r\nChunker:\r\nEmbedder:\r\nRetriever:\r\nGenerator:\r\n\r\n## Steps to Reproduce\r\n\r\n<!-- If this is a bug, please provide detailed steps on how to reproduce the issue. If this is a feature, please describe what you want to be added or changed. -->\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
      "state": "closed",
      "author": "samos123",
      "author_type": "User",
      "created_at": "2024-09-10T01:50:02Z",
      "updated_at": "2024-12-09T10:45:02Z",
      "closed_at": "2024-12-09T10:45:02Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 6,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/279/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 1
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/279",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/279",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:16.620249",
      "comments": [
        {
          "author": "nisarpro",
          "body": "same to me",
          "created_at": "2024-09-11T11:28:45Z"
        },
        {
          "author": "adchadal",
          "body": "reported similar issue https://github.com/weaviate/Verba/issues/282 ",
          "created_at": "2024-09-11T15:07:59Z"
        },
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! We're working on a fix 🚀 ",
          "created_at": "2024-09-13T03:04:18Z"
        },
        {
          "author": "adchadal",
          "body": "> Thanks for the issue! We're working on a fix 🚀\r\n\r\nThank you ! ",
          "created_at": "2024-09-13T13:54:58Z"
        },
        {
          "author": "tusharrasal",
          "body": "same to me",
          "created_at": "2024-09-19T04:41:30Z"
        }
      ]
    },
    {
      "issue_number": 262,
      "title": "Error Code 500 because config object cannot be deleted",
      "body": "## Description\r\nWe have written a browser script to upload file batches via the GitHub Reader functionality. We managed to upload approximately 20'000 files and then encountered the following error:\r\n\r\n> (ERROR) Delete object! Unexpected status code: 500, with response body: {'error': [{'message': 'could not delete object from vector repo: delete from index \"verba_config\": delete local object: shard=\"Tr4MCNMDRTK5\": store is read-only'}]}\r\n\r\n## Is this a bug or a feature?\r\n- [x] Bug\r\n- [ ] Feature\r\n\r\n## Steps to Reproduce\r\nWhenever we try to import new files via the GitHub Reader, we encounter the above error and are unsure about it's origin and how to solve it.\r\n",
      "state": "closed",
      "author": "WatKey",
      "author_type": "User",
      "created_at": "2024-08-21T14:11:23Z",
      "updated_at": "2024-12-07T19:51:09Z",
      "closed_at": "2024-12-07T19:51:09Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/262/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/262",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/262",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:16.836833",
      "comments": [
        {
          "author": "thomashacker",
          "body": "What deployment of Weaviate are you using? It seems like you're using Weaviate Embedded, right?",
          "created_at": "2024-09-03T13:18:50Z"
        },
        {
          "author": "thomashacker",
          "body": "Let me know if this error still persists 🚀 Will close this for now",
          "created_at": "2024-12-07T19:51:09Z"
        }
      ]
    },
    {
      "issue_number": 226,
      "title": "add domain parameter to serve Verba",
      "body": "## Description\r\nA typical user will want to host Verba behind a web proxy or a load balancer which will be fronted by a domain.\r\n\r\n## Is this a bug or a feature?\r\n- [X] Bug\r\n- [ ] Feature\r\n\r\n## Steps to Reproduce\r\nLaunch your Verba locally:\r\n\r\nverba start --host localhost --port 8080\r\n\r\nThen for example add an ngrok SSL proxy:\r\nngrok http --domain=mycooldomain.com 8080\r\n\r\nThis will result in a forever Loading Verba screen, because the api.ts file is hardcoded with localhost.\r\n\r\n\r\n## Suggestion\r\nI suggest to add another parameter into Verba which will then override the localhost in api.ts\r\n\r\nFor example:\r\n\r\nverba start --host localhost --domain mycooldomain.com --port 8080\r\n\r\n",
      "state": "closed",
      "author": "priamai",
      "author_type": "User",
      "created_at": "2024-06-23T23:15:41Z",
      "updated_at": "2024-12-07T17:41:12Z",
      "closed_at": "2024-12-07T17:41:12Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/226/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/226",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/226",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:17.043522",
      "comments": [
        {
          "author": "priamai",
          "body": "Also for reference I did also attempt to rewrite the host header:\r\n\r\n```\r\nverba start --host localhost --port 8080\r\nngrok http --domain=mycooldomain.com 8080 --host-header=\"localhost:8080\"\r\n```\r\nand is still having the same issue.\r\n",
          "created_at": "2024-06-24T15:15:22Z"
        },
        {
          "author": "thomashacker",
          "body": "Interesting use case! Thanks for the issue, we're looking into it 🚀 ",
          "created_at": "2024-06-27T13:10:05Z"
        },
        {
          "author": "Japhys",
          "body": "I am running it behind nginx proxy manager and it seems to work, however it loads without the settings and documents i set via localhost, looks like a clean install. Kinda weird. ",
          "created_at": "2024-10-04T07:28:11Z"
        },
        {
          "author": "thomashacker",
          "body": "Hey everyone! I think the best solution here would be to host the frontend separately and move it behind your specific domain. Using the `verba start` is optimized and designed for local use only",
          "created_at": "2024-12-07T17:41:12Z"
        }
      ]
    },
    {
      "issue_number": 215,
      "title": "Watch directories to keep vector DB up to date",
      "body": "## Description\r\nThe current way of ingesting files is static and must be done manually in the UI. In my opinion, it would be awesome to be able to \"watch\" directories and map changes directly to the DBs in order to maintain the knowledge up to date. \r\n\r\n## Is this a bug or a feature?\r\n- [ ] Bug\r\n- [x] Feature\r\n\r\n## Additional context\r\nSome preliminary steps are in PR here https://github.com/weaviate/Verba/pull/164 => ingestion directories.\r\nAnother \"local RAG\" project [PrivateGPT](https://docs.privategpt.dev/manual/document-management/ingestion) offers this kind of behaviour through the `watchdog` package. \r\n\r\nThanks 🙃 ",
      "state": "closed",
      "author": "francoisWeber",
      "author_type": "User",
      "created_at": "2024-06-03T15:21:35Z",
      "updated_at": "2024-12-07T17:38:59Z",
      "closed_at": "2024-12-07T17:38:59Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/215/reactions",
        "total_count": 3,
        "+1": 3,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/215",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/215",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:17.261890",
      "comments": [
        {
          "author": "hayzem",
          "body": "I also had the need and tried to implement this. For that I added a feature updating Weaviate documents and it was working fine until the moment that I thought updating documents would affect the cache and the relations. I left it there. If I  get any clarity about it and making sure it wouldn't be ",
          "created_at": "2024-06-06T04:36:18Z"
        },
        {
          "author": "thomashacker",
          "body": "Great idea! We'll add it to the list 🚀 ",
          "created_at": "2024-06-06T11:12:04Z"
        },
        {
          "author": "thomashacker",
          "body": "Hey everyone! Unfortunately, we decided to scope this feature out of Verba! Sorry! 😞 ",
          "created_at": "2024-12-07T17:38:59Z"
        }
      ]
    },
    {
      "issue_number": 153,
      "title": "Publish a docker image with tagged versions",
      "body": "I created a separate repo so I can use a public docker image here in the helm charts: https://github.com/substratusai/verba-docker\r\n\r\nHowever, ideally Verba publishes an official container image and tags it with each new release of verba. \r\n\r\nNote I'm fine with keeping my separate repo and publish container images but I might not be able to keep it up to date.\r\n\r\nFor example, I would like to see the following image published: `weaviate/verba:v0.4.0`",
      "state": "closed",
      "author": "samos123",
      "author_type": "User",
      "created_at": "2024-05-10T18:27:04Z",
      "updated_at": "2024-12-07T17:37:33Z",
      "closed_at": "2024-12-07T17:37:33Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/153/reactions",
        "total_count": 3,
        "+1": 2,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 1,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/153",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/153",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:17.464987",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Great point! We'll look into that",
          "created_at": "2024-05-12T22:21:11Z"
        },
        {
          "author": "Japhys",
          "body": "I second this! Any update on this @thomashacker ",
          "created_at": "2024-09-21T14:25:53Z"
        },
        {
          "author": "thomashacker",
          "body": "Got sick last week 💀 Will continue working on it 🫡 ",
          "created_at": "2024-09-23T10:21:33Z"
        },
        {
          "author": "DavidSche",
          "body": "+1",
          "created_at": "2024-10-12T01:51:32Z"
        },
        {
          "author": "thomashacker",
          "body": "https://registry.hub.docker.com/r/semitechnologies/verba tada! 🥳 ",
          "created_at": "2024-12-07T17:37:33Z"
        }
      ]
    },
    {
      "issue_number": 253,
      "title": "AI assistant integration with any website",
      "body": "## Description\r\n\r\nI am looking to configure my RAG system using Verba and only integrate chat feature as an assistant in my website.\r\n\r\n## Is this a bug or a feature?\r\n- [ ] Bug\r\n- [x] Feature\r\n\r\n\r\n\r\n",
      "state": "closed",
      "author": "Nasreddine",
      "author_type": "User",
      "created_at": "2024-08-04T06:18:55Z",
      "updated_at": "2024-12-07T17:36:37Z",
      "closed_at": "2024-12-07T17:36:37Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/253/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/253",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/253",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:17.681002",
      "comments": [
        {
          "author": "thomashacker",
          "body": "We're working on it!",
          "created_at": "2024-09-03T13:15:42Z"
        },
        {
          "author": "thomashacker",
          "body": "Closing this, will continue this conversation here (https://github.com/weaviate/Verba/issues/254)",
          "created_at": "2024-12-07T17:36:37Z"
        }
      ]
    },
    {
      "issue_number": 184,
      "title": "Reminder to redo embeddings when changing embedding model",
      "body": "## Description\r\n\r\nDon't we need a warning to redo the embeddings when switching models? AFAIK embeddings from, say, ADAembedder and a local model like llama3 are not compatible, nor are different local models. \r\n\r\n## Is this a bug or a feature?\r\n- [ ] Bug\r\n- [X] Feature\r\n\r\n## Steps to Reproduce\r\n\r\nEmbed document, then switch to another embedder, then try to retrieve info from that first document\r\n\r\n## Additional context\r\n<!-- Add any other context about the problem here. -->\r\n",
      "state": "closed",
      "author": "JanEggers-hr",
      "author_type": "User",
      "created_at": "2024-05-21T16:16:02Z",
      "updated_at": "2024-12-07T17:22:40Z",
      "closed_at": "2024-12-07T17:22:40Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/184/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/184",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/184",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:17.929189",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Good point! I'll look into making this more user-friendly!",
          "created_at": "2024-05-22T10:24:11Z"
        },
        {
          "author": "thomashacker",
          "body": "Hey @JanEggers-hr , in the latest versions you'll get warned if you select an embedding model but haven't ingested any data with it yet. It will appear in the chat before writing any queries 🚀 ",
          "created_at": "2024-12-07T17:22:40Z"
        }
      ]
    },
    {
      "issue_number": 330,
      "title": "Is there a friendly API for client",
      "body": "This is an amazing product that has helped me solve many problems\r\nI would like to ask if Verba has a user-friendly API, such as RESTful, that allows me to use Verba externally through the API.",
      "state": "closed",
      "author": "richard-guan-dev",
      "author_type": "User",
      "created_at": "2024-11-20T02:07:38Z",
      "updated_at": "2024-12-07T17:20:58Z",
      "closed_at": "2024-12-07T17:20:58Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/330/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 1,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/330",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/330",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:18.167433",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey, thanks for the kinds words 🚀 We don't have a user-friendly API endpoint at the moment, but we're planning to do so in the future! I'll let you know when we do",
          "created_at": "2024-12-07T13:48:47Z"
        },
        {
          "author": "thomashacker",
          "body": "Closing this and keeping this conversation (https://github.com/weaviate/Verba/issues/254)",
          "created_at": "2024-12-07T17:20:58Z"
        }
      ]
    },
    {
      "issue_number": 259,
      "title": "Getting started video",
      "body": "## Description\r\n<!-- A clear and concise description of what the issue is. Please include if this is a bug or a feature request. -->\r\nVerba is awesome! Readme is cool, but I think it would be more impactful if there is a simplified video tutorial, showcasing how to set it up \r\n\r\n## Is this a bug or a feature?\r\n- [ ] Bug\r\n- [x] Feature\r\n\r\n## Steps to Reproduce\r\n<!-- If this is a bug, please provide detailed steps on how to reproduce the issue. If this is a feature, please describe what you want to be added or changed. -->\r\n\r\n## Additional context\r\n<!-- Add any other context about the problem here. -->\r\n",
      "state": "closed",
      "author": "anandbhaskaran",
      "author_type": "User",
      "created_at": "2024-08-15T06:54:06Z",
      "updated_at": "2024-12-07T17:19:45Z",
      "closed_at": "2024-12-07T17:19:45Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/259/reactions",
        "total_count": 2,
        "+1": 2,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/259",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/259",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:18.361602",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Agreed, working on that! ",
          "created_at": "2024-08-22T17:20:22Z"
        },
        {
          "author": "thomashacker",
          "body": "https://www.youtube.com/watch?v=2VCy-YjRRhA&t=40s&ab_channel=Weaviate%E2%80%A2VectorDatabase tada 🥳 ",
          "created_at": "2024-12-07T17:19:45Z"
        }
      ]
    },
    {
      "issue_number": 275,
      "title": "Contributing an OpenAPI spec document",
      "body": "## Description\r\n\r\nI understand that Verba is very much work in progress and I wanted to create an alternate backend to the current implementation so I generated an openapi spec document and thought I'd share it if it is of any use to you guys?\r\n\r\n## Installation\r\n\r\n- [x] gh repo clone --fork :)\r\n- [ ] pip install from source\r\n- [ ] Docker installation\r\n\r\n## Weaviate Deployment\r\n\r\n<!-- Please specify the Weaviate deployment you are using. -->\r\n\r\n- [x] Local Deployment\r\n- [ ] Docker Deployment\r\n- [ ] Cloud Deployment\r\n\r\n\r\n## Additional context\r\n\r\nCreating an issue before a PR\r\n",
      "state": "closed",
      "author": "jasonnathan",
      "author_type": "User",
      "created_at": "2024-09-08T08:31:05Z",
      "updated_at": "2024-12-07T17:18:33Z",
      "closed_at": "2024-12-07T17:18:33Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/275/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/275",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/275",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:18.615377",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks a lot, I'll take a look! 🚀 ",
          "created_at": "2024-09-13T03:03:50Z"
        }
      ]
    },
    {
      "issue_number": 207,
      "title": "collaboration features",
      "body": "## Description\r\nI want to be able to create a custom \"brain\" that is scoped to a set of documents and share it with ACL permissions.\r\n\r\n## Is this a bug or a feature?\r\n- [ ] Bug\r\n- [x] Feature\r\n\r\n\r\n## Additional context\r\nSee https://github.com/QuivrHQ/quivr for inspiration. ",
      "state": "closed",
      "author": "mikestaub",
      "author_type": "User",
      "created_at": "2024-05-28T16:46:12Z",
      "updated_at": "2024-12-07T17:17:24Z",
      "closed_at": "2024-12-07T17:17:24Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/207/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/207",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/207",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:18.954843",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Interesting, we'll have a look",
          "created_at": "2024-05-31T11:36:54Z"
        },
        {
          "author": "thomashacker",
          "body": "Hey @mikestaub, we decided to scope collaboration features out of Verba! Sorry 😞 ",
          "created_at": "2024-12-07T17:17:24Z"
        }
      ]
    },
    {
      "issue_number": 189,
      "title": "Integrate Embedding Models Using Vertex AI with Service Account Authentication",
      "body": "\r\n## Description\r\nDue to security policies, embedding API keys are not permitted in most companies. We need to use the Vertex AI service account (`gemini_credentials.json`) for authentication when integrating embedding models. This approach ensures compliance with security standards and leverages the benefits of using service accounts for authentication.  This also simplifyes the config process becasue all that is requred for people using GCP ( most big companies currently ) is the service account / gemini_credentials.json.\r\n\r\n## Is this a bug or a feature?\r\n- [ ] Bug\r\n- [x] Feature\r\n\r\n## Steps to Reproduce\r\n1. **Setup Vertex AI Service Account**:\r\n    - Ensure `gemini_credentials.json` is correctly configured and accessible.\r\n    - Verify that the service account has the necessary permissions for accessing embedding models.\r\n2. **Modify Authentication Method**:\r\n    - Update the codebase to use `gemini_credentials.json` for authentication instead of embedding API keys.\r\n    - Implement the necessary changes in the configuration files to support service account authentication.\r\n3. **Testing and Validation**:\r\n    - Conduct thorough testing to ensure that the embedding models function correctly with the service account authentication.\r\n    - Validate that all functionalities are working as expected and that there are no security issues.\r\n\r\n## Additional context\r\nThis change is necessary to comply with company security policies, which prohibit the use of GCP API keys. By using a service account (`gemini_credentials.json`), we ensure that our authentication method is secure and aligns with industry best practices.\r\n",
      "state": "open",
      "author": "dawnpatrol04",
      "author_type": "User",
      "created_at": "2024-05-22T17:52:27Z",
      "updated_at": "2024-12-07T17:16:41Z",
      "closed_at": null,
      "labels": [
        "Community PR"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/189/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/189",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/189",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:19.209716",
      "comments": [
        {
          "author": "dawnpatrol04",
          "body": "Hey if someone can point me in the right direction I can probably get a pull request together. ",
          "created_at": "2024-05-22T18:15:29Z"
        }
      ]
    },
    {
      "issue_number": 159,
      "title": "Feature Request: GraphRAG Support",
      "body": "## Description\r\nWill there be any plans to support GraphRAG approach within Verba?\r\n\r\n## Is this a bug or a feature?\r\n- [ ] Feature\r\n\r\n## Additional context\r\nhttps://www.microsoft.com/en-us/research/project/graphrag/\r\nhttps://www.youtube.com/watch?v=r09tJfON6kE\r\n",
      "state": "closed",
      "author": "ipdeft",
      "author_type": "User",
      "created_at": "2024-05-16T15:36:04Z",
      "updated_at": "2024-12-07T17:15:46Z",
      "closed_at": "2024-12-07T17:15:46Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/159/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/159",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/159",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:19.447736",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Great idea! We will look into it",
          "created_at": "2024-05-17T16:33:55Z"
        },
        {
          "author": "ipdeft",
          "body": "Appreciate you for even considering it. Awesome project btw.",
          "created_at": "2024-05-22T05:08:37Z"
        },
        {
          "author": "thomashacker",
          "body": "Hey @ipdeft , unfortunately we decided to scope graphRAG out of the Verba project 😞 Sorry!",
          "created_at": "2024-12-07T17:15:46Z"
        }
      ]
    },
    {
      "issue_number": 239,
      "title": "Mass Import Files?",
      "body": "## Description\r\nQuestion/Discussion: What is the best way to mass-import many files? I need to import about 200.000 text files. Currently my only working solution would be to upload all the files in batches of size 500 into github folders. And then import these folders via the GitHub reader one by one manually, whenever the current import is completed. Is there an easier way to do this, possibly directly by sending the file bytes via an API endpoint?\r\n\r\n## Is this a bug or a feature?\r\n- [ ] Bug\r\n- [x] Feature\r\n\r\n## Steps to Reproduce\r\n[see above]\r\n\r\n## Additional context\r\n[None]",
      "state": "closed",
      "author": "Raichuu41",
      "author_type": "User",
      "created_at": "2024-07-03T19:37:00Z",
      "updated_at": "2024-12-07T17:14:53Z",
      "closed_at": "2024-12-07T17:14:53Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 7,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/239/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/239",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/239",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:19.682699",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Good point. There is currently no feature for mass importing files, but we'll add it to the feature list.",
          "created_at": "2024-07-04T12:25:24Z"
        },
        {
          "author": "Raichuu41",
          "body": "> Good point. There is currently no feature for mass importing files, but we'll add it to the feature list.\r\n\r\n@thomashacker \r\nWould it be possible to support you in the implementation of mass importing files? I really need the functionality and have the skills to do it. If possible, we could have a",
          "created_at": "2024-07-30T14:40:19Z"
        },
        {
          "author": "thomashacker",
          "body": "We're currently implementing mass importing files in the upcoming v2 version, which should be released in a couple of weeks. If you need the functionality now, you can add it yourself, the source code of the frontend and backend are all available here 😄 ",
          "created_at": "2024-08-01T08:01:37Z"
        },
        {
          "author": "thomashacker",
          "body": "Implemented the mass import functionality in the newest release",
          "created_at": "2024-09-03T13:13:24Z"
        },
        {
          "author": "Raichuu41",
          "body": "> Implemented the mass import functionality in the newest release\r\n\r\nWhere is this implemented? I see no documentation for it. I found one backend endpoint `@app.websocket(\"/ws/import_files\")`, is it this one? And if so, how can I make it work? I tried to understand the code more but it keeps failin",
          "created_at": "2024-09-11T23:20:12Z"
        }
      ]
    },
    {
      "issue_number": 285,
      "title": "Add Llamaparse as Reader Component",
      "body": "## Description\r\n\r\n<!-- A clear and concise description of what the new feature. -->\r\n\r\nAdd Llamaparse API to Verba\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n\r\nhttps://docs.llamaindex.ai/en/stable/llama_cloud/llama_parse/\r\n",
      "state": "open",
      "author": "thomashacker",
      "author_type": "User",
      "created_at": "2024-09-16T08:44:30Z",
      "updated_at": "2024-12-07T17:14:10Z",
      "closed_at": null,
      "labels": [
        "Community PR"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/285/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/285",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/285",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:19.911422",
      "comments": []
    },
    {
      "issue_number": 44,
      "title": "Add poetry support",
      "body": "Currently poetry is the go-to standard to manage dependencies, builds and virtualenvs. I think it'd be useful to incorporate it.",
      "state": "closed",
      "author": "grski",
      "author_type": "User",
      "created_at": "2023-11-17T15:48:54Z",
      "updated_at": "2024-12-07T17:13:39Z",
      "closed_at": "2024-12-07T17:13:39Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/44/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 1,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/44",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/44",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:19.911442",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Agree! We will look into it, thanks ",
          "created_at": "2023-11-21T08:49:03Z"
        },
        {
          "author": "grski",
          "body": "@thomashacker if are ok with that I can tackle it ",
          "created_at": "2023-11-21T10:50:46Z"
        },
        {
          "author": "thomashacker",
          "body": "That'd be great, thanks!",
          "created_at": "2023-11-29T11:25:30Z"
        },
        {
          "author": "kirill-push",
          "body": "@thomashacker Hi! Is this issue is still relevant?",
          "created_at": "2023-12-27T12:31:27Z"
        },
        {
          "author": "thomashacker",
          "body": "Yes! It is",
          "created_at": "2024-01-02T15:21:29Z"
        }
      ]
    },
    {
      "issue_number": 135,
      "title": "Support Indexify as Retriever ",
      "body": "Hi folks! Love Verba, does the project support or plan to support pluggable retrievers? We are building an open-source reliable extraction and embedding engine - https://getindexify.ai We are pan on supporting Weviate as a storage backend very soon.  \r\n\r\nIndexify has a retriever API which supports retrieving using semantic search on embedding indexes, and structured data from unstructured data using SQL. \r\n\r\nIf we integrate Indexify, Verba will be able to - \r\n1. Answer questions from not only PDF and documents, but also from images, videos and audio.\r\n2. Ingest any amount of documents, videos, audio, etc at any scale (throughput, data volume)\r\n3. Extraction of embedding, structured data from videos, docs, images will be offloaded in workers (distributed in production) so retrieval will always return fresh data. \r\n4. Users can monitor the state of indexes, extraction status, delete or update ingested content and extracted embedding/metadata.\r\n5. Support all major hardware accelerators and any model for extraction. \r\n\r\nHere is an example pipeline for PDF extraction - https://getindexify.ai/usecases/pdf_extraction/ and for videos - https://getindexify.ai/usecases/video_rag/ \r\n\r\nI think the integration could be fairly seamless with some extensions in Verba and once we support Weviate in Indexify(should be straight forward). \r\n\r\nThoughts? ",
      "state": "open",
      "author": "diptanu",
      "author_type": "User",
      "created_at": "2024-04-14T06:25:10Z",
      "updated_at": "2024-12-07T17:12:44Z",
      "closed_at": null,
      "labels": [
        "Community PR"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/135/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 1,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/135",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/135",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:20.146841",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Interesting and great idea! I'll have a look 🚀 ",
          "created_at": "2024-04-15T07:37:36Z"
        },
        {
          "author": "diptanu",
          "body": "@thomashacker I would love to chat more on discord, or on a call also! My email - diptanu@tensorlake.ai :) ",
          "created_at": "2024-04-15T18:50:08Z"
        },
        {
          "author": "thomashacker",
          "body": "Hey @diptanu if this is still open, feel free to create a PR ",
          "created_at": "2024-09-03T12:45:36Z"
        }
      ]
    },
    {
      "issue_number": 140,
      "title": "Integrating Groq LPU Inference Engine API with Verba",
      "body": "Hi all!\r\n\r\nHere an instruction how to integrate Groq API with Verba. \r\n\r\nObtain API from [](https://console.groq.com/login)\r\n\r\n1. `pip install groq`\r\n2. Create \"GroqGenerator.py\" at goldenverba/components/generation folder. Paste this code:\r\n```\r\nimport os\r\nfrom dotenv import load_dotenv\r\nfrom groq import AsyncGroq\r\n\r\nfrom collections.abc import Iterator\r\nfrom goldenverba.components.interfaces import Generator\r\n\r\nload_dotenv()\r\n\r\nGROQ_API_KEY = os.getenv(\"GROQ_API_KEY\")\r\n\r\nclass GroqGenerator(Generator):\r\n    \"\"\"\r\n    Groq Generator.\r\n    \"\"\"\r\n\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.name = \"GroqGenerator\"\r\n        self.description = \"Generator using Groq's LPU INFERENCE ENGINE\"\r\n        self.requires_library = [\"groq\"]\r\n        self.requires_env = [\"GROQ_API_KEY\"]\r\n        self.streamable = True\r\n        self.model_name = os.getenv(\"GROQ_MODEL\", \"llama3-8b-8192\")\r\n        self.context_window = 8192\r\n\r\n        # Initialize Groq client\r\n        self.client = AsyncGroq(api_key=GROQ_API_KEY)\r\n\r\n        # Define model details\r\n        self.models = {\r\n            \"gemma-7b-it\": { \"tokens\": 8192, \"developer\": \"Google\"},\r\n            \"llama3-70b-8192\": { \"tokens\": 8192, \"developer\": \"Meta\"},\r\n            \"llama3-8b-8192\": { \"tokens\": 8192, \"developer\": \"Meta\"},\r\n            \"mixtral-8x7b-32768\": { \"tokens\": 32768, \"developer\": \"Mistral\"},\r\n        }\r\n\r\n        # Select a model\r\n        self.max_tokens = self.models[self.model_name][\"tokens\"]\r\n\r\n\r\n    async def generate_stream(self, queries: list[str], context: list[str], conversation: dict = None):\r\n        \"\"\"\r\n        Generate a stream of response dictionaries based on a list of queries, a list of contexts, and includes conversational context. This function uses an asynchronous API to generate responses incrementally, suitable for streaming applications where responses are expected to be delivered in real-time as they are generated.\r\n\r\n        @parameter queries: list[str] - A list of user queries to which the generator should respond.\r\n        @parameter context: list[str] - Contextual information relevant to each query, which helps the model to generate more accurate and relevant responses.\r\n        @parameter conversation: dict - A dictionary representing the conversational history and context. This helps in maintaining the flow and relevance of the conversation.\r\n        \r\n        @returns: Iterator[dict] - An iterator that yields dictionaries representing parts of the generated response. Each dictionary includes a 'message' key with the generated text, and a 'finish_reason' key that indicates whether the generation has completed ('stop') or if it is still ongoing ('').\r\n        \"\"\"\r\n        if conversation is None:\r\n            conversation = []\r\n        messages = self.prepare_messages(queries, context, conversation)\r\n\r\n        try:\r\n            chat_completion = await self.client.chat.completions.create(\r\n                model=self.model_name,\r\n                messages=messages,\r\n                max_tokens=self.max_tokens,\r\n                temperature=0.000000001,\r\n                stop=None,\r\n                stream=True\r\n            )\r\n\r\n            async for chunk in chat_completion:\r\n                finish_reason = chunk.choices[0].finish_reason\r\n                if chunk.choices[0].delta.content:\r\n                    yield {\r\n                        \"message\": chunk.choices[0].delta.content,\r\n                        \"finish_reason\": \"\"\r\n                    }\r\n                else:\r\n                    yield {\r\n                        \"message\": \"\",\r\n                        \"finish_reason\": finish_reason,\r\n                    }\r\n\r\n        except Exception as e:\r\n            print(f\"An error occurred: {str(e)}\")\r\n            raise e\r\n\r\n    def prepare_messages(self, queries: list[str], context: list[str], conversation: list[dict]) -> dict[str, str]:\r\n        \"\"\"\r\n        Prepares a list of messages formatted for a Retrieval Augmented Generation chatbot system, including system instructions, previous conversation, and a new user query with context.\r\n\r\n        @parameter queries: A list of strings representing the user queries to be answered.\r\n        @parameter context: A list of strings representing the context information provided for the queries.\r\n        @parameter conversation: A list of previous conversation messages that include the role and content.\r\n\r\n        @returns A list of message dictionaries formatted for the chatbot. This includes an initial system message, the previous conversation messages, and the new user query encapsulated with the provided context.\r\n        \"\"\"\r\n        messages = [\r\n            {\r\n                \"role\": \"system\",\r\n                \"content\": \"You are a Retrieval Augmented Generation chatbot. Please answer user queries only their provided context. If the provided documentation does not provide enough information, say so. If the answer requires code examples encapsulate them with ```programming-language-name ```. Don't do pseudo-code.\",\r\n            }\r\n        ]\r\n\r\n        for message in conversation:\r\n            messages.append(message)\r\n\r\n        query = \" \".join(queries)\r\n        user_context = \" \".join(context)\r\n\r\n        messages.append(\r\n            {\r\n                \"role\": \"user\",\r\n                \"content\": f\"Please answer this query: '{query}' with this provided context: {user_context}\",\r\n            }\r\n        )\r\n\r\n        return messages\r\n```\r\n3. Modify \"manager.py\":\r\n```\r\nfrom goldenverba.components.generation.ClaudeGenerator import ClaudeGenerator\r\nfrom goldenverba.components.generation.GroqGenerator import GroqGenerator\r\n\r\nclass GeneratorManager:\r\n    def __init__(self):\r\n        self.generators: dict[str, Generator] = {\r\n            \"ClaudeGenerator\": ClaudeGenerator(),\r\n            \"GPT4Generator\": GPT4Generator(),\r\n            \"GPT3Generator\": GPT3Generator(),\r\n            \"CohereGenerator\": CohereGenerator(),\r\n            \"Llama2Generator\": Llama2Generator(),\r\n            \"GroqGenerator\": GroqGenerator(),     \r\n        }\r\n```\r\nwe added `from goldenverba.components.generation.GroqGenerator import GroqGenerator` and `\"GroqGenerator\": GroqGenerator(), `\r\n\r\n4. Modify \"verba_manager.py\" add:\r\n```\r\n        # Check Groq ENV KEY\r\n        try:\r\n            import groq\r\n\r\n            groq_key = os.environ.get(\"GROQ_API_KEY\", \"\")\r\n\r\n            if groq_key != \"\":\r\n                self.environment_variables[\"GROQ_API_KEY\"] = True\r\n                self.client = groq.Groq(api_key=groq_key)\r\n            else:\r\n                self.environment_variables[\"GROQ_API_KEY\"] = False\r\n                raise ValueError(\"GROQ_API_KEY environment variable is not set.\")\r\n\r\n        except Exception as e:\r\n            self.environment_variables[\"GROQ_API_KEY\"] = False\r\n            print(f\"Error initializing Groq API: {e}\")\r\n```\r\nsomewhere at 200+th line \r\n\r\nand\r\n\r\n```\r\n        try:\r\n            import groq\r\n\r\n            self.installed_libraries[\"groq\"] = True\r\n        except Exception:\r\n            self.installed_libraries[\"groq\"] = False\r\n```\r\nsomewhere at 300+th line\r\n\r\n5. Add this variables to your environment or .env file:\r\n```\r\n# GROQ\r\nGROQ_API_KEY=<you_groq_api_key>\r\n\r\nGROQ_MODEL=llama3-70b-8192 \r\n```\r\nGROQ_MODEL can be: \r\n```\r\ngemma-7b-it\r\nllama2-70b-4096\r\nllama3-70b-8192\r\nllama3-8b-8192\r\nmixtral-8x7b-32768\r\n```",
      "state": "closed",
      "author": "bakongi",
      "author_type": "User",
      "created_at": "2024-04-21T07:50:07Z",
      "updated_at": "2024-12-07T17:12:25Z",
      "closed_at": "2024-12-07T17:12:25Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/140/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/140",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/140",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:20.388172",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks! Feel free to create a PR",
          "created_at": "2024-04-22T05:50:19Z"
        },
        {
          "author": "symdec",
          "body": "Hi ! I want to contribute to Verba. Can I submit a PR for this ? Starting from instructions above ?",
          "created_at": "2024-08-03T13:34:31Z"
        },
        {
          "author": "thomashacker",
          "body": "I would recommend waiting for the v2 update, which will be released in a couple of weeks! ",
          "created_at": "2024-08-07T15:31:57Z"
        },
        {
          "author": "thomashacker",
          "body": "Hey @symdec , we just released v2 of Verba! Feel free to create a PR",
          "created_at": "2024-09-03T12:46:03Z"
        },
        {
          "author": "thomashacker",
          "body": "Thanks a lot for the `PR`! 🚀 ",
          "created_at": "2024-12-07T17:12:25Z"
        }
      ]
    },
    {
      "issue_number": 303,
      "title": "Azure OpenAI support in 2.0.0?",
      "body": "How do I get Azure OpenAI API to work in 2.0.0?",
      "state": "open",
      "author": "bw-Deejee",
      "author_type": "User",
      "created_at": "2024-10-15T12:49:03Z",
      "updated_at": "2024-12-07T17:07:28Z",
      "closed_at": null,
      "labels": [
        "Community PR"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/303/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/303",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/303",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:20.611212",
      "comments": [
        {
          "author": "bw-Deejee",
          "body": "I actually got Azure OpenAI it to work 🎉. Not the cleanest solution but here for whom it might be interesting:\r\n\r\n### 1. Create a new generator file in \"goldenverba > components > generation\", called `AzureOpenAIGenerator.py`, containing the following code (replace placeholders with your URL/key):\r\n",
          "created_at": "2024-10-15T17:26:12Z"
        },
        {
          "author": "thomashacker",
          "body": "Oh thanks a lot! Nice work\r\nWould you be interested in creating a PR and adding Azure functionality to Verba? 🚀 ",
          "created_at": "2024-12-07T14:05:02Z"
        }
      ]
    },
    {
      "issue_number": 306,
      "title": "Allow local Firecrawl",
      "body": "## Description\r\n\r\nFirecrawl can be self hosted like Ollama. It would be great, if one could use a local Firecrawl deployment.\r\n\r\n\r\n",
      "state": "open",
      "author": "gitwittidbit",
      "author_type": "User",
      "created_at": "2024-10-19T21:18:42Z",
      "updated_at": "2024-12-07T17:07:12Z",
      "closed_at": null,
      "labels": [
        "Community PR"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/306/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/306",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/306",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:20.807588",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey thank you for your issue! This sounds like a great community `PR` 🚀 ",
          "created_at": "2024-12-07T17:04:54Z"
        }
      ]
    },
    {
      "issue_number": 338,
      "title": "NEED TTS FEATURE AFTER GENERATING ANSWER",
      "body": "## Description\r\n\r\n<!-- A clear and concise description of what the new feature. -->\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
      "state": "open",
      "author": "SaiAkhil066",
      "author_type": "User",
      "created_at": "2024-12-05T08:52:43Z",
      "updated_at": "2024-12-07T17:06:52Z",
      "closed_at": null,
      "labels": [
        "Community PR"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/338/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/338",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/338",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:26.025433",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey thanks for the issue, are you referring to Text-To-Speech? 😄 \r\nIf yes, then this is a great opportunity for a community PR ❤️ ",
          "created_at": "2024-12-06T15:41:11Z"
        }
      ]
    },
    {
      "issue_number": 308,
      "title": "Verba won't start on any other port other than 8000",
      "body": "## Description\r\n\r\nCan't run Verba on any other port than 8000. Using the --port flag doesn't help. Page loads with only background color, no content.\r\n\r\n\r\n## Installation\r\n\r\n- [ ] pip install goldenverba\r\n- [x] pip install from source\r\n- [ ] Docker installation\r\n\r\n\r\n## Weaviate Deployment\r\n\r\n- [x] Local Deployment\r\n- [ ] Docker Deployment\r\n- [ ] Cloud Deployment\r\n\r\n\r\n## Steps to Reproduce\r\n\r\nTry running Verba on port 8001 using `verba start --port=8001`. Access localhost:8001 and page doesnt load.\r\n\r\n## Additional context\r\n\r\n-\r\n",
      "state": "closed",
      "author": "bw-Deejee",
      "author_type": "User",
      "created_at": "2024-10-24T10:19:45Z",
      "updated_at": "2024-12-07T17:04:15Z",
      "closed_at": "2024-12-07T17:04:15Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/308/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/308",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/308",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:26.216667",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey, thank you for your issue! It will be fixed in the upcoming `2.1.0` version 🚀 ",
          "created_at": "2024-12-07T17:04:12Z"
        }
      ]
    },
    {
      "issue_number": 312,
      "title": "How can I set the value of this Timeout?",
      "body": "## Description\r\n\r\n<!-- A clear and concise description of what the issue is. Please include any error messages and logs. If possible, also include your configuration. -->\r\n\r\n## Installation\r\n\r\n<!-- Please specify how you installed Verba. Please always make sure to install Verba in a clean python environment and have at least 3.10.0 installed -->\r\n\r\n- [x] pip install goldenverba\r\n- [ ] pip install from source\r\n- [ ] Docker installation\r\n\r\nIf you installed via pip, please specify the version:\r\n\r\n## Weaviate Deployment\r\n\r\n<!-- Please specify the Weaviate deployment you are using. -->\r\n\r\n- [x] Local Deployment\r\n- [ ] Docker Deployment\r\n- [ ] Cloud Deployment\r\n\r\n## Configuration\r\n\r\n<!-- If you can, please specify the what components you are using. -->\r\n\r\nReader:\r\nChunker:Token\r\nEmbedder:OPENAI-text_embedding-3-small\r\nRetriever:\r\nGenerator:\r\n\r\n## Steps to Reproduce\r\n\r\n<!-- If this is a bug, please provide detailed steps on how to reproduce the issue. If this is a feature, please describe what you want to be added or changed. -->\r\n\r\n## Additional context\r\nWhen I select to upload the parsed file,if the pdf is small, it can be uploaded normally. If the pdf is large, it returns \"Unexpected error: TimeoutError -\".How can I set the value of this Timeout?\r\n\r\nThe error message is as follows:\r\n```text\r\nℹ Removing abc.pdf from BatchManager\r\nℹ Found existing Client\r\nℹ STARTING | abc.pdf | Starting Import | 0\r\nℹ Loading abc.pdf (pdf)\r\nℹ LOADING | abc.pdf | Loaded abc.pdf | 5.96\r\nℹ CHUNKING | abc.pdf |  | 0\r\nℹ CHUNKING | abc.pdf | Split abc.pdf into 89 chunks | 0.02\r\nℹ EMBEDDING | abc.pdf |  | 0\r\nℹ Vectorizing 89 chunks in 1 batches\r\n✘ Unexpected error: TimeoutError -\r\nℹ ERROR | abc.pdf | Import for abc.pdf failed: Batch vectorization\r\nfailed: Vectorization failed for some batches:  | 31.82\r\n✘ No documents imported 0 of 1 succesful tasks\r\nℹ ERROR | abc.pdf | Import for abc.pdf failed: Import for abc.pdf\r\nfailed: Batch vectorization failed: Vectorization failed for some batches:  |\r\n0\r\n```\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
      "state": "open",
      "author": "ccutyear",
      "author_type": "User",
      "created_at": "2024-10-31T03:29:51Z",
      "updated_at": "2024-12-07T16:59:53Z",
      "closed_at": null,
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/312/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/312",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/312",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:26.430427",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey, thanks for the issue! Are you receiving the same errors when using other embedding models? ",
          "created_at": "2024-12-07T16:59:53Z"
        }
      ]
    },
    {
      "issue_number": 326,
      "title": "Issue when PVC is mounted to weaviate container",
      "body": "## Description\r\n\r\n<!-- A clear and concise description of what the issue is. Please include any error messages and logs. If possible, also include your configuration. -->\r\n\r\n## Installation\r\n\r\n- Docker installation on kubernetes pod\r\n\r\n## Weaviate Deployment\r\n\r\n- Docker Deployment on kubernetes pod\r\n\r\n## Details\r\n\r\nHave installed Verba and Weaviate containers on a single pod in kubernetes. When I set PERSISTENCE_DATA_PATH to '/var/lib/weaviate' and mount a pvc on that path, Verba is unable to connect to Weaviate. (I am selecting Docker instance to connect to from Verba UI).\r\nWhen I don't mount a pvc to the weaviate container, everything is working fine. But when I am mounting a PVC, I am getting below error:\r\n**Failed to connect to Weaviate object existence! Unexpected status code: 500, with response body: None.**\r\n\r\nWhen I checked the weaviate container logs, I can find below,\r\n\r\n{\"build_git_commit\":\"64457c2\",\"build_go_version\":\"go1.22.9\",\"build_image_tag\":\"v1.27.2\",\"build_wv_version\":\"1.27.2\",\"error\":\"init shard \\\"verba_config_8tB2n31NCSSP\\\": init shard \\\"verba_config_8tB2n31NCSSP\\\": init prop \\\"config\\\": value index: init disk segments: init segment segment-1731316996864028994.db**: unexpected error loading segment** \\\"/var/lib/weaviate/verba_config/8tB2n31NCSSP/lsm/property_config/segment-1731316996864028994.db\\\": runtime error: slice bounds out of range [:419430404] with capacity 12748\",\"level\":\"error\",\"msg\":\"Unable to load shard 8tB2n31NCSSP: init shard \\\"verba_config_8tB2n31NCSSP\\\": init shard \\\"verba_config_8tB2n31NCSSP\\\": init prop \\\"config\\\": value index: init disk segments: init segment segment-1731316996864028994.db: unexpected error loading segment \\\"/var/lib/weaviate/verba_config/8tB2n31NCSSP/lsm/property_config/segment-1731316996864028994.db\\\": **runtime error: slice bounds out of range** [:419430404] with capacity 12748\",\"time\":\"2024-11-12T09:34:21Z\"}\r\n{\"action\":\"requests_total\",\"api\":\"rest\",\"build_git_commit\":\"64457c2\",\"build_go_version\":\"go1.22.9\",\"build_image_tag\":\"v1.27.2\",\"build_wv_version\":\"1.27.2\",\"class_name\":\"VERBA_CONFIG\",\"error\":\"msg:repo.exists code:500 err:get/init local shard \\\"8tB2n31NCSSP\\\", no shutdown: LazyLoadShard::preventShutdown: Unable\r\nto load shard 8tB2n31NCSSP: init shard \\\"verba_config_8tB2n31NCSSP\\\": init shard \\\"verba_config_8tB2n31NCSSP\\\": init prop \\\"config\\\": value index: init disk segments: init segment segment-1731316996864028994.db: unexpected error loading segment \\\"/var/lib/weaviate/verba_config/8tB2n31NCSSP/lsm/property_config/segment-1731316996864028994.db\\\": runtime error: slice bounds out of range [:419430404] with capacity 12748\",\"level\":\"error\",\"msg\":\"unexpected error\",\"query_type\":\"objects\",\"time\":\"2024-11-12T09:34:21Z\"}",
      "state": "open",
      "author": "shrijit-narkar",
      "author_type": "User",
      "created_at": "2024-11-12T12:27:34Z",
      "updated_at": "2024-12-07T16:44:13Z",
      "closed_at": null,
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/326/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/326",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/326",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:26.611878",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey, thanks for the issue! Can you share a bit more info about your current setup? Are you deploying the Weaviate instance separately through docker or are you deploying the whole verba application with a weaviate instance inside one container?",
          "created_at": "2024-12-07T16:44:05Z"
        }
      ]
    },
    {
      "issue_number": 317,
      "title": "Verba - Pip Installation not working at all on Ubuntu 24.04",
      "body": "## Description\r\n\r\nNo way to get Verba working on even a brand new VM Ubuntu 24.04.\r\n\r\n## Installation\r\n\r\n- [x] pip install goldenverba\r\n\r\nIf you installed via pip, please specify the version:\r\n\r\nLastest Python version on Ubuntu 24.04\r\n\r\n## Weaviate Deployment\r\n\r\n<!-- Please specify the Weaviate deployment you are using. -->\r\n\r\n- [x] Local Deployment\r\n\r\n## Configuration\r\n\r\nI do not have, once accessing the Verba portal, any \"RAG\", \"Add Documents\", etc. tabs.\r\n\r\n## Steps to Reproduce\r\n\r\nRun a brand new VM based on Ubuntu 24.04 and try creating a simple python venv, then run the pip install goldenverba, set up the .env with Ollama and try to open the Verba frontend on port 8000. Once selected Local Deployment, no RAG or Add Documents tabs. No settings available.\r\n\r\n## Additional context\r\n\r\nDuring the startup I get the following:\r\n\r\n✘ Document Count retrieval failed: Query call with protocol GQL\r\nAggregate failed with message Error in GraphQL response: [   {     \"locations\":\r\n[       {         \"column\": 12,         \"line\": 1       }     ],     \"message\":\r\n\"Cannot query field \\\"VERBA_Embedding_gemma2_9b\\\" on type\r\n\\\"AggregateObjectsObj\\\".\",     \"path\": null   } ], for the following query:\r\n{Aggregate{VERBA_Embedding_gemma2_9b(groupBy: [\"doc_uuid\"]){meta{count}\r\ngroupedBy { path value } }}}.\r\n\r\nAdditional info are:\r\n\r\n- Both the host and the VM can ping each other.\r\n- After the creation of the virtualenv in python there's a missing step in the docs, as I had to activate it before running the pip command.",
      "state": "open",
      "author": "Flagelmann",
      "author_type": "User",
      "created_at": "2024-11-05T12:28:20Z",
      "updated_at": "2024-12-07T15:00:50Z",
      "closed_at": null,
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 6,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/317/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/317",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/317",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:26.835530",
      "comments": [
        {
          "author": "Flagelmann",
          "body": "I tried also with:\r\n\r\ngit clone https://github.com/weaviate/Verba\r\n\r\npip install -e .\r\n\r\nNo luck, always the same output (and it seems also connected to the Ollama server I'm running on host side).\r\n\r\nAlways in \"reconnecting\", but it actually pulled correctly the model I've installed on host side an",
          "created_at": "2024-11-05T13:07:22Z"
        },
        {
          "author": "whiskeytangofoxy",
          "body": "Exact same issue here, but on Ubuntu 22.04. Have tried docker and built from source deployments, as well as dockerized Ollama and local Ollama set-ups. Everything seems to work correctly (e.g., Verba sees and connects to Ollama models) but \"Reconnecting\" button never goes away. Below are some logs f",
          "created_at": "2024-11-27T17:58:22Z"
        },
        {
          "author": "whiskeytangofoxy",
          "body": "After thorough testing of further deployments using different weaviate set-ups including local, docker, custom (via a docker endpoint), and WCS configurations, nothing has changed. Signs seem to point to this being either a websocket issue in server/api.py or frontend issue in app/util.ts.",
          "created_at": "2024-12-02T22:04:14Z"
        },
        {
          "author": "thomashacker",
          "body": "Hey, sorry for the late reply! Thanks for the issue, I'll look into this",
          "created_at": "2024-12-06T15:45:20Z"
        },
        {
          "author": "thomashacker",
          "body": "@whiskeytangofoxy I think you're right, if the `reconnecting` button is consistently appearing the problem really might be with the `websockets`. If the error still persists and if you have time, could you share the frontend developer console, there might be some further indications about the `webso",
          "created_at": "2024-12-07T12:13:18Z"
        }
      ]
    },
    {
      "issue_number": 21,
      "title": "Suggesting: A demo usage on Google Colab.",
      "body": "Please create a Google Colab notebook to demonstrate Verba's embedding and retrieval functions!",
      "state": "closed",
      "author": "mikebilly",
      "author_type": "User",
      "created_at": "2023-09-27T07:19:56Z",
      "updated_at": "2024-12-07T14:05:30Z",
      "closed_at": "2024-12-07T14:05:30Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/21/reactions",
        "total_count": 3,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 2,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/21",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/21",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:28.879262",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Great idea! We'll look into that, thanks",
          "created_at": "2023-09-27T11:04:06Z"
        },
        {
          "author": "mikebilly",
          "body": "please make it happen soon!",
          "created_at": "2023-10-03T07:35:40Z"
        },
        {
          "author": "duob-ai",
          "body": "Any news on this?",
          "created_at": "2023-11-22T22:33:43Z"
        },
        {
          "author": "thomashacker",
          "body": "We do have a small Verba notebook (https://github.com/thomashacker/verba_notebook), but we haven't worked on a Google Collab just yet!",
          "created_at": "2023-11-29T10:11:13Z"
        },
        {
          "author": "thomashacker",
          "body": "We're scoping out the Google Collab for now, sorry! ",
          "created_at": "2024-12-07T14:05:30Z"
        }
      ]
    },
    {
      "issue_number": 318,
      "title": "Does verba have a good understanding of structured json files, which often seem to fail to upload",
      "body": "\r\n![屏幕截图 2024-11-06 105901](https://github.com/user-attachments/assets/8804c882-d880-46e3-ad27-08b4abf12e9b)\r\nHello, after uploading files, I used the Llama3 dialogue supported by local ollama. I found that verba can emdedding PDF files better, but it always fails to upload structured json files, and the answer to the question does not seem to capture the key point, may I ask what format file is more suitable? Can it be retrieved efficiently for structured json?\r\n\r\n",
      "state": "open",
      "author": "mjzhen",
      "author_type": "User",
      "created_at": "2024-11-06T03:00:41Z",
      "updated_at": "2024-12-07T14:00:32Z",
      "closed_at": null,
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/318/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/318",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/318",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:29.121033",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Can you share more information about how your `JSON` looks like? The console output looks a bit weird",
          "created_at": "2024-12-07T14:00:29Z"
        }
      ]
    },
    {
      "issue_number": 320,
      "title": "Does Verba have a road map? Are there any plans to support Agentic RAG?",
      "body": "## Description\r\n\r\n\r\nDoes Verba have a road map?\r\nAre there any plans to support Agentic RAG?\r\n\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
      "state": "closed",
      "author": "DavidSche",
      "author_type": "User",
      "created_at": "2024-11-07T01:48:53Z",
      "updated_at": "2024-12-07T13:57:54Z",
      "closed_at": "2024-12-07T13:57:53Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/320/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/320",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/320",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:29.385905",
      "comments": [
        {
          "author": "thomashacker",
          "body": "We do have some sort of roadmap on the Readme in the beginning section 😄 There are no plans to add agentic RAG as of now. I'll add it to the README 🚀 ",
          "created_at": "2024-12-07T13:57:53Z"
        }
      ]
    },
    {
      "issue_number": 342,
      "title": "Setup Automated Testing",
      "body": "## Description\r\n\r\n<!-- A clear and concise description of what the new feature. -->\r\n\r\nImplement full automated testing framework to test all Verba functionality (Reader, Embedder, Generator, etc.), FastAPI Server, and Frontend\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
      "state": "open",
      "author": "thomashacker",
      "author_type": "User",
      "created_at": "2024-12-07T13:55:57Z",
      "updated_at": "2024-12-07T13:55:58Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/342/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/342",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/342",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:29.602029",
      "comments": []
    },
    {
      "issue_number": 331,
      "title": "User management",
      "body": "## Description\r\n\r\nDo we have any way to manage users?\r\n\r\n## Additional context\r\n\r\nI have multiple users using Verba. Can I keep a few of them as an admin and others just as users? Do we have any user management feature? I can see that weaviate does provide this functionality but unsure how to use it.",
      "state": "closed",
      "author": "shrijit-narkar",
      "author_type": "User",
      "created_at": "2024-11-20T08:35:08Z",
      "updated_at": "2024-12-07T13:46:25Z",
      "closed_at": "2024-12-07T13:46:24Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/331/reactions",
        "total_count": 2,
        "+1": 2,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/331",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/331",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:29.602048",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Great idea! However, Verba is intended and optimized for single local usage only at the moment. There are no plans in the near future to add this, unfortunately 😢 ",
          "created_at": "2024-12-07T13:46:25Z"
        }
      ]
    },
    {
      "issue_number": 341,
      "title": "Query call with protocol GRPC search failed while trying to connect to selfhosted Weaviate Database",
      "body": "## Description\r\n\r\nWe are trying to connect Verba to our self-hosted Weaviate database but are running into an issue. While Verba can locate the self-hosted Weaviate instance, it does not find any documents. It also seems like Verba is unable to properly import the Weaviate database. We can see several collections, including our largest one, \"General,\" with over 20k objects. However, when we try to chat, we receive the following error:\r\n\r\n`Query failed: Query call with protocol GRPC search failed with message <AioRpcError of RPC that terminated with:\r\n\tstatus = StatusCode.UNKNOWN\r\n\tdetails = \"object search at index verba_embedding_text_embedding_3_large: No properties provided, and no indexed properties found in class\"\r\n\tdebug_error_string = \"UNKNOWN:Error received from peer  {created_time:\"2024-12-05T15:36:09.559780182+00:00\", grpc_status:2, grpc_message:\"object search at index verba_embedding_text_embedding_3_large: No properties provided, and no indexed properties found in class\"}\">.`\r\n\r\nWe could not find any relevant information in the documentation or issues.\r\n\r\nHowever importing PDF documents is easily possible.\r\n\r\nWe would greatly appreciate your help with this. We find your project incredibly exciting and are working in the agricultural industry.\r\n\r\n## Installation\r\n\r\nWe installed Verba via Docker locally on dev machines and on the same instance were our Weaviate database is hosted.\r\n\r\n- [ ] pip install goldenverba\r\n- [ ] pip install from source\r\n- [x] Docker installation\r\n\r\nIf you installed via pip, please specify the version: 2.0.0\r\n\r\n## Weaviate Deployment\r\n\r\nUsing Weaviate version: 1.27.0-rc.0\r\n\r\n- [ ] Local Deployment\r\n- [x] Docker Deployment\r\n- [ ] Cloud Deployment\r\n\r\n## Configuration\r\n\r\nReader: None\r\nChunker: None\r\nEmbedder: OpenAI text-embedding-3-large\r\nRetriever: Advanced (In the Verba chat config) or unclear\r\nGenerator: OpenAI gpt-4o\r\n\r\n## Steps to Reproduce\r\n\r\nConnecting to a Docker composed Weaviate Database instance via self-hosted or custom option.\r\n\r\n## Additional context\r\n\r\nWe know that \"steps to reproduce\" might not be entirely feasible. However, we are happy to provide as much insight as we can and assist with any follow-up questions.\r\n",
      "state": "closed",
      "author": "K4l4x",
      "author_type": "User",
      "created_at": "2024-12-06T08:24:44Z",
      "updated_at": "2024-12-07T11:41:47Z",
      "closed_at": "2024-12-07T11:41:46Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/341/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/341",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/341",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:29.778749",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey thanks for the issue. \r\n\r\nUnfortunately, Verba needs the data to be in a specific schema, which is only possible by importing data through the frontend. This means that Verba is not compatible with pre-existing data within a cluster, and there are no plans yet to implement it as it would require",
          "created_at": "2024-12-06T15:35:13Z"
        },
        {
          "author": "K4l4x",
          "body": "Thank you so much for your quick response!\r\n\r\nHow unfortunate! Nevertheless, we find Weaviate and Verba highly interesting!\r\n\r\nWe are currently working on our own development, which is similar to Verba, aiming to integrate it with our existing Weaviate vector store. We can imagine contributing to th",
          "created_at": "2024-12-06T16:29:24Z"
        },
        {
          "author": "thomashacker",
          "body": "I'll let you know once we released the first version, would love to collaborate on this",
          "created_at": "2024-12-07T11:41:46Z"
        }
      ]
    },
    {
      "issue_number": 269,
      "title": "Document search",
      "body": "## Description\r\nA document search functionality would be a great feature for Verba.\r\nThe goal is to find relevant documents based on a text input.\r\n\r\n## Additional context\r\nhttps://qatalog.com/product/\r\nhttps://dash.dropbox.com/features/universal-search\r\n",
      "state": "closed",
      "author": "danielhangan",
      "author_type": "User",
      "created_at": "2024-09-04T11:04:46Z",
      "updated_at": "2024-12-07T11:40:35Z",
      "closed_at": "2024-09-13T02:55:58Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/269/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/269",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/269",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:30.007692",
      "comments": [
        {
          "author": "thomashacker",
          "body": "The Document Explorer should have a search bar to find documents via Bm25 search, you can find it in the Documents tab 😄 ",
          "created_at": "2024-09-13T02:55:58Z"
        },
        {
          "author": "SaiAkhil066",
          "body": "I cannot see the document explorer button over here, can you help me?",
          "created_at": "2024-12-05T09:03:24Z"
        },
        {
          "author": "thomashacker",
          "body": "Hey @SaiAkhil066 , what are you seeing on the UI?",
          "created_at": "2024-12-07T11:40:33Z"
        }
      ]
    },
    {
      "issue_number": 339,
      "title": "I have a problem with CORS when I use Verba under my domain",
      "body": "I installed Verba locally and expose it using cloudflare tunnel it works locally but when I use it under domain it does not connect to the backend.\r\nHow can i use Verba under domain.",
      "state": "open",
      "author": "mohamedosama113",
      "author_type": "User",
      "created_at": "2024-12-05T11:12:55Z",
      "updated_at": "2024-12-06T15:40:30Z",
      "closed_at": null,
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/339/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/339",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/339",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:30.226030",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey thanks for the Issue!\r\n\r\nCan you share more information about your current setup? How did you deploy Verba and what exact issue are you experiencing? ",
          "created_at": "2024-12-06T15:40:27Z"
        }
      ]
    },
    {
      "issue_number": 340,
      "title": "not all cohere models are listed",
      "body": "I have a paid cohere API key but it's only 4 models shown on the settings I need reranking models to be shown.\r\nWhat should I do?",
      "state": "open",
      "author": "mohamedosama113",
      "author_type": "User",
      "created_at": "2024-12-05T11:34:09Z",
      "updated_at": "2024-12-06T15:38:13Z",
      "closed_at": null,
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/340/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/340",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/340",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:30.461728",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey, thanks for the issue!\r\n\r\nVerba isn't supporting reranking yet, was you intention to use re-ranking after the retrieval? ",
          "created_at": "2024-12-06T15:38:10Z"
        }
      ]
    },
    {
      "issue_number": 325,
      "title": "Pi ",
      "body": "## Description\r\n\r\n<!-- A clear and concise description of what the new feature. -->\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
      "state": "closed",
      "author": "trongnghia172002",
      "author_type": "User",
      "created_at": "2024-11-11T04:09:04Z",
      "updated_at": "2024-11-19T11:40:54Z",
      "closed_at": "2024-11-19T11:40:54Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/325/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/325",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/325",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:30.678867",
      "comments": []
    },
    {
      "issue_number": 288,
      "title": "Firecrawl doesn´t work, have to check api key, but key is correct",
      "body": "## Description\r\n\r\nSigned up for firecrawl. Started off with a free plan to try it out. Got an api key.\r\nIn docker compose I added:\r\n\r\n      - FIRECRAWL_API_KEY=&FIRECRAWL_API_KEY\r\n\r\nIn .env file\r\n\r\n      - FIRECRAWL_API_KEY=the actualkey from the firecrawl website\r\n\r\n\r\nWhen I try to crawl a site I get an error straight away\r\n\r\n`Import for website failed: Reader Firecrawl failed with: Firecrawl was not able to load any documents, please check your API Key and settings`\r\n\r\nI should be able to do this with the free 500 credits. It's a site with only a 100 pages or so.\r\n\r\nThere is no way of setting the key via GUI for firecrawl right? Like you can for OpenAI and Cohere.\r\n\r\nbtw import from pdf in combination with OpenAI api key does work.\r\n\r\n## Installation\r\n\r\n- [ ] pip install goldenverba\r\n- [ ] pip install from source\r\n- [X] Docker installation\r\n\r\n## Weaviate Deployment\r\n\r\n<!-- Please specify the Weaviate deployment you are using. -->\r\n\r\n- [ ] Local Deployment\r\n- [X] Docker Deployment\r\n- [ ] Cloud Deployment\r\n\r\n## Configuration\r\n\r\nReader: Firecrawl\r\nChunker: Sentence\r\nEmbedder:  OpenAI (this key do work!)\r\nRetriever: Advanced\r\nGenerator: OpenAI\r\n\r\n## Steps to Reproduce\r\nWhenever I click import selected I get an error straight away. But the key is correct.\r\n\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
      "state": "closed",
      "author": "Japhys",
      "author_type": "User",
      "created_at": "2024-09-22T16:15:35Z",
      "updated_at": "2024-10-05T13:23:01Z",
      "closed_at": "2024-10-05T13:23:01Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/288/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/288",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/288",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:30.678890",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! I'll try to reproduce it\r\nIf you set environment variables through the `.env` and Verba detects them on startup, they won't be shown to the UI, but I might change this so that you can always edit those.\r\n\r\nI'll let you know once we have an update on this 🚀 ",
          "created_at": "2024-09-23T10:25:00Z"
        },
        {
          "author": "Japhys",
          "body": "Made a typo! Embarrassing :(\r\n\r\n  - FIRECRAWL_API_KEY=&FIRECRAWL_API_KEY\r\n\r\n$",
          "created_at": "2024-10-05T13:22:34Z"
        }
      ]
    },
    {
      "issue_number": 229,
      "title": "Chunk Mismatch Error on Coolify",
      "body": "Hi\r\nI installed Verba on Coolify by Docker Compose.\r\nBut it didn't run so I changed port numbers to 9000 (Verba), and 9090 (Weaviate).\r\nNow both of them can start but it doesn't work at all.\r\nBut while importing a common text pdf file, the error of 'Chunk mismatch for' occurs and gets failed.\r\nWho can help me for this issue?\r\n\r\n![image](https://github.com/weaviate/Verba/assets/114929153/17c166d9-03ca-4c22-a410-509386bcdded)",
      "state": "closed",
      "author": "DannyBoyTech",
      "author_type": "User",
      "created_at": "2024-06-27T14:31:45Z",
      "updated_at": "2024-09-27T19:08:03Z",
      "closed_at": "2024-09-03T13:12:25Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/229/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 1,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/229",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/229",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:30.890685",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey thanks for the issue, is this also happening for normal .txt files? Or is this specific to .pdf?",
          "created_at": "2024-06-28T13:38:42Z"
        },
        {
          "author": "DannyBoyTech",
          "body": "Thanks for your care.\r\nYes, it is common for .txt and .pdf.\r\nIs there any other way to install on Coolify?",
          "created_at": "2024-06-28T14:18:20Z"
        },
        {
          "author": "thomashacker",
          "body": "Thanks for the info. I'm not sure if this issue is related to Coolify itself. I wonder if it's related to your Cohere Key? \r\nCan you verify that your selected API key works and has enough credits? 😄 ",
          "created_at": "2024-06-30T20:39:57Z"
        },
        {
          "author": "coderjunc",
          "body": "> Thanks for your care. Yes, it is common for .txt and .pdf. Is there any other way to install on Coolify?\r\n\r\nWhere have you disappeared to? Are you even alive???! Why do you ignore every single text and email I send? How could you just leave in the middle of everything, leaving me to suffer like th",
          "created_at": "2024-09-27T19:06:40Z"
        },
        {
          "author": "coderjunc",
          "body": "> Hi I installed Verba on Coolify by Docker Compose. But it didn't run so I changed port numbers to 9000 (Verba), and 9090 (Weaviate). Now both of them can start but it doesn't work at all. But while importing a common text pdf file, the error of 'Chunk mismatch for' occurs and gets failed. Who can ",
          "created_at": "2024-09-27T19:08:02Z"
        }
      ]
    },
    {
      "issue_number": 297,
      "title": "How to increase the Weaviate disk limit",
      "body": "\r\nHow to increase the Weaviate disk limit, even though the usage is 90%, my disk still has 1TB of free space, and there are no more files to clean up.\r\n\r\n\r\n{\"action\":\"read_disk_use\",\"level\":\"warning\",\"msg\":\"disk usage currently at 89.52%, threshold set to 80.00%\",\"path\":\"/var/lib/weaviate\",\"time\":\"2024-09-26T04:52:31Z\"}\r\n\r\n[2024-09-26 03:16:43,377: INFO/MainProcess] Start process document: ce79ecce-445b-4835-9052-720c7491dc5b\r\n[2024-09-26 03:16:47,939: WARNING/MainProcess] {'error': [{'message': 'store is read-only'}]}\r\n[2024-09-26 03:16:47,993: INFO/MainProcess] Processed dataset: 896b6e41-8c92-4090-96cf-50bd643e1c7c latency: 4.618616024963558\r\n[2024-09-26 03:16:48,008: INFO/MainProcess] Task tasks.document_indexing_task.document_indexing_task[9423068a-d1c4-48a9-9730-d1519d697d6d] succeeded in 4.634086176753044s: None\r\n",
      "state": "closed",
      "author": "PolarPeak",
      "author_type": "User",
      "created_at": "2024-09-27T02:37:10Z",
      "updated_at": "2024-09-27T02:37:50Z",
      "closed_at": "2024-09-27T02:37:50Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/297/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/297",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/297",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:31.117437",
      "comments": []
    },
    {
      "issue_number": 289,
      "title": "Add new Deployment Option: Custom",
      "body": "## Description\r\n\r\n<!-- A clear and concise description of what the new feature. -->\r\n\r\nAdd a new deployment option to Verba's Startpage, that allows to use the `connect_to_custom` function of the Weaviate Client with custom URL and custom PORT settings.\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n\r\nRelated issues: \r\n\r\n- https://github.com/weaviate/Verba/issues/282\r\n- https://github.com/weaviate/Verba/issues/279\r\n",
      "state": "closed",
      "author": "thomashacker",
      "author_type": "User",
      "created_at": "2024-09-23T10:28:37Z",
      "updated_at": "2024-09-23T17:24:10Z",
      "closed_at": "2024-09-23T17:24:10Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/289/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/289",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/289",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:31.117456",
      "comments": []
    },
    {
      "issue_number": 132,
      "title": "Add support to load audio data",
      "body": "Feature request: Support to load audio & video files into documents would be cool 🤗 . Similar to the LangChain Audio transcript loader integration: https://python.langchain.com/docs/integrations/document_loaders/assemblyai/",
      "state": "closed",
      "author": "patrickloeber",
      "author_type": "User",
      "created_at": "2024-04-11T13:46:19Z",
      "updated_at": "2024-09-16T08:40:05Z",
      "closed_at": "2024-09-16T08:40:05Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/132/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 1,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/132",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/132",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:31.117465",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Love the idea! 🚀 I'll definitely put it on the feature list",
          "created_at": "2024-04-11T20:13:03Z"
        },
        {
          "author": "thomashacker",
          "body": "DONE 🥳 ",
          "created_at": "2024-09-16T08:40:05Z"
        }
      ]
    },
    {
      "issue_number": 232,
      "title": "Unable to Deploy on Coolify | Chunk Mismatch Error",
      "body": "![image](https://github.com/weaviate/Verba/assets/170351869/26bf4405-54bf-41c8-bc56-09dd5cd5b827)\r\n![image](https://github.com/weaviate/Verba/assets/170351869/2640be38-2784-4af8-924e-7656c0abc13b)\r\n\r\nEven the unstructured API doesn't work, unable to import any file.",
      "state": "closed",
      "author": "coderjunc",
      "author_type": "User",
      "created_at": "2024-06-30T11:12:18Z",
      "updated_at": "2024-09-11T17:12:39Z",
      "closed_at": "2024-09-11T17:12:38Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/232/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/232",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/232",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:31.373806",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue, seems like there is an issue with Coolify and Verba. https://github.com/weaviate/Verba/issues/229\r\nWe'll look into this 🚀 ",
          "created_at": "2024-06-30T20:43:34Z"
        },
        {
          "author": "thomashacker",
          "body": "We just released the new v2 version, could you try again on Coolify?",
          "created_at": "2024-09-03T13:12:55Z"
        }
      ]
    },
    {
      "issue_number": 251,
      "title": "Docker installation command on Windows",
      "body": "## Description\r\nuse this command \r\n\"docker compose --env-file goldenverba/.env up -d --build\" instead of \r\n\"docker compose --env-file .env up -d\" while installing using docker to get the updated version of verba on your docker.\r\n\r\nIt will be great if you update the documentation.\r\n\r\n\r\n\r\n\r\n## Is this a bug or a feature?\r\n- [ ] Bug\r\n- [ ] Feature\r\n\r\n## Steps to Reproduce\r\n<!-- If this is a bug, please provide detailed steps on how to reproduce the issue. If this is a feature, please describe what you want to be added or changed. -->\r\n\r\n## Additional context\r\n<!-- Add any other context about the problem here. -->\r\n",
      "state": "closed",
      "author": "rickystanley76",
      "author_type": "User",
      "created_at": "2024-07-31T08:43:21Z",
      "updated_at": "2024-09-03T13:14:08Z",
      "closed_at": "2024-09-03T13:14:08Z",
      "labels": [
        "documentation"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/251/reactions",
        "total_count": 2,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 2,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/251",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/251",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:31.564370",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Good point! We'll add it to the docs",
          "created_at": "2024-08-01T06:14:41Z"
        },
        {
          "author": "rugveddarwhekar",
          "body": "I have created a Pull Request to implement the suggested update. You can find the PR at the following link: https://github.com/weaviate/Verba/pull/255.\r\n\r\nPlease review the PR, and if you find it beneficial, merge it into the main branch.\r\n\r\nThank you for your time and consideration.",
          "created_at": "2024-08-13T02:35:29Z"
        },
        {
          "author": "thomashacker",
          "body": "Added it to the docs, thanks a lot!",
          "created_at": "2024-09-03T13:14:08Z"
        }
      ]
    },
    {
      "issue_number": 246,
      "title": "Windows is not supported with EmbeddedDB. plz give solution for it because its not working even after WCS implementation ",
      "body": "I'm encountering an error when trying to run Weaviate with the EmbeddedDB option on a Windows system. The error message indicates that Windows is not currently supported for this functionality.\r\ni have created a environment\r\ninstalled all the requirements\r\nthen setup a llama 3 model\r\nafter that when i am starting the verba, i am facing the issue of embeddingDB,\r\n\r\nINFO: Will watch for changes in these directories: ['D:\\projects\\Verba Project\\Verba']\r\nINFO: Uvicorn running on http://localhost:8000/ (Press CTRL+C to quit)\r\nINFO: Started reloader process [12028] using WatchFiles\r\nlora\r\nbarwa\r\nℹ Setting up client\r\nℹ Using Weaviate Embedded\r\nProcess SpawnProcess-1:\r\nTraceback (most recent call last):\r\nFile \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\multiprocessing\\process.py\", line 314, in _bootstrap\r\nself.run()\r\nFile \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\multiprocessing\\process.py\", line 108, in run\r\nself._target(*self._args, **self._kwargs)\r\nFile \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\site-packages\\uvicorn_subprocess.py\", line 78, in subprocess_started\r\ntarget(sockets=sockets)\r\nFile \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\site-packages\\uvicorn\\server.py\", line 65, in run\r\nreturn asyncio.run(self.serve(sockets=sockets))\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\asyncio\\runners.py\", line 194, in run\r\nreturn runner.run(main)\r\n^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\asyncio\\runners.py\", line 118, in run\r\nreturn self._loop.run_until_complete(task)\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\asyncio\\base_events.py\", line 687, in run_until_complete\r\nreturn future.result()\r\n^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\site-packages\\uvicorn\\server.py\", line 69, in serve\r\nawait self._serve(sockets)\r\nFile \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\site-packages\\uvicorn\\server.py\", line 76, in serve\r\nconfig.load()\r\nFile \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\site-packages\\uvicorn\\config.py\", line 433, in load\r\nself.loaded_app = import_from_string(self.app)\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\site-packages\\uvicorn\\importer.py\", line 19, in import_from_string\r\nmodule = importlib.import_module(module_str)\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\importlib_init.py\", line 90, in import_module\r\nreturn _bootstrap._gcd_import(name[level:], package, level)\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"\", line 1387, in _gcd_import\r\nFile \"\", line 1360, in _find_and_load\r\nFile \"\", line 1331, in _find_and_load_unlocked\r\nFile \"\", line 935, in _load_unlocked\r\nFile \"\", line 995, in exec_module\r\nFile \"\", line 488, in _call_with_frames_removed\r\nFile \"d:\\projects\\verba project\\verba\\goldenverba\\server\\api.py\", line 37, in\r\nmanager = verba_manager.VerbaManager()\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"d:\\projects\\verba project\\verba\\goldenverba\\verba_manager.py\", line 45, in init\r\nself.client = self.setup_client()\r\n^^^^^^^^^^^^^^^^^^^\r\nFile \"d:\\projects\\verba project\\verba\\goldenverba\\verba_manager.py\", line 209, in setup_client\r\nclient = weaviate.Client(\r\n^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\site-packages\\weaviate\\client.py\", line 147, in init\r\nurl, embedded_db = self.__parse_url_and_embedded_db(url, embedded_options)\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\site-packages\\weaviate\\client.py\", line 287, in __parse_url_and_embedded_db\r\nembedded_db = EmbeddedDB(options=embedded_options)\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\site-packages\\weaviate\\embedded.py\", line 52, in init\r\nself.check_supported_platform()\r\nFile \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\site-packages\\weaviate\\embedded.py\", line 175, in check_supported_platform\r\nraise WeaviateStartUpError(\r\nweaviate.exceptions.WeaviateStartUpError: Windows is not supported with EmbeddedDB. Please upvote the feature request if you want this: https://github.com/weaviate/weaviate-python-client/issues/239",
      "state": "closed",
      "author": "ahsan0444",
      "author_type": "User",
      "created_at": "2024-07-22T03:24:52Z",
      "updated_at": "2024-09-03T13:13:55Z",
      "closed_at": "2024-09-03T13:13:55Z",
      "labels": [
        "installation"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/246/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/246",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/246",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:31.771963",
      "comments": [
        {
          "author": "thomashacker",
          "body": "If you created a cluster in Weaviate Cloud, you need to set both `WEAVIATE_URL_VERBA` and `WEAVIATE_API_KEY_VERBA` in your `.env` file. Another Workaround is `Docker` or `WSL`",
          "created_at": "2024-07-22T15:43:10Z"
        },
        {
          "author": "bziomek",
          "body": "It looks like you're not configuring Verba to find your cloud cluster--do as thomashacker says.\r\n\r\nThis really should be documented in the main Git page though, tbh. Also odd that the example .env is not in the package and is oddly uncommented by default.",
          "created_at": "2024-07-26T20:43:43Z"
        }
      ]
    },
    {
      "issue_number": 244,
      "title": "InputText’ object has no attribute ‘model_dump’",
      "body": "## Description\r\n<!-- A clear and concise description of what the issue is. Please include if this is a bug or a feature request. -->\r\n\r\n## Is this a bug or a feature?\r\n- [ x] Bug\r\n- [ ] Feature\r\n\r\n## Steps to Reproduce\r\n<!-- If this is a bug, please provide detailed steps on how to reproduce the issue. If this is a feature, please describe what you want to be added or changed. -->\r\nInstalled verba using an m1 MacBook and python 3.10\r\n## Additional context\r\nI got the following error while installing it locally:\r\nAttributeError: ‘InputText’ object has no attribute ‘model_dump’\r\n\r\nServer Setup Information\r\nhlib>=1.1.0->weaviate-client==3.23.1->goldenverba) (1.15.1)\r\nPython: 3.10\r\n\r\nAny additional Information\r\n:information_source: Setting up client\r\n:information_source: Using Weaviate Embedded\r\nStarted /Users/?/.cache/weaviate-embedded: process ID 54469\r\n{“action”:“startup”,“default_vectorizer_module”:“none”,“level”:“info”,“msg”:“the default vectorizer modules is set to \"none\", as a result all new schema classes without an explicit vectorizer setting, will use this vectorizer”,“time”:“2024-06-27T15:34:13+02:00”}\r\n{“action”:“startup”,“auto_schema_enabled”:true,“level”:“info”,“msg”:“auto schema enabled setting is set to \"true\"”,“time”:“2024-06-27T15:34:13+02:00”}\r\n{“action”:“hnsw_vector_cache_prefill”,“count”:3000,“index_id”:“verba_cache_minilm_4iD4rqcKWgVO”,“level”:“info”,“limit”:1000000000000,“msg”:“prefilled vector cache”,“time”:“2024-06-27T15:34:14+02:00”,“took”:61916}\r\n{“action”:“hnsw_vector_cache_prefill”,“count”:3000,“index_id”:“verba_cache_ollama_wD58RBlbk2fn”,“level”:“info”,“limit”:1000000000000,“msg”:“prefilled vector cache”,“time”:“2024-06-27T15:34:14+02:00”,“took”:222500}\r\n{“action”:“hnsw_vector_cache_prefill”,“count”:3000,“index_id”:“verba_cache_text2vec_cohere_HAy7I9ZAaQEs”,“level”:“info”,“limit”:1000000000000,“msg”:“prefilled vector cache”,“time”:“2024-06-27T15:34:14+02:00”,“took”:60625}\r\n{“action”:“hnsw_vector_cache_prefill”,“count”:3000,“index_id”:“verba_cache_text2vec_openai_i9TxFte4fEW6”,“level”:“info”,“limit”:1000000000000,“msg”:“prefilled vector cache”,“time”:“2024-06-27T15:34:14+02:00”,“took”:53209}\r\n{“action”:“hnsw_vector_cache_prefill”,“count”:3000,“index_id”:“verba_chunk_minilm_uxj6Ir4EWkyx”,“level”:“info”,“limit”:1000000000000,“msg”:“prefilled vector cache”,“time”:“2024-06-27T15:34:14+02:00”,“took”:57833}\r\n{“action”:“hnsw_vector_cache_prefill”,“count”:3000,“index_id”:“verba_chunk_ollama_mvMMPMO7aPus”,“level”:“info”,“limit”:1000000000000,“msg”:“prefilled vector cache”,“time”:“2024-06-27T15:34:14+02:00”,“took”:57500}\r\n{“action”:“hnsw_vector_cache_prefill”,“count”:3000,“index_id”:“verba_chunk_text2vec_cohere_XHmRLDFh8MaI”,“level”:“info”,“limit”:1000000000000,“msg”:“prefilled vector cache”,“time”:“2024-06-27T15:34:14+02:00”,“took”:56333}\r\n{“action”:“hnsw_vector_cache_prefill”,“count”:3000,“index_id”:“verba_chunk_text2vec_openai_4CrqldHwQ1by”,“level”:“info”,“limit”:1000000000000,“msg”:“prefilled vector cache”,“time”:“2024-06-27T15:34:14+02:00”,“took”:52834}\r\n{“action”:“hnsw_vector_cache_prefill”,“count”:3000,“index_id”:“verba_config_ewWGsf7RRhSJ”,“level”:“info”,“limit”:1000000000000,“msg”:“prefilled vector cache”,“time”:“2024-06-27T15:34:14+02:00”,“took”:58458}\r\n{“action”:“hnsw_vector_cache_prefill”,“count”:3000,“index_id”:“verba_document_minilm_v3v7eeBXiJlT”,“level”:“info”,“limit”:1000000000000,“msg”:“prefilled vector cache”,“time”:“2024-06-27T15:34:14+02:00”,“took”:62209}\r\n{“action”:“hnsw_vector_cache_prefill”,“count”:3000,“index_id”:“verba_document_ollama_v5TeWWj2wow1”,“level”:“info”,“limit”:1000000000000,“msg”:“prefilled vector cache”,“time”:“2024-06-27T15:34:14+02:00”,“took”:58875}\r\n{“action”:“hnsw_vector_cache_prefill”,“count”:3000,“index_id”:“verba_document_text2vec_cohere_IjKVe10s5dWq”,“level”:“info”,“limit”:1000000000000,“msg”:“prefilled vector cache”,“time”:“2024-06-27T15:34:14+02:00”,“took”:77750}\r\n{“action”:“hnsw_vector_cache_prefill”,“count”:3000,“index_id”:“verba_document_text2vec_openai_feVObhdfshEL”,“level”:“info”,“limit”:1000000000000,“msg”:“prefilled vector cache”,“time”:“2024-06-27T15:34:14+02:00”,“took”:57416}\r\n{“action”:“hnsw_vector_cache_prefill”,“count”:3000,“index_id”:“verba_suggestion_OeZouxOz6R3V”,“level”:“info”,“limit”:1000000000000,“msg”:“prefilled vector cache”,“time”:“2024-06-27T15:34:14+02:00”,“took”:56834}\r\n{“level”:“warning”,“msg”:“Multiple vector spaces are present, GraphQL Explore and REST API list objects endpoint module include params has been disabled as a result.”,“time”:“2024-06-27T15:34:14+02:00”}\r\n{“action”:“grpc_startup”,“level”:“info”,“msg”:“grpc server listening at [::]:50051”,“time”:“2024-06-27T15:34:14+02:00”}\r\n{“action”:“restapi_management”,“level”:“info”,“msg”:“Serving weaviate at http://127.0.0.1:6666/”,“time”:“2024-06-27T15:34:14+02:00”}\r\n:heavy_check_mark: Connected to Weaviate\r\n:information_source: MPS is available. Using MPS…\r\n:information_source: Setting up components\r\nProcess SpawnProcess-1:\r\nTraceback (most recent call last):\r\nFile “/Users/?/anaconda3/lib/python3.11/multiprocessing/process.py”, line 314, in _bootstrap\r\nself.run()\r\nFile “/Users/?/anaconda3/lib/python3.11/multiprocessing/process.py”, line 108, in run\r\nself._target(*self._args, **self._kwargs)\r\nFile “/Users/?/anaconda3/lib/python3.11/site-packages/uvicorn/_subprocess.py”, line 78, in subprocess_started\r\ntarget(sockets=sockets)\r\nFile “/Users/?/anaconda3/lib/python3.11/site-packages/uvicorn/server.py”, line 65, in run\r\nreturn asyncio.run(self.serve(sockets=sockets))\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile “/Users/?/anaconda3/lib/python3.11/asyncio/runners.py”, line 190, in run\r\nreturn runner.run(main)\r\n^^^^^^^^^^^^^^^^\r\nFile “/Users/?/anaconda3/lib/python3.11/asyncio/runners.py”, line 118, in run\r\nreturn self._loop.run_until_complete(task)\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile “uvloop/loop.pyx”, line 1517, in uvloop.loop.Loop.run_until_complete\r\nFile “/Users/?/anaconda3/lib/python3.11/site-packages/uvicorn/server.py”, line 69, in serve\r\nawait self._serve(sockets)\r\nFile “/Users/?/anaconda3/lib/python3.11/site-packages/uvicorn/server.py”, line 76, in _serve\r\nconfig.load()\r\nFile “/Users/?/anaconda3/lib/python3.11/site-packages/uvicorn/config.py”, line 433, in load\r\nself.loaded_app = import_from_string(self.app)\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile “/Users/?/anaconda3/lib/python3.11/site-packages/uvicorn/importer.py”, line 19, in import_from_string\r\nmodule = importlib.import_module(module_str)\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile “/Users/?/anaconda3/lib/python3.11/importlib/init.py”, line 126, in import_module\r\nreturn _bootstrap._gcd_import(name[level:], package, level)\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile “”, line 1204, in _gcd_import\r\nFile “”, line 1176, in _find_and_load\r\nFile “”, line 1147, in _find_and_load_unlocked\r\nFile “”, line 690, in _load_unlocked\r\nFile “”, line 940, in exec_module\r\nFile “”, line 241, in _call_with_frames_removed\r\nFile “/Users/?/anaconda3/lib/python3.11/site-packages/goldenverba/server/api.py”, line 38, in\r\nsetup_managers(manager)\r\nFile “/Users/?/anaconda3/lib/python3.11/site-packages/goldenverba/server/util.py”, line 13, in setup_managers\r\nconfig = load_config(manager)\r\n^^^^^^^^^^^^^^^^^^^^\r\nFile “/Users/?/anaconda3/lib/python3.11/site-packages/goldenverba/server/util.py”, line 227, in load_config\r\nreturn get_config(manager)\r\n^^^^^^^^^^^^^^^^^^^\r\nFile “/Users/?/anaconda3/lib/python3.11/site-packages/goldenverba/server/util.py”, line 40, in get_config\r\n“components”: {\r\n^\r\nFile “/Users/?/anaconda3/lib/python3.11/site-packages/goldenverba/server/util.py”, line 41, in\r\nreader: readers[reader].get_meta(\r\n^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile “/Users/?/anaconda3/lib/python3.11/site-packages/goldenverba/components/interfaces.py”, line 47, in get_meta\r\n“config”: {_c: self.config[_c].model_dump() for _c in self.config},\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile “/Users/?/anaconda3/lib/python3.11/site-packages/goldenverba/components/interfaces.py”, line 47, in\r\n“config”: {_c: self.config[_c].model_dump() for _c in self.config},\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nAttributeError: ‘InputText’ object has no attribute ‘model_dump’\r\n",
      "state": "closed",
      "author": "L-Huber",
      "author_type": "User",
      "created_at": "2024-07-15T20:08:25Z",
      "updated_at": "2024-09-03T13:13:47Z",
      "closed_at": "2024-09-03T13:13:46Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/244/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/244",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/244",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:31.961818",
      "comments": [
        {
          "author": "L-Huber",
          "body": "already posted in the forum, but it did not help:[https://forum.weaviate.io/t/error-while-installing-verba-offline/2839/5](https://forum.weaviate.io/t/error-while-installing-verba-offline/2839/5)",
          "created_at": "2024-07-15T20:09:04Z"
        },
        {
          "author": "thomashacker",
          "body": "This might be an issue with your pydantic version. Did you install Verba in a clean environment? If you installed Verba in an environment where pydantic was already installed, this might cause issue.",
          "created_at": "2024-07-18T20:58:32Z"
        }
      ]
    },
    {
      "issue_number": 243,
      "title": "Error: VectorFromInput was called without vectorizer",
      "body": "## Description\r\nI'm encountering an error while using Verba. When I submit a query, I receive an error message indicating that VectorFromInput was called without vectorizer. Here are the details:\r\n\r\n## Is this a bug or a feature?\r\n- [x] Bug\r\n- [ ] Feature\r\n\r\n## Steps to Reproduce\r\nClone the repository from GitHub.\r\nInstall dependencies using pip install -r requirements.txt.\r\nStart the application using verba start.\r\nSubmit a query through the API (e.g., what's the most valuable item in Minecraft?).\r\n\r\nObserved Behavior:\r\nThe following error message is logged:\r\nINFO:     127.0.0.1:57421 - \"POST /api/suggestions HTTP/1.1\" 200 OK\r\n✔ Received query: what's the most valuable item in Minecraft ?\r\n✘ The query retriever result in the window retriever contains an error:\r\n({'locations': [{'column': 6, 'line': 1}], 'message': 'get vector input from modules provider: VectorFromInput was called without vectorizer', 'path': ['Get', 'VERBA_Chunk_OLLAMA']})\r\nℹ No data found for VERBA_Chunk_OLLAMA.\r\nℹ Retrieved Context of 0 tokens\r\n✔ Successfully processed query: what's the most valuable item in Minecraft ? in 0.01s\r\n\r\n\r\n## Additional context\r\nEnvironment:\r\n\r\nOS: macOS (latest version)\r\nPython: 3.11\r\nVerba: 1.0.4\r\nRelevant dependencies: weaviate-client==3.23.1, openai==0.27.9, fastapi==0.102.0, etc.\r\n",
      "state": "closed",
      "author": "unityforge",
      "author_type": "User",
      "created_at": "2024-07-11T15:26:51Z",
      "updated_at": "2024-09-03T13:13:40Z",
      "closed_at": "2024-09-03T13:13:40Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 16,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/243/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 1
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/243",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/243",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:32.220262",
      "comments": [
        {
          "author": "mr-od",
          "body": "Can confirm getting same error. \"No Chunks Available\" in the UI and the docker logs \r\n`2024-07-12 09:51:08 verba-1     | ✔ Received query: Hi\r\n2024-07-12 09:51:08 verba-1     | ✘ The query retriever result in the window retriever contains an error:\r\n2024-07-12 09:51:08 verba-1     | ({'locations': [",
          "created_at": "2024-07-12T09:54:09Z"
        },
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! I see you're using Ollama. Which model are you using, did you make sure you've installed the model? ",
          "created_at": "2024-07-15T12:15:33Z"
        },
        {
          "author": "rreck",
          "body": "I have all models installed. I will go back and check, but I think I followed the instructions to the letter.\n\nOn Mon, 15 Jul 2024 05:15:59 -0700, Edward ***@***.***> wrote:\n\n> Thanks for the issue! I see you're using Ollama. Which model are you using, did you make sure you've installed the model? \n",
          "created_at": "2024-07-15T16:43:58Z"
        },
        {
          "author": "thomashacker",
          "body": "Interesting, let me try to reproduce this",
          "created_at": "2024-07-15T19:26:27Z"
        },
        {
          "author": "thomashacker",
          "body": "Did you ingest data before querying?",
          "created_at": "2024-07-15T19:30:19Z"
        }
      ]
    },
    {
      "issue_number": 235,
      "title": "The ability to specify which context to use",
      "body": "## Description\r\nGreetings. Is it possible to specify in the chat which uploaded documents to use as context?\r\n\r\n## Is this a bug or a feature?\r\n- [*] Feature\r\n\r\n## Additional context\r\nIt is planned to use Verba as an assistant for chat consultants to generate responses depending on the context of the current correspondence, as well as the context related to currently operating services and available goods. You need to be able to control which context to use. For example, it can be file names or something else.",
      "state": "closed",
      "author": "olegius88",
      "author_type": "User",
      "created_at": "2024-07-02T12:06:26Z",
      "updated_at": "2024-09-03T13:13:09Z",
      "closed_at": "2024-09-03T13:13:09Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/235/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/235",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/235",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:32.462471",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Great idea! Document Filtering will come soon 🚀 ",
          "created_at": "2024-07-02T19:35:59Z"
        },
        {
          "author": "olegius88",
          "body": "To implement this feature, you only need to refine Verba in terms of query processing? Or is there a need for improvement at the database level?",
          "created_at": "2024-07-03T10:28:13Z"
        },
        {
          "author": "thomashacker",
          "body": "Yes, you would simply add filters to the query. Additionally, you need to add the required UI elements, API changes, etc.\r\nBut should be straightforward, I'll give an update once we implemented it 😄 ",
          "created_at": "2024-07-03T14:21:27Z"
        },
        {
          "author": "thomashacker",
          "body": "We added filters to the newest release! ",
          "created_at": "2024-09-03T13:13:09Z"
        }
      ]
    },
    {
      "issue_number": 225,
      "title": "OpenAi websocket disconnection when using chat ",
      "body": "## Description\r\nssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1000)\r\n\r\nAttempting to chat the websocket refuses to connect due to ssl cert error. I confirmed certifi was installed and updated. \r\n\r\n## Is this a bug or a feature?\r\n- [ x] Bug\r\n- [ ] Feature\r\n\r\n## Steps to Reproduce\r\nenv: \r\n OPENAI_API_KEY= \r\n\r\nverba start\r\n\r\nuse chat box , websocket disconnects\r\n\r\n## Additional context\r\n✘ WebSocket Error: Error communicating with OpenAI\r\nERROR:    Exception in ASGI application\r\nTraceback (most recent call last):\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/aiohttp/connector.py\", line 1025, in _wrap_create_connection\r\n    return await self._loop.create_connection(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"uvloop/loop.pyx\", line 2084, in create_connection\r\n  File \"uvloop/loop.pyx\", line 2079, in uvloop.loop.Loop.create_connection\r\n  File \"uvloop/sslproto.pyx\", line 517, in uvloop.loop.SSLProtocol._on_handshake_complete\r\n  File \"uvloop/sslproto.pyx\", line 499, in uvloop.loop.SSLProtocol._do_handshake\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ssl.py\", line 917, in do_handshake\r\n    self._sslobj.do_handshake()\r\nssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1000)\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/openai/api_requestor.py\", line 668, in arequest_raw\r\n    result = await session.request(**request_kwargs)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/aiohttp/client.py\", line 581, in _request\r\n    conn = await self._connector.connect(\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/aiohttp/connector.py\", line 544, in connect\r\n    proto = await self._create_connection(req, traces, timeout)\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/aiohttp/connector.py\", line 944, in _create_connection\r\n    _, proto = await self._create_direct_connection(req, traces, timeout)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/aiohttp/connector.py\", line 1257, in _create_direct_connection\r\n    raise last_exc\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/aiohttp/connector.py\", line 1226, in _create_direct_connection\r\n    transp, proto = await self._wrap_create_connection(\r\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/aiohttp/connector.py\", line 1027, in _wrap_create_connection\r\n    raise ClientConnectorCertificateError(req.connection_key, exc) from exc\r\naiohttp.client_exceptions.ClientConnectorCertificateError: Cannot connect to host api.openai.com:443 ssl:True [SSLCertVerificationError: (1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1000)')]\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/goldenverba/server/api.py\", line 179, in websocket_generate_stream\r\n    async for chunk in manager.generate_stream_answer(\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/goldenverba/verba_manager.py\", line 662, in generate_stream_answer\r\n    async for result in self.generator_manager.generators[\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/goldenverba/components/generation/GPT4Generator.py\", line 71, in generate_stream\r\n    completion = await openai.ChatCompletion.acreate(\r\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py\", line 45, in acreate\r\n    return await super().acreate(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py\", line 217, in acreate\r\n    response, _, api_key = await requestor.arequest(\r\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/openai/api_requestor.py\", line 372, in arequest\r\n    result = await self.arequest_raw(\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/openai/api_requestor.py\", line 685, in arequest_raw\r\n    raise error.APIConnectionError(\"Error communicating with OpenAI\") from e\r\nopenai.error.APIConnectionError: Error communicating with OpenAI\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/uvicorn/protocols/websockets/websockets_impl.py\", line 240, in run_asgi\r\n    result = await self.app(self.scope, self.asgi_receive, self.asgi_send)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/uvicorn/middleware/proxy_headers.py\", line 69, in __call__\r\n    return await self.app(scope, receive, send)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/fastapi/applications.py\", line 292, in __call__\r\n    await super().__call__(scope, receive, send)\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/starlette/applications.py\", line 122, in __call__\r\n    await self.middleware_stack(scope, receive, send)\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/starlette/middleware/errors.py\", line 149, in __call__\r\n    await self.app(scope, receive, send)\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/starlette/middleware/cors.py\", line 75, in __call__\r\n    await self.app(scope, receive, send)\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/starlette/middleware/exceptions.py\", line 79, in __call__\r\n    raise exc\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/starlette/middleware/exceptions.py\", line 68, in __call__\r\n    await self.app(scope, receive, sender)\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/fastapi/middleware/asyncexitstack.py\", line 20, in __call__\r\n    raise e\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/fastapi/middleware/asyncexitstack.py\", line 17, in __call__\r\n    await self.app(scope, receive, send)\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/starlette/routing.py\", line 718, in __call__\r\n    await route.handle(scope, receive, send)\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/starlette/routing.py\", line 341, in handle\r\n    await self.app(scope, receive, send)\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/starlette/routing.py\", line 82, in app\r\n    await func(session)\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/fastapi/routing.py\", line 324, in app\r\n    await dependant.call(**values)\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/goldenverba/server/api.py\", line 193, in websocket_generate_stream\r\n    await websocket.send_json(\r\n  File \"/Users/brett/PycharmProjects/training/.venv/lib/python3.12/site-packages/starlette/websockets.py\", line 171, in send_json\r\n    text = json.dumps(data, separators=(\",\", \":\"))\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py\", line 238, in dumps\r\n    **kw).encode(obj)\r\n          ^^^^^^^^^^^\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/encoder.py\", line 200, in encode\r\n    chunks = self.iterencode(o, _one_shot=True)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/encoder.py\", line 258, in iterencode\r\n    return _iterencode(o, 0)\r\n           ^^^^^^^^^^^^^^^^^\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/encoder.py\", line 180, in default\r\n    raise TypeError(f'Object of type {o.__class__.__name__} '\r\nTypeError: Object of type APIConnectionError is not JSON serializable\r\n\r\n",
      "state": "closed",
      "author": "dnbeze",
      "author_type": "User",
      "created_at": "2024-06-21T02:40:44Z",
      "updated_at": "2024-09-03T13:11:22Z",
      "closed_at": "2024-09-03T13:11:21Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/225/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/225",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/225",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:32.700425",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! we're looking into it",
          "created_at": "2024-06-27T13:09:20Z"
        },
        {
          "author": "thomashacker",
          "body": "We released the new version of verba, this should fix the issue",
          "created_at": "2024-09-03T13:11:22Z"
        }
      ]
    },
    {
      "issue_number": 222,
      "title": "Libraries version up",
      "body": "## Description\r\n<!-- A clear and concise description of what the issue is. Please include if this is a bug or a feature request. -->\r\nI suggest versioning up libraries.\r\n\r\n## Is this a bug or a feature?\r\n- [ ] Bug\r\n- [x] Feature\r\n\r\n## Steps to Reproduce\r\n<!-- If this is a bug, please provide detailed steps on how to reproduce the issue. If this is a feature, please describe what you want to be added or changed. -->\r\n\r\n## Additional context\r\n<!-- Add any other context about the problem here. -->\r\n- weaviate-client 3.23.1 to >=3.26\r\n    - When I tried to implement client.batch.delete_object with multiple conditions, the error occured.\r\n- openai 0.27.9 to >1\r\n    - When I tried to introduce ragas, the version conflict occured.\r\n",
      "state": "closed",
      "author": "fammet-h",
      "author_type": "User",
      "created_at": "2024-06-10T00:35:06Z",
      "updated_at": "2024-09-03T13:11:01Z",
      "closed_at": "2024-09-03T13:11:01Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/222/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/222",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/222",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:32.911565",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Agreed! Working on it for the next version 🚀 ",
          "created_at": "2024-06-27T13:08:09Z"
        },
        {
          "author": "thomashacker",
          "body": "Fixed in the newest release",
          "created_at": "2024-09-03T13:11:01Z"
        }
      ]
    },
    {
      "issue_number": 221,
      "title": "Cannot delete a big file",
      "body": "## Description\r\nI uploaded a 26 MB .txt file using OllamaEmbedder. Now, when I try to select the file in the \"Documents\" section, my browser freezes, preventing me from deleting the file.\r\n\r\n## Is this a bug or a feature?\r\n- [ ] Bug",
      "state": "closed",
      "author": "monjurulkarim",
      "author_type": "User",
      "created_at": "2024-06-08T23:13:37Z",
      "updated_at": "2024-09-03T13:10:51Z",
      "closed_at": "2024-09-03T13:10:51Z",
      "labels": [
        "frontend"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/221/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/221",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/221",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:33.118660",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Are you experiencing any error messages other than the browser freezing? ",
          "created_at": "2024-06-27T13:07:39Z"
        }
      ]
    },
    {
      "issue_number": 220,
      "title": "Verba fails to identify / classify data correctly",
      "body": "## Description\r\nUsing a pure-local config with Ollama and Unstructured in Docker I can import CSV data and interact with it (win!):\r\nOLLAMA_URL=\"http://192.168.2.204:9350\"\r\nOLLAMA_MODEL=\"llama3\"\r\nOLLAMA_EMBED_MODEL=\"mxbai-embed-large\"\r\nUNSTRUCTURED_API_URL=\"http://192.168.2.216:9360/general/v0/general\"\r\nUNSTRUCTURED_API_KEY=\"pseudokey\"\r\n\r\nProblem: When importing a csv with columns like \"First Name, Last Name, DoB, Phone\" and asking for the phone number of \"Steven\", Verba does find the data but fails to identify it correctly. \r\n\r\nQ: \"Give me the phone number of all people with first name Steven\"\r\nA: \"According to the provided context, the phone number of Steven Smith (born 21/11/1979) is not explicitly mentioned. However, based on the chunk numbers and the format of the data, we can infer that Steven Smith's phone number might be somewhere in the range of 00117xxxxxxx, but it would require more information or a specific document to retrieve the exact phone number.\"\r\n\r\n## Is this a bug or a feature?\r\n- [   ] Bug\r\n- [X] Feature\r\n\r\n## Steps to Reproduce\r\n1. Import small csv table with columns like \"First Name, Last Name, DoB, Phone\", using the provided local configuration.\r\n2. Ask about phone number of some of the people contained in the data\r\n\r\n## Additional context\r\nFully aware this isn't exactly a bug, but at this point I'm completely blind to possible causes or solutions. The data is well-formed and data points should be easy to identify for the model. I don't know, how to improve the issue: Do I need to import or chunk it differently? Is it to be solved during inference? What could help in this case?\r\n\r\nI'll call it a feature request for now, maybe we just need a few more options to make this work...\r\n",
      "state": "closed",
      "author": "Network-Sec",
      "author_type": "User",
      "created_at": "2024-06-08T20:46:57Z",
      "updated_at": "2024-09-03T13:10:46Z",
      "closed_at": "2024-09-03T13:10:45Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/220/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/220",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/220",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:33.365490",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Good point! I can see that long tables might confuse the current retrieval system and, thus, the selected LLM. I think adding metadata in the future could fix this. I'll add it to the feature list 🚀 ",
          "created_at": "2024-06-27T13:06:55Z"
        },
        {
          "author": "thomashacker",
          "body": "We added metadata to the newest release, this could fix the issue",
          "created_at": "2024-09-03T13:10:45Z"
        }
      ]
    },
    {
      "issue_number": 219,
      "title": "Request to add Chinese or allow me to participate in translating into Chinese",
      "body": "As shown in the title, if you allow me to translate it into Chinese, please let me know the location of the original language storage or send me all the texts related to UI text in the project",
      "state": "closed",
      "author": "hongruilin",
      "author_type": "User",
      "created_at": "2024-06-07T11:55:14Z",
      "updated_at": "2024-09-03T13:08:52Z",
      "closed_at": "2024-09-03T13:08:52Z",
      "labels": [
        "documentation"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/219/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/219",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/219",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:33.547358",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Do you want to add chinese language support for RAG or translate the source code in Chinese?",
          "created_at": "2024-06-27T13:04:38Z"
        }
      ]
    },
    {
      "issue_number": 217,
      "title": "Failed to resolve 'openaipublic.blob.core.windows.net' error while selfhosting with latest docker images",
      "body": "urllib3.exceptions.NameResolutionError: <urllib3.connection.HTTPSConnection object at 0x7df5619473d0>: Failed to resolve 'openaipublic.blob.core.windows.net' ([Errno -3] Temporary failure in name resolution)\r\nThe above exception was the direct cause of the following exception:\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.11/site-packages/requests/adapters.py\", line 486, in send\r\n    resp = conn.urlopen(\r\n           ^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/urllib3/connectionpool.py\", line 847, in urlopen\r\n    retries = retries.increment(\r\n              ^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/urllib3/util/retry.py\", line 515, in increment\r\n    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]\r\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nurllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='openaipublic.blob.core.windows.net', port=443): Max retries exceeded with url: /encodings/cl100k_base.tiktoken (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x7df5619473d0>: Failed to resolve 'openaipublic.blob.core.windows.net' ([Errno -3] Temporary failure in name resolution)\"))\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.11/multiprocessing/process.py\", line 314, in _bootstrap\r\n    self.run()\r\n  File \"/usr/local/lib/python3.11/multiprocessing/process.py\", line 108, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/usr/local/lib/python3.11/site-packages/uvicorn/_subprocess.py\", line 78, in subprocess_started\r\n    target(sockets=sockets)\r\n  File \"/usr/local/lib/python3.11/site-packages/uvicorn/server.py\", line 65, in run\r\n    return asyncio.run(self.serve(sockets=sockets))\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/asyncio/runners.py\", line 190, in run\r\n    return runner.run(main)\r\n           ^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/asyncio/runners.py\", line 118, in run\r\n    return self._loop.run_until_complete(task)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"uvloop/loop.pyx\", line 1517, in uvloop.loop.Loop.run_until_complete\r\n  File \"/usr/local/lib/python3.11/site-packages/uvicorn/server.py\", line 69, in serve\r\n    await self._serve(sockets)\r\n  File \"/usr/local/lib/python3.11/site-packages/uvicorn/server.py\", line 76, in _serve\r\n    config.load()\r\n  File \"/usr/local/lib/python3.11/site-packages/uvicorn/config.py\", line 433, in load\r\n    self.loaded_app = import_from_string(self.app)\r\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/uvicorn/importer.py\", line 19, in import_from_string\r\n    module = importlib.import_module(module_str)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"<frozen importlib._bootstrap>\", line 1204, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 1176, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 1147, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 690, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 940, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 241, in _call_with_frames_removed\r\n  File \"/Verba/goldenverba/server/api.py\", line 37, in <module>\r\n    manager = verba_manager.VerbaManager()\r\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Verba/goldenverba/verba_manager.py\", line 38, in __init__\r\n    self.chunker_manager = ChunkerManager()\r\n                           ^^^^^^^^^^^^^^^^\r\n  File \"/Verba/goldenverba/components/managers.py\", line 104, in __init__\r\n    \"TokenChunker\": TokenChunker(),\r\n                    ^^^^^^^^^^^^^^\r\n  File \"/Verba/goldenverba/components/chunking/TokenChunker.py\", line 24, in __init__\r\n    self.encoding = tiktoken.encoding_for_model(\"gpt-3.5-turbo\")\r\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/tiktoken/model.py\", line 101, in encoding_for_model\r\n    return get_encoding(encoding_name_for_model(model_name))\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/tiktoken/registry.py\", line 73, in get_encoding\r\n    enc = Encoding(**constructor())\r\n                     ^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/tiktoken_ext/openai_public.py\", line 72, in cl100k_base\r\n    mergeable_ranks = load_tiktoken_bpe(\r\n                      ^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/tiktoken/load.py\", line 147, in load_tiktoken_bpe\r\n    contents = read_file_cached(tiktoken_bpe_file, expected_hash)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/tiktoken/load.py\", line 64, in read_file_cached\r\n    contents = read_file(blobpath)\r\n               ^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/tiktoken/load.py\", line 25, in read_file\r\n    resp = requests.get(blobpath)\r\n           ^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/requests/api.py\", line 73, in get\r\n    return request(\"get\", url, params=params, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/requests/api.py\", line 59, in request\r\n    return session.request(method=method, url=url, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/requests/sessions.py\", line 589, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/requests/sessions.py\", line 703, in send\r\n    r = adapter.send(request, **kwargs)\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/requests/adapters.py\", line 519, in send\r\n    raise ConnectionError(e, request=request)\r\nrequests.exceptions.ConnectionError: HTTPSConnectionPool(host='openaipublic.blob.core.windows.net', port=443): Max retries exceeded with url: /encodings/cl100k_base.tiktoken (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x7df5619473d0>: Failed to resolve 'openaipublic.blob.core.windows.net' ([Errno -3] Temporary failure in name resolution)\"))\r\nsys:1: ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>\r\n\r\n\r\nThis what i am getting and this is my docker compose file(Note : i have modified and remove some env variables because i dont need as i am not open ai user plus wanna run with ollama only and every model of ollama working in my device infact other selfhosted docker containers which depend on ollama are working great too so no issues from my ollama side simply and i did changed ollama url and models name etc etc did many testings but couldnt run and faces same issue even tho i am not using openai why am i getting \"openaipublic.blob.core.......\" error?\r\n\r\n---\r\nversion: '3.4'\r\n\r\nservices:\r\n  verba:\r\n    build:\r\n      context: ./\r\n      dockerfile: Dockerfile\r\n    ports:\r\n      - 8000:8000\r\n    environment:\r\n      - WEAVIATE_URL_VERBA=http://weaviate:8080\r\n      - OLLAMA_URL=http://host.docker.internal:11434\r\n      - OLLAMA_MODEL=llama3:8b-instruct-q5_K_M\r\n      - OLLAMA_EMBED_MODEL=mxbai-embed-large:latest\r\n\r\n    volumes:\r\n      - ./data:/data/\r\n\r\n\r\n  weaviate:\r\n    command:\r\n      - --host\r\n      - 0.0.0.0\r\n      - --port\r\n      - '8080'\r\n      - --scheme\r\n      - http\r\n    image: semitechnologies/weaviate:1.24.2\r\n    ports:\r\n      - 8080:8080\r\n      - 3000:8080\r\n    volumes:\r\n      - ./weaviate_data:/var/lib/weaviate\r\n    restart: on-failure:0\r\n    healthcheck:\r\n      test: wget --no-verbose --tries=3 --spider http://localhost:8080/v1/.well-known/ready || exit 1\r\n      interval: 5s\r\n      timeout: 10s\r\n      retries: 5\r\n      start_period: 10s\r\n    environment:\r\n      QUERY_DEFAULTS_LIMIT: 25\r\n      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'\r\n      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'\r\n      CLUSTER_HOSTNAME: 'node1'\r\n\r\nvolumes:\r\n  weaviate_data: {}\r\n...",
      "state": "closed",
      "author": "Greatz08",
      "author_type": "User",
      "created_at": "2024-06-05T03:08:16Z",
      "updated_at": "2024-09-03T13:08:49Z",
      "closed_at": "2024-09-03T13:08:49Z",
      "labels": [
        "bug",
        "investigating"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/217/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/217",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/217",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:33.784430",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue, we're looking into it!",
          "created_at": "2024-06-06T11:13:51Z"
        },
        {
          "author": "thomashacker",
          "body": "Should be fixed in the newest release!",
          "created_at": "2024-09-03T13:08:49Z"
        }
      ]
    },
    {
      "issue_number": 216,
      "title": "Allow customisation of autocut value",
      "body": "## Description\r\nWindow retriever uses weaviate autocut(1). It delivers too few results for my use case, and probably others. It would be good if this was please customisable between like 1-3. Or just maybe setting traditional score cut off, and max number of chunk windows retrieved.\r\n\r\nIt would be good to also surface the score of each result in the web ui.\r\n\r\n## Is this a bug or a feature?\r\n- [ ] Bug\r\n- [x] Feature\r\n\r\n",
      "state": "closed",
      "author": "jamesoflol",
      "author_type": "User",
      "created_at": "2024-06-04T03:24:22Z",
      "updated_at": "2024-09-03T13:08:36Z",
      "closed_at": "2024-09-03T13:08:36Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/216/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/216",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/216",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:34.044750",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Yes, I agree! Good idea, we'll add it to the list",
          "created_at": "2024-06-06T11:12:58Z"
        },
        {
          "author": "thomashacker",
          "body": "Added the configuration to the newest release!",
          "created_at": "2024-09-03T13:08:36Z"
        }
      ]
    },
    {
      "issue_number": 214,
      "title": "Documents with same filename get mixed up by window retriever",
      "body": "## Description\r\nI've imported multiple documents with the same filename - README.md. The window retriever seems to be randomly mixing up chunks from each of them into one document retrieval result.\r\n\r\n## Is this a bug or a feature?\r\n- [x] Bug\r\n- [ ] Feature\r\n\r\nIt appears the window retriever looks up neighbouring chunks by doc_name, rather than by the document's unique ID. This happens when building context for a single document, but it seems that the context generator also doesn't even try to include additional documents even though multiple were found in the db similarity lookup. I.e., if there's 3 README.md files returned in the lookup, clicking the \"See Context\" button still only shows a single line that reads \"--- Document README.md ---\", rather than 3.",
      "state": "closed",
      "author": "jamesoflol",
      "author_type": "User",
      "created_at": "2024-06-03T05:50:43Z",
      "updated_at": "2024-09-03T13:08:17Z",
      "closed_at": "2024-09-03T13:08:17Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/214/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/214",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/214",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:34.352829",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hmm, you shouldn't be able to import documents with the same name in the first place; that's interesting! But I agree, the WindowRetriever should rather look at the uuid instead of the doc name",
          "created_at": "2024-06-06T11:11:24Z"
        },
        {
          "author": "thomashacker",
          "body": "This should be fixed in the newest release!",
          "created_at": "2024-09-03T13:08:17Z"
        }
      ]
    },
    {
      "issue_number": 209,
      "title": "Expecting value: line 1 column 1 (char 0)",
      "body": "Hi. I want to use Ollama fully for answers and vectorization, but have run into a vectorization problem.\r\nI created an .env where I specified:\r\n\r\nOLLAMA_URL=http://ollama.ai.local\r\nOLLAMA_MODEL=llama3:8b-instruct-q8_0\r\nOLLAMA_EMBED_MODEL=nomic-embed-text:latest\r\nWhen I try to add a document using OllamaEmbedder I get:\r\n\r\n(INFO) Importing...\r\n(INFO) Importing 1 files with BasicReader\r\n(INFO) Importing KSC HOWTOpdf.pdf\r\n(SUCCESS) Loaded 1 documents in 0.01s\r\n(INFO) Starting Chunking with TokenChunker\r\n(SUCCESS) Chunking completed with 2 chunks in 0.0s\r\n(INFO) Starting Embedding with OllamaEmbedder\r\n(ERROR) Expecting value: line 1 column 1 (char 0)\r\n\r\nIf you use ADA for vectorization and OLLAMA for response, everything is OK. Maybe somewhere in the code you can specify the vector length for the nomic-embed-text\r\nmodel?\r\n\r\nIs this a bug or a feature?\r\n Bug\r\n\r\nSteps to Reproduce\r\nCreate an .env file with the following content:\r\n\r\nOLLAMA_URL=http://ollama.ai.local\r\nOLLAMA_MODEL=llama3:8b-instruct-q8_0\r\nOLLAMA_EMBED_MODEL=nomic-embed-text:latest\r\nTry to add a document using OllamaEmbedder.\r\nObserve the error.\r\nAdditional context\r\nWhen using ADA for vectorization and OLLAMA for response, everything works fine. The issue might be related to the vector length specification for the nomic-embed-text:latest model.",
      "state": "closed",
      "author": "Kurskikh",
      "author_type": "User",
      "created_at": "2024-05-29T08:36:38Z",
      "updated_at": "2024-09-03T13:08:04Z",
      "closed_at": "2024-09-03T13:08:04Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/209/reactions",
        "total_count": 2,
        "+1": 2,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/209",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/209",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:34.585446",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue, we'll look into it",
          "created_at": "2024-05-31T11:39:03Z"
        },
        {
          "author": "NeverOccurs",
          "body": "using docker on windows, ada embedder and openai models get the following error when generating response:\r\n\r\nverba-1     | ERROR:    Exception in ASGI application\r\n                    verba-1     | Traceback (most recent call last):\r\n                    verba-1     |   File \"/usr/local/lib/python3.1",
          "created_at": "2024-06-03T09:53:49Z"
        },
        {
          "author": "thomashacker",
          "body": "I think, I saw that error recently, it was a problem with the `.env` having the wrong/incompatible quotations, can you double check that the values either have `\"` or none quotes at all",
          "created_at": "2024-06-06T10:55:58Z"
        }
      ]
    },
    {
      "issue_number": 208,
      "title": "Error in chat and importing documents: HTTPConnectionPool(host='host.docker.internal'",
      "body": "## Description\r\nError in chat and importing documents: HTTPConnectionPool(host='host.docker.internal'\r\nI've seen similar issues to mine but not exactly the same setup so thought I'd post mine here.\r\n\r\n## Is this a bug or a feature?\r\n- [x] Bug\r\n- [ ] Feature\r\n\r\n## Steps to Reproduce\r\n~Started with a fresh ubuntu 20.04 desktop VM from iso, apt updated, upgraded.\r\n\r\n~Installed and tested ollama locally:\r\n\t`curl -fsSL https://ollama.com/install.sh | sh`\r\n\t`ollama run llama3`\r\n\r\n~Installed docker using apt installation method: https://docs.docker.com/engine/install/ubuntu/\r\n\r\n~Post install steps to run docker without root- log in\\out and tested with `docker run hello-world`\r\n\r\n~Installed Verba via docker\r\n\t`git clone https://github.com/weaviate/Verba.git`\r\n\t`cp ~/Verba/goldenverba/.env.example ~/Verba/.env`\r\n~Adjusted .env\r\n                `OLLAMA_URL=http://localhost:11434`\r\n\t\t`OLLAMA_MODEL=llama3`\r\n*also tried combinations with:\r\n\t\t`OLLAMA_URL=http://host.docker.internal:11434`\r\n\t\t`OLLAMA_MODEL=llama3:latest`\r\n\r\n~At this point I'm able to reach Versa but chat and importing documents get the same error:\r\n(ERROR) HTTPConnectionPool(host='host.docker.internal', port=11434): Max retries exceeded with url: /api/embeddings (Caused by NameResolutionError(\"<urllib3.connection.HTTPConnection object at 0x7f3f49132910>: Failed to resolve 'host.docker.internal' ([Errno -2] Name or service not known)\"))",
      "state": "closed",
      "author": "teldredge",
      "author_type": "User",
      "created_at": "2024-05-28T17:15:42Z",
      "updated_at": "2024-09-03T13:07:58Z",
      "closed_at": "2024-09-03T13:07:58Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/208/reactions",
        "total_count": 2,
        "+1": 2,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/208",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/208",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:34.821603",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue, we'll have a closer look at the Docker Implementation with Ollama",
          "created_at": "2024-05-31T11:38:17Z"
        },
        {
          "author": "Akki-401",
          "body": "> ## Description\r\n> Error in chat and importing documents: HTTPConnectionPool(host='host.docker.internal' I've seen similar issues to mine but not exactly the same setup so thought I'd post mine here.\r\n> \r\n> ## Is this a bug or a feature?\r\n> * [x]  Bug\r\n> * [ ]  Feature\r\n> \r\n> ## Steps to Reproduce\r",
          "created_at": "2024-06-13T15:49:36Z"
        },
        {
          "author": "a-lang",
          "body": "The container can't access to the localhost. Follow the steps below:\r\n1. Edit the docker-compose.yml \r\n- OLLAMA_URL=$OLLAMA_URL\r\n2. Edit the file .env\r\nOLLAMA_URL=\"http://Your-IP-of-Ollama:11434\"\r\nNOTE: you have to ensure the ollama service works on the IP. ",
          "created_at": "2024-06-15T10:52:31Z"
        }
      ]
    },
    {
      "issue_number": 206,
      "title": "ERROR intalling, python 3.12.3",
      "body": "## Description\r\n`Git clone` + `pip install -e .`\r\n`ERROR: Could not install packages due to an OSError: [WinError 2] Не удается найти указанный файл: 'C:\\\\Python312\\\\Scripts\\\\tqdm.exe' -> 'C:\\\\Python312\\\\Scripts\\\\tqdm.exe.deleteme'`\r\n\r\n## Is this a bug or a feature?\r\n- [ ] Bug\r\n\r\n## Steps to Reproduce\r\n`Git clone` + `pip install -e .`\r\n\r\n## Additional context\r\nI am just trying install it. I have:\r\n```\r\nD:\\Ai\\Chat\\Verba\\try3>py -V\r\nPython 3.12.3\r\n```\r\nollama installed and run\r\n```\r\nPS C:\\Users\\1> ollama run llama3\r\npulling manifest\r\npulling 6a0746a1ec1a... 100% ▕████████████████████████████████████████████████████████▏ 4.7 GB\r\npulling 4fa551d4f938... 100% ▕████████████████████████████████████████████████████████▏  12 KB\r\npulling 8ab4849b038c... 100% ▕████████████████████████████████████████████████████████▏  254 B\r\npulling 577073ffcc6c... 100% ▕████████████████████████████████████████████████████████▏  110 B\r\npulling 3f8eb4da87fa... 100% ▕████████████████████████████████████████████████████████▏  485 B\r\nverifying sha256 digest\r\nwriting manifest\r\nremoving any unused layers\r\nsuccess\r\n>>> hi\r\nHi! How's it going?\r\n\r\n>>> who are you?\r\nI am LLaMA, a large language model trained by a team of researcher at Meta AI. My primary function is to\r\nunderstand and respond to human input in a helpful and informative way. I'm here to assist you with any questions\r\nor topics you'd like to discuss. I can provide information on a wide range of subjects, from science and history\r\nto entertainment and culture. I can also help with language-related tasks such as language translation, grammar\r\ncorrection, and text summarization.\r\n\r\nI'm constantly learning and improving my responses based on the conversations I have with users like you. So, feel\r\nfree to ask me anything, and I'll do my best to provide a helpful and accurate response!\r\n\r\n>>> Send a message (/? for help)\r\n```",
      "state": "closed",
      "author": "VitaliyAT",
      "author_type": "User",
      "created_at": "2024-05-27T17:14:44Z",
      "updated_at": "2024-09-03T13:07:40Z",
      "closed_at": "2024-09-03T13:07:40Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/206/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/206",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/206",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:35.040761",
      "comments": [
        {
          "author": "sitaram70",
          "body": "Hi\r\nDid you perform env step?",
          "created_at": "2024-05-28T14:05:54Z"
        },
        {
          "author": "VitaliyAT",
          "body": "\"Pip installation\" way give error in the end, look at log file. \r\nBefore commands in this file I install `virtualenv` by `py -m pip install --user virtualenv`\r\n[Verba_install_log.txt](https://github.com/weaviate/Verba/files/15483597/Verba_install_log.txt)\r\n\"build from Source\" way has the same result",
          "created_at": "2024-05-29T11:33:19Z"
        },
        {
          "author": "VitaliyAT",
          "body": "https://github.com/weaviate/weaviate/issues/3315 - finaly it's this proble - It will not go normal on Windows =(",
          "created_at": "2024-05-30T13:49:58Z"
        },
        {
          "author": "thomashacker",
          "body": "Windows is currently not supported for the local deployment, please either use the Docker or Weaviate Cluster deployment",
          "created_at": "2024-09-03T13:07:40Z"
        }
      ]
    },
    {
      "issue_number": 205,
      "title": "Embedding fails - Not able to add documents",
      "body": "When I try to add documents, I get the error down below.\r\nI installed Verba in a conda environment with pip. I am able to run llama3 and gpt4, but am not able to add documents.\r\n\r\n\r\n(INFO) Importing...\r\n(ERROR) Delete object! Unexpected status code: 500, with response body: {'error': [{'message': 'could not delete object from vector repo: delete from index \"verba_config\": delete local object: shard=\"x8U9x6HOhDpr\": store is read-only'}]}.",
      "state": "closed",
      "author": "julian-dymek",
      "author_type": "User",
      "created_at": "2024-05-27T03:53:04Z",
      "updated_at": "2024-09-03T13:07:01Z",
      "closed_at": "2024-09-03T13:07:00Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 6,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/205/reactions",
        "total_count": 4,
        "+1": 4,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/205",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/205",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:35.275313",
      "comments": [
        {
          "author": "donadelden",
          "body": "I just got the same error, solved by running Verba from a new directory with permissions 777. Something like:\r\n```\r\nmkdir test\r\ncp .env test\r\ncd test\r\nchmod 777 .\r\nverba run\r\n```\r\n\r\nEDIT: the error came up again, and probably the folder that needs some changes in permissions is `.local/share/weaviat",
          "created_at": "2024-05-27T09:47:51Z"
        },
        {
          "author": "thomashacker",
          "body": "Interesting! Thanks for the issue, we'll have a look",
          "created_at": "2024-05-27T11:19:40Z"
        },
        {
          "author": "jamesoflol",
          "body": "Same.\r\n\r\nI'm also getting this message: {\"action\":\"read_disk_use\",\"level\":\"warning\",\"msg\":\"disk usage currently at 86.36%, threshold set to 80.00%\"\r\n\r\nCould that be related? Also, is it configurable?",
          "created_at": "2024-05-31T06:57:21Z"
        },
        {
          "author": "lucasrocha7111",
          "body": "Same here issue here.\r\n\r\nApple M2 Pro\r\nMacOS Sonoma 14.5 \r\nPython 3.12.3",
          "created_at": "2024-06-04T15:48:35Z"
        },
        {
          "author": "lucasrocha7111",
          "body": "One way to solve it is run using Docker",
          "created_at": "2024-06-04T17:35:25Z"
        }
      ]
    },
    {
      "issue_number": 201,
      "title": "ollama; WebSocket timeout not configurable and after a timeout subsequent requests fail",
      "body": "## Description\r\nDuring inference while receiving data from ollama, I received a WebSocket timeout exception and the connection was closed while the model/ollama was not done responding (it stopped mid sentence). After the connection was closed, I could not ask further questions and all API requests gave errors. This appears to be a bug.\r\n\r\nSince I am running a model locally using ollama, it can be slow. It would be useful to have a configurable timeout so you can increase it when needed. This is a feature request. The error message I received is in the 'Additional context'. I'm running Verba from main, commit 8835192 (24-05-2024, it reports v1.0.2). I've used mixtral:8x22b (i7-13700K, 64Gb RAM, NVidia RTX4080 16Gb VRAM). N.b. I manually applied https://github.com/weaviate/Verba/pull/178 to use a different model for creating embeddings (nomic-embed-text).\r\n\r\n## Is this a bug or a feature?\r\n- [x] Bug\r\n- [X] Feature\r\n\r\n## Steps to Reproduce\r\n1 create embeddings from documents\r\n2 on the Chat tab type a question in the box indicating 'Ask Verba Anything'\r\n3 wait until the timeout occurs\r\n4 after the connection is closed, the API cannot be accessed anymore. when a new question is asked in the \"Ask Verba Anything\" box it replied with a red error message below the box saying: Failed to fetch from API: TypeError: Failed to fetch\r\n\r\n## Additional context\r\n✘ WebSocket Error:\r\nERROR:    Exception in ASGI application\r\nTraceback (most recent call last):\r\n  File \"Verba/goldenverba/server/api.py\", line 179, in websocket_generate_stream\r\n    async for chunk in manager.generate_stream_answer(\r\n  File \"Verba/goldenverba/verba_manager.py\", line 662, in generate_stream_answer\r\n    async for result in self.generator_manager.generators[\r\n  File \"Verba/goldenverba/components/generation/OllamaGenerator.py\", line 49, in generate_stream\r\n    async for line in response.content:\r\n  File \".pyenv/versions/3.11.7/envs/verba/lib/python3.11/site-packages/aiohttp/streams.py\", line 50, in __anext__\r\n    rv = await self.read_func()\r\n         ^^^^^^^^^^^^^^^^^^^^^^\r\n  File \".pyenv/versions/3.11.7/envs/verba/lib/python3.11/site-packages/aiohttp/streams.py\", line 317, in readline\r\n    return await self.readuntil()\r\n           ^^^^^^^^^^^^^^^^^^^^^^\r\n  File \".pyenv/versions/3.11.7/envs/verba/lib/python3.11/site-packages/aiohttp/streams.py\", line 351, in readuntil\r\n    await self._wait(\"readuntil\")\r\n  File \".pyenv/versions/3.11.7/envs/verba/lib/python3.11/site-packages/aiohttp/streams.py\", line 311, in _wait\r\n    with self._timer:\r\n  File \".pyenv/versions/3.11.7/envs/verba/lib/python3.11/site-packages/aiohttp/helpers.py\", line 735, in __exit__\r\n    raise asyncio.TimeoutError from None\r\nTimeoutError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \".pyenv/versions/3.11.7/envs/verba/lib/python3.11/site-packages/uvicorn/protocols/websockets/websockets_impl.py\", line 240, in run_asgi\r\n    result = await self.app(self.scope, self.asgi_receive, self.asgi_send)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \".pyenv/versions/3.11.7/envs/verba/lib/python3.11/site-packages/uvicorn/middleware/proxy_headers.py\", line 69, in __call__\r\n    return await self.app(scope, receive, send)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \".pyenv/versions/3.11.7/envs/verba/lib/python3.11/site-packages/fastapi/applications.py\", line 292, in __call__\r\n    await super().__call__(scope, receive, send)\r\n  File \".pyenv/versions/3.11.7/envs/verba/lib/python3.11/site-packages/starlette/applications.py\", line 122, in __call__\r\n    await self.middleware_stack(scope, receive, send)\r\n  File \".pyenv/versions/3.11.7/envs/verba/lib/python3.11/site-packages/starlette/middleware/errors.py\", line 149, in __call__\r\n    await self.app(scope, receive, send)\r\n  File \".pyenv/versions/3.11.7/envs/verba/lib/python3.11/site-packages/starlette/middleware/cors.py\", line 75, in __call__\r\n    await self.app(scope, receive, send)\r\n  File \".pyenv/versions/3.11.7/envs/verba/lib/python3.11/site-packages/starlette/middleware/exceptions.py\", line 79, in __call__\r\n    raise exc\r\n  File \".pyenv/versions/3.11.7/envs/verba/lib/python3.11/site-packages/starlette/middleware/exceptions.py\", line 68, in __call__\r\n    await self.app(scope, receive, sender)\r\n  File \".pyenv/versions/3.11.7/envs/verba/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py\", line 20, in __call__\r\n    raise e\r\n  File \".pyenv/versions/3.11.7/envs/verba/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py\", line 17, in __call__\r\n    await self.app(scope, receive, send)\r\n  File \".pyenv/versions/3.11.7/envs/verba/lib/python3.11/site-packages/starlette/routing.py\", line 718, in __call__\r\n    await route.handle(scope, receive, send)\r\n  File \".pyenv/versions/3.11.7/envs/verba/lib/python3.11/site-packages/starlette/routing.py\", line 341, in handle\r\n    await self.app(scope, receive, send)\r\n  File \".pyenv/versions/3.11.7/envs/verba/lib/python3.11/site-packages/starlette/routing.py\", line 82, in app\r\n    await func(session)\r\n  File \".pyenv/versions/3.11.7/envs/verba/lib/python3.11/site-packages/fastapi/routing.py\", line 324, in app\r\n    await dependant.call(**values)\r\n  File \"Verba/goldenverba/server/api.py\", line 193, in websocket_generate_stream\r\n    await websocket.send_json(\r\n  File \".pyenv/versions/3.11.7/envs/verba/lib/python3.11/site-packages/starlette/websockets.py\", line 171, in send_json\r\n    text = json.dumps(data, separators=(\",\", \":\"))\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \".pyenv/versions/3.11.7/lib/python3.11/json/__init__.py\", line 238, in dumps\r\n    **kw).encode(obj)\r\n          ^^^^^^^^^^^\r\n  File \".pyenv/versions/3.11.7/lib/python3.11/json/encoder.py\", line 200, in encode\r\n    chunks = self.iterencode(o, _one_shot=True)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \".pyenv/versions/3.11.7/lib/python3.11/json/encoder.py\", line 258, in iterencode\r\n    return _iterencode(o, 0)\r\n           ^^^^^^^^^^^^^^^^^\r\n  File \".pyenv/versions/3.11.7/lib/python3.11/json/encoder.py\", line 180, in default\r\n    raise TypeError(f'Object of type {o.__class__.__name__} '\r\nTypeError: Object of type TimeoutError is not JSON serializable\r\nINFO:     connection closed\r\n",
      "state": "closed",
      "author": "MaartenSmeets",
      "author_type": "User",
      "created_at": "2024-05-24T18:14:29Z",
      "updated_at": "2024-09-03T12:51:44Z",
      "closed_at": "2024-09-03T12:51:44Z",
      "labels": [
        "enhancement",
        "investigating"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/201/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/201",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/201",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:35.526551",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks a lot for the information! We'll have a closer look",
          "created_at": "2024-05-27T11:18:24Z"
        },
        {
          "author": "LucBruz",
          "body": "I am experiencing the same issue as described.\r\n\r\n## Context\r\nServer Setup Information\r\n- Weaviate Server Version: 3.4 latest (today 30/05/2024)\r\n- Deployment Method: docker\r\n- Multi Node? Number of Running Nodes: 1\r\n- Client Language and Version: latest (today 30/05/2024)\r\n- Multitenancy?: /\r\n\r\n###",
          "created_at": "2024-06-03T09:27:39Z"
        },
        {
          "author": "thomashacker",
          "body": "Should be fixed in the newest release! 😄 ",
          "created_at": "2024-09-03T12:51:44Z"
        }
      ]
    },
    {
      "issue_number": 197,
      "title": "Max retries exceeded with url: /api/embeddings",
      "body": "```\r\n⚠ Query failed: HTTPConnectionPool(host='localhost', port=11434): Max\r\nretries exceeded with url: /api/embeddings (Caused by\r\nNewConnectionError('<urllib3.connection.HTTPConnection object at\r\n0x70efe5ed00d0>: Failed to establish a new connection: [Errno 111] Connection\r\nrefused'))\r\n```\r\n\r\nWe are getting this error when using the following docker-compose YAML:\r\n```\r\n---\r\nversion: '3.4'\r\n\r\nservices:\r\n  verba:\r\n    build:\r\n      context: ./\r\n      dockerfile: Dockerfile\r\n    ports:\r\n      - 8000:8000\r\n    environment:\r\n      - WEAVIATE_URL_VERBA=http://weaviate:8080\r\n      - OPENAI_API_KEY=$OPENAI_API_KEY\r\n      - COHERE_API_KEY=$COHERE_API_KEY\r\n      - OLLAMA_URL=$OLLAMA_URL\r\n      - OLLAMA_MODEL=$OLLAMA_MODEL\r\n      - UNSTRUCTURED_API_KEY=$UNSTRUCTURED_API_KEY\r\n      - UNSTRUCTURED_API_URL=$UNSTRUCTURED_API_URL\r\n      - GITHUB_TOKEN=$GITHUB_TOKEN\r\n      ## IF YOU WANT AUTHENTICATION, UNCOMENT BELLOW \r\n      ## AND ADD WEAVIATE SERVICE\r\n      #- WEAVIATE_API_KEY_VERBA=adminkey\r\n\r\n    volumes:\r\n      - ./data:/data/\r\n    depends_on:\r\n      weaviate:\r\n        condition: service_healthy\r\n    healthcheck:\r\n      test: wget --no-verbose --tries=3 --spider http://localhost:8000 || exit 1\r\n      interval: 5s\r\n      timeout: 10s\r\n      retries: 5\r\n      start_period: 10s\r\n\r\n  weaviate:\r\n    command:\r\n      - --host\r\n      - 0.0.0.0\r\n      - --port\r\n      - '8080'\r\n      - --scheme\r\n      - http\r\n    image: semitechnologies/weaviate:1.24.2\r\n    ports:\r\n      - 8080:8080\r\n      - 3000:8080\r\n    volumes:\r\n      - weaviate_data:/var/lib/weaviate\r\n    restart: on-failure:0\r\n    healthcheck:\r\n      test: wget --no-verbose --tries=3 --spider http://localhost:8080/v1/.well-known/ready || exit 1\r\n      interval: 5s\r\n      timeout: 10s\r\n      retries: 5\r\n      start_period: 10s\r\n    environment:\r\n      OPENAI_APIKEY: $OPENAI_API_KEY\r\n      COHERE_APIKEY: $COHERE_API_KEY\r\n      QUERY_DEFAULTS_LIMIT: 25\r\n      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'\r\n      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'\r\n      ENABLE_MODULES: 'text2vec-openai, generative-openai, qna-openai, text2vec-cohere'\r\n      CLUSTER_HOSTNAME: 'node1'\r\n      #######IF YOU WANT AUTHENTICATION UNCOMMENT BELOW########\r\n      # AUTHENTICATION_APIKEY_ENABLED: 'true'\r\n      # AUTHENTICATION_APIKEY_ALLOWED_KEYS: 'readonlykey,adminkey'\r\n      # AUTHENTICATION_APIKEY_USERS: 'jane@doe.com,john@doe.com'\r\n      # AUTHORIZATION_ADMINLIST_ENABLED: 'true'\r\n      # AUTHORIZATION_ADMINLIST_USERS: 'john@doe.com'\r\n      # AUTHORIZATION_ADMINLIST_READONLY_USERS: 'jane@doe.com'\r\n\r\nvolumes:\r\n  weaviate_data: {}\r\n...\r\n```\r\n\r\nAnd the following .env:\r\n```\r\nOLLAMA_URL=http://localhost:11434\r\nOLLAMA_MODEL=llama3\r\n```\r\n\r\nHas anyone else been getting this / have a workaround?",
      "state": "closed",
      "author": "zer0u1tra",
      "author_type": "User",
      "created_at": "2024-05-23T18:38:51Z",
      "updated_at": "2024-09-03T12:51:10Z",
      "closed_at": "2024-09-03T12:51:10Z",
      "labels": [
        "installation"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 12,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/197/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/197",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/197",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:35.807201",
      "comments": [
        {
          "author": "zer0u1tra",
          "body": "Here is the Verba output when trying to embed a .pdf document:\r\n```\r\n(INFO) Importing...\r\n(INFO) Importing 1 files with BasicReader\r\n(INFO) Importing Lanier.pdf\r\n(SUCCESS) Loaded 1 documents in 0.46s\r\n(INFO) Starting Chunking with TokenChunker\r\n(SUCCESS) Chunking completed with 232 chunks in 0.03s\r\n",
          "created_at": "2024-05-23T19:00:34Z"
        },
        {
          "author": "mmike87",
          "body": "I am having the same issue. I am not sure what the issue is ... but I have several hours into this with no progress. ",
          "created_at": "2024-05-27T02:34:43Z"
        },
        {
          "author": "thomashacker",
          "body": "Your Docker Container can't access localhost outside of it's container, you need to specify the OLLAMA_URL to `http://host.docker.internal:11434`",
          "created_at": "2024-05-27T11:15:48Z"
        },
        {
          "author": "mmike87",
          "body": "I am not using a docker container. I am running Ollama native Windows, and Verba in WSL. Maybe that is an issue? I will check if I can hit Ollama from the WSL window.",
          "created_at": "2024-05-27T12:13:12Z"
        },
        {
          "author": "zer0u1tra",
          "body": "> Your Docker Container can't access localhost outside of it's container, you need to specify the OLLAMA_URL to `http://host.docker.internal:11434`\r\n\r\nI started with that and got the same error, just coming from `host.docker.internal`. What I posted is what I tried after the fact.\r\n\r\nAnyone else hav",
          "created_at": "2024-05-27T20:36:49Z"
        }
      ]
    },
    {
      "issue_number": 196,
      "title": "query failed",
      "body": "i have completed with all the work, connected the verba with OLLAMA embedder and uploaded the documents on verba\r\n![1](https://github.com/weaviate/Verba/assets/147985218/3951caa1-65dc-4c5e-93fe-a0c49d708e10)\r\n but when i am asking the querry from that docs it is facing this issue and not giving the answer of query given\r\ni have pasted the error below, can anyone help on this?\r\n\r\n[[-0.5941087 -0.10167141 -0.6369917 ... -0.5234859 -0.14651886\r\n  0.56666654]]\r\n⚠ Query failed: 'data'\r\nINFO:   127.0.0.1:52288 - \"POST /api/query HTTP/1.1\" 200 OK\r\n![2](https://github.com/weaviate/Verba/assets/147985218/87d675ad-1f2a-434b-bdea-44bd36939c6f)\r\n",
      "state": "closed",
      "author": "huzaifa0505",
      "author_type": "User",
      "created_at": "2024-05-23T17:16:15Z",
      "updated_at": "2024-09-03T12:51:03Z",
      "closed_at": "2024-09-03T12:51:03Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 8,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/196/reactions",
        "total_count": 2,
        "+1": 2,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/196",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/196",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:36.069743",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Interesting, thanks for the issue! We'll have a look",
          "created_at": "2024-05-27T11:12:26Z"
        },
        {
          "author": "JochenKanta",
          "body": "same here: Query failed: 'NoneType' object is not iterable\r\n\r\nOS Ubuntu 24.04\r\n\r\nVerba installed via pip add. OLLAMA llama3:70b\r\nPython 3.12.3\r\n\r\nalso the Overview is hanging and not showing any details\r\n\r\n![image](https://github.com/weaviate/Verba/assets/57183517/d49751a8-013c-4e39-81d3-5158a0aede0",
          "created_at": "2024-05-29T11:43:25Z"
        },
        {
          "author": "houssam7737",
          "body": "Same here as well. Exact same issue. Confirmed Ollama server is working correctly and can interact with the model via the terminal. I get that error on Verba both with Ollama AND with my openAI key ... no logs or error can be seen from the verba server beyond that one",
          "created_at": "2024-06-13T21:27:05Z"
        },
        {
          "author": "ArmanBM",
          "body": "Same Issue here with win11, docker\r\nMy logs:\r\n\r\n\r\n> (myenv) E:\\...\\Verba>docker compose up\r\n> time=\"2024-06-18T15:20:43+03:30\" level=warning msg=\"The \\\"COHERE_API_KEY\\\" variable is not set. Defaulting to a blank string.\"\r\n> time=\"2024-06-18T15:20:43+03:30\" level=warning msg=\"The \\\"OLLAMA_MODEL\\\" var",
          "created_at": "2024-06-18T11:52:19Z"
        },
        {
          "author": "fkhaller",
          "body": "It looks like error is coming from here : https://github.com/weaviate/Verba/blob/412331cbab2f88cc94c8ec531f3a8dca38572808/goldenverba/server/api.py#L286-L302\r\n\r\nSeems like manager.retrieve_chunks([payload.query]) is returning None for chunks instead of a list, so it is not iterable on line 301.",
          "created_at": "2024-06-25T17:21:22Z"
        }
      ]
    },
    {
      "issue_number": 195,
      "title": "No response from model",
      "body": "## Description\r\nVerba launched properly. OpenAI, Google API Key, OLLAMA are installed and available properly. 2 PDFs are imported properly with OLLAMA. On all requests the same error appears.\r\nLOG:\r\nReceived query: What is Finance\r\n⚠ Query failed: 'NoneType' object is not iterable\r\nIn UI\r\nSomething went wrong: 'NoneType' object is not iterable",
      "state": "closed",
      "author": "pavlosidelov",
      "author_type": "User",
      "created_at": "2024-05-23T16:28:36Z",
      "updated_at": "2024-09-03T12:50:46Z",
      "closed_at": "2024-09-03T12:50:46Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/195/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/195",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/195",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:36.345747",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue, we'll have a look. Can you provide more information about how you installed Verba? ",
          "created_at": "2024-05-27T11:11:29Z"
        },
        {
          "author": "soniverse-jm",
          "body": "Hello, today I've installed Verba and Weaviate inside a Docker environment. Before I installed Ollama with Ollama-WebGUI and llama3 model.\r\n\r\nNow I like to connect Verba with Ollama and the llama3 model. I have the same error like @pavlosidelov . I can start the Verba and the Weaviate Docker contain",
          "created_at": "2024-06-19T11:58:29Z"
        },
        {
          "author": "thomashacker",
          "body": "Did make sure that you installed the llama3 model via ollama? `ollama run llama3`",
          "created_at": "2024-06-27T13:28:21Z"
        }
      ]
    },
    {
      "issue_number": 194,
      "title": "WebSocket Error: 'finish_reason'",
      "body": "## Description\r\nI am using docker. Calling the API and generate an answer would cause the websocket to go offline.\r\n\r\n## Info in Chrome\r\nUnchecked runtime.lastError: The message port closed before a response was received.\r\nlocalhost/:1 Unchecked runtime.lastError: The message port closed before a response was received.\r\nlocalhost/:1 Unchecked runtime.lastError: The message port closed before a response was received.\r\nlocalhost/:1 Unchecked runtime.lastError: The message port closed before a response was received.\r\nlocalhost/:1 Unchecked runtime.lastError: The message port closed before a response was received.\r\nlocalhost/:1 Unchecked runtime.lastError: The message port closed before a response was received.\r\nlocalhost/:1 Unchecked runtime.lastError: The message port closed before a response was received.\r\npage-9ca43b0df0af136b.js:1 WebSocket connection closed cleanly, code=1005, reason=\r\npage-9ca43b0df0af136b.js:1 WebSocket connection opened to ws://localhost:8000/ws/generate_stream\r\n23-5e3f67a9ac794630.js:1 WebSocket connection died\r\nwindow.console.error @ 23-5e3f67a9ac794630.js:1\r\n\r\n## Info in Docker\r\nERROR:    Exception in ASGI application\r\n                    verba-1     | Traceback (most recent call last):\r\n                    verba-1     |   File \"/Verba/goldenverba/server/api.py\", line 179, in websocket_generate_stream\r\n                    verba-1     |     async for chunk in manager.generate_stream_answer(\r\n                    verba-1     |   File \"/Verba/goldenverba/verba_manager.py\", line 662, in generate_stream_answer\r\n                    verba-1     |     async for result in self.generator_manager.generators[\r\n                    verba-1     |   File \"/Verba/goldenverba/components/generation/GPT4Generator.py\", line 82, in generate_stream\r\n                    verba-1     |     \"finish_reason\": chunk[\"choices\"][0][\"finish_reason\"],\r\n                    verba-1     |                      ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\r\n                    verba-1     | KeyError: 'finish_reason'\r\n                    verba-1     | \r\n                    verba-1     | During handling of the above exception, another exception occurred:\r\n                    verba-1     | \r\n                    verba-1     | Traceback (most recent call last):\r\n                    verba-1     |   File \"/usr/local/lib/python3.11/site-packages/uvicorn/protocols/websockets/websockets_impl.py\", line 240, in run_asgi\r\n                    verba-1     |     result = await self.app(self.scope, self.asgi_receive, self.asgi_send)\r\n                    verba-1     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n                    verba-1     |   File \"/usr/local/lib/python3.11/site-packages/uvicorn/middleware/proxy_headers.py\", line 69, in __call__\r\n                    verba-1     |     return await self.app(scope, receive, send)\r\n                    verba-1     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n                    verba-1     |   File \"/usr/local/lib/python3.11/site-packages/fastapi/applications.py\", line 292, in __call__\r\n                    verba-1     |     await super().__call__(scope, receive, send)\r\n                    verba-1     |   File \"/usr/local/lib/python3.11/site-packages/starlette/applications.py\", line 122, in __call__\r\n                    verba-1     |     await self.middleware_stack(scope, receive, send)\r\n                    verba-1     |   File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py\", line 149, in __call__\r\n                    verba-1     |     await self.app(scope, receive, send)\r\n                    verba-1     |   File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/cors.py\", line 75, in __call__\r\n                    verba-1     |     await self.app(scope, receive, send)\r\n                    verba-1     |   File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/exceptions.py\", line 79, in __call__\r\n                    verba-1     |     raise exc\r\n                    verba-1     |   File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/exceptions.py\", line 68, in __call__\r\n                    verba-1     |     await self.app(scope, receive, sender)\r\n                    verba-1     |   File \"/usr/local/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py\", line 20, in __call__\r\n                    verba-1     |     raise e\r\n                    verba-1     |   File \"/usr/local/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py\", line 17, in __call__\r\n                    verba-1     |     await self.app(scope, receive, send)\r\n                    verba-1     |   File \"/usr/local/lib/python3.11/site-packages/starlette/routing.py\", line 718, in __call__\r\n                    verba-1     |     await route.handle(scope, receive, send)\r\n                    verba-1     |   File \"/usr/local/lib/python3.11/site-packages/starlette/routing.py\", line 341, in handle\r\n                    verba-1     |     await self.app(scope, receive, send)\r\n                    verba-1     |   File \"/usr/local/lib/python3.11/site-packages/starlette/routing.py\", line 82, in app\r\n                    verba-1     |     await func(session)\r\n                    verba-1     |   File \"/usr/local/lib/python3.11/site-packages/fastapi/routing.py\", line 324, in app\r\n                    verba-1     |     await dependant.call(**values)\r\n                    verba-1     |   File \"/Verba/goldenverba/server/api.py\", line 193, in websocket_generate_stream\r\n                    verba-1     |     await websocket.send_json(\r\n                    verba-1     |   File \"/usr/local/lib/python3.11/site-packages/starlette/websockets.py\", line 171, in send_json\r\n                    verba-1     |     text = json.dumps(data, separators=(\",\", \":\"))\r\n                    verba-1     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n                    verba-1     |   File \"/usr/local/lib/python3.11/json/__init__.py\", line 238, in dumps\r\n                    verba-1     |     **kw).encode(obj)\r\n                    verba-1     |           ^^^^^^^^^^^\r\n                    verba-1     |   File \"/usr/local/lib/python3.11/json/encoder.py\", line 200, in encode\r\n                    verba-1     |     chunks = self.iterencode(o, _one_shot=True)\r\n                    verba-1     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n                    verba-1     |   File \"/usr/local/lib/python3.11/json/encoder.py\", line 258, in iterencode\r\n                    verba-1     |     return _iterencode(o, 0)\r\n                    verba-1     |            ^^^^^^^^^^^^^^^^^\r\n                    verba-1     |   File \"/usr/local/lib/python3.11/json/encoder.py\", line 180, in default\r\n                    verba-1     |     raise TypeError(f'Object of type {o.__class__.__name__} '\r\n                    verba-1     | TypeError: Object of type KeyError is not JSON serializable\r\n                    verba-1     | INFO:     connection closed\r\n                    verba-1     | ✘ WebSocket Error: 'finish_reason'\r\n",
      "state": "closed",
      "author": "NeverOccurs",
      "author_type": "User",
      "created_at": "2024-05-23T16:00:56Z",
      "updated_at": "2024-09-03T12:50:38Z",
      "closed_at": "2024-09-03T12:50:38Z",
      "labels": [
        "investigating",
        "Generator"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/194/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/194",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/194",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:36.601686",
      "comments": [
        {
          "author": "thomashacker",
          "body": "It seems like the payload sent by OpenAI does not contain the `finish_reason` key. Did you check if your OpenAI keys has access to GPT4 and has enough credits?",
          "created_at": "2024-05-27T11:10:00Z"
        },
        {
          "author": "NeverOccurs",
          "body": "> It seems like the payload sent by OpenAI does not contain the `finish_reason` key. Did you check if your OpenAI keys has access to GPT4 and has enough credits?\n\nYes, seems my credit has been deducted but can't get a decent response. I tried around for sometime but getting 405 Not Allowed error now",
          "created_at": "2024-06-03T00:16:45Z"
        },
        {
          "author": "13777469818",
          "body": "unsubscribe\r\n\r\n\r\n\r\n商凯尔（鬼谷子）  |  咪咕数字传媒有限公司  |  系统研发部（数据应用中心）\r\n13777469818|  ***@***.***|  杭州市西湖区文二西路780号西溪银座A座\r\n \r\nFrom: TuyoSera\r\nDate: 2024-06-03 08:17\r\nTo: weaviate/Verba\r\nCC: Subscribed\r\nSubject: Re: [weaviate/Verba] WebSocket Error: 'finish_reason' (Issue #194)\r\nIt seems like the payload sent b",
          "created_at": "2024-06-03T00:34:56Z"
        },
        {
          "author": "thomashacker",
          "body": "I think this issue should be fixed in the latest release, let me know if not",
          "created_at": "2024-09-03T12:50:38Z"
        }
      ]
    },
    {
      "issue_number": 193,
      "title": "repeating the answer to the older questions in the chat",
      "body": "## Description\r\nverba keeps responding to older messages in the chat, ignoring newer ones\r\n\r\n## Is this a bug or a feature?\r\n- [x] Bug\r\n- [ ] Feature\r\n\r\n## Steps to Reproduce\r\nstart a chat, ask one question, then move to the next question\r\n\r\n## Additional context\r\n<!-- Add any other context about the problem here. -->\r\n\r\n![image](https://github.com/weaviate/Verba/assets/35190548/2f6d0c51-2fd0-42ec-a12d-73a4c6e1d973)\r\n",
      "state": "closed",
      "author": "amihos",
      "author_type": "User",
      "created_at": "2024-05-23T11:29:47Z",
      "updated_at": "2024-09-03T12:50:12Z",
      "closed_at": "2024-09-03T12:50:12Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 7,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/193/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/193",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/193",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:36.821227",
      "comments": [
        {
          "author": "thomashacker",
          "body": "What model are you using for conversation?",
          "created_at": "2024-05-23T13:06:39Z"
        },
        {
          "author": "amihos",
          "body": "ollamaembeder\r\n\r\n\r\nOn Thu, 23 May 2024 at 14:07, Edward ***@***.***> wrote:\r\n\r\n> What model are you using for conversation?\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/weaviate/Verba/issues/193#issuecomment-2127062658>,\r\n> or unsubscribe\r\n> <https://github.com/n",
          "created_at": "2024-05-23T19:54:11Z"
        },
        {
          "author": "thomashacker",
          "body": "What specific Ollama Model are you using? Might be that the issue is related to the model you're using",
          "created_at": "2024-05-27T11:23:42Z"
        },
        {
          "author": "amihos",
          "body": "llama 3\r\n\r\n\r\n\r\nOn Mon, 27 May 2024 at 12:24, Edward ***@***.***> wrote:\r\n\r\n> What specific Ollama Model are you using? Might be that the issue is\r\n> related to the model you're using\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/weaviate/Verba/issues/193#issuecomm",
          "created_at": "2024-05-28T10:34:28Z"
        },
        {
          "author": "thomashacker",
          "body": "Have you tried other models as well?",
          "created_at": "2024-05-31T11:32:21Z"
        }
      ]
    },
    {
      "issue_number": 188,
      "title": "Installation error",
      "body": "```\r\nSuccessfully built goldenverba\r\nInstalling collected packages: asyncio, websockets, validators, typing-extensions, sniffio, regex, pyyaml, python-dotenv, pypdf, pycparser, multidict, httptools, h11, frozenlist, colorama, attrs, annotated-types, yarl, wasabi, tqdm, tiktoken, pydantic-core, click, cffi, anyio, aiosignal, watchfiles, uvicorn, starlette, pydantic, cryptography, aiohttp, openai, fastapi, authlib, weaviate-client, goldenverba\r\n  WARNING: Failed to write executable - trying to use .deleteme logic\r\nERROR: Could not install packages due to an OSError: [WinError 2] Не удается найти указанный файл: 'C:\\\\Python312\\\\Scripts\\\\dotenv.exe' -> 'C:\\\\Python312\\\\Scripts\\\\dotenv.exe.deleteme'\r\n```\r\n\r\nWhy it's use system OS resourses? It should be all in VENV. What Python vesion it should be? ",
      "state": "closed",
      "author": "VitaliyAT",
      "author_type": "User",
      "created_at": "2024-05-22T17:17:29Z",
      "updated_at": "2024-09-03T12:49:32Z",
      "closed_at": "2024-09-03T12:49:32Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/188/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/188",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/188",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:37.065880",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey, thanks for your issue. Please make sure that you create a clean virtual environment and have upgrade the latest setup tools `pip install --upgrade pip setuptools wheel`. Additionally, this could also be related to permission issues. ",
          "created_at": "2024-06-27T13:24:35Z"
        }
      ]
    },
    {
      "issue_number": 186,
      "title": "Azure Open AI - Resource Not Found and Chunk Mismatch",
      "body": "I am trying to integrate Azure Open AI and using these below environment variables for the verba and weaviate but getting 404 error: Resource not found. Also in UI: Embedding not successful: Chunk mismatch for 51** 0 != 14 , \r\n\r\nverba:\r\n   environment:\r\n      - WEAVIATE_URL_VERBA=http://weaviate:8080\r\n      - OPENAI_API_TYPE=\"azure\"\r\n      - OPENAI_API_KEY=c*\r\n      - OPENAI_BASE_URL=https://rr.openai.azure.com/\r\n      - AZURE_OPENAI_RESOURCE_NAME=rr\r\n      - AZURE_OPENAI_EMBEDDING_MODEL=\"text-embedding-ada-002\"\r\n      - OPENAI_MODEL=\"gpt-35-turbo\"\r\n      - OPENAI_API_VERSION=\"2023-03-15-preview\"\r\n      - WAIT_TIME_BETWEEN_INGESTION_QUERIES_MS=100\r\n      \r\n  weaviate:\r\n    environment:\r\n          QUERY_DEFAULTS_LIMIT: 25\r\n          AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'\r\n          PERSISTENCE_DATA_PATH: '/var/lib/weaviate'\r\n          ENABLE_MODULES: 'text2vec-openai, generative-openai, qna-openai, text2vec-cohere'\r\n          CLUSTER_HOSTNAME: 'node1'\r\n          \r\n  Did anyone face the same issue?",
      "state": "closed",
      "author": "Tansif",
      "author_type": "User",
      "created_at": "2024-05-22T11:07:59Z",
      "updated_at": "2024-09-03T12:49:28Z",
      "closed_at": "2024-09-03T12:49:28Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 7,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/186/reactions",
        "total_count": 2,
        "+1": 2,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/186",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/186",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:37.282495",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! Did you install Verba from source?",
          "created_at": "2024-05-23T13:15:30Z"
        },
        {
          "author": "schoi80",
          "body": "I can confirm the same issue on my end.  This what I see in the log\r\n![image](https://github.com/weaviate/Verba/assets/1744194/75be2361-9e6c-42be-84db-6dcb4d70d5d9)\r\n",
          "created_at": "2024-05-24T21:36:39Z"
        },
        {
          "author": "Tansif",
          "body": "> Thanks for the issue! Did you install Verba from source?\r\n\r\nI am using Docker for the deployment.",
          "created_at": "2024-05-27T08:27:39Z"
        },
        {
          "author": "thomashacker",
          "body": "Thanks for the info! There seems to be an issue with the azure implementation, we're looking into it",
          "created_at": "2024-05-27T11:28:30Z"
        },
        {
          "author": "liqingqing562",
          "body": "Has the problem been solved? @Tansif \r\nI had the same problem，Below is a screenshot of my journal\r\n--\r\ndial tcp: lookup https on xx.xx.xx.xx:53: no such host'}]}, 'status':\r\n'FAILED'}\r\n",
          "created_at": "2024-06-11T06:33:07Z"
        }
      ]
    },
    {
      "issue_number": 174,
      "title": "\"Query failed: 'NoneType' object is not iterable\" Error when starting Verba Chat",
      "body": "## Description\r\nApplication is up and running, but Verba Chat is not working. It is showing \"Something went wrong: 'NoneType' object is not iterable\", although Verba variables are available.\r\n\r\n\r\nIf I look at the logs, I see the following:. Included some lines above and below for context.\r\n```\r\nINFO:     127.0.0.1:64363 - \"POST /api/set_config HTTP/1.1\" 200 OK\r\nINFO:     ('127.0.0.1', 64374) - \"WebSocket /ws/generate_stream\" [accepted]\r\nINFO:     connection open\r\nINFO:     127.0.0.1:64363 - \"POST /api/suggestions HTTP/1.1\" 200 OK\r\n✔ Received query: What is verba?\r\n⚠ Query failed: 'NoneType' object is not iterable\r\nINFO:     127.0.0.1:64386 - \"POST /api/query HTTP/1.1\" 200 OK\r\n```\r\n\r\n\r\n## Is this a bug or a feature?\r\n- [x] Bug\r\n\r\n## Steps to Reproduce\r\nFollow the steps,\r\n<img width=\"1504\" alt=\"Screenshot 2024-05-20 at 1 20 20 AM\" src=\"https://github.com/weaviate/Verba/assets/37157382/df7c2838-f991-4796-ad85-8f68eb55c6e2\">\r\n![Issue](https://github.com/weaviate/Verba/assets/37157382/0d97a167-a02f-4618-be19-e6f6f56b5be4)\r\n set `.env` and run the project.\r\n\r\n",
      "state": "closed",
      "author": "Badhansen",
      "author_type": "User",
      "created_at": "2024-05-20T00:38:39Z",
      "updated_at": "2024-09-03T12:49:08Z",
      "closed_at": "2024-09-03T12:49:08Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 26,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/174/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 1,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/174",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/174",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:37.511705",
      "comments": []
    },
    {
      "issue_number": 171,
      "title": "Using ollama in docker compse needs separate models for embeddings and chat",
      "body": "## Description\r\nWhen running Verba using docker compose with OLLAMA_MODEL set to `llama3` it is not possible add documents. It gives 404 on `/api/embeddings` in the ollama server. And it is not possible to get a chat response as it gets a similar response from the ollama server.\r\nIf I change the OLLAMA_MODEL to `mxbai-embed-large` I can import documents and get chunks back as responses, but still no chat answer as 404 is returned on `/api/chat` in the ollama server.\r\n\r\n## Is this a bug or a feature?\r\n- [x] Bug\r\n- [x] Feature\r\n\r\n## Steps to Reproduce\r\nClone the project\r\nAdd\r\n```\r\nOLLAMA_URL=http://localhost:11434\r\nOLLAMA_MODEL=llama3\r\n```\r\nto `.env`\r\nRun `docker compose up`\r\nStart ollama server `ollama serve`\r\nOpen http://localhost:8000\r\nEnter something in chat and see it fail with `'NoneType' object is not iterable`\r\nAlso see error in ollama server log `| 404 |     577.333µs |       127.0.0.1 | POST     \"/api/embeddings\"`\r\n\r\nTry to import a document\r\nSee a list of 404 on /api/embeddings in ollama server\r\n\r\nStop Verba\r\nChange OLLAMA_MODEL to `mxbai-embed-large`\r\nStart `docker compose up`\r\nImport a document and see a lot of 200 responses in ollama server\r\nType something in chat\r\nSee an ever looping `Generating response` widget and a 404 on `/api/chat` in ollama server\r\nChunks are however returned.\r\n\r\nI think the solution is to be able to specify an embedding model along with the chat model.",
      "state": "closed",
      "author": "kjeldahl",
      "author_type": "User",
      "created_at": "2024-05-18T14:37:26Z",
      "updated_at": "2024-09-03T12:48:37Z",
      "closed_at": "2024-09-03T12:48:36Z",
      "labels": [
        "bug",
        "enhancement"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/171/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/171",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/171",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:37.511728",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! Adding a new environment variable to split Generation and Embedding Model for Ollama is definitely on the list. We'll look into that 🚀 ",
          "created_at": "2024-05-18T15:53:21Z"
        },
        {
          "author": "cha0s",
          "body": "I think this is a classic [XY problem](https://en.wikipedia.org/wiki/XY_problem), because I see the error `'NoneType' object is not iterable` that seems to be plaguing many people. I don't think the immediate solution is to add more configuration, although that would be cool to have!",
          "created_at": "2024-05-20T11:54:15Z"
        },
        {
          "author": "kjeldahl",
          "body": "@chaos I have added a pull request which solves the problem, for me any way.\r\n\r\nPart of the problem besides trying to chat with an embedding model was that I had not installed `llama3`in ollama but `llama3:instruct` which caused an error that was not reported in the ui.",
          "created_at": "2024-05-20T13:49:21Z"
        },
        {
          "author": "kjeldahl",
          "body": "@cha0s If I use `llama3` it works for both chat and embedding without having separate models.",
          "created_at": "2024-05-22T06:41:09Z"
        },
        {
          "author": "thomashacker",
          "body": "We seperated both in the newest release!",
          "created_at": "2024-09-03T12:48:36Z"
        }
      ]
    },
    {
      "issue_number": 158,
      "title": "Documents disappears from the view when selecting document type after pagination",
      "body": "## Description\r\nWhen navigating to the \"Documents\" area and clicking on a specific page, such as Page 2, and subsequently selecting a document type, like \"Blog\", all documents disappear from the view. Refreshing the page is the only way to restore the document list.\r\n\r\n## Is this a bug or a feature?\r\n- [x] Bug\r\n- [ ] Feature\r\n\r\n## Steps to Reproduce\r\n1. Go to the \"Documents\" area.\r\n2. Navigate to a specific page, e.g., Page 2.\r\n3. Click on a document type, e.g., \"Blog\".\r\n\r\n## Additional context\r\nThis issue disrupts the user experience by causing the disappearance of all documents when selecting a document type after navigating through pagination. Resolving this bug would ensure smoother navigation and usability within the \"Documents\" section.\r\n\r\n## 1\r\n![image](https://github.com/weaviate/Verba/assets/23183261/b1c7b69d-26a2-4f10-8789-29b825925b8c)\r\n## 2\r\n![Verba 1](https://github.com/weaviate/Verba/assets/23183261/b41de560-b38e-41f9-b65f-0ba29de2d680)\r\n",
      "state": "closed",
      "author": "bakongi",
      "author_type": "User",
      "created_at": "2024-05-16T15:35:30Z",
      "updated_at": "2024-09-03T12:46:49Z",
      "closed_at": "2024-09-03T12:46:48Z",
      "labels": [
        "enhancement",
        "frontend"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/158/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 1,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/158",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/158",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:37.757521",
      "comments": [
        {
          "author": "thomashacker",
          "body": "This is great feedback, thanks a lot! We'll look into fixing it",
          "created_at": "2024-05-17T16:34:52Z"
        },
        {
          "author": "thomashacker",
          "body": "Should be fixed in the newest release",
          "created_at": "2024-09-03T12:46:48Z"
        }
      ]
    },
    {
      "issue_number": 157,
      "title": " 404 (Not Found) error at https://verba.weaviate.io/img/chunk.png",
      "body": "## Description\r\nWhen attempting to access the image at https://verba.weaviate.io/img/chunk.png, a 404 (Not Found) error is returned.\r\n\r\n## Is this a bug or a feature?\r\n- [x] Bug\r\n- [ ] Feature\r\n\r\n## Steps to Reproduce\r\n1. Attempt to access the image at https://verba.weaviate.io/img/chunk.png.\r\n2. Observe the 404 (Not Found) error.",
      "state": "closed",
      "author": "bakongi",
      "author_type": "User",
      "created_at": "2024-05-16T15:22:33Z",
      "updated_at": "2024-09-03T12:46:36Z",
      "closed_at": "2024-09-03T12:46:36Z",
      "labels": [
        "bug",
        "frontend"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/157/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/157",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/157",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:37.975255",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks, we're looking into this",
          "created_at": "2024-05-17T16:35:57Z"
        },
        {
          "author": "thomashacker",
          "body": "Should be fixed with the latest release",
          "created_at": "2024-09-03T12:46:36Z"
        }
      ]
    },
    {
      "issue_number": 145,
      "title": "Feat: Please add a config for OpenAI Proxy",
      "body": "System environment value proxy seems not working here. \r\nIs that possible to add a proxy config for openai python lib?\r\n\r\nSuch as:\r\n\r\n```\r\n\r\n## Generate by GPT4\r\n\r\nimport openai\r\nfrom requests.sessions import Session\r\n\r\n# Create a Requests Session instance\r\nsession = Session()\r\nsession.proxies = {\r\n    'http': 'http://your-proxy-address:port',\r\n    'https': 'http://your-proxy-address:port',\r\n}\r\n\r\n# Modify the session used by the OpenAI client\r\nopenai.api_requestor._client.session = session\r\n\r\n# Now you can use the OpenAI client, and it will make requests through the proxy you configured\r\nresponse = openai.Completion.create(\r\n  engine=\"text-davinci-003\",\r\n  prompt=\"Hello, world!\",\r\n  max_tokens=5\r\n)\r\n```\r\n\r\nor\r\n\r\n\r\n```\r\n\r\nopenai.proxy = { \r\n\t\t      'http': 'http://your-proxy-address:port',\r\n\t\t      'https': 'http://your-proxy-address:port' \r\n\t\t  }\r\n```\r\n\r\n\r\n",
      "state": "closed",
      "author": "richard-guan-dev",
      "author_type": "User",
      "created_at": "2024-05-06T02:22:10Z",
      "updated_at": "2024-09-03T12:46:24Z",
      "closed_at": "2024-09-03T12:46:24Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/145/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/145",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/145",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:38.169551",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks, we're looking into it!",
          "created_at": "2024-05-06T06:48:46Z"
        },
        {
          "author": "thomashacker",
          "body": "Feel free to create a PR for this! 😄 I'm closing this for now",
          "created_at": "2024-09-03T12:46:24Z"
        }
      ]
    },
    {
      "issue_number": 129,
      "title": "Instruction: How to add Anthropic's Claude models",
      "body": "Hi everyone. As you know some latest Anthropic's Claude models is better and chaeper than OpenaAI models. So I create a new generator file to use Anthropic's models. and made changes to manager.py file in goldenverba/components/generation\r\n\r\n[generation.zip](https://github.com/weaviate/Verba/files/14816283/generation.zip)\r\n\r\nInstall Anthropic library:\r\n`pip install anthropic`\r\n\r\nand you should add this variables to your environment (or .env file):\r\n\r\n```\r\nANTHROPIC_API_KEY=sk-ant-api03-.....pAAA\r\n\r\nANTHROPIC_MODEL=claude-3-haiku-20240307\r\n```\r\nYou will need API key from Anthropic at https://console.anthropic.com/\r\n\r\nAvailable models:\r\n\r\nClaude 3 Opus | claude-3-opus-20240229\r\n-- | --\r\nClaude 3 Sonnet | claude-3-sonnet-20240229\r\nClaude 3 Haiku | claude-3-haiku-20240307\r\n\r\n\r\nP.S.\r\nThe generator's code made with help of Claude and GPT-3.5/4",
      "state": "closed",
      "author": "bakongi",
      "author_type": "User",
      "created_at": "2024-03-30T08:05:05Z",
      "updated_at": "2024-09-03T12:45:10Z",
      "closed_at": "2024-09-03T12:45:10Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 9,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/129/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/129",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/129",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:38.394945",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Great work! Thanks 🚀 We'll implement it in the coming next update ",
          "created_at": "2024-04-11T08:55:14Z"
        },
        {
          "author": "bakongi",
          "body": "I'd forgotten...\r\n\r\nin \"verba_manager.py\" add:\r\n\r\n```\r\n        # Check Anthropic ENV KEY\r\n        try:\r\n            import anthropic\r\n\r\n            anthropic_key = os.environ.get(\"ANTHROPIC_API_KEY\", \"\")\r\n\r\n            if anthropic_key != \"\":\r\n                self.environment_variables[\"ANTHROPIC_AP",
          "created_at": "2024-04-21T06:20:48Z"
        },
        {
          "author": "unityforge",
          "body": "Do we need to rebuild something or it's enough to add the modification and restart Verba ?",
          "created_at": "2024-07-11T15:42:02Z"
        },
        {
          "author": "bakongi",
          "body": " it's enough to add the modification and restart Verba ",
          "created_at": "2024-07-11T15:49:14Z"
        },
        {
          "author": "unityforge",
          "body": "ok, strange. Nothing changed in my case after the modification...",
          "created_at": "2024-07-11T16:42:30Z"
        }
      ]
    },
    {
      "issue_number": 128,
      "title": "Instruction: How to add BAAI/bge-m3 embedder",
      "body": "Hi everyone. This is working sample how to add BAAI/bge-m3 embedder to Verba.\r\n\r\n1. Create copy of MiniLMEmbedder.py file and rename it to \"BGEM3Embedder.py\" in goldenverba/components/embedding\r\n2. Make changes in the file: rename MiniLMEmbedder class to BGEM3Embedder and so on:\r\n```\r\nfrom tqdm import tqdm\r\nfrom wasabi import msg\r\nfrom weaviate import Client\r\n\r\nfrom goldenverba.components.embedding.interface import Embedder\r\nfrom goldenverba.components.reader.document import Document\r\n\r\n\r\nclass BGEM3Embedder(Embedder):\r\n    \"\"\"\r\n    BGEM3Embedder for Verba.\r\n    \"\"\"\r\n\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.name = \"BGEM3Embedder\"\r\n        self.requires_library = [\"torch\", \"transformers\"]\r\n        self.description = \"Embeds and retrieves objects using SentenceTransformer's BAAI/bge-m3 model\"\r\n        self.vectorizer = \"BAAI/bge-m3\"\r\n        self.model = None\r\n        self.tokenizer = None\r\n        try:\r\n            import torch\r\n            from transformers import AutoModel, AutoTokenizer\r\n\r\n            def get_device():\r\n                if torch.cuda.is_available():\r\n                    return torch.device(\"cuda\")\r\n                elif torch.backends.mps.is_available():\r\n                    return torch.device(\"mps\")\r\n                else:\r\n                    return torch.device(\"cpu\")\r\n\r\n            self.device = get_device()\r\n\r\n            self.model = AutoModel.from_pretrained(\r\n                \"BAAI/bge-m3\", device_map=self.device\r\n            )\r\n            self.tokenizer = AutoTokenizer.from_pretrained(\r\n                \"BAAI/bge-m3\", device_map=self.device\r\n            )\r\n            self.model = self.model.to(self.device)\r\n...\r\n```\r\n3. In manager.py in goldenverba/components/embedding make this changes:\r\n```\r\nfrom goldenverba.components.embedding.MiniLMEmbedder import MiniLMEmbedder\r\nfrom goldenverba.components.embedding.BGEM3Embedder import BGEM3Embedder\r\nfrom goldenverba.components.reader.document import Document\r\n\r\n\r\nclass EmbeddingManager:\r\n    def __init__(self):\r\n        self.embedders: dict[str, Embedder] = {\r\n            \"MiniLMEmbedder\": MiniLMEmbedder(),\r\n            \"BGEM3Embedder\": BGEM3Embedder(),\r\n            \"ADAEmbedder\": ADAEmbedder(),\r\n            \"CohereEmbedder\": CohereEmbedder(),\r\n        }\r\n\r\n...\r\n```\r\n4. Make changes in goldenverba/components/schema/schema_generation.py:\r\n```\r\nVECTORIZERS = {\"text2vec-openai\", \"text2vec-cohere\"}  # Needs to match with Weaviate modules\r\nEMBEDDINGS = {\"MiniLM\", \"BAAI/bge-m3\"}  # Custom Vectors\r\n```\r\n\r\n5. Done! Start Verba!\r\n\r\nP.S.\r\nIf you want to use English specific model like \"BAAI/bge-large-en\" just use \"BAAI/bge-large-en\" instead of \"BAAI/bge-m3\" and use appropriate names for files.",
      "state": "closed",
      "author": "bakongi",
      "author_type": "User",
      "created_at": "2024-03-30T07:49:07Z",
      "updated_at": "2024-09-03T12:45:00Z",
      "closed_at": "2024-09-03T12:44:59Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 16,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/128/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/128",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/128",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:38.622505",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Great work! We'll look into this for the next update",
          "created_at": "2024-04-11T08:56:11Z"
        },
        {
          "author": "moncefarajdal",
          "body": "@bakongi I've done the same as you but I can't figure out where to choose this custom embedder in the frontend of Verba. Any suggestions please?",
          "created_at": "2024-05-16T09:44:13Z"
        },
        {
          "author": "bakongi",
          "body": "> @bakongi I've done the same as you but I can't figure out where to choose this custom embedder in the frontend of Verba. Any suggestions please?\r\n\r\nHow you installed verba - pip or from sources?",
          "created_at": "2024-05-16T10:32:53Z"
        },
        {
          "author": "moncefarajdal",
          "body": "@bakongi I installed Verba using `pip install goldenverba` like shown in the documentation",
          "created_at": "2024-05-16T10:37:43Z"
        },
        {
          "author": "bakongi",
          "body": "> @bakongi I installed Verba using `pip install goldenverba` like shown in the documentation\r\n\r\nOk. Where did you make changes? (folder path) \r\nI think you should make changes in python shared library folder where verba is installed\r\n",
          "created_at": "2024-05-16T11:08:56Z"
        }
      ]
    },
    {
      "issue_number": 120,
      "title": "can I run Verba on an air-gapped environment ?",
      "body": "I am trying to run verba on an airgapped environment, I am getting the following error,  it seems like verba trying to connect to this URL \r\n```\r\n\r\nrequests.exceptions.ConnectionError: HTTPSConnectionPool(host='openaipublic.blob.core.windows.net', port=443): Max retries exceeded with url: /encodings/cl100k_base.tiktoken (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x7fc58f81fdc0>: Failed to resolve 'openaipublic.blob.core.windows.net' ([Errno -2] Name or service not known)\"))\r\nsys:1: ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>\r\n```\r\n ",
      "state": "closed",
      "author": "ahadrez",
      "author_type": "User",
      "created_at": "2024-02-28T08:04:39Z",
      "updated_at": "2024-09-03T11:08:39Z",
      "closed_at": "2024-09-03T11:08:39Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 6,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/120/reactions",
        "total_count": 3,
        "+1": 2,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 1
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/120",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/120",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:38.894852",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Interesting use-case, have you set any OpenAI Keys? If not it's interesting to see that it still tries to create a connection?",
          "created_at": "2024-04-11T09:08:37Z"
        },
        {
          "author": "Greatz08",
          "body": "@thomashacker did you find and solution? because i am facing same error",
          "created_at": "2024-06-05T02:41:25Z"
        },
        {
          "author": "Greatz08",
          "body": "i even tried setting random openai key still got same error",
          "created_at": "2024-06-05T02:42:08Z"
        },
        {
          "author": "thomashacker",
          "body": "We're looking into changing the openai implementation, I'll give an update here once we did that 👍 ",
          "created_at": "2024-06-27T13:16:26Z"
        },
        {
          "author": "kopparam",
          "body": "Hi, I have the same issue. I have not set OpenAI keys. Only sey the ollama keys in env. \n\nStarting verba tries to connect to OpenAI ",
          "created_at": "2024-08-28T06:50:12Z"
        }
      ]
    },
    {
      "issue_number": 119,
      "title": "Using a custom embedder",
      "body": "Hello,\r\nI would like to use **a custom embedding model** hosted via the **HuggingFace** library other than the ones already available via the Verba interface (Mini-LM, Ada Embedder, and Cohere Embedder), but I can't seem to find a way to do that.\r\nI tried connecting a Weaviate cluster but I don't know how I can add custom embedders to it as well.\r\n\r\nI have the same inquiry about LLMs available via the HuggingFace interface and the possibility of using other ones in Verba other than LLAMA.\r\n\r\nCould you please provide me with some guidance regarding this matter? I'd be most thankful!\r\n\r\nThank you in advance.",
      "state": "closed",
      "author": "israaexol",
      "author_type": "User",
      "created_at": "2024-02-27T08:05:50Z",
      "updated_at": "2024-09-03T11:08:24Z",
      "closed_at": "2024-09-03T11:08:24Z",
      "labels": [
        "documentation",
        "enhancement"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 6,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/119/reactions",
        "total_count": 3,
        "+1": 2,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 1,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/119",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/119",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:39.100893",
      "comments": [
        {
          "author": "moncefarajdal",
          "body": "I'm also looking for this feature. I tried to hack into the Llama generator to use falcon-7b model from HuggingFace, but things seem not to be working. If anyone has already done it please let us know!\r\nThanks guys.",
          "created_at": "2024-03-21T14:48:58Z"
        },
        {
          "author": "bakongi",
          "body": "Maybe this help\r\nhttps://github.com/weaviate/Verba/issues/128#issue-2216314195",
          "created_at": "2024-03-30T14:58:29Z"
        },
        {
          "author": "thomashacker",
          "body": "Great point! It would be a good idea to add some Resources for custom components!",
          "created_at": "2024-04-11T09:09:52Z"
        },
        {
          "author": "Mr-Jack-Tung",
          "body": "I try this way:\r\n\r\nFile: manager.py\r\n\r\n...\r\nfrom transformers import AutoTokenizer\r\nencoding = AutoTokenizer.from_pretrained(\"sentence-transformers/all-MiniLM-L6-v2\")\r\n\"# encoding = tiktoken.encoding_for_model(\"gpt-3.5-turbo\") # replace this code\"\r\n...\r\nitem_tokens = encoding.encode(item_dict[\"conte",
          "created_at": "2024-04-13T14:20:34Z"
        },
        {
          "author": "thomashacker",
          "body": "Good point! It is definitely something that can be improved! Your code will be helpful, thanks",
          "created_at": "2024-04-15T07:49:00Z"
        }
      ]
    },
    {
      "issue_number": 117,
      "title": "Running into import errors",
      "body": "Hi Guys,\r\n\r\nI am trying to import a .pdf which has the size of 7.7MB.\r\n\r\nI've tried using the different settings but have been unable to import. I'm currently using the Token Chunker with 250 units and an overlap of 50.\r\n\r\nChunk mismatch for 3c161a37-d99a-4f2c-9c54-a7db5275e217 0 != 4527\r\n\r\n\r\n[Site Reliability Engineering.pdf](https://github.com/weaviate/Verba/files/14364353/Site.Reliability.Engineering.pdf)\r\n\r\n\r\n\r\n\r\n\r\n",
      "state": "closed",
      "author": "moefarag1",
      "author_type": "User",
      "created_at": "2024-02-21T19:57:53Z",
      "updated_at": "2024-09-03T11:08:01Z",
      "closed_at": "2024-09-03T11:08:01Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 12,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/117/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/117",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/117",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:39.310955",
      "comments": [
        {
          "author": "Shmoji",
          "body": "running into same thing. Not just with PDF, but anything i try with any mix of settings",
          "created_at": "2024-03-13T19:24:58Z"
        },
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! We'll look into that\r\n",
          "created_at": "2024-04-11T09:11:01Z"
        },
        {
          "author": "sitaram70",
          "body": "my 2 cents!\r\nDid you use docker compose?\r\nI am able to upload files using docker compose.\r\n\r\nThis is what I did:\r\n1. Stop and Delete docker containers for Verba and Weaviate\r\n2. Delete the Docker images for Verba and Weaviate\r\n3. I deletes volumes also\r\n4. Then using git, cloned the latest version a",
          "created_at": "2024-04-19T02:39:05Z"
        },
        {
          "author": "thomashacker",
          "body": "The newest update v1.0.0 has better ingestion support and capabilities. I was able to ingest your .pdf, let me know if this error still persists for you",
          "created_at": "2024-05-15T18:02:12Z"
        },
        {
          "author": "sumant-28",
          "body": "I can't import the original txt document I wanted nor the PDF referenced above for what it's worth",
          "created_at": "2024-05-16T03:11:18Z"
        }
      ]
    },
    {
      "issue_number": 115,
      "title": "Document Issues",
      "body": "My documents are txt. They either Load documents no chunks; or Load 0 documents with no chunks; or Chunk mismatch for 1fa2a323-d32c-4a87-89fc-4566c56d30fd 0 != 37\r\n\r\nI do not know what to do. I am trying to load Youtube transcripts, if that matters... help\r\n",
      "state": "closed",
      "author": "Moshie1112",
      "author_type": "User",
      "created_at": "2024-02-16T18:21:07Z",
      "updated_at": "2024-09-03T11:07:41Z",
      "closed_at": "2024-09-03T11:07:41Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 8,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/115/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/115",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/115",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:39.590725",
      "comments": [
        {
          "author": "cam-barts",
          "body": "Hi @Moshie1112, would you be able to drop the document that you are trying to upload, as well as the chunking settings you are using so that I can try to replicate the issue? I have tried with this youtube video transcript\r\n[How_to_grow_your_SRE_practice.txt](https://github.com/weaviate/Verba/files/",
          "created_at": "2024-02-21T01:27:32Z"
        },
        {
          "author": "doyled-it",
          "body": "I get the same issue, but a different chunk mismatch. This is the document I was using with the PDFReader.\r\n\r\nMy TokenChunker is set to 250 with a 50 overlap and I'm using the ADAEmbedder.\r\n\r\n[Executive Order on the Safe, Secure, and Trustworthy Development and Use of Artificial Intelligence The Whi",
          "created_at": "2024-05-02T22:43:32Z"
        },
        {
          "author": "sbhadana",
          "body": "I am facing exactly same issue \"Chunk mismatch for 1f6e1308-08a3-4f98-b52c-424fe71a39c0 0 != 2\" with ADAEmbedder. Any help would be appreciated. \r\n\r\nThanks",
          "created_at": "2024-05-12T12:08:05Z"
        },
        {
          "author": "thomashacker",
          "body": "We improved the Reader functionality in the newest release, it should now support all basic file types! Let me know if the error still persists",
          "created_at": "2024-05-15T18:01:07Z"
        },
        {
          "author": "qlmeng86",
          "body": "I'm facing the same issue in the latest release v1.0.2. The error message is \"Chunk mismatch for e1831290-33d6-4724-9661-64245306bf53 0 != 168\" when I uploading the file\r\n[README.md](https://github.com/weaviate/Verba/files/15410345/README.md). My TokenChunker is set to 50 with a 20 overlap and I'm u",
          "created_at": "2024-05-23T01:38:02Z"
        }
      ]
    },
    {
      "issue_number": 114,
      "title": "OpenAI embeddings: text-embedding-3-large",
      "body": "Would be good to be able to have the option to use OpenAI's new 'large' embedding model. Would be interesting to see whether using more (3072) dimensions gives better retrieval of niche/unusual words.\r\n\r\n[https://openai.com/blog/new-embedding-models-and-api-updates](url)",
      "state": "closed",
      "author": "mikehudson2",
      "author_type": "User",
      "created_at": "2024-02-08T08:49:53Z",
      "updated_at": "2024-09-03T11:07:09Z",
      "closed_at": "2024-09-03T11:07:08Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/114/reactions",
        "total_count": 3,
        "+1": 3,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/114",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/114",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:39.848408",
      "comments": [
        {
          "author": "bakongi",
          "body": "https://github.com/weaviate/Verba/discussions/130",
          "created_at": "2024-04-03T12:23:58Z"
        },
        {
          "author": "thomashacker",
          "body": "Great idea! We'll look into that for the next update 🚀 ",
          "created_at": "2024-04-11T09:14:15Z"
        },
        {
          "author": "thomashacker",
          "body": "We added all OpenAI Embedding models in the newest release",
          "created_at": "2024-09-03T11:07:08Z"
        }
      ]
    },
    {
      "issue_number": 110,
      "title": "What's document type?",
      "body": "hi there and thank you for the great repo. I was wondering what does **Document type** actually do? It sets a (yellow) label, but I can't use it to filter documents e.g. select only those documents of type X. What's the purpose of that field?",
      "state": "closed",
      "author": "cellulosa",
      "author_type": "User",
      "created_at": "2024-01-22T14:34:55Z",
      "updated_at": "2024-09-03T11:06:51Z",
      "closed_at": "2024-09-03T11:06:51Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/110/reactions",
        "total_count": 3,
        "+1": 3,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/110",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/110",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:40.049895",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Nice catch! 🚀 \r\nThe initial purpose of those fields was to filter documents when using RAG, but the feature isn't implemented yet. We are working on it for the next update! ",
          "created_at": "2024-04-11T09:19:32Z"
        },
        {
          "author": "thomashacker",
          "body": "We implemented label filtering in the newest update",
          "created_at": "2024-09-03T11:06:51Z"
        }
      ]
    },
    {
      "issue_number": 86,
      "title": "Add support for AWS Bedrock",
      "body": "AWS Bedrock now supports many model types and provides convenient model hosting for enterprises. It would be great if Verba could support this out of the box.",
      "state": "closed",
      "author": "btiernay",
      "author_type": "User",
      "created_at": "2023-12-03T15:33:06Z",
      "updated_at": "2024-09-03T11:06:32Z",
      "closed_at": "2024-09-03T11:06:32Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/86/reactions",
        "total_count": 3,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 3,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/86",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/86",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:40.266521",
      "comments": [
        {
          "author": "amphetamarina",
          "body": "This is becoming necessary for our company. I could take this issue, write the code for it and open a PR. \r\n\r\nWould just need to check contributing guidelines. ",
          "created_at": "2023-12-13T18:30:18Z"
        },
        {
          "author": "thomashacker",
          "body": "Great idea! We're looking into that for the next Verba update",
          "created_at": "2024-04-11T09:39:26Z"
        },
        {
          "author": "thomashacker",
          "body": "We decided to not include it for the next release, but feel free to create a PR! I'll pause this for now",
          "created_at": "2024-09-03T11:06:32Z"
        }
      ]
    },
    {
      "issue_number": 58,
      "title": "Add a Langchain QA agent in addition to vector search",
      "body": "Hi there,\r\nwhat about also adding a Langchain QA agent interface in addition to the standard search?\r\n\r\nIt should be quite straightforward to add like this example: https://python.langchain.com/docs/use_cases/question_answering/conversational_retrieval_agents\r\n\r\nSuper powerful!\r\n",
      "state": "closed",
      "author": "priamai",
      "author_type": "User",
      "created_at": "2023-11-25T00:01:16Z",
      "updated_at": "2024-09-03T11:05:32Z",
      "closed_at": "2024-09-03T11:05:32Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/58/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 1,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/58",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/58",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:40.503363",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Great idea! We'll look into it",
          "created_at": "2023-11-28T17:02:18Z"
        },
        {
          "author": "thomashacker",
          "body": "We added LangChain Tokenizers in the newest release, but feel free to create a PR and add it to the newest version. I'll pause this for now",
          "created_at": "2024-09-03T11:05:32Z"
        }
      ]
    },
    {
      "issue_number": 53,
      "title": "'NoneType' object has no attribute 'tokenize'",
      "body": "I'm using Cohere and unstructured, and I'm receiving that error when trying to load a pdf. It works ok with the simple reader, but not with the options for PDF.\r\n\r\nthis is the log:\r\n\r\nℹ Received Data to Import: READER(PDFReader, Documents 1, Type\r\nDocumentation) CHUNKER (TokenChunker, UNITS 250, OVERLAP 50), EMBEDDER\r\n(MiniLMEmbedder)\r\n✔ Loaded ai-03-00057.pdf\r\n✔ Loaded 1 documents\r\nChunking documents: 100%|████████████████████████████████████████████| 1/1 [00:00<00:00, 37.20it/s]\r\n✔ Chunking completed\r\nVectorizing document chunks:   0%|                                           | 0/1 [00:00<?, ?it/s]\r\n✘ Loading data failed 'NoneType' object has no attribute 'tokenize'\r\n\r\nRegards.",
      "state": "closed",
      "author": "micuentadecasa",
      "author_type": "User",
      "created_at": "2023-11-23T22:17:29Z",
      "updated_at": "2024-09-03T11:04:50Z",
      "closed_at": "2024-09-03T11:04:50Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 12,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/53/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/53",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/53",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:40.729339",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! It looks like you're using the SentenceTransformer MiniLM model to embed the chunks, is that intended? It might be that there are some missing dependencies, are you running Verba on a new python environment?",
          "created_at": "2023-11-24T13:05:24Z"
        },
        {
          "author": "micuentadecasa",
          "body": "I tried all the possibilities, using the MiniLM was just a try.\r\n\r\nthis is the log I got in other try\r\n\r\nℹ Received Data to Import: READER(UnstructuredPDF, Documents 1, Type\r\nDocumentation) CHUNKER (SentenceChunker, UNITS 3, OVERLAP 2), EMBEDDER\r\n(CohereEmbedder)\r\n✔ Loaded xxx.pdf\r\n✔ Loaded 1 docume",
          "created_at": "2023-11-26T22:08:30Z"
        },
        {
          "author": "thomashacker",
          "body": "Thanks for the insights! I'll look into fixing this 👍 ",
          "created_at": "2023-11-28T17:10:57Z"
        },
        {
          "author": "thomashacker",
          "body": "We merged some fixes, are you still getting these errors?",
          "created_at": "2023-12-05T10:26:53Z"
        },
        {
          "author": "f0rmiga",
          "body": "I was getting the same error and found out that it was due to:\r\n```bash\r\n⚠ Using `low_cpu_mem_usage=True` or a `device_map` requires Accelerate:\r\n`pip install accelerate`\r\n```\r\n\r\nPerhaps adding `accelerate` as a direct dependency to Verba is desirable?",
          "created_at": "2024-01-14T00:00:14Z"
        }
      ]
    },
    {
      "issue_number": 28,
      "title": "Deploy to Vercel recipe [enhancement]",
      "body": "Please add a recipe to deploy to Vercel.\r\n\r\nOr, work with the Vercel team to create a template with one-click deploy to Vercel. ",
      "state": "closed",
      "author": "deboboy",
      "author_type": "User",
      "created_at": "2023-11-01T18:58:28Z",
      "updated_at": "2024-09-03T11:04:33Z",
      "closed_at": "2024-09-03T11:04:33Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/28/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/28",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/28",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:40.960391",
      "comments": [
        {
          "author": "thomashacker",
          "body": "We'll put this on pause for now",
          "created_at": "2024-09-03T11:04:33Z"
        }
      ]
    },
    {
      "issue_number": 231,
      "title": "Implement GROQ API for generation",
      "body": "A feature request.",
      "state": "closed",
      "author": "coderjunc",
      "author_type": "User",
      "created_at": "2024-06-30T11:08:40Z",
      "updated_at": "2024-07-29T12:33:03Z",
      "closed_at": "2024-07-29T12:33:03Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/231/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 1,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/231",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/231",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:41.146747",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Great idea! We'll look into it 🚀 ",
          "created_at": "2024-06-30T20:40:27Z"
        }
      ]
    },
    {
      "issue_number": 238,
      "title": "Embedder TokenChunker not found.",
      "body": "## Description\r\nWhen following the instructions for azure open AI server starts, but when trying to add document - server show the message in the subject.\r\n\r\n\r\n## Is this a bug or a feature?\r\n- [ x] Bug\r\n- [ ] Feature\r\n\r\n## Steps to Reproduce\r\n- start server\r\n- start web client\r\n- press add document and observe the logs on the server side  \r\n\r\n## Additional context\r\nAzure open AI\r\nubuntu 20.04 virtenv\r\n",
      "state": "closed",
      "author": "provVladBurlik",
      "author_type": "User",
      "created_at": "2024-07-03T19:12:46Z",
      "updated_at": "2024-07-21T22:47:03Z",
      "closed_at": "2024-07-19T07:41:29Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 16,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/238/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 1
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/238",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/238",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:43.166975",
      "comments": [
        {
          "author": "silicongarage",
          "body": "I'm getting the same error, but with different OS/setup.   \r\nDocker container (built from verba git clone) on Macbook Apple Silicon with Ollama server running on host.\r\n\r\nWhen I click on \"Add Documents\" the web client errors with the following message:\r\n`Application error: a client-side exception ha",
          "created_at": "2024-07-04T02:15:34Z"
        },
        {
          "author": "wythedee",
          "body": "Same problem. Used pip install to setup verba, went straightly to the web page and clicked on RAG and the same error occurs:`Application error: a client-side exception has occurred (see the browser console for more information).`\r\nWonder what did I miss.\r\nAlso I wanted to know if it is possible to s",
          "created_at": "2024-07-04T10:01:19Z"
        },
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! This seems definitely like a bug.\r\nWhat console message are you receiving from the frontend when `client-side exception` occurs?\r\nDo any other errors occur?\r\n\r\nMake sure that you install Verba in a clean environment to prevent dependency issues.",
          "created_at": "2024-07-04T12:40:59Z"
        },
        {
          "author": "syrian2012",
          "body": "I have the same error tested on all available installation methods and get the same error\r\n![Screenshot 2024-07-04 154617](https://github.com/weaviate/Verba/assets/108936804/804350d2-d991-41e2-a0ae-7bd20fe337be)\r\n",
          "created_at": "2024-07-04T12:46:33Z"
        },
        {
          "author": "provVladBurlik",
          "body": "I've added additional traces: \r\n![image](https://github.com/weaviate/Verba/assets/93543976/834db4e4-9123-45dc-99c6-0f5ab9d19d55)\r\n",
          "created_at": "2024-07-04T15:44:33Z"
        }
      ]
    },
    {
      "issue_number": 180,
      "title": "Windows is not supported with EmbeddedDB. plz give solution for it because its not working even after WCS implementation",
      "body": "I'm encountering an error when trying to run Weaviate with the EmbeddedDB option on a Windows system. The error message indicates that Windows is not currently supported for this functionality.\r\ni have created a environment\r\ninstalled all the requirements\r\nthen setup a llama 3 model \r\nafter that when i am starting the verba, i am facing the issue of embeddingDB, for the solution i have created a sandbox cluster on WCS and copied the URL and API from there and then repeat the whole process but still facing the face issue of embedding\r\n\r\ni have also provided the error below, Please can anyone help to resolve this issue\r\n\r\nINFO:     Will watch for changes in these directories: ['D:\\\\projects\\\\Verba Project\\\\Verba']\r\nINFO:     Uvicorn running on http://localhost:8000 (Press CTRL+C to quit)\r\nINFO:     Started reloader process [12028] using WatchFiles\r\nlora \r\nbarwa\r\nℹ Setting up client\r\nℹ Using Weaviate Embedded\r\nProcess SpawnProcess-1:\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\multiprocessing\\process.py\", line 314, in _bootstrap\r\n    self.run()\r\n  File \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\multiprocessing\\process.py\", line 108, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\site-packages\\uvicorn\\_subprocess.py\", line 78, in subprocess_started\r\n    target(sockets=sockets)\r\n  File \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\site-packages\\uvicorn\\server.py\", line 65, in run\r\n    return asyncio.run(self.serve(sockets=sockets))\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\asyncio\\runners.py\", line 194, in run\r\n    return runner.run(main)\r\n           ^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\asyncio\\runners.py\", line 118, in run\r\n    return self._loop.run_until_complete(task)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\asyncio\\base_events.py\", line 687, in run_until_complete\r\n    return future.result()\r\n           ^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\site-packages\\uvicorn\\server.py\", line 69, in serve\r\n    await self._serve(sockets)\r\n  File \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\site-packages\\uvicorn\\server.py\", line 76, in _serve\r\n    config.load()\r\n  File \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\site-packages\\uvicorn\\config.py\", line 433, in load\r\n    self.loaded_app = import_from_string(self.app)\r\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\site-packages\\uvicorn\\importer.py\", line 19, in import_from_string\r\n    module = importlib.import_module(module_str)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\importlib\\__init__.py\", line 90, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"<frozen importlib._bootstrap>\", line 1387, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 1360, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 1331, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 935, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 995, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 488, in _call_with_frames_removed\r\n  File \"d:\\projects\\verba project\\verba\\goldenverba\\server\\api.py\", line 37, in <module>\r\n    manager = verba_manager.VerbaManager()\r\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"d:\\projects\\verba project\\verba\\goldenverba\\verba_manager.py\", line 45, in __init__\r\n    self.client = self.setup_client()\r\n                  ^^^^^^^^^^^^^^^^^^^\r\n  File \"d:\\projects\\verba project\\verba\\goldenverba\\verba_manager.py\", line 209, in setup_client\r\n    client = weaviate.Client(\r\n             ^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\site-packages\\weaviate\\client.py\", line 147, in __init__\r\n    url, embedded_db = self.__parse_url_and_embedded_db(url, embedded_options)\r\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\site-packages\\weaviate\\client.py\", line 287, in __parse_url_and_embedded_db\r\n    embedded_db = EmbeddedDB(options=embedded_options)\r\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\site-packages\\weaviate\\embedded.py\", line 52, in __init__\r\n    self.check_supported_platform()\r\n  File \"C:\\Users\\User\\anaconda3\\envs\\envmenv\\Lib\\site-packages\\weaviate\\embedded.py\", line 175, in check_supported_platform\r\n    raise WeaviateStartUpError(\r\nweaviate.exceptions.WeaviateStartUpError: Windows is not supported with EmbeddedDB. Please upvote the feature request if you want this: https://github.com/weaviate/weaviate-python-client/issues/239",
      "state": "closed",
      "author": "huzaifa0505",
      "author_type": "User",
      "created_at": "2024-05-20T16:23:47Z",
      "updated_at": "2024-07-21T18:29:06Z",
      "closed_at": "2024-05-23T17:17:07Z",
      "labels": [
        "installation"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/180/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/180",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/180",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:43.393385",
      "comments": [
        {
          "author": "thomashacker",
          "body": "It seems like Verba isn't detecting your `.env` files with the Weaviate URL and API Key variable. You can make sure that your current environment has all variables by using `source .env`. Let me know if this helps!",
          "created_at": "2024-05-20T18:57:23Z"
        },
        {
          "author": "huzaifa0505",
          "body": "done thank you sir",
          "created_at": "2024-05-23T17:16:45Z"
        },
        {
          "author": "ahsan0444",
          "body": "Hi @thomashacker \r\nCould you pls share what env variables we have to set in the .env file to resolve this error?\r\nCurrently I have these two values in my .env file\r\n```\r\nOLLAMA_URL=http://localhost:11434\r\nOLLAMA_MODEL=llama3\r\n```\r\n\r\nAnd I am running verba on a virtual env on windows using the comman",
          "created_at": "2024-07-21T18:29:06Z"
        }
      ]
    },
    {
      "issue_number": 56,
      "title": "Add support for LiteLLM",
      "body": "Hi there,\r\nI am getting familiar with the source code but I want to have the ability to change the settings of the embeddings and generation to an OpenAI PROXY server: https://docs.litellm.ai/docs/simple_proxy\r\n\r\nWe would just need 2 environment settings, the first one is the API KEY you already have it and the second one is the URL to point the OpenAI class.\r\n\r\n```\r\nopenai.api_key = \"anything\"             # this can be anything, we set the key on the proxy\r\nopenai.api_base = \"http://0.0.0.0:8000\" # set api base to the proxy from step 1\r\n\r\n```\r\nThose are exactly the same as the library as you would use it, of course normally the api_base poins to Azure:\r\n\r\n```\r\nimport openai\r\n\r\n# optional; defaults to `os.environ['OPENAI_API_KEY']`\r\nopenai.api_key = '...'\r\n\r\n# all client options can be configured just like the `OpenAI` instantiation counterpart\r\nopenai.base_url = \"https://...\"\r\nopenai.default_headers = {\"x-foo\": \"true\"}\r\n\r\n```\r\n\r\nLet me know.\r\nCheers!\r\n",
      "state": "closed",
      "author": "priamai",
      "author_type": "User",
      "created_at": "2023-11-24T23:42:39Z",
      "updated_at": "2024-07-15T15:48:54Z",
      "closed_at": "2023-12-05T10:40:23Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 10,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/56/reactions",
        "total_count": 2,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 2,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/56",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/56",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:43.604103",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Great idea! We'll add this ",
          "created_at": "2023-11-28T17:01:47Z"
        },
        {
          "author": "ishaan-jaff",
          "body": "i'm the maintainer of LiteLLM, let me know if you run into any issues ",
          "created_at": "2023-11-29T18:52:07Z"
        },
        {
          "author": "thomashacker",
          "body": "@ishaan-jaff Thanks a lot! Just to clarify, we simply need two new environment variables to be able to use LiteLLM, correct? 😄 ",
          "created_at": "2023-11-30T15:03:09Z"
        },
        {
          "author": "priamai",
          "body": "We would need also another UI dropbox, because with LiteLLM you can choose dynamically which backend you want to call, even though the interface is OpenAI but you can load for example a LLama2 model. \r\nI think having that in the UI will be better instead of an environment variable which will be anno",
          "created_at": "2023-11-30T16:08:34Z"
        },
        {
          "author": "priamai",
          "body": "Example below:\r\n\r\n```\r\nimport openai # openai v1.0.0+\r\nclient = openai.OpenAI(api_key=\"anything\",base_url=\"http://0.0.0.0:8000\") # set proxy to base_url\r\n# request sent to model set on litellm proxy, `litellm --model`\r\nresponse = client.chat.completions.create(model=\"gpt-3.5-turbo\", messages = [\r\n  ",
          "created_at": "2023-11-30T16:10:00Z"
        }
      ]
    },
    {
      "issue_number": 200,
      "title": "TypeError: unsupported operand type(s) for |: 'type' and 'NoneType'",
      "body": "I followed the instructions and installed pythong 3.10.5\r\nI also created the virtual environment, but I can't start verba. When I google it it seems to refer to an issue of using a python version lower than 3.10 but that's not the case? What am I doing wrong? My python experience is rather limited .. sorry for that.\r\n\r\n(appenv) [ec2-user@ip-172-31-35-70 Python-3.10.5]$ verba start\r\n/home/ec2-user/.local/lib/python3.9/site-packages/PyPDF2/__init__.py:21: DeprecationWarning: PyPDF2 is deprecated. Please move to the pypdf library instead.\r\n  warnings.warn(\r\nTraceback (most recent call last):\r\n  File \"/home/ec2-user/.local/bin/verba\", line 5, in <module>\r\n    from goldenverba.server.cli import cli\r\n  File \"/home/ec2-user/.local/lib/python3.9/site-packages/goldenverba/server/cli.py\", line 6, in <module>\r\n    from goldenverba.verba_manager import VerbaManager\r\n  File \"/home/ec2-user/.local/lib/python3.9/site-packages/goldenverba/verba_manager.py\", line 29, in <module>\r\n    class VerbaManager:\r\n  File \"/home/ec2-user/.local/lib/python3.9/site-packages/goldenverba/verba_manager.py\", line 156, in VerbaManager\r\n    def setup_client(self) -> Client | None:\r\nTypeError: unsupported operand type(s) for |: 'type' and 'NoneType'\r\n(appenv) [ec2-user@ip-172-31-35-70 Python-3.10.5]$\r\n",
      "state": "closed",
      "author": "coxfrederic",
      "author_type": "User",
      "created_at": "2024-05-24T15:16:59Z",
      "updated_at": "2024-06-27T13:33:37Z",
      "closed_at": "2024-06-27T13:33:37Z",
      "labels": [
        "installation"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/200/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/200",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/200",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:43.815081",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Looking at the error messages it seems like you're still using `python3.9`, make sure that you use at least `python3.10`",
          "created_at": "2024-05-27T11:13:34Z"
        }
      ]
    },
    {
      "issue_number": 182,
      "title": " {'errors': {'error': [{'message': 'update vector: connection to: OpenAI API failed with status: 429 error: You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.'}]}, 'status': 'FAILED'}",
      "body": "## Description\r\n<!-- A clear and concise description of what the issue is. Please include if this is a bug or a feature request. -->\r\n![image](https://github.com/weaviate/Verba/assets/53250064/f385123c-9efa-4672-869a-b4cfe46c35bb)\r\n\r\n(INFO) Importing...\r\n(INFO) Importing 1 files with BasicReader\r\n(INFO) Importing 2024-05-14-16-28-16_升级_Next.js_14.md\r\n(SUCCESS) Loaded 1 documents in 0.0s\r\n(INFO) Starting Chunking with TokenChunker\r\n(SUCCESS) Chunking completed with 19 chunks in 0.01s\r\n(INFO) Starting Embedding with ADAEmbedder\r\n(ERROR) Embedding not successful: Chunk mismatch for 81ef7a62-e2f3-408c-a48a-68771055e1a0 0 != 19\r\n(ERROR) Chunk mismatch for 81ef7a62-e2f3-408c-a48a-68771055e1a0 0 != 19\r\nwhen add documents,it show the error:\r\n```\r\n {'errors': {'error': [{'message': 'update vector: connection to: OpenAI API failed with status: 429 error: You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.'}]}, 'status': 'FAILED'}\r\n```\r\ni use the third party openai provider,\r\ni am sure my key is availbale ans have enough quota. and i think is the base_url dit not work,\r\n## Is this a bug or a feature?\r\n- [x] Bug\r\n- [ ] Feature\r\n\r\n## Steps to Reproduce\r\n<!-- If this is a bug, please provide detailed steps on how to reproduce the issue. If this is a feature, please describe what you want to be added or changed. -->\r\n\r\ngit clone https://github.com/weaviate/Verba\r\npip install -e .\r\n\r\ni just  modify the custome\r\nOPENAI_BASE_URL\r\nOPENAI_API_KEY\r\nto the file .env\r\nthe .env path is same with the README.md\r\n![image](https://github.com/weaviate/Verba/assets/53250064/174624de-c735-4dfa-9ba9-c89a604e633c)\r\n![image](https://github.com/weaviate/Verba/assets/53250064/2fdd1b1e-1ab9-45d9-8cce-a15f112fc57e)\r\n\r\n## Additional context\r\n<!-- Add any other context about the problem here. -->\r\n",
      "state": "closed",
      "author": "fengyunzaidushi",
      "author_type": "User",
      "created_at": "2024-05-20T23:20:09Z",
      "updated_at": "2024-06-27T13:21:25Z",
      "closed_at": "2024-06-27T13:21:25Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/182/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/182",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/182",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:44.007517",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Try to reset Verba through the `Overview` tab to reset the schemas and to make sure that changes like BASE_URL are correctly configured. Let me know if this fixed your issue",
          "created_at": "2024-05-21T08:21:01Z"
        },
        {
          "author": "fengyunzaidushi",
          "body": "i click the five buton on the left,but still the same error.\r\n![image](https://github.com/weaviate/Verba/assets/53250064/079276e4-7661-4033-9dee-ab72137c0b3f)\r\n",
          "created_at": "2024-05-21T08:54:49Z"
        },
        {
          "author": "thomashacker",
          "body": "Interesting! Did you check if both the `API_KEY` and `BASE_URL` are indeed correct? I would recommend writing a short script verifying that it works",
          "created_at": "2024-05-22T10:07:26Z"
        }
      ]
    },
    {
      "issue_number": 167,
      "title": "\"Query failed: 'NoneType' object is not iterable\" Error when starting chat with imported documents",
      "body": "After applying the fixes that were provided from a previous Issue that was converted to pull request 163.\r\n\r\nEverything is working up to the point that I start a chat on the imported documents, and I get a red error message that says, \"Query failed: 'NoneType' object is not iterable\" that disappears, and the chat hangs up on \"retrieving chunks\".\r\n\r\nIf I look at the logs of the container I see the following.  Included some lines above and below for context.\r\n\r\nINFO:     172.19.0.1:32800 - \"POST /api/suggestions HTTP/1.1\" 200 OK\r\nINFO:     172.19.0.1:32800 - \"POST /api/suggestions HTTP/1.1\" 200 OK\r\n✔ Received query: what is FAA part 14 about?\r\n⚠ Query failed: 'NoneType' object is not iterable\r\nINFO:     172.19.0.1:32800 - \"POST /api/query HTTP/1.1\" 200 OK\r\nINFO:     127.0.0.1:53954 - \"HEAD / HTTP/1.1\" 200 OK",
      "state": "closed",
      "author": "ibbobud",
      "author_type": "User",
      "created_at": "2024-05-17T17:22:52Z",
      "updated_at": "2024-06-27T13:20:15Z",
      "closed_at": "2024-06-27T13:20:15Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/167/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/167",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/167",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:44.259786",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue. Are you using OpenAI with Verba? I think, this might be related to an incompatible openai version.\r\nIf you're using OpenAI, what version are you using?",
          "created_at": "2024-05-18T08:13:25Z"
        },
        {
          "author": "cha0s",
          "body": "I am using ollama and I get this error.",
          "created_at": "2024-05-20T11:54:51Z"
        },
        {
          "author": "thomashacker",
          "body": "If you're using Ollama, make sure to have a model selected via `ollama run <model_name>` before using Verba. We'll add validation mechanisms in future update to prevent these errors",
          "created_at": "2024-06-27T13:20:15Z"
        }
      ]
    },
    {
      "issue_number": 161,
      "title": "having problem trying to connect Ollama ",
      "body": "## Description\r\nI am a new beginner ,and when follow then instruction to add paramter in .env for ollama,\r\n\r\n![image](https://github.com/weaviate/Verba/assets/61832070/7f1467b7-f44f-4559-bc35-8dd6d54d82f7)\r\n\r\nand using verba start, but when I check the UI, the ollama still shows \" not avaiable\"\r\n![image](https://github.com/weaviate/Verba/assets/61832070/56a8af9a-b09f-48d1-8574-e87f2c2466d3)\r\n\r\nwonder which part is missing for correct setup ?\r\n",
      "state": "closed",
      "author": "tonightmare",
      "author_type": "User",
      "created_at": "2024-05-17T03:19:41Z",
      "updated_at": "2024-06-27T13:18:18Z",
      "closed_at": "2024-06-27T13:18:18Z",
      "labels": [
        "installation"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/161/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/161",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/161",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:44.505009",
      "comments": [
        {
          "author": "tonightmare",
          "body": "BTW, my ollama is correct setup running in 11434 and I use the method as below:\r\n\r\nBuild from Source\r\ngit clone https://github.com/weaviate/Verba\r\nthen\r\npip install -e .\r\n\r\nwill my setup in local folder apply to the setup ?",
          "created_at": "2024-05-17T03:26:15Z"
        },
        {
          "author": "thomashacker",
          "body": "For some reason, your environment file is not detected when starting Verba. \r\n\r\n1. Make sure to delete all environment variables that are empty, it will cause errors because they are empty\r\n2. Use `source goldenverba/.env` to make sure that your current virtual environment has access to all the vari",
          "created_at": "2024-05-17T16:30:48Z"
        }
      ]
    },
    {
      "issue_number": 156,
      "title": "Unable to configure an Ollama embedder & generator",
      "body": "## Description\r\nHey everyone,\r\nI just cloned Verba locally and set the environment variables. I want to use Ollama for Embedding and Generation (using Llama3) but I cannot see where to choose the Ollama generator model from the settings after running my Verba instance.\r\nOllama is running at http://localhost:11434\r\n\r\nDid anyone have the same problem? Please let me know what I missed.\r\nThanks!\r\n\r\n## Is this a bug or a feature?\r\nBug\r\n",
      "state": "closed",
      "author": "moncefarajdal",
      "author_type": "User",
      "created_at": "2024-05-16T09:36:12Z",
      "updated_at": "2024-06-27T13:17:56Z",
      "closed_at": "2024-06-27T13:17:56Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/156/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/156",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/156",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:44.731935",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! Does the Overview page show that both `OLLAMA_URL` and `OLLAMA_MODEL` are set?",
          "created_at": "2024-05-16T13:37:58Z"
        },
        {
          "author": "moncefarajdal",
          "body": "@thomashacker Yes they're both set and, now I can see them in the frontend but, they don't work for some reason. How can I use Ollama for both generation and embedding because in the .env file example the model name is specified there whereas I cannot use the same model for both embeddings and gener",
          "created_at": "2024-05-16T14:07:02Z"
        },
        {
          "author": "thomashacker",
          "body": "Is it possible for you to change the Embedder and Generator in the `RAG` tab? Also make sure to press `Save` after making changes. And can you provide more information about what you mean by \"Can't select another model\"?",
          "created_at": "2024-05-17T17:07:40Z"
        }
      ]
    },
    {
      "issue_number": 154,
      "title": "Could not retrieve configuration: 'InputText' object has no attribute 'model_dump'",
      "body": "## Description\r\nPost following instruction ran into following issue, where the ui just ends up with loading icon.\r\n\r\n## Is this a bug or a feature?\r\n- [x] Bug\r\n- [ ] Feature\r\n\r\n## Steps to Reproduce\r\npost running below steps ran into following steps\r\n\r\npip install goldenverba\r\n\r\ngit clone https://github.com/weaviate/Verba\r\n\r\npip install -e .\r\n\r\nverba start\r\n\r\n## Additional context\r\n<!-- Add any other context about the problem here. -->\r\n",
      "state": "closed",
      "author": "shyamshyre",
      "author_type": "User",
      "created_at": "2024-05-15T16:36:24Z",
      "updated_at": "2024-06-27T13:17:36Z",
      "closed_at": "2024-06-27T13:17:36Z",
      "labels": [
        "installation"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/154/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/154",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/154",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:45.022172",
      "comments": [
        {
          "author": "thomashacker",
          "body": "This might be an issue with pydantic, which pydantic version do you have currently installed? And what python version are you using? \r\n\r\nThis might be related: https://stackoverflow.com/questions/77251901/pydantic-basemodel-model-dump-throughs-attributeerror",
          "created_at": "2024-05-15T17:29:26Z"
        },
        {
          "author": "wilmeragsgh",
          "body": "I had this issue, my workaround was to create a fresh conda environment:\r\n\r\n```\r\nconda create -n venv\r\nconda activate venv\r\npip install goldenverba\r\nverba start\r\n```\r\n\r\nIt worked with `pydantic=2.7.1` which seems to be related to: \r\n\r\n> This might be an issue with pydantic, which pydantic version do",
          "created_at": "2024-05-16T19:28:48Z"
        }
      ]
    },
    {
      "issue_number": 142,
      "title": "TogetherAI compatibilty?",
      "body": "TogetherAI has a openai compatibility api. It allows for simple plug and play with the openai module in python. However, after setting up the `.env` file as shown below, i get the following error\r\nOpenAI API failed with status: 401 error: Incorrect API key provided:\r\nsk-vxLAE***************************************tBZb. You can find your API key\r\nat https://platform.openai.com/account/api-keys.'}]}, 'status': 'FAILED'}\r\n\r\nNow I simply put my .env file in my $HOME directory and I am running `verba start` from the same directory too. Am I missing something?\r\n\r\n`.env`\r\n```\r\nOPENAI_API_KEY=TOGETHERAI_KEY\r\nOPENAI_BASE_URL=https://api.together.xyz/v1\r\nOPENAI_MODEL=meta-llama/Llama-3-70b-chat-hf\r\nAZURE_OPENAI_EMBEDDING_MODEL=WhereIsAI/UAE-Large-V1\r\n```",
      "state": "closed",
      "author": "Jirubizu",
      "author_type": "User",
      "created_at": "2024-04-29T06:42:01Z",
      "updated_at": "2024-06-27T13:17:12Z",
      "closed_at": "2024-06-27T13:17:12Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/142/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/142",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/142",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:45.248306",
      "comments": [
        {
          "author": "bakongi",
          "body": "You should create new generator file and should not use openai library. Use together python library instead.\r\n\r\nhttps://docs.together.ai/docs/inference-python\r\n\r\nAnyway, it doesn't work from the box.\r\nhttps://docs.together.ai/docs/embedding-openai-api-compatibility",
          "created_at": "2024-05-01T16:09:15Z"
        },
        {
          "author": "thomashacker",
          "body": "Hey, thanks for the issue! Make sure that you don't have a `OPENAI_API_KEY` global environment variable, since it will overwrite any local `.env` file. Either check for global variables, or use `source .env` before starting verba. Let me know if this helps 🚀 ",
          "created_at": "2024-05-02T11:50:51Z"
        }
      ]
    },
    {
      "issue_number": 127,
      "title": "Old Model Nvidia",
      "body": "Hello Everyone,\r\n\r\nI'm having some issues trying to run it.\r\n\r\nCan i ask if is not able to run on model  Nvidia tesla k80?\r\n\r\nThank you in advance",
      "state": "closed",
      "author": "Koprix",
      "author_type": "User",
      "created_at": "2024-03-18T16:57:12Z",
      "updated_at": "2024-06-27T13:16:51Z",
      "closed_at": "2024-06-27T13:16:51Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/127/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/127",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/127",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:45.477891",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey @Koprix, I'm unaware of any limitation specific to Nvidia Tesla K80. What kind of error are you getting?",
          "created_at": "2024-04-11T08:57:30Z"
        }
      ]
    },
    {
      "issue_number": 112,
      "title": "type object 'GeneratePayload' has no attribute 'model_validate_json'",
      "body": "Error:\r\n```\r\n✘ WebSocket Error: type object 'GeneratePayload' has no attribute\r\n'model_validate_json'\r\nERROR:    Exception in ASGI application\r\nTraceback (most recent call last):\r\n  File \"/output/Verba/goldenverba/server/api.py\", line 597, in websocket_generate_stream\r\n    payload = GeneratePayload.model_validate_json(data)\r\nAttributeError: type object 'GeneratePayload' has no attribute 'model_validate_json'\r\n```\r\n\r\nSolution:\r\n```\r\n# api.py\r\nimport json\r\n\r\n# change the code in line 597\r\npayload = GeneratePayload.parse_obj(json.loads(data))\r\n```",
      "state": "closed",
      "author": "wccyzxy",
      "author_type": "User",
      "created_at": "2024-01-27T05:17:11Z",
      "updated_at": "2024-06-27T13:14:04Z",
      "closed_at": "2024-06-27T13:14:04Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/112/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/112",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/112",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:45.705018",
      "comments": [
        {
          "author": "saaipraneeth",
          "body": "Experiencing the same problem..\r\n\r\n ```\r\nWebSocket Error: type object 'GeneratePayload' has no attribute\r\n'model_validate_json'\r\nERROR:    Exception in ASGI application\r\nTraceback (most recent call last):\r\n  File \"/Users/sai.praneeth/work/rag_ab/Verba/goldenverba/server/api.py\", line 596, in websock",
          "created_at": "2024-05-03T02:55:16Z"
        },
        {
          "author": "thomashacker",
          "body": "This might be a problem regarding pydantic, what pydantic version are you currently running? ",
          "created_at": "2024-05-15T17:59:15Z"
        }
      ]
    },
    {
      "issue_number": 108,
      "title": "Error: Cancel rendering route",
      "body": "![image](https://github.com/weaviate/Verba/assets/111034762/bdcd8736-d8d9-4a26-ae3f-71633fcdd408)\r\n![image](https://github.com/weaviate/Verba/assets/111034762/dc115513-f90e-4d90-9abc-134f3d85b541)\r\n![image](https://github.com/weaviate/Verba/assets/111034762/32992be6-87ee-4c76-ad69-82f9daea741b)\r\n![image](https://github.com/weaviate/Verba/assets/111034762/b1f9ede1-0e97-4c4e-a15d-7eebaadf738a)\r\n\r\n\r\nHeya, verba used to be fine but now after ingesting some documentation, asking one question, on the next keystroke, I get this behavior. I tried to solve it by hardcoding in a google tag, but that doesn't seem to be what was causing the issue. Interested in doing some diagnostics, but a bit short on time myself. Let me know if there's any info or tests I can provide.",
      "state": "closed",
      "author": "twilwa",
      "author_type": "User",
      "created_at": "2024-01-16T00:59:28Z",
      "updated_at": "2024-06-27T13:13:47Z",
      "closed_at": "2024-06-27T13:13:47Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/108/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/108",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/108",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:45.937644",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Interesting! We will look into this and try to recreate the issue. Thanks for posting 🚀 ",
          "created_at": "2024-04-11T09:22:32Z"
        },
        {
          "author": "thomashacker",
          "body": "Can you try again and see if the error persists? We updated the frontend and backend communication",
          "created_at": "2024-05-15T17:55:30Z"
        }
      ]
    },
    {
      "issue_number": 213,
      "title": "Unable to add Documents",
      "body": "## Description\r\nI have Ollama and Verba running under WSL on a Windows 11 system. Both are running, and both web interfaces are available in WSl and Windows. I can CURL to Verba from any WSL Window, and to Ollama from and WSL window as well. I set the allowed origins for Ollama to \"all\". TokenChunker and OllamaEmbedder are selected. \r\n\r\nHowever, when adding a document, I receive an error:\r\n\r\n(ERROR) No connection adapters were found for '127.0.0.1:11434/api/embeddings'\r\n\r\n## Is this a bug or a feature?\r\n- [ X] Bug\r\n- [ ] Feature\r\n\r\n## Steps to Reproduce\r\nI simply add a single PDF file from the \"Add Documents\" tab, and then select IMPORT. This may be something specific to my machine, but I have been unable to resolve it.\r\n\r\n## Additional context\r\n\r\n",
      "state": "closed",
      "author": "mmike87",
      "author_type": "User",
      "created_at": "2024-06-01T19:33:54Z",
      "updated_at": "2024-06-07T10:49:37Z",
      "closed_at": "2024-06-07T10:49:37Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/213/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/213",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/213",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:46.149974",
      "comments": [
        {
          "author": "mmike87",
          "body": "Doh! ... needed to put HTTP in front of the 127.0.0.1 in the .env file ... hence the name \"URL\" in the file. :D",
          "created_at": "2024-06-01T19:40:51Z"
        },
        {
          "author": "thomashacker",
          "body": "haha, so did it work after the change? 😄 ",
          "created_at": "2024-06-06T11:08:59Z"
        },
        {
          "author": "mmike87",
          "body": "Yeah, that was the only issue with the import ... silly mistake on my part.",
          "created_at": "2024-06-06T11:52:15Z"
        },
        {
          "author": "13777469818",
          "body": "unsubscribe发自我的 iPhone在 2024年6月6日，19:52，mmike87 ***@***.***> 写道：﻿\r\nYeah, that was the only issue with the import ... silly mistake on my part.\r\n\r\n—Reply to this email directly, view it on GitHub, or unsubscribe.You are receiving this because you are subscribed to this thread.Message ID: ***@***.***>",
          "created_at": "2024-06-06T12:47:12Z"
        }
      ]
    },
    {
      "issue_number": 192,
      "title": "Verba start process fails in the end",
      "body": "All instalation goes tormaly\r\nverba start command initiated normally but then failed with the next error codes.\r\n---\r\n✔ Connected to Weaviate\r\nℹ CUDA is available. Using CUDA...\r\nℹ Setting up components\r\nProcess SpawnProcess-1:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.10/multiprocessing/process.py\", line 314, in _bootstrap\r\n    self.run()\r\n  File \"/usr/lib/python3.10/multiprocessing/process.py\", line 108, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/home/dev/.local/lib/python3.10/site-packages/uvicorn/_subprocess.py\", line 78, in subprocess_started\r\n    target(sockets=sockets)\r\n  File \"/home/dev/.local/lib/python3.10/site-packages/uvicorn/server.py\", line 65, in run\r\n    return asyncio.run(self.serve(sockets=sockets))\r\n  File \"/usr/lib/python3.10/asyncio/runners.py\", line 44, in run\r\n    return loop.run_until_complete(main)\r\n  File \"uvloop/loop.pyx\", line 1517, in uvloop.loop.Loop.run_until_complete\r\n  File \"/home/dev/.local/lib/python3.10/site-packages/uvicorn/server.py\", line 69, in serve\r\n    await self._serve(sockets)\r\n  File \"/home/dev/.local/lib/python3.10/site-packages/uvicorn/server.py\", line 76, in _serve\r\n    config.load()\r\n  File \"/home/dev/.local/lib/python3.10/site-packages/uvicorn/config.py\", line 433, in load\r\n    self.loaded_app = import_from_string(self.app)\r\n  File \"/home/dev/.local/lib/python3.10/site-packages/uvicorn/importer.py\", line 19, in import_from_string\r\n    module = importlib.import_module(module_str)\r\n  File \"/usr/lib/python3.10/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1050, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 1027, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 688, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 883, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 241, in _call_with_frames_removed\r\n  File \"/home/dev/.local/lib/python3.10/site-packages/goldenverba/server/api.py\", line 38, in <module>\r\n    setup_managers(manager)\r\n  File \"/home/dev/.local/lib/python3.10/site-packages/goldenverba/server/util.py\", line 13, in setup_managers\r\n    config = load_config(manager)\r\n  File \"/home/dev/.local/lib/python3.10/site-packages/goldenverba/server/util.py\", line 227, in load_config\r\n    return get_config(manager)\r\n  File \"/home/dev/.local/lib/python3.10/site-packages/goldenverba/server/util.py\", line 40, in get_config\r\n    \"components\": {\r\n  File \"/home/dev/.local/lib/python3.10/site-packages/goldenverba/server/util.py\", line 41, in <dictcomp>\r\n    reader: readers[reader].get_meta(\r\n  File \"/home/dev/.local/lib/python3.10/site-packages/goldenverba/components/interfaces.py\", line 47, in get_meta\r\n    \"config\": {_c: self.config[_c].model_dump() for _c in self.config},\r\n  File \"/home/dev/.local/lib/python3.10/site-packages/goldenverba/components/interfaces.py\", line 47, in <dictcomp>\r\n    \"config\": {_c: self.config[_c].model_dump() for _c in self.config},\r\nAttributeError: 'InputText' object has no attribute 'model_dump'\r\n/usr/lib/python3.10/tempfile.py:999: ResourceWarning: Implicitly cleaning up <TemporaryDirectory '/tmp/tmpfrnxdxoq'>\r\n  _warnings.warn(warn_message, ResourceWarning)\r\nsys:1: ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Shutting down... \",\"time\":\"2024-05-23T10:43:41+01:00\"}\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Stopped serving weaviate at http://127.0.0.1:6666\",\"time\":\"2024-05-23T10:43:41+01:00\"}\r\n---\r\nPlease advise hot to fix?",
      "state": "closed",
      "author": "pavlosidelov",
      "author_type": "User",
      "created_at": "2024-05-23T09:47:13Z",
      "updated_at": "2024-05-27T11:22:20Z",
      "closed_at": "2024-05-27T11:22:20Z",
      "labels": [
        "installation"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/192/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/192",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/192",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:46.371565",
      "comments": [
        {
          "author": "2532380",
          "body": "me2",
          "created_at": "2024-05-23T10:06:35Z"
        },
        {
          "author": "thomashacker",
          "body": "You might have the wrong pydantic version installed, make sure to install Verba in a clean environment",
          "created_at": "2024-05-23T13:09:57Z"
        },
        {
          "author": "pavlosidelov",
          "body": "Thats correct. I have installed it globally not with Venv.\r\nVenv scenario installation makes things work.\r\nIn your manual, you just skipped Venv activation and I forgot to do it\r\nAll started properly\r\n\r\n\r\n",
          "created_at": "2024-05-23T15:19:46Z"
        }
      ]
    },
    {
      "issue_number": 191,
      "title": "[bug] Verba saves data in XDG_DATA_HOME (not ~/.local/share/weaviate)",
      "body": "## Description\r\nBasically what the title says.\r\n\r\n## Is this a bug or a feature?\r\n- [x] Bug\r\n- [ ] Feature\r\n\r\n## Steps to Reproduce\r\n1. Install Verba (https://github.com/weaviate/Verba#how-to-deploy-with-pip)\r\n2. Start Verba (it will download weaviate-embedded)\r\n3. Configure it to use Ollama\r\n4. Import a document\r\n5. Many files and directories with \"verba\" in their names, among other files, will be created ~/.local/share (i.e. XDG_DATA_HOME), there is no ~/.local/share/weaviate as shown in [README](https://github.com/weaviate/Verba#faq)\r\n\r\n## Additional context\r\nFirst of all, thank you a lot for developing, maintaining and providing the nice too as Open Source.\r\n\r\nEnvironment:\r\n1. ArchLinux\r\n2. Pyhton 3.12\r\n3. I actually have XDG_DATA_HOME defined in the login shell, maybe it makes some difference in your code\r\n\r\nPlease feel free to ask for more info if needed.\r\n\r\nRegards\r\n",
      "state": "closed",
      "author": "LFd3v",
      "author_type": "User",
      "created_at": "2024-05-23T02:30:54Z",
      "updated_at": "2024-05-27T11:21:57Z",
      "closed_at": "2024-05-27T11:21:52Z",
      "labels": [
        "documentation",
        "enhancement"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/191/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/191",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/191",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:46.605914",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Nice catch! Thanks, I'll update the README",
          "created_at": "2024-05-23T13:11:57Z"
        },
        {
          "author": "LFd3v",
          "body": "@thomashacker Thank you for your reply. Actually, wouldn't it better to actually create a folder in XDG_HOME_DATA (i.e. ~/.local/share) and to store the files there? This is the normal and expected behavior (and the main issue here is not documentation or a request to update the README).\r\n\r\nThanks a",
          "created_at": "2024-05-23T13:22:06Z"
        },
        {
          "author": "thomashacker",
          "body": "Verba is using Weaviate Embedded (https://weaviate.io/developers/weaviate/installation/embedded) per default, if no Weaviate Cluster is detected in the `.env` file. Weaviate automatically checks the `XDG_HOME_DATA` variable to save the data if not specified otherwise. I think, in this case, improvin",
          "created_at": "2024-05-23T14:20:00Z"
        },
        {
          "author": "LFd3v",
          "body": "Sure, agreed. But from what I recall reading it:\r\n1. I does state that it would use weaviate-embedded if there is no other setup available (but indeed also adding the info that it will then be downloaded and installed locally would make it clear, and also let the user known that something else will ",
          "created_at": "2024-05-23T14:28:37Z"
        },
        {
          "author": "thomashacker",
          "body": "Good point! I'll look into documenting it better and fix the issue with data scattered inside `$XDG_DATA_HOME`",
          "created_at": "2024-05-27T11:21:52Z"
        }
      ]
    },
    {
      "issue_number": 198,
      "title": "Windows is not supported with EmbeddedDB",
      "body": "It's probably a newbie problem. I can't find a way out, even with docker \r\n\r\nweaviate.exceptions.WeaviateStartUpError: Windows is not supported with EmbeddedDB. Please upvote the feature request if you want this: https://github.com/weaviate/weaviate-python-client/issues/239\r\n\r\n",
      "state": "closed",
      "author": "Steph-m8",
      "author_type": "User",
      "created_at": "2024-05-24T01:01:17Z",
      "updated_at": "2024-05-27T11:17:33Z",
      "closed_at": "2024-05-27T11:17:33Z",
      "labels": [
        "installation"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/198/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/198",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/198",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:46.812688",
      "comments": [
        {
          "author": "mmike87",
          "body": "I had the same issue and \"solved\" it by installing it under Windows Subsystem for Linux. However, it doesn't seem to be able to connect Ollama running locally on the same machine.",
          "created_at": "2024-05-27T03:57:56Z"
        },
        {
          "author": "thomashacker",
          "body": "If Docker does not work as well, another workaround can be to create a sandbox cluster on https://auth.wcs.api.weaviate.io/",
          "created_at": "2024-05-27T11:17:33Z"
        }
      ]
    },
    {
      "issue_number": 166,
      "title": "Settings are not being saved on Ubuntu",
      "body": "## Description\r\n<!-- A clear and concise description of what the issue is. Please include if this is a bug or a feature request. -->\r\nSettings are not being saved on Ubuntu.  I made few changes to the Title page, logo etc. and applied.  When I clicked on chat, all my custom setting appears, and I got good summaries for the document that I imported.\r\n\r\nHowever, once I refresh the page, all my custom configurations are gone.  How do I keep those changes.\r\n\r\n## Is this a bug or a feature?\r\n- [X ] Bug\r\n- [] Feature\r\n\r\n## Steps to Reproduce\r\n<!-- If this is a bug, please provide detailed steps on how to reproduce the issue. If this is a feature, please describe what you want to be added or changed. -->\r\n\r\n## Additional context\r\n<!-- Add any other context about the problem here. -->\r\n",
      "state": "closed",
      "author": "sitaram70",
      "author_type": "User",
      "created_at": "2024-05-17T16:53:23Z",
      "updated_at": "2024-05-25T23:11:47Z",
      "closed_at": "2024-05-25T23:11:41Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/166/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/166",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/166",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:47.109411",
      "comments": [
        {
          "author": "thomashacker",
          "body": "I think this issue is related to your other issue: https://github.com/weaviate/Verba/issues/165\r\nSomething is not working with the connection between the frontend and backend",
          "created_at": "2024-05-17T17:05:10Z"
        },
        {
          "author": "sitaram70",
          "body": "I am able to save the settings successfully and also able to see all the details on the Admin page.\r\nThank you all for help in resolving the issue.",
          "created_at": "2024-05-25T23:11:39Z"
        },
        {
          "author": "sitaram70",
          "body": "I am able to save the settings successfully and also able to see all the details on the Admin page.\r\nThank you all for help in resolving the issue.",
          "created_at": "2024-05-25T23:11:46Z"
        }
      ]
    },
    {
      "issue_number": 165,
      "title": "Admin Console not working in V1.0.1",
      "body": "## Description\r\n<!-- A clear and concise description of what the issue is. Please include if this is a bug or a feature request. -->\r\nAdmin Console not working in V1.0.1 on Ubuntu machine.\r\n\r\n## Is this a bug or a feature?\r\n- [ ] Bug\r\n- [ ] Feature\r\n\r\n## Steps to Reproduce\r\n<!-- If this is a bug, please provide detailed steps on how to reproduce the issue. If this is a feature, please describe what you want to be added or changed. -->\r\n\r\n## Additional context\r\n<!-- Add any other context about the problem here. -->\r\nI successfully made new version V1.0.1 and Ubuntu machine.\r\nEverything is working fine except the Admin Console.\r\nIt shows it is \"connecting...\"\r\nBut never comes back with any data for Admin Console, Libraries and Variables.\r\nIs there any port that I have to enable ...?\r\nPlease advise.\r\n\r\n",
      "state": "closed",
      "author": "sitaram70",
      "author_type": "User",
      "created_at": "2024-05-17T16:46:06Z",
      "updated_at": "2024-05-25T23:10:48Z",
      "closed_at": "2024-05-25T23:09:17Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 22,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/165/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/165",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/165",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:47.362028",
      "comments": []
    },
    {
      "issue_number": 185,
      "title": "Response using Ollama giving the instructions back",
      "body": "## Description\r\n<!-- A clear and concise description of what the issue is. Please include if this is a bug or a feature request. -->\r\nInconsistent context retrieval and response generation. Responses sometimes default to a template or provide incorrect context.\r\n\r\n## Is this a bug or a feature?\r\n- [x] Bug\r\n- [ ] Feature\r\n\r\n## Steps to Reproduce\r\n<!-- If this is a bug, please provide detailed steps on how to reproduce the issue. If this is a feature, please describe what you want to be added or changed. -->\r\n1. **Environment Setup**:\r\n   - **.env File**:\r\n     ```\r\n     OLLAMA_URL=http://localhost:11434\r\n     OLLAMA_MODEL=llama3\r\n     ```\r\n\r\n2. **Documents Uploaded**:\r\n   - **personal_information.txt**:\r\n     ```\r\n     Name: John Doe\r\n     Address: 123 Main Street, Anytown, USA 12345\r\n     Email: johndoe@example.com\r\n     Phone: 555-123-4567\r\n     ```\r\n\r\n## Additional context\r\n<!-- Add any other context about the problem here. -->\r\nExpected Behavior:\r\n- Correctly retrieve and use context for responses.\r\n\r\nActual Behavior:\r\n- Responses default to template or use incorrect context.\r\n\r\n![image](https://github.com/weaviate/Verba/assets/46587568/16f3e403-2d89-48fd-aaa5-81e87552dea7)\r\n",
      "state": "closed",
      "author": "TannerOdenthal",
      "author_type": "User",
      "created_at": "2024-05-22T06:32:47Z",
      "updated_at": "2024-05-23T13:13:34Z",
      "closed_at": "2024-05-23T13:13:34Z",
      "labels": [
        "installation"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/185/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/185",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/185",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:47.362050",
      "comments": [
        {
          "author": "thomashacker",
          "body": "I also encountered this error, but it's not related to Verba. I would recommend restarting the Ollama instance or update it. Let me know if this fixed it! 🚀 ",
          "created_at": "2024-05-22T10:25:36Z"
        }
      ]
    },
    {
      "issue_number": 23,
      "title": "Verba Start fails",
      "body": "```\r\n ✘    ~  verba start                                                                                                                           (verba)   10:18   28.09.23 \r\nINFO:     Will watch for changes in these directories: ['/Users/brianjking']\r\nINFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)\r\nINFO:     Started reloader process [28438] using WatchFiles\r\nℹ Setting up client\r\nℹ VERBA_URL environment variable not set. Using Weaviate Embedded\r\nStarted ./.verba/cache/weaviate-embedded: process ID 28442\r\n{\"action\":\"startup\",\"default_vectorizer_module\":\"none\",\"level\":\"info\",\"msg\":\"the default vectorizer modules is set to \\\"none\\\", as a result all new schema classes without an explicit vectorizer setting, will use this vectorizer\",\"time\":\"2023-09-28T10:19:02-07:00\"}\r\n{\"action\":\"startup\",\"auto_schema_enabled\":true,\"level\":\"info\",\"msg\":\"auto schema enabled setting is set to \\\"true\\\"\",\"time\":\"2023-09-28T10:19:02-07:00\"}\r\n{\"level\":\"warning\",\"msg\":\"Multiple vector spaces are present, GraphQL Explore and REST API list objects endpoint module include params has been disabled as a result.\",\"time\":\"2023-09-28T10:19:02-07:00\"}\r\n{\"action\":\"grpc_startup\",\"error\":\"listen tcp :50051: bind: address already in use\",\"level\":\"fatal\",\"msg\":\"failed to start grpc server\",\"time\":\"2023-09-28T10:19:02-07:00\"}\r\nProcess SpawnProcess-1:\r\nTraceback (most recent call last):\r\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.5/Frameworks/Python.framework/Versions/3.11/lib/python3.11/multiprocessing/process.py\", line 314, in _bootstrap\r\n    self.run()\r\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.5/Frameworks/Python.framework/Versions/3.11/lib/python3.11/multiprocessing/process.py\", line 108, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/opt/homebrew/lib/python3.11/site-packages/uvicorn/_subprocess.py\", line 76, in subprocess_started\r\n    target(sockets=sockets)\r\n  File \"/opt/homebrew/lib/python3.11/site-packages/uvicorn/server.py\", line 61, in run\r\n    return asyncio.run(self.serve(sockets=sockets))\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.5/Frameworks/Python.framework/Versions/3.11/lib/python3.11/asyncio/runners.py\", line 190, in run\r\n    return runner.run(main)\r\n           ^^^^^^^^^^^^^^^^\r\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.5/Frameworks/Python.framework/Versions/3.11/lib/python3.11/asyncio/runners.py\", line 118, in run\r\n    return self._loop.run_until_complete(task)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"uvloop/loop.pyx\", line 1517, in uvloop.loop.Loop.run_until_complete\r\n  File \"/opt/homebrew/lib/python3.11/site-packages/uvicorn/server.py\", line 68, in serve\r\n    config.load()\r\n  File \"/opt/homebrew/lib/python3.11/site-packages/uvicorn/config.py\", line 473, in load\r\n    self.loaded_app = import_from_string(self.app)\r\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/opt/homebrew/lib/python3.11/site-packages/uvicorn/importer.py\", line 21, in import_from_string\r\n    module = importlib.import_module(module_str)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.5/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"<frozen importlib._bootstrap>\", line 1204, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 1176, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 1147, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 690, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 940, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 241, in _call_with_frames_removed\r\n  File \"/opt/homebrew/lib/python3.11/site-packages/goldenverba/server/api.py\", line 22, in <module>\r\n    verba_engine = AdvancedVerbaQueryEngine()\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/opt/homebrew/lib/python3.11/site-packages/goldenverba/retrieval/interface.py\", line 15, in __init__\r\n    VerbaQueryEngine.client = setup_client()\r\n                              ^^^^^^^^^^^^^^\r\n  File \"/opt/homebrew/lib/python3.11/site-packages/goldenverba/ingestion/util.py\", line 41, in setup_client\r\n    client = weaviate.Client(\r\n             ^^^^^^^^^^^^^^^^\r\n  File \"/opt/homebrew/lib/python3.11/site-packages/weaviate/client.py\", line 147, in __init__\r\n    url, embedded_db = self.__parse_url_and_embedded_db(url, embedded_options)\r\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/opt/homebrew/lib/python3.11/site-packages/weaviate/client.py\", line 288, in __parse_url_and_embedded_db\r\n    embedded_db.start()\r\n  File \"/opt/homebrew/lib/python3.11/site-packages/weaviate/embedded.py\", line 229, in start\r\n    self.wait_till_listening()\r\n  File \"/opt/homebrew/lib/python3.11/site-packages/weaviate/embedded.py\", line 174, in wait_till_listening\r\n    raise WeaviateStartUpError(\r\nweaviate.exceptions.WeaviateStartUpError: Embedded DB did not start listening on port 6666 within 30 seconds\r\nsys:1: ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>\r\n```",
      "state": "closed",
      "author": "brianjking",
      "author_type": "User",
      "created_at": "2023-09-28T17:19:56Z",
      "updated_at": "2024-05-22T10:10:54Z",
      "closed_at": "2024-05-06T06:47:12Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 14,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/23/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/23",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/23",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:47.593978",
      "comments": [
        {
          "author": "brianjking",
          "body": "Running lsof -i :50051 doesn't return any open files\r\n",
          "created_at": "2023-09-28T17:39:45Z"
        },
        {
          "author": "brianjking",
          "body": "any ideas?\r\n",
          "created_at": "2023-10-05T22:41:03Z"
        },
        {
          "author": "thomashacker",
          "body": "Interesting! Thanks for the issue, we'll look into this",
          "created_at": "2023-10-22T15:18:17Z"
        },
        {
          "author": "thomashacker",
          "body": "This issue should be fixed with the new 0.3.0 version 🚀  Thanks a lot!",
          "created_at": "2023-11-13T09:26:39Z"
        },
        {
          "author": "smedegaard",
          "body": "@thomashacker, Getting the same error with \r\nverba 0.3.0\r\npython 3.10..3 and 3.11\r\nvenv: poetry and venv\r\nosx 14.0\r\n\r\n```fish\r\nDocuments/skunk/verba-rag via ·verba-rag-OfjRD_rY-py3.11 took 15s 198ms\r\n➜ verba start\r\nINFO:     Will watch for changes in these directories: ['/Users/anders/Documents/skun",
          "created_at": "2023-11-21T19:17:07Z"
        }
      ]
    },
    {
      "issue_number": 179,
      "title": "Question about using verba as a server",
      "body": "## Description\r\nI wonder if I can use verba as a rag chatbot as server and use verba as api to implement to another website's chatbot. If there's a feature for this could you please explain me how?\r\n\r\n## Is this a bug or a feature?\r\n- [ ] Feature\r\n\r\n",
      "state": "closed",
      "author": "dwk601",
      "author_type": "User",
      "created_at": "2024-05-20T16:12:58Z",
      "updated_at": "2024-05-22T10:06:02Z",
      "closed_at": "2024-05-20T18:59:49Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/179/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/179",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/179",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:47.864664",
      "comments": [
        {
          "author": "thomashacker",
          "body": "You can use the existing fastapi app of Verba as a server and add a new frontend around it 🚀 ",
          "created_at": "2024-05-20T18:59:50Z"
        },
        {
          "author": "dwk601",
          "body": "> You can use the existing fastapi app of Verba as a server and add a new frontend around it 🚀\r\n\r\nis it the server/api.py?",
          "created_at": "2024-05-20T21:21:18Z"
        },
        {
          "author": "thomashacker",
          "body": "Yes 👍 ",
          "created_at": "2024-05-22T10:06:01Z"
        }
      ]
    },
    {
      "issue_number": 69,
      "title": "Docker-compose: container verba starts but API does not work",
      "body": "I'm trying to run verba using docker-compose, when I run it (I fixed Dockerfile to use Python 3.10 BTW) I get\r\n\r\n```\r\nverba-verba-1     | /usr/local/lib/python3.10/site-packages/PyPDF2/__init__.py:21: DeprecationWarning: PyPDF2 is deprecated. Please move to the pypdf library instead.\r\nverba-verba-1     |   warnings.warn(\r\nverba-verba-1     | INFO:     Will watch for changes in these directories: ['/Verba']\r\nverba-verba-1     | INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\r\nverba-verba-1     | INFO:     Started reloader process [1] using WatchFiles\r\nverba-verba-1     | /usr/local/lib/python3.10/site-packages/PyPDF2/__init__.py:21: DeprecationWarning: PyPDF2 is deprecated. Please move to the pypdf library instead.\r\nverba-verba-1     |   warnings.warn(\r\nverba-verba-1     | /usr/local/lib/python3.10/site-packages/fastapi/openapi/models.py:55: DeprecationWarning: `general_plain_validator_function` is deprecated, use `with_info_plain_validator_function` instead.\r\nverba-verba-1     |   return general_plain_validator_function(cls._validate)\r\nverba-verba-1     | /usr/local/lib/python3.10/site-packages/pydantic_core/core_schema.py:3902: DeprecationWarning: `general_plain_validator_function` is deprecated, use `with_info_plain_validator_function` instead.\r\nverba-verba-1     |   warnings.warn(\r\nverba-verba-1     | INFO:     Started server process [39]\r\nverba-verba-1     | INFO:     Waiting for application startup.\r\nverba-verba-1     | INFO:     Application startup complete.\r\nverba-verba-1     | ⚠ No module named 'torch'\r\nverba-verba-1     | ℹ Setting up client\r\nverba-verba-1     | ℹ No Auth information provided\r\nverba-verba-1     | ✔ Connected to Weaviate\r\nverba-verba-1     | ℹ New Config initialized\r\nverba-verba-1     | ✔ Saved Config\r\nverba-verba-1     | ✔ Set Reader to SimpleReader\r\nverba-verba-1     | ✔ Set Chunker to TokenChunker\r\nverba-verba-1     | ✔ Set Retriever to WindowRetriever\r\nverba-verba-1     | ✔ Saved Config\r\nverba-verba-1     | INFO:     127.0.0.1:45968 - \"HEAD / HTTP/1.1\" 200 OK\r\nverba-verba-1     | INFO:     127.0.0.1:45976 - \"HEAD / HTTP/1.1\" 200 OK\r\n```\r\n\r\nIn spite of this I can't access verba on localhost:8000. I've waited for couple of minutes. The weaviate seems to work and it returns\r\n\r\n```\r\n{\"links\":[{\"href\":\"/v1/meta\",\"name\":\"Meta information about this instance/cluster\"},{\"documentationHref\":\"https://weaviate.io/developers/weaviate/api/rest/schema\",\"href\":\"/v1/schema\",\"name\":\"view complete schema\"},{\"documentationHref\":\"https://weaviate.io/developers/weaviate/api/rest/schema\",\"href\":\"/v1/schema{/:className}\",\"name\":\"CRUD schema\"},{\"documentationHref\":\"https://weaviate.io/developers/weaviate/api/rest/objects\",\"href\":\"/v1/objects{/:id}\",\"name\":\"CRUD objects\"},{\"documentationHref\":\"https://weaviate.io/developers/weaviate/api/rest/classification,https://weaviate.io/developers/weaviate/api/rest/classification#knn-classification\",\"href\":\"/v1/classifications{/:id}\",\"name\":\"trigger and view status of classifications\"},{\"documentationHref\":\"https://weaviate.io/developers/weaviate/api/rest/well-known#liveness\",\"href\":\"/v1/.well-known/live\",\"name\":\"check if Weaviate is live (returns 200 on GET when live)\"},{\"documentationHref\":\"https://weaviate.io/developers/weaviate/api/rest/well-known#readiness\",\"href\":\"/v1/.well-known/ready\",\"name\":\"check if Weaviate is ready (returns 200 on GET when ready)\"},{\"documentationHref\":\"https://weaviate.io/developers/weaviate/api/rest/well-known#openid-configuration\",\"href\":\"/v1/.well-known/openid-configuration\",\"name\":\"view link to openid configuration (returns 404 on GET if no openid is configured)\"}]}\r\n```",
      "state": "closed",
      "author": "lambdaofgod",
      "author_type": "User",
      "created_at": "2023-11-27T13:18:31Z",
      "updated_at": "2024-05-18T13:11:46Z",
      "closed_at": "2024-05-15T17:34:00Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 7,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/69/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/69",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/69",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:48.092852",
      "comments": [
        {
          "author": "recursionbane",
          "body": "I have the same issue.",
          "created_at": "2023-11-27T17:42:24Z"
        },
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! I'll have a look",
          "created_at": "2023-11-28T17:24:50Z"
        },
        {
          "author": "thomashacker",
          "body": "We added some fixes to the Docker setup! Could you try again and see if it works now? 🚀 ",
          "created_at": "2024-04-12T08:49:14Z"
        },
        {
          "author": "thomashacker",
          "body": "Closing this one! Let me know if the error persists",
          "created_at": "2024-05-15T17:34:00Z"
        },
        {
          "author": "kjeldahl",
          "body": "@thomashacker I have the same problem as described above.\r\nI have cloned the project https://github.com/weaviate/Verba/commit/1be4e52e80dc159f72940c5bf9f1e6ed962ba8bc and just run `docker compose up`\r\n\r\n<details>\r\n<summary>\r\nLog output\r\n</summary>\r\n<pre>\r\nverba-1     | INFO:     Will watch for chang",
          "created_at": "2024-05-16T19:58:08Z"
        }
      ]
    },
    {
      "issue_number": 147,
      "title": "Feat: Add baseURL config for Weaviate schema generation",
      "body": "The generated schema doesn't seem to have an option to configure a base URL:\r\nbaseURL\tstring\tOptional\thttps://api.openai.com\tSets a proxy or other URL instead of the default OpenAI URL.\r\n\r\nUse a the protocol domain format: https://your.domain.com.\r\n\r\nCurrently you can only set the OPENAI base url for the LLM calls that Verba makes but the schemas generated by Verba do not correctly set the base URL.",
      "state": "closed",
      "author": "samos123",
      "author_type": "User",
      "created_at": "2024-05-07T05:06:50Z",
      "updated_at": "2024-05-18T08:17:50Z",
      "closed_at": "2024-05-18T08:17:50Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/147/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/147",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/147",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:48.377389",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Going to have a look at the PR! Thanks a lot",
          "created_at": "2024-05-12T22:22:35Z"
        }
      ]
    },
    {
      "issue_number": 155,
      "title": "A file in the repository violates Windows naming rules",
      "body": "## Description\r\nThe filename [\"The Influence of Detoxification Agents on the Intensity of Side Effects Caused by Medium-high Doses of Methotrexate in Children with Acute Lymphoblastic Leukemia: Case Series.pdf\"](https://github.com/weaviate/Verba/blob/main/data/sana_maxima/The%20Influence%20of%20Detoxification%20Agents%20on%20the%20Intensity%20of%20Side%20Effects%20Caused%20by%20Medium-high%20Doses%20of%20Methotrexate%20in%20Children%20with%20Acute%20Lymphoblastic%20Leukemia%3A%20Case%20Series.pdf) contains a colon. [On Windows, this kind of behavior is considered especially heinous.](https://learn.microsoft.com/en-us/windows/win32/fileio/naming-a-file#naming-conventions) The bad path causes git to fail to clone the repository under typical conditions in Windows.\r\n\r\n## Is this a bug or a feature?\r\n- [ ] Bug\r\n- [ ] Feature\r\n- [x] File\r\n\r\n## Steps to Reproduce\r\n1. Get a Windows machine\r\n2. Try to clone the repository\r\n\r\n## Additional context\r\nThe file's very long filename may also cause spurious violations of the [Maximum Path Length Limitation](https://learn.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation) on Windows as well, under the right conditions. While the max path thing isn't as much of a problem anymore, you still have to opt-in to the new behavior under Windows 10.",
      "state": "closed",
      "author": "cookingboy3",
      "author_type": "User",
      "created_at": "2024-05-16T08:34:02Z",
      "updated_at": "2024-05-16T09:25:18Z",
      "closed_at": "2024-05-16T09:25:18Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/155/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/155",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/155",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:48.598095",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Oh wow! I wasn't aware of that, nice catch. Thanks a lot, will be fixed immediately",
          "created_at": "2024-05-16T09:11:37Z"
        },
        {
          "author": "thomashacker",
          "body": "Fixed and pushed to main, let me know if you can successfully clone the repo now",
          "created_at": "2024-05-16T09:16:14Z"
        },
        {
          "author": "cookingboy3",
          "body": "Works! Thanks for the speedy fix.",
          "created_at": "2024-05-16T09:25:18Z"
        }
      ]
    },
    {
      "issue_number": 134,
      "title": "500 Internal Server Error",
      "body": "![500 Internal Server Error](https://github.com/weaviate/Verba/assets/72214141/f97581dd-f4c5-4c13-be54-3ff7f3926735)\r\n\r\nI using ollama docker and found this issues :(",
      "state": "closed",
      "author": "Mr-Jack-Tung",
      "author_type": "User",
      "created_at": "2024-04-13T14:35:20Z",
      "updated_at": "2024-05-15T18:04:09Z",
      "closed_at": "2024-05-15T18:04:09Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/134/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/134",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/134",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:48.820499",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! Can you share more information about your setup? Are you trying to use Ollama for generating answers ?",
          "created_at": "2024-04-15T07:39:49Z"
        },
        {
          "author": "Mr-Jack-Tung",
          "body": "Thank you Mr. Thomas, I got OllamaGenerator ^^ ... that issue in streaming generation of Ollama custom function ^^\r\n\r\n![Screenshot 2024-04-13 at 11 05 49 PM](https://github.com/weaviate/Verba/assets/72214141/7cd157a4-a4d1-4012-806d-5a1388e46273)\r\n\r\n",
          "created_at": "2024-04-15T15:39:31Z"
        },
        {
          "author": "thomashacker",
          "body": "Oh, nice! Did you get it working? 😄 \r\nThe error code you showed initially might be related to the connection to your local Ollama instance. It's hard for me to debug it further since I don't know how you implemented it. If you share some bits of your code, we might be able to pin down the issue 🚀 ",
          "created_at": "2024-04-15T20:02:30Z"
        },
        {
          "author": "thomashacker",
          "body": "Closing this for now",
          "created_at": "2024-05-15T18:04:09Z"
        }
      ]
    },
    {
      "issue_number": 141,
      "title": "silly question, but how to delete cached environment variables that verba's using?",
      "body": "hey, openai reset everyone's api keys and moved them to project-based keys, and i can't for the life of me figure out how to get verba to update to the new env var. I've tried the following:\r\n\r\nupdate .env\r\nexport OPENAI_API_KEY=newkey\r\ndelete browser cookies and cache\r\nchange to a different browser (chrome to edge)\r\ncreate a new virtualenv\r\nuninstall goldenverba, reinstall with --no-cache flag\r\n\r\nseems like no matter what I do i'm getting the unserializable object error (which iirc means my api key is incorrect, but it's difficult to tell for certain as i'm not displayed the error code.\r\n",
      "state": "closed",
      "author": "twilwa",
      "author_type": "User",
      "created_at": "2024-04-23T03:12:30Z",
      "updated_at": "2024-05-15T18:03:48Z",
      "closed_at": "2024-05-15T18:03:48Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/141/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/141",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/141",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:49.093980",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey! I also struggled with this 🥲 Here are some tips I used to get it working, I hope they can help:\r\n\r\n1. Make sure that the `OPEN_API_KEY` is not stored in `~/.zshrc`, `~/.bash_profile`, etc. `python_dotenv` will always prioritize global set variables to local `.env` files\r\n2.  You can use `printe",
          "created_at": "2024-04-27T09:21:30Z"
        }
      ]
    },
    {
      "issue_number": 126,
      "title": "CSV data ingestion",
      "body": "Is it possible to add data to Verba with csv files using unstructured.io? The unstructured API can process csv files, but I spoke with Erika Cardenas from Weaviate and she said Verba only supports PDF format and not csv.",
      "state": "closed",
      "author": "thomharvey",
      "author_type": "User",
      "created_at": "2024-03-18T16:51:06Z",
      "updated_at": "2024-05-15T18:03:23Z",
      "closed_at": "2024-05-15T18:03:22Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/126/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/126",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/126",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:49.322325",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Yes, Verba isn't supporting table data yet. But we're working on it for the next update",
          "created_at": "2024-04-11T08:59:58Z"
        },
        {
          "author": "thomharvey",
          "body": "Thanks Edward. Do you know what the timeline is for the next update?",
          "created_at": "2024-04-11T09:01:35Z"
        },
        {
          "author": "thomashacker",
          "body": "Improving Ingestion and Chunking should be finished around May 🚀 ",
          "created_at": "2024-04-11T13:59:55Z"
        },
        {
          "author": "thomashacker",
          "body": "Verba now supports CSV files as well in the newest 1.0.0 version! ",
          "created_at": "2024-05-15T18:03:22Z"
        }
      ]
    },
    {
      "issue_number": 113,
      "title": "Verba stops working when using Llama on Docker",
      "body": "Hey,\r\n\r\nI want to use Verba with llama model however when I configure the HF token and `LLAMA2-7B-CHAT-HF` to `true`, the chat interface stops working. \r\n\r\n<img width=\"689\" alt=\"Screenshot 2024-02-02 at 15 56 02\" src=\"https://github.com/weaviate/Verba/assets/82878945/b1d30c22-ccbe-4117-aac4-e0ac31d7f510\">\r\n\r\nMy `docker-compose.yml:`\r\n\r\n```\r\n---\r\nversion: '3.4'\r\n\r\nservices:\r\n  verba:\r\n    build:\r\n      context: ./\r\n      dockerfile: Dockerfile\r\n    ports:\r\n      - 8000:8000\r\n    environment:\r\n      - WEAVIATE_URL_VERBA=http://weaviate:8080\r\n      - OPENAI_API_KEY=$OPENAI_API_KEY\r\n      - HF_TOKEN=hf_xxx\r\n      - LLAMA2-7B-CHAT-HF=True\r\n      ## IF YOU WANT AUTHENTICATION, UNCOMENT BELLOW\r\n      ## AND ADD WEAVIATE SERVICE\r\n      #- WEAVIATE_API_KEY_VERBA=adminkey\r\n      #- COHERE_API_KEY=YOUR-COHERE-KEY\r\n      #- UNSTRUCTURED_API_KEY=YOUR-UNSTRUCTURED-KEY\r\n      #- GITHUB_TOKEN=YOUR-GITHUB-TOKEN\r\n\r\n    volumes:\r\n      - ./data:/data/\r\n      - ./cache:/root/.cache\r\n    depends_on:\r\n      weaviate:\r\n        condition: service_healthy\r\n    healthcheck:\r\n      test: wget --no-verbose --tries=3 --spider http://localhost:8000 || exit 1\r\n      interval: 5s\r\n      timeout: 10s\r\n      retries: 5\r\n      start_period: 10s\r\n\r\n  weaviate:\r\n    command:\r\n      - --host\r\n      - 0.0.0.0\r\n      - --port\r\n      - '8080'\r\n      - --scheme\r\n      - http\r\n    image: semitechnologies/weaviate:1.21.2\r\n    ports:\r\n      - 8080:8080\r\n      - 3000:8080\r\n    volumes:\r\n      - weaviate_data:/var/lib/weaviate\r\n    restart: on-failure:0\r\n    healthcheck:\r\n      test: wget --no-verbose --tries=3 --spider http://localhost:8080/v1/.well-known/ready || exit 1\r\n      interval: 5s\r\n      timeout: 10s\r\n      retries: 5\r\n      start_period: 10s\r\n    environment:\r\n      OPENAI_APIKEY: $OPENAI_API_KEY\r\n      QUERY_DEFAULTS_LIMIT: 25\r\n      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'\r\n      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'\r\n      # DEFAULT_VECTORIZER_MODULE: 'text2vec-openai'\r\n      ENABLE_MODULES: 'text2vec-openai, generative-openai, qna-openai, text2vec-cohere'\r\n      CLUSTER_HOSTNAME: 'node1'\r\n      #######IF YOU WANT AUTHENTICATION UNCOMMENT BELOW########\r\n      # AUTHENTICATION_APIKEY_ENABLED: 'true'\r\n      # AUTHENTICATION_APIKEY_ALLOWED_KEYS: 'readonlykey,adminkey'\r\n      # AUTHENTICATION_APIKEY_USERS: 'jane@doe.com,john@doe.com'\r\n      # AUTHORIZATION_ADMINLIST_ENABLED: 'true'\r\n      # AUTHORIZATION_ADMINLIST_USERS: 'john@doe.com'\r\n      # AUTHORIZATION_ADMINLIST_READONLY_USERS: 'jane@doe.com'\r\n      DISK_USE_WARNING_PERCENTAGE: 90\r\n      DISK_USE_READONLY_PERCENTAGE: 100\r\n\r\nvolumes:\r\n  weaviate_data: {}\r\n...\r\n```\r\n\r\nI am running it on MacBook Pro M1 with Docker Desktop using the version master branch. The log of Verba doesn't even show me accessing it. Happy to debug.\r\n",
      "state": "closed",
      "author": "EkinKarabulut",
      "author_type": "User",
      "created_at": "2024-02-02T14:59:08Z",
      "updated_at": "2024-05-15T18:00:04Z",
      "closed_at": "2024-05-15T18:00:03Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/113/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/113",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/113",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:49.546059",
      "comments": [
        {
          "author": "cam-barts",
          "body": "Hi @EkinKarabulut, would you be willing to share out what your docker logs when you start the containers? I just tried this locally with almost exactly your configuration and mine worked. It'd be useful to know where in the process things are hanging up. ",
          "created_at": "2024-02-21T01:56:51Z"
        },
        {
          "author": "thomashacker",
          "body": "We removed the Llama Generator and replaced it with the Ollama Generator, this should fix the Docker issue! Let me know if the error still persists",
          "created_at": "2024-05-15T18:00:03Z"
        }
      ]
    },
    {
      "issue_number": 109,
      "title": "Error: can only concatenate str (not \"NoneType\") to str ...  and UI hanging",
      "body": "Hello,\r\n\r\ni \"successfully\" set up a local installation with starting with your docker-compose. I added a local litellm-container to connect to my local ollama setup.\r\nVerba seems to work, but I always get this error:\r\n`WebSocket Error: can only concatenate str (not \"NoneType\") to str`\r\n\r\nThe console log around that error is:\r\n```\r\nverba-verba-1         | ERROR:    Exception in ASGI application\r\nverba-verba-1         | Traceback (most recent call last):\r\nverba-verba-1         |   File \"/Verba/goldenverba/server/api.py\", line 599, in websocket_generate_stream\r\nverba-verba-1         |     async for chunk in manager.generate_stream_answer(\r\nverba-verba-1         |   File \"/Verba/goldenverba/verba_manager.py\", line 616, in generate_stream_answer\r\nverba-verba-1         |     full_text += result[\"message\"]\r\nverba-verba-1         | TypeError: can only concatenate str (not \"NoneType\") to str\r\nverba-verba-1         | \r\nverba-verba-1         | During handling of the above exception, another exception occurred:\r\nverba-verba-1         | \r\nverba-verba-1         | Traceback (most recent call last):\r\nverba-verba-1         |   File \"/usr/local/lib/python3.10/site-packages/uvicorn/protocols/websockets/websockets_impl.py\", line 254, in run_asgi\r\nverba-verba-1         |     result = await self.app(self.scope, self.asgi_receive, self.asgi_send)\r\nverba-verba-1         |   File \"/usr/local/lib/python3.10/site-packages/uvicorn/middleware/proxy_headers.py\", line 84, in __call__\r\nverba-verba-1         |     return await self.app(scope, receive, send)\r\nverba-verba-1         |   File \"/usr/local/lib/python3.10/site-packages/fastapi/applications.py\", line 292, in __call__\r\nverba-verba-1         |     await super().__call__(scope, receive, send)\r\nverba-verba-1         |   File \"/usr/local/lib/python3.10/site-packages/starlette/applications.py\", line 122, in __call__\r\nverba-verba-1         |     await self.middleware_stack(scope, receive, send)\r\nverba-verba-1         |   File \"/usr/local/lib/python3.10/site-packages/starlette/middleware/errors.py\", line 149, in __call__\r\nverba-verba-1         |     await self.app(scope, receive, send)\r\nverba-verba-1         |   File \"/usr/local/lib/python3.10/site-packages/starlette/middleware/cors.py\", line 75, in __call__\r\nverba-verba-1         |     await self.app(scope, receive, send)\r\nverba-verba-1         |   File \"/usr/local/lib/python3.10/site-packages/starlette/middleware/exceptions.py\", line 79, in __call__\r\nverba-verba-1         |     raise exc\r\nverba-verba-1         |   File \"/usr/local/lib/python3.10/site-packages/starlette/middleware/exceptions.py\", line 68, in __call__\r\nverba-verba-1         |     await self.app(scope, receive, sender)\r\nverba-verba-1         |   File \"/usr/local/lib/python3.10/site-packages/fastapi/middleware/asyncexitstack.py\", line 20, in __call__\r\nverba-verba-1         |     raise e\r\nverba-verba-1         |   File \"/usr/local/lib/python3.10/site-packages/fastapi/middleware/asyncexitstack.py\", line 17, in __call__\r\nverba-verba-1         |     await self.app(scope, receive, send)\r\nverba-verba-1         |   File \"/usr/local/lib/python3.10/site-packages/starlette/routing.py\", line 718, in __call__\r\nverba-verba-1         |     await route.handle(scope, receive, send)\r\nverba-verba-1         |   File \"/usr/local/lib/python3.10/site-packages/starlette/routing.py\", line 341, in handle\r\nverba-verba-1         |     await self.app(scope, receive, send)\r\nverba-verba-1         |   File \"/usr/local/lib/python3.10/site-packages/starlette/routing.py\", line 82, in app\r\nverba-verba-1         |     await func(session)\r\nverba-verba-1         |   File \"/usr/local/lib/python3.10/site-packages/fastapi/routing.py\", line 324, in app\r\nverba-verba-1         |     await dependant.call(**values)\r\nverba-verba-1         |   File \"/Verba/goldenverba/server/api.py\", line 613, in websocket_generate_stream\r\nverba-verba-1         |     await websocket.send_json(\r\nverba-verba-1         |   File \"/usr/local/lib/python3.10/site-packages/starlette/websockets.py\", line 171, in send_json\r\nverba-verba-1         |     text = json.dumps(data, separators=(\",\", \":\"))\r\nverba-verba-1         |   File \"/usr/local/lib/python3.10/json/__init__.py\", line 238, in dumps\r\nverba-verba-1         |     **kw).encode(obj)\r\nverba-verba-1         |   File \"/usr/local/lib/python3.10/json/encoder.py\", line 199, in encode\r\nverba-verba-1         |     chunks = self.iterencode(o, _one_shot=True)\r\nverba-verba-1         |   File \"/usr/local/lib/python3.10/json/encoder.py\", line 257, in iterencode\r\nverba-verba-1         |     return _iterencode(o, 0)\r\nverba-verba-1         |   File \"/usr/local/lib/python3.10/json/encoder.py\", line 179, in default\r\nverba-verba-1         |     raise TypeError(f'Object of type {o.__class__.__name__} '\r\nverba-verba-1         | TypeError: Object of type TypeError is not JSON serializable\r\nverba-verba-1         | INFO:     connection closed\r\nverba-verba-1         | ✘ WebSocket Error: can only concatenate str (not \"NoneType\") to str\r\n\r\n```\r\n\r\nAny suggestions?\r\n\r\n",
      "state": "closed",
      "author": "jhergeth",
      "author_type": "User",
      "created_at": "2024-01-19T17:25:14Z",
      "updated_at": "2024-05-15T17:57:04Z",
      "closed_at": "2024-05-15T17:57:04Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/109/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/109",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/109",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:49.738403",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue, we'll look into that!",
          "created_at": "2024-04-11T09:20:54Z"
        },
        {
          "author": "thomashacker",
          "body": "It seems like the token received by your LiteLLM implementation is a NoneType, which is causing the error of appending it to the message string. You can try out the newest Ollama integration to see if this works for you",
          "created_at": "2024-05-15T17:57:04Z"
        }
      ]
    },
    {
      "issue_number": 106,
      "title": "RAGtriever Chat keep on showing forever processing DOT DOT DOT",
      "body": "I am using Ubuntu with Python 3.11, I successfully deployed the Verba with all configured. I can add the documents, using token chunker and ADAEmbedder, everything works fine for the above three components as I can see those documents were splitted into chunks in the status windows. But when I tried to search in the RAGtriever chat windows, it just keep on showing DOT DOT DOT.. \r\n\r\nBelow is the log files from the queries.\r\n\r\nERROR:    Exception in ASGI application\r\nTraceback (most recent call last):\r\n  File \"/root/Verba/goldenverba/server/api.py\", line 596, in websocket_generate>\r\n    payload = GeneratePayload.model_validate_json(data)\r\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nAttributeError: type object 'GeneratePayload' has no attribute 'model_validate_>\r\n\r\nDuring handling of the above exception, another exception occurred:",
      "state": "closed",
      "author": "frankyeung740422",
      "author_type": "User",
      "created_at": "2024-01-11T01:33:55Z",
      "updated_at": "2024-05-15T17:54:31Z",
      "closed_at": "2024-05-15T17:54:31Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/106/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/106",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/106",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:49.953753",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the error message! We'll look into this",
          "created_at": "2024-04-11T09:25:23Z"
        },
        {
          "author": "sitaram70",
          "body": "Frank\r\nI got this error.  \r\nWhat LLM are you using?\r\nOpenAI or Cohere ....etc.?\r\n\r\nI am using OpenAI.  When you use OpenAI, you have to add OPENAI_MODEL=gpt-3.5-turbo or OPENAI_MODEL=gpt-4-turbo-review parameter in the Verba environment section of compose-docker.yml file.\r\nThis step is missing in th",
          "created_at": "2024-04-19T02:46:23Z"
        },
        {
          "author": "thomashacker",
          "body": "This should be fixed in the newest version! Let me know if the error persists",
          "created_at": "2024-05-15T17:54:31Z"
        }
      ]
    },
    {
      "issue_number": 102,
      "title": "Can i use my local LLM model ?",
      "body": "Can i use my local LLM model ?",
      "state": "closed",
      "author": "tommy3266",
      "author_type": "User",
      "created_at": "2023-12-28T03:21:05Z",
      "updated_at": "2024-05-15T17:48:58Z",
      "closed_at": "2024-05-15T17:48:58Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 7,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/102/reactions",
        "total_count": 10,
        "+1": 5,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 1,
        "rocket": 0,
        "eyes": 4
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/102",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/102",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:50.151293",
      "comments": [
        {
          "author": "jcranney",
          "body": "Is the model on HuggingFace? It's relatively straightforward to hack the Llama2Generator to use a user-defined HF model. If there is any interest I can make a pull request for something more user-friendly?",
          "created_at": "2024-01-18T00:42:17Z"
        },
        {
          "author": "clark-tax",
          "body": "> Is the model on HuggingFace? It's relatively straightforward to hack the Llama2Generator to use a user-defined HF model. If there is any interest I can make a pull request for something more user-friendly?\r\n\r\nI would be very interested in being able to plug verba into my self-hosted LLM models, an",
          "created_at": "2024-01-20T03:23:24Z"
        },
        {
          "author": "AvnerCohen",
          "body": "Would love to see this too, maybe an example via ollama?\r\n[This](https://github.com/weaviate/Verba/issues/81) seems to suggest such option is available, but I can't seem to get this to work :(\r\n",
          "created_at": "2024-03-05T13:28:35Z"
        },
        {
          "author": "moncefarajdal",
          "body": "> Is the model on HuggingFace? It's relatively straightforward to hack the Llama2Generator to use a user-defined HF model. If there is any interest I can make a pull request for something more user-friendly?\r\n\r\nAny idea on how to do this? I tried to copy the logic from Llama2Generator so I can use a",
          "created_at": "2024-03-21T14:09:12Z"
        },
        {
          "author": "thomashacker",
          "body": "Great idea! We're working on this for the next update, making it easier to simply plug-in custom LLM's 🚀 ",
          "created_at": "2024-04-11T09:29:24Z"
        }
      ]
    },
    {
      "issue_number": 97,
      "title": "Syntax Error GraphQL request (1:69) Invalid character escape sequence",
      "body": "Just trying out verba, but I am getting errors like the one in #24. \r\nI am using verba=0.3.1.\r\n\r\n\r\n```\r\n✔ Set Reader to SimpleReader\r\n✔ Set Chunker to TokenChunker\r\n✔ Set Embedder to ADAEmbedder\r\n✔ Set Retriever to SimpleRetriever\r\n✔ Set Generator to GPT3Generator\r\n```\r\nI print the errors in `SimpleRetriever`:\r\n<img width=\"754\" alt=\"Screenshot 2023-12-14 at 9 58 27 PM\" src=\"https://github.com/weaviate/Verba/assets/32823396/93f00d5b-02f2-47de-919a-828ae7f0da20\">\r\n\r\n\r\n{'errors': [{'locations': [{'column': 69, 'line': 1}], 'message': 'Syntax Error GraphQL request (1:69) Invalid character escape sequence: \\\\\\\\d.\\n\\n1: {Get{Chunk_text2vec_openai(hybrid:{query: \"\\\\begin{array} { l l } { \\\\dfrac { 1 } { x ^ { 3 }\", properties: [\"text\"], fusionType: relativeScoreFusion}autocut: 2){text doc_name chunk_id doc_uuid doc_type _additional {score }}}}\\n ",
      "state": "closed",
      "author": "yiranwu0",
      "author_type": "User",
      "created_at": "2023-12-15T02:59:15Z",
      "updated_at": "2024-05-15T17:48:09Z",
      "closed_at": "2024-05-15T17:48:09Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/97/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/97",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/97",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:50.412914",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Interesting! What was your query?",
          "created_at": "2024-04-11T09:30:46Z"
        },
        {
          "author": "thomashacker",
          "body": "Closing this one for now! Reopen if the error still persists",
          "created_at": "2024-05-15T17:48:09Z"
        }
      ]
    },
    {
      "issue_number": 95,
      "title": "Random OpenAI error while importing data",
      "body": "Currently when I call `manager.import_data(` I can get the following issue:\r\n\r\n```\r\n✘ {'errors': {'error': [{'message': 'update vector: unmarshal response\r\nbody: json: cannot unmarshal number into Go struct field\r\nopenAIApiError.error.code of type string'}]}, 'status': 'FAILED'}\r\nIt seems to be related to OpenAI and happens randomly. Any idea?\r\n```\r\n\r\nMaybe bumping OAI's API to the latest would solve the issue?",
      "state": "closed",
      "author": "maxpv",
      "author_type": "User",
      "created_at": "2023-12-11T21:43:21Z",
      "updated_at": "2024-05-15T17:47:26Z",
      "closed_at": "2024-05-15T17:47:26Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/95/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/95",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/95",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:50.641090",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Interesting issue! We're working on updating the openai client to the newest version",
          "created_at": "2024-04-11T09:31:22Z"
        },
        {
          "author": "thomashacker",
          "body": "We increased the openai api version, let me know if this fixes the issue for you",
          "created_at": "2024-05-15T17:47:26Z"
        }
      ]
    },
    {
      "issue_number": 94,
      "title": "Reset Cache and now says Your Verba has no data yet :(|",
      "body": " I am using embedded Weaviate.  Is it persisent storage by default. How do I know if the files are actually there  and how to have Verba see it?",
      "state": "closed",
      "author": "aglobalwander",
      "author_type": "User",
      "created_at": "2023-12-11T06:22:08Z",
      "updated_at": "2024-05-15T17:46:33Z",
      "closed_at": "2024-05-15T17:46:33Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/94/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/94",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/94",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:50.871131",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! What deployment option of Weaviate are you using? Local or Hosted on WCS? ",
          "created_at": "2024-04-11T09:32:12Z"
        },
        {
          "author": "thomashacker",
          "body": "Closing this one, let me know if the error persists",
          "created_at": "2024-05-15T17:46:33Z"
        }
      ]
    },
    {
      "issue_number": 88,
      "title": "error C2039: 'use_tracing': is not a member of '_PyCFrame'",
      "body": "Hi, I keep getting error C2039 below, am I missing something obvious? using windows 10, Python 3.12, QuickStart: Deploy with Pip, thanks,\r\n\r\nthinc/backends/numpy_ops.cpp(13261): error C2039: 'use_tracing': is not a member of '_PyCFrame'\r\n        C:\\Programs\\Python\\Python312\\Include\\cpython/pystate.h(67): note: see declaration of '_PyCFrame'\r\n        thinc/backends/numpy_ops.cpp(13365): error C2039: 'use_tracing': is not a member of '_PyCFrame'\r\n        C:\\Programs\\Python\\Python312\\Include\\cpython/pystate.h(67): note: see declaration of '_PyCFrame'\r\n        thinc/backends/numpy_ops.cpp(13365): fatal error C1003: error count exceeds 100; stopping compilation\r\n        error: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2022\\\\BuildTools\\\\VC\\\\Tools\\\\MSVC\\\\14.38.33130\\\\bin\\\\HostX86\\\\x64\\\\cl.exe' failed with exit code 2\r\n        [end of output]\r\n\r\n        note: This error originates from a subprocess, and is likely not a problem with pip.\r\n        ERROR: Failed building wheel for thinc\r\n      Failed to build thinc\r\n      ERROR: Could not build wheels for thinc, which is required to install pyproject.toml-based projects\r\n      [end of output]",
      "state": "closed",
      "author": "IMAddMan",
      "author_type": "User",
      "created_at": "2023-12-06T15:57:52Z",
      "updated_at": "2024-05-15T17:39:47Z",
      "closed_at": "2024-05-15T17:39:46Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/88/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/88",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/88",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:51.100294",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Interesting! We're looking into that, thanks for the issue 🚀 ",
          "created_at": "2024-04-11T09:34:06Z"
        },
        {
          "author": "thomashacker",
          "body": "Should be fixed in the newest version! We removed some packages that were causing errors",
          "created_at": "2024-05-15T17:39:47Z"
        }
      ]
    },
    {
      "issue_number": 83,
      "title": "the documentation tips doesn't show interesting information",
      "body": "I was able to load a small pdf, and use the gpt3.5 model, the response seems correct, but if I click on the different documents that appear at the top, when they open at right side, I don't see any relationship with the answer, or the question, if you see my screenshot, at the right side there is a green line that doesn't select anything, and what comes after the green line doesn't seem to be related to the question, I was expecting it highlights the part of the text related\r\n\r\n<img width=\"1395\" alt=\"image\" src=\"https://github.com/weaviate/Verba/assets/912298/03438e0a-2c98-4f47-9ed7-6a7f115590cf\">\r\n",
      "state": "closed",
      "author": "micuentadecasa",
      "author_type": "User",
      "created_at": "2023-12-02T18:07:22Z",
      "updated_at": "2024-05-15T17:39:11Z",
      "closed_at": "2024-05-15T17:39:11Z",
      "labels": [
        "bug",
        "frontend"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/83/reactions",
        "total_count": 3,
        "+1": 3,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/83",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/83",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:51.335911",
      "comments": [
        {
          "author": "priamai",
          "body": "Exactly right, this is why I am suggesting this https://github.com/weaviate/Verba/issues/76",
          "created_at": "2023-12-08T09:31:15Z"
        },
        {
          "author": "thomashacker",
          "body": "This seems to be a frontend bug, we look into it! thanks for the issue",
          "created_at": "2024-04-11T10:37:42Z"
        },
        {
          "author": "thomashacker",
          "body": "Should be fixed in the newest v1.0.0 version! ",
          "created_at": "2024-05-15T17:39:11Z"
        }
      ]
    },
    {
      "issue_number": 81,
      "title": "Add Ollama support for local models",
      "body": "Many of us are using https://ollama.ai/ to host models locally rather than use an API or service.  It would be fantastic if we could point to a local Ollama endpoint rather than just what is provided currently.",
      "state": "closed",
      "author": "smpnet74",
      "author_type": "User",
      "created_at": "2023-12-01T19:28:31Z",
      "updated_at": "2024-05-15T17:37:08Z",
      "closed_at": "2024-05-15T17:37:07Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/81/reactions",
        "total_count": 8,
        "+1": 4,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 1,
        "rocket": 3,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/81",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/81",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:51.744450",
      "comments": [
        {
          "author": "priamai",
          "body": "This will is related to https://github.com/weaviate/Verba/issues/56 since you can have OLLAMA as one of the backends.",
          "created_at": "2023-12-02T19:46:06Z"
        },
        {
          "author": "AvnerCohen",
          "body": "Anyone managed to set this up with `BASE_URL` ?\r\n",
          "created_at": "2024-03-05T13:11:35Z"
        },
        {
          "author": "thomashacker",
          "body": "Added Ollama support in the newest v1.0.0 version",
          "created_at": "2024-05-15T17:37:07Z"
        }
      ]
    },
    {
      "issue_number": 77,
      "title": "Dangerous confusion with ingestion settings",
      "body": "Hi there,\r\nI noticed that the UI doesn't remember what chunker and embedder were used for documents, what if I forget how I ingested my documents 2 months ago, then I add a new set of documents with a different configuration, then I go to search the results will not be accurate.\r\nCan I process the same document with multiple embeddings and chunkers? Does the backend remember that? We should provide that in the UI at least we know how the documents were processed.\r\n\r\nI believe also we are in need of a Profile setting where the user can save it's configuration and then it can match the profile with the documents processed with that setting.\r\n\r\nLet me know if it makes any sense.\r\n",
      "state": "closed",
      "author": "priamai",
      "author_type": "User",
      "created_at": "2023-11-30T10:32:29Z",
      "updated_at": "2024-05-15T17:36:38Z",
      "closed_at": "2024-05-15T17:36:37Z",
      "labels": [
        "documentation"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/77/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/77",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/77",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:51.976147",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Agree! There is a lot of improvements that can be done in that aspect! We look into that for the next update",
          "created_at": "2024-04-11T10:42:07Z"
        },
        {
          "author": "thomashacker",
          "body": "The newest version is now remembering the settings used previously! ",
          "created_at": "2024-05-15T17:36:37Z"
        }
      ]
    },
    {
      "issue_number": 74,
      "title": "Why add document only support text and json files when I have unstructured API?",
      "body": "Hi there,\r\nsince I have added the Unstructured API which should support all type of file formats like DOCX and HTML why the Add document just allow text and json files?\r\nCheers.",
      "state": "closed",
      "author": "priamai",
      "author_type": "User",
      "created_at": "2023-11-30T09:49:21Z",
      "updated_at": "2024-05-15T17:35:56Z",
      "closed_at": "2024-05-15T17:35:55Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/74/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/74",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/74",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:52.194818",
      "comments": [
        {
          "author": "priamai",
          "body": "I think I have to install the full package: https://unstructured-io.github.io/unstructured/installation/full_installation.html\r\n\r\nTesting now!",
          "created_at": "2023-11-30T09:52:27Z"
        },
        {
          "author": "priamai",
          "body": "Nope that didn't affect the UI at all.",
          "created_at": "2023-11-30T09:55:10Z"
        },
        {
          "author": "thomashacker",
          "body": "Agree! We will add more data types for ingestion in the next update",
          "created_at": "2024-04-11T10:45:08Z"
        },
        {
          "author": "thomashacker",
          "body": "The newest version should now allow any Unstructured input through the API",
          "created_at": "2024-05-15T17:35:55Z"
        }
      ]
    },
    {
      "issue_number": 59,
      "title": "Add Adobe PDF Extract API",
      "body": "Hi there,\r\nI have been working on PDF extraction for some time and nothing beats the Adobe service (well as you know they are the one who invented it).\r\nSDK is here: https://developer.adobe.com/document-services/docs/overview/pdf-extract-api/gettingstarted/#sdk\r\nYou get 500 documents per month on free tier so lots of people will enjoy.\r\n\r\nPS:\r\nI am not affiliated to Adobe in any way.\r\n",
      "state": "closed",
      "author": "priamai",
      "author_type": "User",
      "created_at": "2023-11-25T00:04:21Z",
      "updated_at": "2024-05-15T17:35:16Z",
      "closed_at": "2024-05-15T17:35:15Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/59/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/59",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/59",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:52.395584",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Nice idea, we'll add it! ",
          "created_at": "2023-11-28T17:02:50Z"
        },
        {
          "author": "thomashacker",
          "body": "We looked into the Adobe PDF API and decided to not pursue this for now, but thanks for the suggestion!",
          "created_at": "2024-05-15T17:35:16Z"
        }
      ]
    },
    {
      "issue_number": 73,
      "title": "Add Document button does not work",
      "body": "I have used a virtual environment using virtualenv and Python 3.9.18\r\n\r\nI just reproduced the steps from the readme, to reproduce:\r\n\r\n```\r\npython3 -m virtual verba\r\nsource verba/bin/activate\r\npip install goldenverba\r\n```\r\n\r\nThen I visit localhost:8000 and try to add a document: \r\n\r\nOn terminal this is the error I get: \r\n```\r\nException in ASGI application\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.9/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 426, in run_asgi\r\n    result = await app(  # type: ignore[func-returns-value]\r\n  File \"/usr/local/lib/python3.9/site-packages/uvicorn/middleware/proxy_headers.py\", line 84, in __call__\r\n    return await self.app(scope, receive, send)\r\n  File \"/usr/local/lib/python3.9/site-packages/fastapi/applications.py\", line 292, in __call__\r\n    await super().__call__(scope, receive, send)\r\n  File \"/usr/local/lib/python3.9/site-packages/starlette/applications.py\", line 122, in __call__\r\n    await self.middleware_stack(scope, receive, send)\r\n  File \"/usr/local/lib/python3.9/site-packages/starlette/middleware/errors.py\", line 184, in __call__\r\n    raise exc\r\n  File \"/usr/local/lib/python3.9/site-packages/starlette/middleware/errors.py\", line 162, in __call__\r\n    await self.app(scope, receive, _send)\r\n  File \"/usr/local/lib/python3.9/site-packages/starlette/middleware/cors.py\", line 83, in __call__\r\n    await self.app(scope, receive, send)\r\n  File \"/usr/local/lib/python3.9/site-packages/starlette/middleware/exceptions.py\", line 79, in __call__\r\n    raise exc\r\n  File \"/usr/local/lib/python3.9/site-packages/starlette/middleware/exceptions.py\", line 68, in __call__\r\n    await self.app(scope, receive, sender)\r\n  File \"/usr/local/lib/python3.9/site-packages/fastapi/middleware/asyncexitstack.py\", line 20, in __call__\r\n    raise e\r\n  File \"/usr/local/lib/python3.9/site-packages/fastapi/middleware/asyncexitstack.py\", line 17, in __call__\r\n    await self.app(scope, receive, send)\r\n  File \"/usr/local/lib/python3.9/site-packages/starlette/routing.py\", line 718, in __call__\r\n    await route.handle(scope, receive, send)\r\n  File \"/usr/local/lib/python3.9/site-packages/starlette/routing.py\", line 276, in handle\r\n    await self.app(scope, receive, send)\r\n  File \"/usr/local/lib/python3.9/site-packages/starlette/routing.py\", line 66, in app\r\n    response = await func(request)\r\n  File \"/usr/local/lib/python3.9/site-packages/fastapi/routing.py\", line 273, in app\r\n    raw_response = await run_endpoint_function(\r\n  File \"/usr/local/lib/python3.9/site-packages/fastapi/routing.py\", line 190, in run_endpoint_function\r\n    return await dependant.call(**values)\r\n  File \"/usr/local/lib/python3.9/site-packages/goldenverba/server/api.py\", line 297, in get_components\r\n    config_manager.get_chunker(), chunker[config_manager.get_chunker()]\r\nKeyError: ''\r\n```\r\n\r\nThis is the UI I see:\r\n\r\n![Screenshot 2023-11-30 at 10 31 10](https://github.com/weaviate/Verba/assets/43536425/56e42e03-2347-4c4c-bf3a-211c2798a03a)\r\n\r\nI have also tried to install torch but nothing changed. \r\nI will also try other python version but wanted to let you guys know!\r\n\r\n",
      "state": "closed",
      "author": "AntonioDiTuri",
      "author_type": "User",
      "created_at": "2023-11-30T09:31:55Z",
      "updated_at": "2024-05-15T17:34:42Z",
      "closed_at": "2024-05-15T17:34:41Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 7,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/73/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/73",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/73",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:52.626702",
      "comments": [
        {
          "author": "AntonioDiTuri",
          "body": "I have also tried to create a virtual environment with python version 3.11 but I get the same error",
          "created_at": "2023-11-30T09:45:17Z"
        },
        {
          "author": "priamai",
          "body": "It seems to work fine on my 3.10 version though.",
          "created_at": "2023-11-30T09:48:24Z"
        },
        {
          "author": "JannikSchneider12",
          "body": "Did someone solve the problem? I am always getting this error, no matter which python version I use\r\n",
          "created_at": "2023-12-12T08:37:00Z"
        },
        {
          "author": "isabelline",
          "body": "In my case, when I added the ip addess at origins in Verba/goldenverba/server/api.py, it worked\r\n\r\norigins = [\r\n    \"http://localhost:3000\",\r\n    \"https://verba-golden-ragtriever.onrender.com\",\r\n    \"http://localhost:8000\",\r\n    \"http://{myip}:8000\",\r\n]",
          "created_at": "2024-01-18T02:15:45Z"
        },
        {
          "author": "thomashacker",
          "body": "Interesting! Thanks for the issue\r\nWe look into that 🚀 ",
          "created_at": "2024-04-11T10:46:42Z"
        }
      ]
    },
    {
      "issue_number": 65,
      "title": "Loader loading endlessly, not getting answer of my question",
      "body": "I am not getting answer of my question. loader keep loading endlessly. My text document uploaded successfully.\r\n<img width=\"1394\" alt=\"Screenshot 2023-11-26 at 4 17 46 PM\" src=\"https://github.com/weaviate/Verba/assets/137403824/c9b28727-131f-4ff7-a42e-31157990a239\">\r\n![Uploading Screenshot 2023-11-26 at 4.15.22 PM.png…]()\r\n\r\n",
      "state": "closed",
      "author": "dhara-seaflux",
      "author_type": "User",
      "created_at": "2023-11-26T10:49:46Z",
      "updated_at": "2024-05-15T17:33:30Z",
      "closed_at": "2024-05-15T17:33:29Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/65/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/65",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/65",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:52.846088",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thank you for your issue. What to the logs say in your terminal? Maybe there's an issue with your OpenAI access or with OpenAI itself",
          "created_at": "2023-11-28T16:59:36Z"
        },
        {
          "author": "fredrikmalmberg",
          "body": "Also having a similar problem. The UI becomes unresponsive after 1 query. Nothing in the terminal but js console shows [Violation] 'message' handler took 110952ms\r\n[Violation] 'message' handler took 111701ms\r\n[Violation] 'input' handler took 111060ms\r\n[Violation] 'input' handler took 112154ms\r\n\r\nTes",
          "created_at": "2023-12-02T17:32:32Z"
        },
        {
          "author": "thomashacker",
          "body": "Interesting, thanks for the logs",
          "created_at": "2023-12-04T11:06:51Z"
        },
        {
          "author": "thomashacker",
          "body": "Closing this one",
          "created_at": "2024-05-15T17:33:29Z"
        }
      ]
    },
    {
      "issue_number": 64,
      "title": "load_data API throw \"NoneType' object has no attribute 'tokenize'\"",
      "body": "http://0.0.0.0:8000/api/load_data\r\n\r\nRequest payload:\r\n{\r\n    \"reader\": \"SimpleReader\",\r\n    \"chunker\": \"TokenChunker\",\r\n    \"embedder\": \"MiniLMEmbedder\",\r\n    \"fileBytes\": [\r\n        \"T3JnYW5pemF0aW9uIE5hbWU6IFJhaGFzYWsgUmVzZWFyY2ggUGFwZXJzCgpEYXRlOiBOb3ZlbWJlciA2LCAyMDIzCgpSZXNlYXJjaCBUb3BpYzogRXhwbG9yaW5nIFN1c3RhaW5hYmxlIEVuZXJneSBTb2x1dGlvbnMgZm9yIFVyYmFuIEVudmlyb25tZW50cwoKVGVzdCBEYXRhIFNldDogU2NpZW50aWZpYyBSZXNlYXJjaCBQYXBlcgoKVGl0bGU6IFRvd2FyZHMgQ2FyYm9uIE5ldXRyYWxpdHk6IEludGVncmF0aW5nIFJlbmV3YWJsZSBFbmVyZ3kgU291cmNlcyBpbiBVcmJhbiBJbmZyYXN0cnVjdHVyZQoKQXV0aG9yczogRHIuIEVtaWx5IEMuIFBhcmtlciwgRHIuIE1pY2hhZWwgSi4gQWRhbXMsIERyLiBTb3BoaWEgTC4gQ2hlbgoKQWJzdHJhY3Q6IFRoaXMgY29tcHJlaGVuc2l2ZSBzY2llbnRpZmljIHJlc2VhcmNoIHBhcGVyIGludmVzdGlnYXRlcyB0aGUgaW50ZWdyYXRpb24gb2YgcmVuZXdhYmxlIGVuZXJneSBzb3VyY2VzIGludG8gdXJiYW4gaW5mcmFzdHJ1Y3R1cmUgdG8gYWNoaWV2ZSBjYXJib24gbmV1dHJhbGl0eS4gVGhlIHN0dWR5IGFuYWx5emVzIHZhcmlvdXMgc3VzdGFpbmFibGUgZW5lcmd5IHNvbHV0aW9ucywgaW5jbHVkaW5nIHNvbGFyIHBvd2VyLCB3aW5kIGVuZXJneSwgYW5kIGh5ZHJvZWxlY3RyaWNpdHksIGFuZCBleHBsb3JlcyB0aGVpciBpbXBsZW1lbnRhdGlvbiBpbiBkZW5zZWx5IHBvcHVsYXRlZCB1cmJhbiBlbnZpcm9ubWVudHMuIFRoZSBwYXBlciBkaXNjdXNzZXMgdGhlIGNoYWxsZW5nZXMsIGJlbmVmaXRzLCBhbmQgcG90ZW50aWFsIGltcGFjdCBvbiByZWR1Y2luZyBjYXJib24gZW1pc3Npb25zIGluIGNpdGllcy4KClB1Ymxpc2hlZCBEYXRlOiBPY3RvYmVyIDI1LCAyMDIzCgpTdW1tYXJ5OgpJbiB0aGlzIGdyb3VuZGJyZWFraW5nIHJlc2VhcmNoIHBhcGVyLCB0aGUgdGVhbSBvZiBleHBlcnRzIGF0IFJhaGFzYWsgUmVzZWFyY2ggUGFwZXJzLCBsZWQgYnkgRHIuIEVtaWx5IEMuIFBhcmtlciwgZGVsdmVzIGRlZXAgaW50byB0aGUgcmVhbG0gb2Ygc3VzdGFpbmFibGUgZW5lcmd5IHNvbHV0aW9ucyBmb3IgdXJiYW4gZW52aXJvbm1lbnRzLiBUaGUgcGFwZXIgcHJvdmlkZXMgYW4gaW4tZGVwdGggYW5hbHlzaXMgb2YgdGhlIGNoYWxsZW5nZXMgZmFjZWQgYnkgbW9kZXJuIGNpdGllcyBpbiBtaXRpZ2F0aW5nIHRoZSBlZmZlY3RzIG9mIGNsaW1hdGUgY2hhbmdlLiBCeSBmb2N1c2luZyBvbiByZW5ld2FibGUgZW5lcmd5IHNvdXJjZXMgc3VjaCBhcyBzb2xhciwgd2luZCwgYW5kIGh5ZHJvZWxlY3RyaWMgcG93ZXIsIHRoZSBhdXRob3JzIHByZXNlbnQgaW5ub3ZhdGl2ZSBzdHJhdGVnaWVzIHRvIHRyYW5zZm9ybSB1cmJhbiBsYW5kc2NhcGVzIGludG8gZW52aXJvbm1lbnRhbGx5IGZyaWVuZGx5IGh1YnMuCgpUaGUgcmVzZWFyY2ggcGFwZXIgbWV0aWN1bG91c2x5IGV4YW1pbmVzIGNhc2Ugc3R1ZGllcyBmcm9tIGVjby1jb25zY2lvdXMgY2l0aWVzIHdvcmxkd2lkZSwgc2hvd2Nhc2luZyBzdWNjZXNzZnVsIGltcGxlbWVudGF0aW9ucyBvZiByZW5ld2FibGUgZW5lcmd5IHRlY2hub2xvZ2llcy4gSXQgZGlzY3Vzc2VzIHRoZSBlY29ub21pYyB2aWFiaWxpdHksIGVudmlyb25tZW50YWwgaW1wYWN0LCBhbmQgc29jaWV0YWwgYmVuZWZpdHMgb2YgdHJhbnNpdGlvbmluZyBmcm9tIGZvc3NpbCBmdWVscyB0byByZW5ld2FibGUgc291cmNlcy4gVGhlIGF1dGhvcnMgZW1waGFzaXplIHRoZSBpbXBvcnRhbmNlIG9mIHBvbGljeSBpbnRlcnZlbnRpb25zLCB0ZWNobm9sb2dpY2FsIGFkdmFuY2VtZW50cywgYW5kIGNvbW11bml0eSBlbmdhZ2VtZW50IGluIGZvc3RlcmluZyBhIHN1c3RhaW5hYmxlIGVuZXJneSB0cmFuc2l0aW9uLgoKQWRkaXRpb25hbGx5LCB0aGUgcGFwZXIgZXhwbG9yZXMgdGhlIGludGVncmF0aW9uIG9mIHNtYXJ0IGdyaWQgc3lzdGVtcywgZW5lcmd5IHN0b3JhZ2Ugc29sdXRpb25zLCBhbmQgYWR2YW5jZWQgbW9uaXRvcmluZyB0ZWNobmlxdWVzIHRvIG9wdGltaXplIHRoZSB1dGlsaXphdGlvbiBvZiByZW5ld2FibGUgZW5lcmd5IGluIHVyYmFuIGFyZWFzLiBCeSBhZGRyZXNzaW5nIGJvdGggdGVjaG5pY2FsIGFuZCBzb2NpZXRhbCBhc3BlY3RzLCB0aGUgcmVzZWFyY2ggcGFwZXIgb2ZmZXJzIGEgaG9saXN0aWMgYXBwcm9hY2ggdG8gY3JlYXRpbmcgZW52aXJvbm1lbnRhbGx5IHN1c3RhaW5hYmxlIGNpdGllcy4KCkZ1dHVyZSBJbXBsaWNhdGlvbnM6ClRoaXMgcmVzZWFyY2ggcGFwZXIgc2VydmVzIGFzIGEgZm91bmRhdGlvbmFsIHJlc291cmNlIGZvciBwb2xpY3ltYWtlcnMsIHVyYmFuIHBsYW5uZXJzLCBhbmQgZW52aXJvbm1lbnRhbGlzdHMgc3RyaXZpbmcgdG8gY3JlYXRlIGdyZWVuZXIgY2l0aWVzLiBUaGUgZmluZGluZ3MgYW5kIHJlY29tbWVuZGF0aW9ucyBwcm92aWRlIHZhbHVhYmxlIGluc2lnaHRzIGludG8gdGhlIHByYWN0aWNhbCBpbXBsZW1lbnRhdGlvbiBvZiByZW5ld2FibGUgZW5lcmd5IHNvbHV0aW9ucywgcGF2aW5nIHRoZSB3YXkgZm9yIGNhcmJvbi1uZXV0cmFsIHVyYmFuIGVudmlyb25tZW50cy4gVGhlIHJlc2VhcmNoIGNvbnRyaWJ1dGVzIHNpZ25pZmljYW50bHkgdG8gdGhlIGdsb2JhbCBkaXNjb3Vyc2Ugb24gc3VzdGFpbmFibGUgZGV2ZWxvcG1lbnQsIG9mZmVyaW5nIHRhbmdpYmxlIHNvbHV0aW9ucyB0byBjb21iYXQgY2xpbWF0ZSBjaGFuZ2UgYW5kIGVuc3VyZSBhIG1vcmUgc3VzdGFpbmFibGUgZnV0dXJlIGZvciBnZW5lcmF0aW9ucyB0byBjb21l\"\r\n    ],\r\n    \"fileNames\": [\r\n        \"data.txt\"\r\n    ],\r\n    \"filePath\": \"\",\r\n    \"document_type\": \"Documentation\",\r\n    \"chunkUnits\": 250,\r\n    \"chunkOverlap\": 50\r\n}\r\n\r\n\r\nResponse:\r\n{\r\n    \"status\": \"400\",\r\n    \"status_msg\": \"'NoneType' object has no attribute 'tokenize'\"\r\n}",
      "state": "closed",
      "author": "dhara-seaflux",
      "author_type": "User",
      "created_at": "2023-11-26T10:36:35Z",
      "updated_at": "2024-05-15T17:32:51Z",
      "closed_at": "2024-05-15T17:32:51Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/64/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/64",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/64",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:53.121257",
      "comments": [
        {
          "author": "cam-barts",
          "body": "Duplicate of #53 ",
          "created_at": "2023-11-27T09:00:21Z"
        },
        {
          "author": "thomashacker",
          "body": "Interesting! Will look into it, thanks!",
          "created_at": "2023-11-28T17:15:06Z"
        },
        {
          "author": "thomashacker",
          "body": "Should be fixed with the newest release v1.0.0",
          "created_at": "2024-05-15T17:32:51Z"
        }
      ]
    },
    {
      "issue_number": 63,
      "title": "Docker doc enhancements",
      "body": "Please consider modifying the Docker instructions a bit\r\n\r\nYou currently have the following steps\r\n\r\n0. Clone the repo\r\n1. Deploy using Docker\r\n\r\nSuggest the this might be more informative- as currently written it misses required steps.\r\nAlthough these steps are documented above, it's not possible to get a working install just from the current Docker section.\r\n\r\n1. Clone the repo using `git clone https://github.com/weaviate/Verba.git` \r\n2. Navigate into the new Verba directory\r\n3. Add a .env file in the root of your Verba folder **or** add your tokens to the compose.yaml file. At a minimum, you must include x,y and z, but a,b and c are optional depending on your chosen feature set. Adding tokens to .env or compose.yaml file is your choice, but a .env may have some security advantages and allows you to run the compose.yaml file with less modifications, allowing easier upgrades in future. (Maybe these can be configured via the GUI? Is that why they aren't mentioned in the Docker section?)\r\n4. run '`docker compare up -d`' and your project should build and run, you can test readiness by using your web browser to navigate to http://localhost:8080 or http://DockerHostIP:8080 where you will see API endpoint details\r\n5. You can then access the web interface at http://localhost:8000 or http://DockerHostIP:8000\r\n\r\nSome of this is probably wrong, as my own install isn't yet working.\r\n\r\nalso under 'Status Page' you say \r\n'Once configured, you can monitor your Verba installation's health and status via the 'Status Verba' page' \r\nbut you don't indicate how to reach this page... would be helpful to include that path...",
      "state": "closed",
      "author": "adamphetamine",
      "author_type": "User",
      "created_at": "2023-11-26T03:48:14Z",
      "updated_at": "2024-05-15T17:32:15Z",
      "closed_at": "2024-05-15T17:32:15Z",
      "labels": [
        "documentation",
        "enhancement"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/63/reactions",
        "total_count": 2,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 2,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/63",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/63",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:53.343500",
      "comments": [
        {
          "author": "thomashacker",
          "body": "This is great feedback, thanks! We'll make the Installation Guide more clear",
          "created_at": "2023-11-28T17:04:19Z"
        },
        {
          "author": "adamphetamine",
          "body": "I'm happy to write the docs if I can get a working install\r\nCurrently this won't run -\r\n\r\n[https://github.com/weaviate/Verba/blob/main/docker-compose.yml](url)\r\n\r\nIf someone can tell me what is required to get a minimal working install I may be able to work the rest out...\r\n\r\nTo be more specific, we",
          "created_at": "2023-12-02T06:22:42Z"
        },
        {
          "author": "thomashacker",
          "body": "Interesting, will look into it. Thanks for the logs",
          "created_at": "2023-12-04T11:06:09Z"
        },
        {
          "author": "thomashacker",
          "body": "We added better instructions for the Docker Deployment",
          "created_at": "2024-05-15T17:32:15Z"
        }
      ]
    },
    {
      "issue_number": 62,
      "title": "Document f70ddcbd-b9f7-4f38-9f61-4f6e7604fb86 not found None",
      "body": "When I try to load the Verba repo using the GithubReader and the path \"weaviate/Verba/\", i get the error \"Document f70ddcbd-b9f7-4f38-9f61-4f6e7604fb86 not found None\"\r\n\r\nAm I doing something wrong?",
      "state": "closed",
      "author": "TweedBeetle",
      "author_type": "User",
      "created_at": "2023-11-25T18:27:28Z",
      "updated_at": "2024-05-15T17:31:44Z",
      "closed_at": "2024-05-15T17:31:44Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/62/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/62",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/62",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:53.565606",
      "comments": [
        {
          "author": "cam-barts",
          "body": "This is the same type of error that shows up when a document is too large to parse, which is the same issue as #50.",
          "created_at": "2023-11-27T08:59:17Z"
        },
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! Yes, it might be related to that issue, we hope to fix it by the next release. Could you share more information about the size of the data you tried to ingest and what the logs say?",
          "created_at": "2023-11-28T17:09:18Z"
        },
        {
          "author": "cfong32",
          "body": "I have the same issue when I was trying to ingest any of these pdfs:\r\n2013 Sienna Manuals\r\n•\tOwner's Manual (16M, http://s3.amazonaws.com/toyota.site.p01/toyota/manuals/OM45472U/OM45472U.pdf)\r\n•\tOwner's Manual Supplement (532K, http://s3.amazonaws.com/toyota.site.p01/toyota/manuals/OMS1013U/OMS1013U",
          "created_at": "2023-12-01T17:13:05Z"
        },
        {
          "author": "thomashacker",
          "body": "This is super helpful, thanks! ",
          "created_at": "2023-12-04T11:04:59Z"
        },
        {
          "author": "thomashacker",
          "body": "The error handling should be improved with the new v1.0.0 version, let me know if this error persists",
          "created_at": "2024-05-15T17:31:44Z"
        }
      ]
    },
    {
      "issue_number": 17,
      "title": "Customize name + colours",
      "body": "Great job with Verba! \r\nI was really missing a tool like this to quickly prototype demo's for customers.\r\n\r\nWould be great if we could document where we should rename what values in order to replace;\r\n\r\n- \"Verba\" with \"Customer X\"\r\n- Verba logo with my customer's logo\r\n- Update CSS values with my customer's colours.\r\n\r\nIf you point me to the location, I can create a PR with some documentation.",
      "state": "closed",
      "author": "vincentclaes",
      "author_type": "User",
      "created_at": "2023-09-19T10:33:15Z",
      "updated_at": "2024-05-15T17:30:24Z",
      "closed_at": "2024-05-15T17:30:24Z",
      "labels": [
        "documentation",
        "enhancement",
        "frontend"
      ],
      "label_count": 3,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/17/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 1,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/17",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/17",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:53.872845",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey, thanks for the issue! Great idea; we hope to make it easy for users to customize the app (changing themes, title, etc.) in the coming versions 😄 If you need these changes now, you can have a look at the react frontend and fiddle around on your local fork to align it to your needs! \r\n",
          "created_at": "2023-09-25T09:36:51Z"
        },
        {
          "author": "thomashacker",
          "body": "We implemented Frontend Customization in the newest v1.0.0 release! ",
          "created_at": "2024-05-15T17:30:24Z"
        }
      ]
    },
    {
      "issue_number": 144,
      "title": "Error in instll setup",
      "body": "note: This error originates from a subprocess, and is likely not a problem with pip.\r\n  ERROR: Failed building wheel for tiktoken\r\nFailed to build tiktoken\r\nERROR: Could not build wheels for tiktoken, which is required to install pyproject.toml-based projects",
      "state": "closed",
      "author": "ashrafML",
      "author_type": "User",
      "created_at": "2024-04-30T14:41:06Z",
      "updated_at": "2024-05-08T10:34:54Z",
      "closed_at": "2024-05-08T10:31:54Z",
      "labels": [
        "investigating"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/144/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/144",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/144",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:54.208439",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Can you share more details about your Python Version?",
          "created_at": "2024-05-02T11:51:30Z"
        },
        {
          "author": "alitrack",
          "body": "@ashrafML had better show the exception here. \r\nI just tried, it works on My Mac(both intel and m2 chips)",
          "created_at": "2024-05-04T08:23:16Z"
        },
        {
          "author": "thomashacker",
          "body": "It seems that there are currently no wheels for tiktoken for python 3.12.0, for now i would recommend downgrading your python version to 3.11.0 or use the Docker deployment",
          "created_at": "2024-05-08T10:31:54Z"
        },
        {
          "author": "ashrafML",
          "body": "@thomashacker  i will try this downgrade",
          "created_at": "2024-05-08T10:34:53Z"
        }
      ]
    },
    {
      "issue_number": 139,
      "title": "errors while executing \"npm run dev\"",
      "body": "Development Server:\r\n\r\nLaunch the application in development mode by executing npm run dev.\r\nOpen your web browser and visit http://localhost:3000 to view the application.\r\n\r\nWhen execute - npm run dev, I am getting several errors.\r\n\r\n1.  at renderNodeDestructive (C:\\Users\\sitar\\verba\\frontend\\node_modules\\react-dom\\cjs\\react-dom-server.browser.development.js:6076:14)\r\n ⨯ TypeError: Cannot read properties of null (reading 'useContext')\r\n    at Object.useContext (C:\\Users\\sitar\\Verba\\frontend\\node_modules\\react\\cjs\\react.development.js:1618:21)\r\n2.  at renderElement (C:\\Users\\sitar\\verba\\frontend\\node_modules\\react-dom\\cjs\\react-dom-server.browser.development.js:5946:7)      \r\n ⨯ unhandledRejection: TypeError: Cannot read properties of null (reading 'useReducer')\r\n    at Object.useReducer (C:\\Users\\sitar\\Verba\\frontend\\node_modules\\react\\cjs\\react.development.js:1626:21)\r\n\r\nhttp://localhost:3000 is returning a blank page",
      "state": "closed",
      "author": "sitaram70",
      "author_type": "User",
      "created_at": "2024-04-17T04:51:29Z",
      "updated_at": "2024-04-29T20:52:37Z",
      "closed_at": "2024-04-25T18:14:04Z",
      "labels": [
        "investigating",
        "frontend"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 17,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/139/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/139",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/139",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:54.448370",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! Which `node` version are you running?",
          "created_at": "2024-04-17T06:51:14Z"
        },
        {
          "author": "sitaram70",
          "body": "I am using v20.12.2",
          "created_at": "2024-04-17T13:36:32Z"
        },
        {
          "author": "thomashacker",
          "body": "Did `npm install` work without any issues for you? Do you know if these are the only error messages you get? ",
          "created_at": "2024-04-17T14:20:13Z"
        },
        {
          "author": "sitaram70",
          "body": "I got 1 critical and few others.  But resolved them my running npm audit fix and npm audit fix --force.\r\nShould I redo it?",
          "created_at": "2024-04-17T14:29:00Z"
        },
        {
          "author": "sitaram70",
          "body": "Should I try the same with different node version?  Any recommendation?\r\nPlease advise.",
          "created_at": "2024-04-18T03:37:31Z"
        }
      ]
    },
    {
      "issue_number": 116,
      "title": "GPT4generator broke down",
      "body": "Hi guys\r\n\r\nDon't know if anybody has noticed, but when you use Verba on a docker, this is the error you get.\r\n\r\n```\r\nverba_1     | INFO:     12.345.678.910:53140 - \"POST /api/get_document HTTP/1.1\" 200 OK\r\nverba_1     | INFO:     127.0.0.1:55516 - \"POST /chat/completions HTTP/1.1\" 404 Not Found\r\nverba_1     | ERROR:    Exception in ASGI application\r\n```\r\n\r\nSeems that the call to OpenAI has broken down. Error is pinpointed to\r\n\r\n```\r\nverba_1     |   File \"/Verba/goldenverba/components/generation/GPT4Generator.py\", line 116, in generate_stream\r\nverba_1     |     completion = await openai.ChatCompletion.acreate(\r\n```\r\n\r\n\r\nOpenAI has pushed a major release in november, but afaik Verba still uses the old version (0.27 I believe). Perhaps they are cleaning up the endpoints?\r\n\r\nError has been reported here too: https://forum.weaviate.io/t/error-in-docker-image-openai-endpoint-not-found/1180\r\n\r\nPS love the project!\r\n",
      "state": "closed",
      "author": "mamscience",
      "author_type": "User",
      "created_at": "2024-02-21T18:36:38Z",
      "updated_at": "2024-04-12T08:43:01Z",
      "closed_at": "2024-04-12T08:43:01Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/116/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 1,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/116",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/116",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:54.736627",
      "comments": [
        {
          "author": "mamscience",
          "body": "Found the bug! \r\n\r\nAfter december's update (adding \"OPENAI_BASE_URL\" as env var), the SDK points to \"https://0.0.0.0:8000/\", which is of course not the OpenAI endpoint.\r\nSo unsetting this var or resetting it in the .env to the correct one works.\r\n\r\n```\r\n base_url = \"https://api.openai.com/v1\"\r\n ```\r",
          "created_at": "2024-02-21T22:06:02Z"
        },
        {
          "author": "thomashacker",
          "body": "Great catch! Thanks a lot \r\nWe'll look into updating to a newer openai version for the next update + we'll clean some things up",
          "created_at": "2024-04-11T09:12:28Z"
        },
        {
          "author": "thomashacker",
          "body": "We added it to the documentation! Thanks for catching!",
          "created_at": "2024-04-12T08:43:01Z"
        }
      ]
    },
    {
      "issue_number": 80,
      "title": "Unable to Compile  v0.3.1 with python 3.12.0",
      "body": "[install log.txt](https://github.com/weaviate/Verba/files/13518150/install.log.txt)\r\n\r\nClone the version tagged v0.3.1 and tried to manually compile it. Log attached.\r\n\r\nnote: This error originates from a subprocess, and is likely not a problem with pip.\r\nerror: subprocess-exited-with-error\r\n\r\n× pip subprocess to install build dependencies did not run successfully.\r\n│ exit code: 1\r\n╰─> See above for output.\r\n\r\nnote: This error originates from a subprocess, and is likely not a problem with pip.",
      "state": "closed",
      "author": "JPedroGon",
      "author_type": "User",
      "created_at": "2023-11-30T22:08:16Z",
      "updated_at": "2024-04-12T08:42:11Z",
      "closed_at": "2024-04-12T08:42:11Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/80/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/80",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/80",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:54.988512",
      "comments": [
        {
          "author": "yangyuwen-bri",
          "body": "i have the same problem, did you solve it?",
          "created_at": "2023-12-28T19:04:23Z"
        },
        {
          "author": "alexbrooker",
          "body": "I had the same issue with python 3.12 so I created a virtual env with python 3.11 and the pip install works & runs",
          "created_at": "2024-03-08T17:46:07Z"
        },
        {
          "author": "thomashacker",
          "body": "Great catch! We'll fix it 🚀 ",
          "created_at": "2024-04-11T10:39:51Z"
        },
        {
          "author": "thomashacker",
          "body": "Should be fixed with the latest version!",
          "created_at": "2024-04-12T08:42:11Z"
        }
      ]
    },
    {
      "issue_number": 104,
      "title": "docker-compose up -d starts the weaviate container, but fails to start the Verba container",
      "body": "![image](https://github.com/weaviate/Verba/assets/111034762/2f379742-83fc-43d1-bbc5-39a29416f87e)\r\nHere's the error logs the container's spitting out -- my other containers work fine. I'm poking through the codebase and made sure my .env.example was set and renamed. I'm starting Verba in a WSL2 environment -- but as far as I know, that shouldn't matter for Docker.\r\n\r\nLooking into it a bit, I had Codium analyse for issues -- not sure if it's helpful as I'm not super familiar with the codebase yet.\r\n![image](https://github.com/weaviate/Verba/assets/111034762/a5ea37b8-f5f6-4daa-9d29-4b1860d5a1d6)\r\n",
      "state": "closed",
      "author": "twilwa",
      "author_type": "User",
      "created_at": "2024-01-01T21:03:29Z",
      "updated_at": "2024-04-12T08:41:30Z",
      "closed_at": "2024-04-12T08:41:29Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/104/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/104",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/104",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:55.230637",
      "comments": [
        {
          "author": "jcranney",
          "body": "It could be unrelated, but the Docker Compose V2 syntax is without the hyphen, e.g.,:\r\n```bash\r\ndocker compose up -d \r\n```\r\ninstead of the old `docker-compose up -d` syntax. More info about the difference can be found in the [Docker docs](https://docs.docker.com/compose/migrate/).  If you are runnin",
          "created_at": "2024-01-12T04:09:05Z"
        },
        {
          "author": "twilwa",
          "body": "Looks like this seems to have resolved itself at some point -- however, i'm now experiencing #108 when trying to run locally and \r\n![image](https://github.com/weaviate/Verba/assets/111034762/2726dae3-301f-40b4-9f96-86fd6500d42e)\r\nthe attached image when attempting to run via docker.",
          "created_at": "2024-01-17T02:08:47Z"
        },
        {
          "author": "thomashacker",
          "body": "We're aware of this issue and will fix it soon! thanks for the issue 🚀 ",
          "created_at": "2024-04-11T09:27:46Z"
        },
        {
          "author": "thomashacker",
          "body": "Should be fixed with the latest release! 🚀 ",
          "created_at": "2024-04-12T08:41:29Z"
        }
      ]
    },
    {
      "issue_number": 121,
      "title": "verba start >> ERROR - schema: dict, vectorizer: str, skip_properties: list[str] = None",
      "body": "Hello everyone,\r\n\r\nI'm facing an issue when attempting to start \"verba\" using the \"verba start\" command after following the installation steps outlined in the README.\r\nThe command results in an error, and the specific message I receive is: \r\n\r\nTraceback (most recent call last):\r\n  File \"venv/bin/verba\", line 5, in <module>\r\n    from goldenverba.server.cli import cli\r\n  File \"Verba/goldenverba/server/cli.py\", line 6, in <module>\r\n    from goldenverba.verba_manager import VerbaManager\r\n  File \"Verba/goldenverba/verba_manager.py\", line 11, in <module>\r\n    import goldenverba.components.schema.schema_generation as schema_manager\r\n  File \"Verba/goldenverba/components/schema/schema_generation.py\", line 18, in <module>\r\n    schema: dict, vectorizer: str, skip_properties: list[str] = None\r\nTypeError: 'type' object is not subscriptable\r\n\r\nI would appreciate any help or suggestions to resolve this issue.\r\n\r\nThank you!",
      "state": "closed",
      "author": "gmoschese",
      "author_type": "User",
      "created_at": "2024-02-28T11:38:24Z",
      "updated_at": "2024-04-12T08:41:01Z",
      "closed_at": "2024-04-12T08:41:01Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/121/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/121",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/121",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:55.468865",
      "comments": [
        {
          "author": "israaexol",
          "body": "Hello, I had the same error at first and I believe it's related to the version of Python that you're using.\r\nBeing able to subscript a type has appeared in Python **3.9** and onwards.\r\nHope this helps!",
          "created_at": "2024-03-03T07:48:17Z"
        },
        {
          "author": "erinCodes3276",
          "body": "I am receiving a similar error and using python 3.12.2\r\n",
          "created_at": "2024-03-08T01:17:26Z"
        },
        {
          "author": "alexbrooker",
          "body": "I had to use python 3.11",
          "created_at": "2024-03-08T16:02:50Z"
        },
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! We're aware of the bug and will fix it 🚀 ",
          "created_at": "2024-04-11T09:06:11Z"
        },
        {
          "author": "thomashacker",
          "body": "Should be fixed with the latest 0.4.0 version!",
          "created_at": "2024-04-12T08:41:01Z"
        }
      ]
    },
    {
      "issue_number": 122,
      "title": "TypeError ",
      "body": "When running the command \"Verba start\" I receive warnings and one TypeError:\r\n2024-03-07 20:05:22.044672: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.\r\nTo enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.\r\n/usr/local/lib/python3.9/site-packages/PyPDF2/__init__.py:21: DeprecationWarning: PyPDF2 is deprecated. Please move to the pypdf library instead.\r\n  warnings.warn(\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/verba\", line 5, in <module>\r\n    from goldenverba.server.cli import cli\r\n  File \"/usr/local/lib/python3.9/site-packages/goldenverba/server/cli.py\", line 6, in <module>\r\n    from goldenverba.verba_manager import VerbaManager\r\n  File \"/usr/local/lib/python3.9/site-packages/goldenverba/verba_manager.py\", line 29, in <module>\r\n    class VerbaManager:\r\n  File \"/usr/local/lib/python3.9/site-packages/goldenverba/verba_manager.py\", line 156, in VerbaManager\r\n    def setup_client(self) -> Client | None:\r\nTypeError: unsupported operand type(s) for |: 'type' and 'NoneType'",
      "state": "closed",
      "author": "erinCodes3276",
      "author_type": "User",
      "created_at": "2024-03-08T01:10:00Z",
      "updated_at": "2024-04-12T08:40:25Z",
      "closed_at": "2024-04-12T08:40:25Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/122/reactions",
        "total_count": 2,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 1,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/122",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/122",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:55.729398",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! We'll look into fixing it",
          "created_at": "2024-04-11T09:05:33Z"
        },
        {
          "author": "thomashacker",
          "body": "Should be fixed with the latest release",
          "created_at": "2024-04-12T08:40:25Z"
        }
      ]
    },
    {
      "issue_number": 45,
      "title": "Add CI/CD",
      "body": "Having CI/CD would allow for automated linting and testing in the pipeline which would make it easier to contribute to the project, ensuring proper Quality, reducing number of bugs and so on.\r\nGitHub Actions would do the job just fine. ",
      "state": "closed",
      "author": "grski",
      "author_type": "User",
      "created_at": "2023-11-17T15:49:44Z",
      "updated_at": "2024-04-11T10:55:02Z",
      "closed_at": "2024-04-11T10:55:01Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/45/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 1,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/45",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/45",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:55.911933",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Agree! We're currently working on making the codebase more established and writing automated testing",
          "created_at": "2023-11-21T08:50:19Z"
        },
        {
          "author": "grski",
          "body": "@thomashacker I've seen that currently the tests fail, I probably don't know the codebase well enough to fix them, but I can definitely add the CI/CD that will run them and linting",
          "created_at": "2023-11-21T10:51:44Z"
        },
        {
          "author": "thomashacker",
          "body": "That'd be helpful, thanks! 🚀 ",
          "created_at": "2023-11-29T11:25:56Z"
        },
        {
          "author": "thomashacker",
          "body": "We'll work on proper testing in future versions! Thanks a lot for the good work",
          "created_at": "2024-04-11T10:55:01Z"
        }
      ]
    },
    {
      "issue_number": 57,
      "title": "REST API to push external sources",
      "body": "Hi there,\r\nwould be nice to have a simple REST API where I can push text from external sources.\r\nFor instance I have a large source of documents coming from Youtube captions, Whisper conversations (from audio) and you get the idea.\r\nWould like to see also a basic capability to tag the source so I know where it was coming from: a URL and a list of tags at least.\r\nCheers!",
      "state": "closed",
      "author": "priamai",
      "author_type": "User",
      "created_at": "2023-11-24T23:56:26Z",
      "updated_at": "2024-04-11T10:54:32Z",
      "closed_at": "2024-04-11T10:54:32Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/57/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/57",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/57",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:56.142685",
      "comments": [
        {
          "author": "priamai",
          "body": "Seems related to this [issue](https://github.com/weaviate/Verba/issues/64) .",
          "created_at": "2023-11-26T22:56:46Z"
        },
        {
          "author": "thomashacker",
          "body": "Hey, thanks for your PR! To every batch of documents, you can assign a `document type` tag, these are the ones that will be displayed on the UI when retrieving the chunks. The SimpleReader supports reading in JSON files that are specifically designed for Verba data structure (I should definitely add",
          "created_at": "2023-11-28T17:31:52Z"
        },
        {
          "author": "priamai",
          "body": "Amazing, can you also make examples on using timestamp, path, meta ?\r\nCan I use chunks if I have pre chunked the text with another model? But what format should I use ?",
          "created_at": "2023-11-29T07:23:25Z"
        },
        {
          "author": "thomashacker",
          "body": "Great idea; let me also add this information to the Readme! \r\nYes, you can provide pre-chunked chunks, if the chunks list has entries the chunking process will be skipped.\r\n\r\nChunks should look like this:\r\n\r\n\r\n```json\r\n{\r\n    \"text\": \"Chunk Text\",\r\n    \"doc_name\": \"Name of the Document\",\r\n    \"doc_t",
          "created_at": "2023-11-29T10:52:01Z"
        }
      ]
    },
    {
      "issue_number": 42,
      "title": "Add proper linting",
      "body": "The code lacks support for modern linting tools which will enable to code to be more standardised and clean.\r\nSuggested solution: ruff & pre-commit.\r\n",
      "state": "closed",
      "author": "grski",
      "author_type": "User",
      "created_at": "2023-11-17T15:36:13Z",
      "updated_at": "2024-04-11T10:53:43Z",
      "closed_at": "2024-04-11T10:53:43Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/42/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 1,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/42",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/42",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:56.354807",
      "comments": [
        {
          "author": "grski",
          "body": "https://github.com/weaviate/Verba/pull/43",
          "created_at": "2023-11-17T16:01:25Z"
        },
        {
          "author": "cam-barts",
          "body": "Hello again Verba/Weaviate team. I have bit of experience setting up github actions pipelines to do linting/formatting stuff, and especially with the [megalinter](https://megalinter.io/latest/) project. I think that would be useful for something like this that has both Python and JS components. It c",
          "created_at": "2023-11-24T19:57:23Z"
        },
        {
          "author": "thomashacker",
          "body": "Hey everyone! These are really great suggestions, would love to get some help around that 🥳 ",
          "created_at": "2023-11-28T17:12:12Z"
        },
        {
          "author": "thomashacker",
          "body": "We'll look into improved linting in future versions! Thanks a lot for the help",
          "created_at": "2024-04-11T10:53:43Z"
        }
      ]
    },
    {
      "issue_number": 78,
      "title": "Add support for recursive text splitter",
      "body": "This will be very useful to include:\r\nhttps://python.langchain.com/docs/modules/data_connection/document_transformers/text_splitters/recursive_text_splitter\r\n",
      "state": "closed",
      "author": "priamai",
      "author_type": "User",
      "created_at": "2023-11-30T10:33:14Z",
      "updated_at": "2024-04-11T10:41:21Z",
      "closed_at": "2024-04-11T10:41:20Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/78/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/78",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/78",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:56.565717",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks! Great resource",
          "created_at": "2024-04-11T10:41:20Z"
        }
      ]
    },
    {
      "issue_number": 84,
      "title": "How to install HuggingFace dependencies in Docker",
      "body": "I want to use the huggingface llama2 model through the HuggingFace API in Verba. I have the Verba docker container up and running. But in the status bar I see that the huggingface libraries like the `huggingface_hub`, `transformers` are not installed.\r\n\r\nBy the way the `sentence-transformers` is missing an `s` in the requirements.txt\r\n\r\nOne way I tried was to go inside the docker container container and run the `pip install -r requirements.txt` to install the libraries. By the way does using the HuggingFace downloads the entire Llama2 model? or is there an option to use the HuggingFace Inference API?",
      "state": "closed",
      "author": "LuciAkirami",
      "author_type": "User",
      "created_at": "2023-12-03T10:52:23Z",
      "updated_at": "2024-04-11T10:36:49Z",
      "closed_at": "2024-04-11T10:36:49Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/84/reactions",
        "total_count": 2,
        "+1": 2,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/84",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/84",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:58.527547",
      "comments": [
        {
          "author": "priamai",
          "body": "+1 on this problem.",
          "created_at": "2023-12-03T12:16:42Z"
        },
        {
          "author": "thomashacker",
          "body": "Nice catch, thanks! I changed the Dockerfile configuration so that it also downloads the HuggingFace stack. Right now, Verba does not support the HuggingFace Inference API but we're working on it! \r\n\r\nTo use the Llama model you need to configure the `LLAMA2-7B-CHAT-HF` to `true`, this will download ",
          "created_at": "2023-12-05T10:47:16Z"
        },
        {
          "author": "LuciAkirami",
          "body": "Cool, that's great to hear. Would be great if added support to the quantized models as well",
          "created_at": "2023-12-05T10:58:03Z"
        }
      ]
    },
    {
      "issue_number": 90,
      "title": "The future of RALG and RALM and RADIT",
      "body": "Hello,\r\nI want to flag a few recent developments in the field of RAG.\r\n\r\n**RA-DIT: Retrieval-Augmented Dual Instruction Tuning**\r\nhttps://arxiv.org/abs/2310.01352\r\n\r\n**Self-RAG: Learning to Retrieve, Generate, and Critique through Self-Reflection**\r\n\r\nhttps://arxiv.org/abs/2310.11511\r\n\r\n**REALM: Retrieval-Augmented Language Model Pre-Training**\r\nhttps://arxiv.org/abs/2002.08909\r\n\r\n\r\n",
      "state": "closed",
      "author": "priamai",
      "author_type": "User",
      "created_at": "2023-12-07T23:57:14Z",
      "updated_at": "2024-04-11T09:33:20Z",
      "closed_at": "2024-04-11T09:33:20Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/90/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/90",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/90",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:58.733300",
      "comments": [
        {
          "author": "thomashacker",
          "body": "This is great! Thanks a lot! ",
          "created_at": "2024-04-11T09:33:20Z"
        }
      ]
    },
    {
      "issue_number": 107,
      "title": "WebSocket Error: 'NoneType' object has no attribute 'pad_token' using docker setup with Llama",
      "body": "Hi all, newbie here. \r\n\r\nI'm trying to get a basic demo instance working using docker and LLama.\r\n\r\nI've successively imported documents and I've set the following two configurations: \r\n\r\n- HF_TOKEN=$HF_TOKEN\r\n- LLAMA2-7B-CHAT-HF=True\r\n\r\nBut when I ask the prompt a question I get the following error: \r\n\r\n    File \"/Verba/goldenverba/server/api.py\", line 599, in websocket_generate_stream\r\n    verba-verba-1     |     async for chunk in manager.generate_stream_answer(\r\n    verba-verba-1     |   File \"/Verba/goldenverba/verba_manager.py\", line 613, in generate_stream_answer\r\n    verba-verba-1     |     async for result in self.generator_manager.selected_generator.generate_stream(\r\n    verba-verba-1     |   File \"/Verba/goldenverba/components/generation/Llama2Generator.py\", line 77, in generate_stream\r\n    verba-verba-1     |     if self.tokenizer.pad_token is None:\r\n    verba-verba-1     | AttributeError: 'NoneType' object has no attribute 'pad_token'\r\n\r\n\r\nI'm likely missing something simple, but I'm not sure what it is. Any advice is much appreciated.\r\n",
      "state": "closed",
      "author": "jeffreycwitt",
      "author_type": "User",
      "created_at": "2024-01-15T14:26:19Z",
      "updated_at": "2024-04-11T09:24:35Z",
      "closed_at": "2024-04-11T09:24:35Z",
      "labels": [
        "bug",
        "documentation"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 6,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/107/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/107",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/107",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:58.941369",
      "comments": [
        {
          "author": "jeffreycwitt",
          "body": "I'm still getting this error: \r\n\r\n``` \r\n✔ Received generate stream call for what is a vector database\r\nverba-1     | ✘ WebSocket Error: 'NoneType' object has no attribute 'pad_token'\r\n```\r\n\r\n```\r\n ✔ Received query: what is the medium?\r\nverba-1     | ℹ Retrieved Context of 900 tokens\r\nverba-1     | ✔",
          "created_at": "2024-01-17T14:58:01Z"
        },
        {
          "author": "jcranney",
          "body": "Most likely the initialising of the `Llama2Generator` failed, so the `self.tokenizer` was never set. This failure only raises a warning which is easily lost in the docker logs:\r\nhttps://github.com/weaviate/Verba/blob/1c9d4b49385315883ba0027ac1772a8b448f6204/goldenverba/components/generation/Llama2Ge",
          "created_at": "2024-01-18T00:19:43Z"
        },
        {
          "author": "RonZ-dev",
          "body": "Make sure you are \"authorised\" to use it.\r\nUse the links https://huggingface.co/meta-llama/Llama-2-70b-chat-hf and\r\nhttps://ai.meta.com/resources/models-and-libraries/llama-downloads/",
          "created_at": "2024-01-18T10:55:00Z"
        },
        {
          "author": "jeffreycwitt",
          "body": "Hugging face says I've been authorized: \r\n\r\n<img width=\"879\" alt=\"image\" src=\"https://github.com/weaviate/Verba/assets/1146685/59e11b16-6098-47fe-a27e-3fd20bd8f7f7\">\r\n",
          "created_at": "2024-01-18T11:31:16Z"
        },
        {
          "author": "jeffreycwitt",
          "body": "I think I'm hitting a Docker memory limit when trying to install llama. \r\n\r\nDocker Build fro Verba gets this far:\r\n\r\n<img width=\"879\" alt=\"image\" src=\"https://github.com/weaviate/Verba/assets/1146685/b641b398-401a-49a0-9bc8-08bda9b99ceb\">\r\n\r\nand then it just hangs.\r\n\r\nDocker memory usage looks like ",
          "created_at": "2024-01-18T13:30:34Z"
        }
      ]
    },
    {
      "issue_number": 111,
      "title": "Does verba support Chinese document?",
      "body": "If I have some document which content is chinese, what anything else to do so I can RAG with verba?\r\nThanks.",
      "state": "closed",
      "author": "tigermask1978",
      "author_type": "User",
      "created_at": "2024-01-23T09:44:09Z",
      "updated_at": "2024-04-11T09:17:43Z",
      "closed_at": "2024-04-11T09:17:42Z",
      "labels": [
        "documentation"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/111/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/111",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/111",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:59.136585",
      "comments": [
        {
          "author": "eternnoir",
          "body": "In my tests, simply importing the Chinese files and conversing directly in Chinese worked very well.",
          "created_at": "2024-04-01T06:24:02Z"
        },
        {
          "author": "thomashacker",
          "body": "This depends on the type of embedder model and generator model you are using, if they are multilingual, then the answer is yes 😄 If you use models that were trained on just one language then they are limited to that only",
          "created_at": "2024-04-11T09:17:42Z"
        }
      ]
    },
    {
      "issue_number": 51,
      "title": "Error: Missing Embedder and Options Not Displayed in 'Add Document",
      "body": "I have deployed Verba via Docker, and I can successfully access the frontend side. However, I've encountered an issue where no options are displayed in the \"Add document\" section. Upon inspecting the Docker logs, I've come across the following error message:\r\n`  \r\nFile \"/Verba/goldenverba/server/api.py\", line 300, in get_components\r\n    config_manager.get_embedder(), embedders[config_manager.get_embedder()]\r\nKeyError: ''\r\n`\r\n\r\nAdditionally, I've created my own .env file and have added only the Hugging Face API token.\r\n\r\nCould you please help me understand why this error is occurring right after the initialization? Is there any crucial installation step that I might have missed?",
      "state": "closed",
      "author": "atifemreyuksel",
      "author_type": "User",
      "created_at": "2023-11-23T12:25:31Z",
      "updated_at": "2024-03-08T18:56:54Z",
      "closed_at": "2023-11-29T11:13:02Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/51/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/51",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/51",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:59.350758",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Interesting! Thanks for the issue. \r\nThe FastAPI Service creates a config.json which it uses to cache selected components and their configuration. This is a bug, where the config saved an empty string as the embedder component, and now throws an KeyError. I will look into it and fix this! 🚀 \r\n",
          "created_at": "2023-11-24T13:03:31Z"
        },
        {
          "author": "thomashacker",
          "body": "Fixed the issue on the `main` branch, will be included in the coming release! 🚀  You can install from source by cloning the project and installing it via `pip install -e .`",
          "created_at": "2023-11-29T11:13:02Z"
        },
        {
          "author": "hubciorz",
          "body": "@thomashacker I'm not sure if it has been fixed. I'm still encountering the same error but now the line number is different.\r\n```\r\n   File \"/Users/hubciorz/Verba/goldenverba/server/api.py\", line 294, in get_components\r\n    config_manager.get_embedder(), embedders[config_manager.get_embedder()]\r\n    ",
          "created_at": "2024-01-26T17:59:39Z"
        },
        {
          "author": "koshyviv",
          "body": "Im still getting this issue",
          "created_at": "2024-03-08T18:56:52Z"
        }
      ]
    },
    {
      "issue_number": 71,
      "title": "GitHub Reader: hard-coded to `main` branch?",
      "body": "I'm getting the following error when attempting to use the `GithubReader`\r\n![image](https://github.com/weaviate/Verba/assets/806152/956890e3-a34e-419d-83d1-12c5046f99d1)\r\n\r\nIt looks like maybe the master branch's name is hard-coded to `main`?\r\nhttps://github.com/weaviate/Verba/blob/45f1ed4640b4df5640ae02d98d6fd4347d9ff248/goldenverba/components/reader/githubreader.py#L101",
      "state": "closed",
      "author": "davidrans",
      "author_type": "User",
      "created_at": "2023-11-27T19:31:46Z",
      "updated_at": "2024-01-02T15:28:52Z",
      "closed_at": "2024-01-02T15:28:52Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/71/reactions",
        "total_count": 2,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 2,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/71",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/71",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:59.563921",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Ah, great catch! Yes, the main branch is hardcoded. We'll add the option to select that dynamically! Thanks for the issue",
          "created_at": "2023-11-28T16:58:23Z"
        },
        {
          "author": "thomashacker",
          "body": "Has been fixed with this PR https://github.com/weaviate/Verba/pull/98 🚀 ",
          "created_at": "2024-01-02T15:28:52Z"
        }
      ]
    },
    {
      "issue_number": 25,
      "title": "Azure OpenAI support",
      "body": "It seems Azure OpenAI is supported by Weaviate but not by Verba so far, it would be great to implement it. Thanks!",
      "state": "closed",
      "author": "haltux",
      "author_type": "User",
      "created_at": "2023-10-16T09:26:19Z",
      "updated_at": "2024-01-02T15:25:48Z",
      "closed_at": "2024-01-02T15:25:47Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 11,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/25/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/25",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/25",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:33:59.747103",
      "comments": [
        {
          "author": "jcarme",
          "body": "I have implemented it and submitted a pull request.",
          "created_at": "2023-10-18T10:49:55Z"
        },
        {
          "author": "thomashacker",
          "body": "Great idea! And thanks for the PR 🚀  We'll be releasing the new version soon and add the Azure OpenAI support 👍 ",
          "created_at": "2023-10-22T15:17:09Z"
        },
        {
          "author": "jcarme",
          "body": "Thanks! I had a look at the new \"data-ingestion-update\" and it seems the patch will have to be reworked a little bit. I was planning to have a look at that considering I am very interested in the new features, in particular the data ingestion from the API.\r\n\r\nIs the branch already in a usable state?",
          "created_at": "2023-10-22T15:26:25Z"
        },
        {
          "author": "thomashacker",
          "body": "If you'd like, you can have a look at the `dev` branch, the data ingestion should be working; it's still missing the retrieval and generation part, but it will be added this week :) I also need to make sure to add documentation about the new architecture and better guidelines for contributing. ",
          "created_at": "2023-10-22T15:36:13Z"
        },
        {
          "author": "thomashacker",
          "body": "We just merged the new version of verba to the main branch 🚀 Feel free to add the Azure support to the new refactored code 😄 ",
          "created_at": "2023-11-13T09:28:41Z"
        }
      ]
    },
    {
      "issue_number": 50,
      "title": "Error when importing larger PDF files",
      "body": "When trying to import larger PDF files (tested with upwards of 20 pages) using ADAEmbedder I'm seeing the following error in the front end and in the console.\r\n\r\nHowever the embeddings somehow seem to be generated since asking questions for that context works. But the uploaded document isn't showing in the frontend under the documents section.\r\n\r\n<img width=\"1302\" alt=\"frontend\" src=\"https://github.com/weaviate/Verba/assets/141818514/45d1ce2b-4b54-4ad4-9eb8-7eb6a184574c\">\r\n\r\n<img width=\"749\" alt=\"console\" src=\"https://github.com/weaviate/Verba/assets/141818514/936436f5-5b76-4cfc-baca-c0520b0fc5d4\">\r\n",
      "state": "closed",
      "author": "duob-ai",
      "author_type": "User",
      "created_at": "2023-11-22T20:46:20Z",
      "updated_at": "2023-12-07T10:59:23Z",
      "closed_at": "2023-12-05T10:25:27Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 9,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/50/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/50",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/50",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:34:00.000309",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Interesting! Thanks for the issue. It looks like the chunks are too big for OpenAI's ADA model (max 8192 tokens, but somehow one chunks seems to be 23941 tokens). What are your chunking settings? ",
          "created_at": "2023-11-24T13:01:48Z"
        },
        {
          "author": "duob-ai",
          "body": "@thomashacker Chunking settings were 250 tokens with 50 overlap. Error should be easily replicable by just uploading long pdf files.",
          "created_at": "2023-11-24T15:07:56Z"
        },
        {
          "author": "cam-barts",
          "body": "@thomashacker I opened #55 which ended up being duplicative of the issue here. I added some of my investigation info in that issue, but tldr the issue isn't in the chunks, its in the document upload itself *before* the chunking can occur. ",
          "created_at": "2023-11-24T20:30:08Z"
        },
        {
          "author": "thomashacker",
          "body": "This is interesting @cam-barts ! Thank you so much for your investigation, this really helped. The document schema should not be vectorized in the first placed, since it only acts as a document store for Verba. This is definitely a bug, I'll look into it and fix it for the next release",
          "created_at": "2023-11-28T17:08:01Z"
        },
        {
          "author": "r0mdau",
          "body": "I encounter the same problem when starting Verba in a virtualenv with `verba start` and connecting to a weaviate instance running in docker.\r\n\r\nNo problem when using the weaviate embedded.\r\n\r\nI had exactly the same problem with verba 0.2.",
          "created_at": "2023-11-30T03:19:08Z"
        }
      ]
    },
    {
      "issue_number": 12,
      "title": "Any plan to implement custom API calls",
      "body": "Hey I'd love to test your repository with my custom model hosted with a custom API (ex with oobabooga).\r\n\r\nDo you plan on implementing calls to custom API or do you recommend to do it myself?",
      "state": "closed",
      "author": "CorentinvdBdO",
      "author_type": "User",
      "created_at": "2023-09-08T13:38:28Z",
      "updated_at": "2023-12-03T13:25:02Z",
      "closed_at": "2023-09-08T21:08:23Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/12/reactions",
        "total_count": 2,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 1,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/12",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/12",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:34:00.226688",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Yes, we plan to make it easy for anyone to plug in/implement their custom features, including custom models! We're currently refactoring the general codebase and architecture, I recommend implementing your custom API calls when the next iteration is out! ",
          "created_at": "2023-09-08T17:33:11Z"
        },
        {
          "author": "CorentinvdBdO",
          "body": "Thanks a lot for the answer, I'm glad to hear it!",
          "created_at": "2023-09-08T21:07:59Z"
        },
        {
          "author": "ashokrajab",
          "body": "> Yes, we plan to make it easy for anyone to plug in/implement their custom features, including custom models! We're currently refactoring the general codebase and architecture, I recommend implementing your custom API calls when the next iteration is out!\r\n\r\n\r\nLooking forward to this update.",
          "created_at": "2023-12-03T13:25:00Z"
        }
      ]
    },
    {
      "issue_number": 54,
      "title": " Cohere API Key: no api key found neither in request header:",
      "body": "Hi, I'm starting to try Verba, I cloned the project, modified the .env file, and installed it with  pip install, but it seems that there is something that I have not done, it is not taking the Keys from the .env file when I use verba start, can you help me?\r\n\r\nRegards.",
      "state": "closed",
      "author": "micuentadecasa",
      "author_type": "User",
      "created_at": "2023-11-23T22:26:02Z",
      "updated_at": "2023-11-30T15:01:32Z",
      "closed_at": "2023-11-30T15:01:32Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/54/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/54",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/54",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:34:00.465040",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! Are you seeing the Cohere API Key displayed on the status page? Where is your `.env ` and from where are you starting Verba, we might find the problem there 😄 ",
          "created_at": "2023-11-24T13:09:17Z"
        },
        {
          "author": "micuentadecasa",
          "body": "At the end I solved it, thanks.",
          "created_at": "2023-11-26T22:16:54Z"
        },
        {
          "author": "thomashacker",
          "body": "That's great to hear! How did you solve it?",
          "created_at": "2023-11-29T11:19:30Z"
        },
        {
          "author": "micuentadecasa",
          "body": "At the end I used the dockerfile, by the way there is an error in the last\r\nline in the .env, you cannot use underscore.\r\n\r\nRegards.\r\n\r\nEl mié, 29 nov 2023, 12:19, Edward ***@***.***> escribió:\r\n\r\n> That's great to hear! How did you solve it?\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHu",
          "created_at": "2023-11-29T16:52:36Z"
        }
      ]
    },
    {
      "issue_number": 37,
      "title": "missing dependency when install",
      "body": "I use pip to install the goldenverba. after installation it showed.\r\n![Screenshot from 2023-11-14 23-49-16](https://github.com/weaviate/Verba/assets/14936390/2f310685-a767-4e9a-817c-3cd58f30d3da)\r\n\r\nthe issue fixed after I install the missing package.\r\n",
      "state": "closed",
      "author": "Joshua0128",
      "author_type": "User",
      "created_at": "2023-11-14T15:49:41Z",
      "updated_at": "2023-11-29T12:10:10Z",
      "closed_at": "2023-11-29T10:42:03Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/37/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 1,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/37",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/37",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:34:00.745117",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Interesting, thanks for the issue! `chardet` seems to be used by the requests library, I'll have a look and fix the installation package",
          "created_at": "2023-11-15T00:12:37Z"
        },
        {
          "author": "thomashacker",
          "body": "Fixed and merged on the `main` branch! It will be included in the `v0.3.1` release! You can install it via cloning the GitHub repo and using `pip install -e .` or wait for the release, which should come soon! ",
          "created_at": "2023-11-29T10:42:04Z"
        },
        {
          "author": "Joshua0128",
          "body": "you guys are amazing!\r\n",
          "created_at": "2023-11-29T12:10:08Z"
        }
      ]
    },
    {
      "issue_number": 61,
      "title": "Loading data failed Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!",
      "body": "Hi, \r\nIve followed quick installation from PIP. I use [HuggingFace] version.\r\nI have laptop with 2 GPU (AMD and Nvidia).\r\nGui starts flawlessly but when I wand to upload any simpliest TXT document, I am getting following error:\r\n```\r\n\r\nVectorizing document chunks:   0%|                                                                                                   | 0/1 [00:00<?, ?it/s]\r\n✘ Loading data failed Expected all tensors to be on the same device,\r\nbut found at least two devices, cuda:0 and cpu! (when checking argument for\r\nargument index in method wrapper_CUDA__index_select)\r\n```\r\n\r\nWhere I should force GPU usage?\r\nPreety please help.",
      "state": "closed",
      "author": "PiotrEsse",
      "author_type": "User",
      "created_at": "2023-11-25T14:58:40Z",
      "updated_at": "2023-11-29T10:43:46Z",
      "closed_at": "2023-11-29T10:43:45Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 7,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/61/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/61",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/61",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:34:00.996789",
      "comments": [
        {
          "author": "marklysze",
          "body": "I'm having the same issue with just one GPU (nvidia) when trying to load a text file.\r\n\r\nUsing the MiniLMEmbedder.",
          "created_at": "2023-11-27T23:41:53Z"
        },
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! We're aware of that bug, and should have them fixed in the next release ",
          "created_at": "2023-11-28T17:05:04Z"
        },
        {
          "author": "PiotrEsse",
          "body": "> Thanks for the issue! We're aware of that bug, and should have them fixed in the next release\r\n\r\nThank You. Do You think theres a way to manually correct it now without waiting for a release?\r\n",
          "created_at": "2023-11-28T18:01:29Z"
        },
        {
          "author": "thomashacker",
          "body": "It should be fixed on the `main` branch. You can install it from source via cloning the project and using `pip install -e .`",
          "created_at": "2023-11-28T19:56:16Z"
        },
        {
          "author": "thomashacker",
          "body": "Otherwise, you can have a look at the MiniLMEmbedder implementation (https://github.com/weaviate/Verba/blob/main/goldenverba/components/embedding/MiniLMEmbedder.py)",
          "created_at": "2023-11-28T19:57:16Z"
        }
      ]
    },
    {
      "issue_number": 41,
      "title": "Loading data failed Expected all tensors to be on the same device,",
      "body": "Hey, I'm using Verba with OpenAI. \r\n\r\nI'm trying to import a txt file with Simple Reader and MiniLMEmbedding.\r\n\r\nReceiving the following error:\r\n\r\n```\r\n✘ Loading data failed Expected all tensors to be on the same device,\r\nbut found at least two devices, cuda:0 and cpu! (when checking argument for\r\nargument index in method wrapper_CUDA__index_select)\r\n```\r\n\r\nIt seems to be a pytorch error related to moving model to device.\r\n\r\nHere's what's intalled after pip install verba\r\n`Successfully installed MarkupSafe-2.1.3 accelerate-0.24.1 aiohttp-3.8.6 aiosignal-1.3.1 annotated-types-0.6.0 anyio-4.0.0 async-timeout-4.0.3 asyncio-3.4.3 attrs-23.1.0 authlib-1.2.1 backoff-2.2.1 blis-0.7.11 catalogue-2.0.10 certifi-2023.7.22 cffi-1.16.0 charset-normalizer-3.3.2 click-8.1.7 cohere-4.33 confection-0.1.3 cryptography-41.0.5 cymem-2.0.8 fastapi-0.102.0 fastavro-1.8.2 filelock-3.13.1 frozenlist-1.4.0 fsspec-2023.10.0 goldenverba-0.3.0 h11-0.14.0 httptools-0.6.1 huggingface-hub-0.19.4 idna-3.4 importlib_metadata-6.8.0 jinja2-3.1.2 joblib-1.3.2 langcodes-3.3.0 mpmath-1.3.0 multidict-6.0.4 murmurhash-1.0.10 networkx-3.2.1 nltk-3.8.1 numpy-1.26.2 nvidia-cublas-cu12-12.1.3.1 nvidia-cuda-cupti-cu12-12.1.105 nvidia-cuda-nvrtc-cu12-12.1.105 nvidia-cuda-runtime-cu12-12.1.105 nvidia-cudnn-cu12-8.9.2.26 nvidia-cufft-cu12-11.0.2.54 nvidia-curand-cu12-10.3.2.106 nvidia-cusolver-cu12-11.4.5.107 nvidia-cusparse-cu12-12.1.0.106 nvidia-nccl-cu12-2.18.1 nvidia-nvjitlink-cu12-12.3.101 nvidia-nvtx-cu12-12.1.105 openai-0.27.9 packaging-23.2 pathy-0.10.3 pillow-10.1.0 preshed-3.0.9 psutil-5.9.6 pycparser-2.21 pydantic-2.5.1 pydantic-core-2.14.3 python-dotenv-1.0.0 pyyaml-6.0.1 regex-2023.10.3 requests-2.31.0 safetensors-0.4.0 scikit-learn-1.3.2 scipy-1.11.3 sentence-transformers-2.2.2 sentencepiece-0.1.99 smart-open-6.4.0 sniffio-1.3.0 spacy-3.6.1 spacy-legacy-3.0.12 spacy-loggers-1.0.5 srsly-2.4.8 starlette-0.27.0 sympy-1.12 thinc-8.1.12 threadpoolctl-3.2.0 tiktoken-0.5.1 tokenizers-0.15.0 torch-2.1.1 torchvision-0.16.1 tqdm-4.66.1 transformers-4.35.2 triton-2.1.0 typer-0.9.0 typing-extensions-4.8.0 urllib3-2.1.0 uvicorn-0.24.0.post1 uvloop-0.19.0 validators-0.21.0 wasabi-1.1.2 watchfiles-0.21.0 weaviate-client-3.23.1 websockets-12.0 yarl-1.9.2 zipp-3.17.0`",
      "state": "closed",
      "author": "mattquestions",
      "author_type": "User",
      "created_at": "2023-11-17T06:57:01Z",
      "updated_at": "2023-11-29T10:42:38Z",
      "closed_at": "2023-11-29T10:42:38Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/41/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 1,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/41",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/41",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:34:01.238487",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! I'll look into it, seems like we have a bug in the implementation",
          "created_at": "2023-11-17T10:21:28Z"
        },
        {
          "author": "thomashacker",
          "body": "Fixed and merged on the `main` branch! It will be included in the `v0.3.1` release! You can install it by cloning the GitHub repo and using `pip install -e .` or wait for the release, which should come soon! ",
          "created_at": "2023-11-29T10:42:38Z"
        }
      ]
    },
    {
      "issue_number": 48,
      "title": "Display line breaks in chat",
      "body": "Hi,\r\n\r\nSuggestion for a small but nice frontend improvement: add `whitespace-pre-line` as an HTML class in this line:\r\n\r\nhttps://github.com/weaviate/Verba/blob/94a2555b0f0b8adcd2d3adabe29c46d570e8c33d/frontend/components/ChatComponent.tsx#L230\r\n\r\nAs such, messages in the chat will be displayed with proper line breaks.\r\n\r\nWith:\r\n![image](https://github.com/weaviate/Verba/assets/35298861/d7339f43-9c3c-4f6d-b65a-98154e28beb0)\r\n\r\nWithout:\r\n![image](https://github.com/weaviate/Verba/assets/35298861/d5c39c40-a57b-4a02-8b42-569e481491b7)\r\n\r\n",
      "state": "closed",
      "author": "MartinPicc",
      "author_type": "User",
      "created_at": "2023-11-22T11:18:49Z",
      "updated_at": "2023-11-29T10:42:25Z",
      "closed_at": "2023-11-29T10:42:25Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/48/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/48",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/48",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:34:01.427701",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Awesome! Thanks, we'll definitely add it to make the Chat UI look better 🚀 ",
          "created_at": "2023-11-22T17:04:11Z"
        },
        {
          "author": "thomashacker",
          "body": "Fixed and merged on the `main` branch! It will be included in the `v0.3.1` release! You can install it by cloning the GitHub repo and using `pip install -e .` or wait for the release, which should come soon! ",
          "created_at": "2023-11-29T10:42:25Z"
        }
      ]
    },
    {
      "issue_number": 11,
      "title": "FR: incremental data ingest",
      "body": "It'd be great to allow incremental data ingestion to enhance efficiency and reduce API call costs. i.e., only ingest new or modified files with `verba import --path \"Path to your dir or file\" ..`",
      "state": "closed",
      "author": "zz2115",
      "author_type": "User",
      "created_at": "2023-09-08T13:15:36Z",
      "updated_at": "2023-11-29T10:09:59Z",
      "closed_at": "2023-11-29T10:09:58Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/11/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 1,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/11",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/11",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:34:01.657097",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Yes, I agree! We're currently refactoring the data ingestion pipeline. We'll definitely implement your feedback!",
          "created_at": "2023-09-08T17:31:30Z"
        },
        {
          "author": "thomashacker",
          "body": "With the new `0.3.0` update, we now have somewhat of an incremental data ingest, Verba now makes sure that existing data isn't imported again. However, modifying ingested data directly isn't implemented yet but will be in the future. Right now, the only way to modify existing data is to delete it an",
          "created_at": "2023-11-29T10:09:58Z"
        }
      ]
    },
    {
      "issue_number": 36,
      "title": "Chunks are not imported",
      "body": "![image](https://github.com/weaviate/Verba/assets/1425348/44cc87d7-698c-407f-a9de-9366e35e0e11)\r\nIt said: Imported all chunks\r\nIn fact, after checking I see that the chunks are not imported",
      "state": "closed",
      "author": "huynq55",
      "author_type": "User",
      "created_at": "2023-11-14T03:05:26Z",
      "updated_at": "2023-11-17T02:13:41Z",
      "closed_at": "2023-11-17T02:13:41Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 8,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/36/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/36",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/36",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:34:01.852144",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey @huynq55 , thanks for the issue! Have you tried using the newest version of Verba? We made a lot of changes in the data import and made the ingestion more robust 🚀 ",
          "created_at": "2023-11-15T00:09:50Z"
        },
        {
          "author": "huynq55",
          "body": "Thank you. The picture above is of an older version. I have tried the new version and am truly impressed with the data entry capability on the graphical interface. However, I encounter a problem when entering multiple files at the same time (I have about more than 3000 files with a total size of aro",
          "created_at": "2023-11-15T02:03:50Z"
        },
        {
          "author": "huynq55",
          "body": "Occasionally, I encounter the following error while importing files:\r\n![image](https://github.com/weaviate/Verba/assets/1425348/57ad3781-4141-4851-aef9-5560585d1293)\r\n\r\n",
          "created_at": "2023-11-15T02:05:54Z"
        },
        {
          "author": "huynq55",
          "body": "And while importing multiple files\r\n![image](https://github.com/weaviate/Verba/assets/1425348/e986bbf7-83a9-489f-9d54-dc6cc9878995)\r\n",
          "created_at": "2023-11-15T02:07:19Z"
        },
        {
          "author": "thomashacker",
          "body": "This is interesting, thank you for the information 👍 I will have a look into this!",
          "created_at": "2023-11-15T12:09:20Z"
        }
      ]
    },
    {
      "issue_number": 24,
      "title": "Import Error",
      "body": "ℹ Setting up client\r\n✔ Client connected to Weaviate Cluster\r\nℹ All schemas available\r\nℹ Reading data\\minecraft\\minecraft_guide.txt\r\nℹ Reading data\\minecraft\\minecraft_wiki.txt\r\n✔ Loaded 2 files\r\nℹ Converted data\\minecraft\\minecraft_guide.txt\r\nTraceback (most recent call last):\r\n  File \"\\\\?\\C:\\Users\\xxxx\\AppData\\Local\\Programs\\Python\\Python310\\Scripts\\verba-script.py\", line 33, in <module>\r\n    sys.exit(load_entry_point('goldenverba', 'console_scripts', 'verba')())\r\n  File \"C:\\Users\\xxxx\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\click\\core.py\", line 1157, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"C:\\Users\\xxxx\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\click\\core.py\", line 1078, in main\r\n    rv = self.invoke(ctx)\r\n  File \"C:\\Users\\xxxx\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\click\\core.py\", line 1688, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"C:\\Users\\xxxx\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\click\\core.py\", line 1434, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"C:\\Users\\xxxx\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\click\\core.py\", line 783, in invoke\r\n    return __callback(*args, **kwargs)\r\n  File \"c:\\users\\xxxx\\desktop\\train\\verba\\goldenverba\\ingestion\\cli.py\", line 68, in import_data_command\r\n    import_data(path, model)\r\n  File \"c:\\users\\xxxx\\desktop\\train\\verba\\goldenverba\\ingestion\\import_data.py\", line 65, in import_data\r\n    documents = convert_files(client, file_contents, nlp=nlp)\r\n  File \"c:\\users\\xxxx\\desktop\\train\\verba\\goldenverba\\ingestion\\preprocess.py\", line 178, in convert_files\r\n    if not check_if_file_exits(client, file_name):\r\n  File \"c:\\users\\xxxx\\desktop\\train\\verba\\goldenverba\\ingestion\\preprocess.py\", line 207, in check_if_file_exits\r\n    if results[\"data\"][\"Get\"][\"Document\"]:\r\nKeyError: 'data'\r\n\r\nC:\\Users\\xxxx\\Desktop\\train\\Verba>",
      "state": "closed",
      "author": "cometothed4rkside",
      "author_type": "User",
      "created_at": "2023-09-29T04:09:39Z",
      "updated_at": "2023-11-13T09:26:54Z",
      "closed_at": "2023-11-13T09:26:54Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/24/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/24",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/24",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:34:02.082551",
      "comments": [
        {
          "author": "cometothed4rkside",
          "body": "```\r\ndef check_if_file_exits(client: Client, doc_name: str) -> bool:\r\n    results = (\r\n        client.query.get(\r\n            class_name=\"Document\",\r\n            properties=[\r\n                \"doc_name\",\r\n            ],\r\n        )\r\n        .with_where(\r\n            {\r\n                \"path\": [\"doc_n",
          "created_at": "2023-09-29T04:11:58Z"
        },
        {
          "author": "cometothed4rkside",
          "body": "```\r\ndef convert_files(\r\n    client: Client, files: dict, nlp: Language, doc_type: str = \"Documentation\"\r\n) -> list[Doc]:\r\n    \"\"\"Converts list of strings to list of Documents\r\n    @parameter files : dict - Dictionary with filenames and their content\r\n    @parameter nlp : dict - A NLP Language model",
          "created_at": "2023-09-29T04:15:37Z"
        },
        {
          "author": "thomashacker",
          "body": "Thanks, we'll look into that! ",
          "created_at": "2023-10-22T15:17:42Z"
        },
        {
          "author": "thomashacker",
          "body": "This issue should be fixed with the new 0.3.0 version 🚀  Thanks a lot!",
          "created_at": "2023-11-13T09:26:54Z"
        }
      ]
    },
    {
      "issue_number": 20,
      "title": "front-end bug - boxes too big in document search",
      "body": "as you can see in below screenshot, boxes sizes not adjusted in document search tab. I tried both Chrome and Firefox. \r\n\r\n![Screenshot 2023-09-24 at 21 05 51](https://github.com/weaviate/Verba/assets/22099658/6d718943-bf70-40e3-9270-126741c23137)\r\n",
      "state": "closed",
      "author": "gbecigneul",
      "author_type": "User",
      "created_at": "2023-09-24T19:08:04Z",
      "updated_at": "2023-11-13T09:26:24Z",
      "closed_at": "2023-11-13T09:26:24Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/20/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 1,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/20",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/20",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:34:02.312539",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Nice catch, this looks horrible! Will look into fixing that ",
          "created_at": "2023-09-25T09:40:29Z"
        },
        {
          "author": "thomashacker",
          "body": "This issue was fixed with the new 0.3.0 version 🚀  Thanks a lot!",
          "created_at": "2023-11-13T09:26:24Z"
        }
      ]
    },
    {
      "issue_number": 19,
      "title": "Llama model support",
      "body": "Instead of using OpenAI, it would be cool if we could use Llama 2 instead.\r\n\r\nIf I made the PR and it works well, would you be open to merging it into this repo?\r\n\r\n",
      "state": "closed",
      "author": "samos123",
      "author_type": "User",
      "created_at": "2023-09-19T20:25:52Z",
      "updated_at": "2023-11-13T09:26:16Z",
      "closed_at": "2023-11-13T09:26:15Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 6,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/19/reactions",
        "total_count": 4,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 2,
        "rocket": 1,
        "eyes": 1
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/19",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/19",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:34:02.563251",
      "comments": [
        {
          "author": "gbecigneul",
          "body": "that'd be great. I think the right way to do it would be via a custom module. Might be worth merging the pr directly to weaviate though, not only verba. \r\n\r\nhttps://weaviate.io/developers/weaviate/modules/other-modules/custom-modules\r\n\r\nwould be great if you could make it modular, allowing to plug t",
          "created_at": "2023-09-24T19:11:14Z"
        },
        {
          "author": "thomashacker",
          "body": "Hey, thanks a lot for the issue! This is a great idea, we're planning to support Llama in the next version and aim to make it easy for users to plug-in any custom model to Verba ⭐ ",
          "created_at": "2023-09-25T09:39:37Z"
        },
        {
          "author": "jeffbiocode",
          "body": "@thomashacker \r\nWhen is this \"next version\" planned for release? Would love to see this integrated with Llama 2 and other open source LLMs",
          "created_at": "2023-10-20T19:37:28Z"
        },
        {
          "author": "thomashacker",
          "body": "It should be coming in the next weeks! It will include Llama 2 support 🚀 ",
          "created_at": "2023-10-22T15:10:20Z"
        },
        {
          "author": "dustinchen93",
          "body": "llama server can actually provide an interface similar to openai ([API like OAI](https://github.com/ggerganov/llama.cpp/blob/master/examples/server/README.md#api-like-oai)). I think this may provide a very simple compatibility method.",
          "created_at": "2023-10-26T10:28:02Z"
        }
      ]
    },
    {
      "issue_number": 18,
      "title": "Load and display PDF files",
      "body": "This is a feature request to add native support for PDF files.\r\n\r\nMy understanding is that Verba currently only handles text files such as `.txt` and `.md`. We can convert PDF files to text files to use them with Verba, but this will remove images and affect formatting. It would be great if we can load `.pdf` files directly into Verba and for the UI to display the PDF file with highlighted sections.\r\n\r\nSince many other file formats can be converted to PDF without losing their formatting, this would greatly expand the use cases of Verba.",
      "state": "closed",
      "author": "vincentmin",
      "author_type": "User",
      "created_at": "2023-09-19T11:10:28Z",
      "updated_at": "2023-11-13T09:25:57Z",
      "closed_at": "2023-11-13T09:25:57Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/18/reactions",
        "total_count": 5,
        "+1": 4,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 1,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/18",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/18",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:34:02.811583",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Great idea, thanks for the issue! We aim to support `pdf` in the coming versions.",
          "created_at": "2023-09-25T09:37:48Z"
        },
        {
          "author": "thomashacker",
          "body": "This issue should be implemented with the new 0.3.0 version 🚀  Thanks a lot!",
          "created_at": "2023-11-13T09:25:57Z"
        }
      ]
    },
    {
      "issue_number": 10,
      "title": "Error code is too value - Something went wrong! object of type 'NoneType' has no len()|",
      "body": "verba import --path data/minecraft/ --model \"gpt-3.5-turbo\" --clear True\r\n✔ Client connected to local Weaviate server\r\nℹ All schemas available\r\nℹ Reading data/minecraft/minecraft_wiki.txt\r\nℹ Reading data/minecraft/minecraft_guide.txt\r\n✔ Loaded 2 files\r\nℹ Converted data/minecraft/minecraft_wiki.txt\r\nℹ Converted data/minecraft/minecraft_guide.txt\r\n✔ All 2 files successfully loaded\r\n\r\nin the FE:\r\nQ: how to play minecraft?\r\nA: Something went wrong! object of type 'NoneType' has no len()|",
      "state": "closed",
      "author": "appchamp",
      "author_type": "User",
      "created_at": "2023-09-08T07:47:12Z",
      "updated_at": "2023-11-13T09:25:40Z",
      "closed_at": "2023-11-13T09:25:39Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/10/reactions",
        "total_count": 2,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 1,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/10",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/10",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:34:03.065778",
      "comments": [
        {
          "author": "thomashacker",
          "body": "This is interesting! Thanks a lot, we'll look into this",
          "created_at": "2023-09-08T17:29:37Z"
        },
        {
          "author": "mtichy92",
          "body": "I also came across this error message - it was due to hitting OpenAI limits (\"429 error: You exceeded your current quota, please check your plan and billing details.\"). But it can be anything within retrieve_semantic_cache() function.",
          "created_at": "2023-10-11T12:41:29Z"
        },
        {
          "author": "thomashacker",
          "body": "You also need to embed the query you're sending to Verba, if your OpenAI key hits the request limit you'll always get the error. We're currently working on providing a complete open-source use of Verba, so you won't need to worry about limits like these in the future",
          "created_at": "2023-10-16T07:34:06Z"
        },
        {
          "author": "thomashacker",
          "body": "This issue should be fixed with the new 0.3.0 version 🚀  Thanks a lot!",
          "created_at": "2023-11-13T09:25:39Z"
        }
      ]
    },
    {
      "issue_number": 9,
      "title": "requests.exceptions.ConnectionError - when importing data",
      "body": "When executing the import data command I get an connection error, but when I run the same command again, it passes. However, it appears that the application does read in the information from the data.txt. \r\n\r\nI don't set `VERBA_URL`, `VERBA_API_KEY`\r\n\r\nCommand that I execute: \r\n`verba import --path \"/home/snow/Documents/Projects/weaviate-verba/resources/\" --model \"gpt-3.5-turbo\" --clear True`\r\n\r\nTraceback: \r\n\r\n```bash\r\nverba import --path \"/home/snow/Documents/Projects/weaviate-verba/resources/\" --model \"gpt-3.5-turbo\" --clear True\r\n\r\n===================== Creating Document and Chunk class =====================\r\nℹ Setting up client\r\nℹ VERBA_URL environment variable not set. Using Weaviate Embedded\r\nStarted ./.verba/cache/weaviate-embedded: process ID 200093\r\n{\"action\":\"startup\",\"default_vectorizer_module\":\"none\",\"level\":\"info\",\"msg\":\"the default vectorizer modules is set to \\\"none\\\", as a result all new schema classes without an explicit vectorizer setting, will use this vectorizer\",\"time\":\"2023-09-08T00:11:07+02:00\"}\r\n{\"action\":\"startup\",\"auto_schema_enabled\":true,\"level\":\"info\",\"msg\":\"auto schema enabled setting is set to \\\"true\\\"\",\"time\":\"2023-09-08T00:11:07+02:00\"}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"cache_d8Z8DfRI0d6H\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:11:07+02:00\",\"took\":140330}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"chunk_ZFmXy4onugDM\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:11:07+02:00\",\"took\":87042}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"document_0dHcUXJompMJ\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:11:07+02:00\",\"took\":90100}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"suggestion_aJSePokVcdxW\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:11:07+02:00\",\"took\":104632}\r\n{\"level\":\"warning\",\"msg\":\"Multiple vector spaces are present, GraphQL Explore and REST API list objects endpoint module include params has been disabled as a result.\",\"time\":\"2023-09-08T00:11:07+02:00\"}\r\n{\"action\":\"grpc_startup\",\"level\":\"info\",\"msg\":\"grpc server listening at [::]:50051\",\"time\":\"2023-09-08T00:11:07+02:00\"}\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Serving weaviate at http://127.0.0.1:6666\",\"time\":\"2023-09-08T00:11:07+02:00\"}\r\n✔ Client connected to local Weaviate server\r\nDocument class already exists, do you want to overwrite it? (y/n): y\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":1000,\"index_id\":\"document_at2uxArUgLG1\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:11:11+02:00\",\"took\":182906}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":1000,\"index_id\":\"chunk_L4xfAO6z3nSu\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:11:11+02:00\",\"took\":170259}\r\n✔ 'Document' and 'Chunk' schemas created\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Shutting down... \",\"time\":\"2023-09-08T00:11:11+02:00\"}\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Stopped serving weaviate at http://127.0.0.1:6666\",\"time\":\"2023-09-08T00:11:11+02:00\"}\r\nℹ Done\r\n\r\n============================ Creating Cache class ============================\r\nℹ Setting up client\r\nℹ VERBA_URL environment variable not set. Using Weaviate Embedded\r\nStarted ./.verba/cache/weaviate-embedded: process ID 200235\r\n{\"action\":\"startup\",\"default_vectorizer_module\":\"none\",\"level\":\"info\",\"msg\":\"the default vectorizer modules is set to \\\"none\\\", as a result all new schema classes without an explicit vectorizer setting, will use this vectorizer\",\"time\":\"2023-09-08T00:11:11+02:00\"}\r\n{\"action\":\"startup\",\"auto_schema_enabled\":true,\"level\":\"info\",\"msg\":\"auto schema enabled setting is set to \\\"true\\\"\",\"time\":\"2023-09-08T00:11:11+02:00\"}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"cache_d8Z8DfRI0d6H\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:11:11+02:00\",\"took\":59862}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"chunk_L4xfAO6z3nSu\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:11:11+02:00\",\"took\":38679}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"document_at2uxArUgLG1\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:11:11+02:00\",\"took\":38062}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"suggestion_aJSePokVcdxW\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:11:11+02:00\",\"took\":35334}\r\n{\"level\":\"warning\",\"msg\":\"Multiple vector spaces are present, GraphQL Explore and REST API list objects endpoint module include params has been disabled as a result.\",\"time\":\"2023-09-08T00:11:11+02:00\"}\r\n{\"action\":\"grpc_startup\",\"level\":\"info\",\"msg\":\"grpc server listening at [::]:50051\",\"time\":\"2023-09-08T00:11:11+02:00\"}\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Serving weaviate at http://127.0.0.1:6666\",\"time\":\"2023-09-08T00:11:11+02:00\"}\r\n✔ Client connected to local Weaviate server\r\nCache class already exists, do you want to overwrite it? (y/n): y\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":1000,\"index_id\":\"cache_n3X4UDflnGSR\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:11:13+02:00\",\"took\":108556}\r\n✔ 'Cache' schema created\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Shutting down... \",\"time\":\"2023-09-08T00:11:13+02:00\"}\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Stopped serving weaviate at http://127.0.0.1:6666\",\"time\":\"2023-09-08T00:11:13+02:00\"}\r\nℹ Done\r\n\r\n========================= Creating Suggestion class =========================\r\nℹ Setting up client\r\nℹ VERBA_URL environment variable not set. Using Weaviate Embedded\r\nStarted ./.verba/cache/weaviate-embedded: process ID 200307\r\n{\"action\":\"startup\",\"default_vectorizer_module\":\"none\",\"level\":\"info\",\"msg\":\"the default vectorizer modules is set to \\\"none\\\", as a result all new schema classes without an explicit vectorizer setting, will use this vectorizer\",\"time\":\"2023-09-08T00:11:13+02:00\"}\r\n{\"action\":\"startup\",\"auto_schema_enabled\":true,\"level\":\"info\",\"msg\":\"auto schema enabled setting is set to \\\"true\\\"\",\"time\":\"2023-09-08T00:11:13+02:00\"}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"cache_n3X4UDflnGSR\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:11:13+02:00\",\"took\":56962}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"chunk_L4xfAO6z3nSu\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:11:13+02:00\",\"took\":55732}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"document_at2uxArUgLG1\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:11:13+02:00\",\"took\":84016}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"suggestion_aJSePokVcdxW\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:11:13+02:00\",\"took\":60599}\r\n{\"level\":\"warning\",\"msg\":\"Multiple vector spaces are present, GraphQL Explore and REST API list objects endpoint module include params has been disabled as a result.\",\"time\":\"2023-09-08T00:11:13+02:00\"}\r\n{\"action\":\"grpc_startup\",\"level\":\"info\",\"msg\":\"grpc server listening at [::]:50051\",\"time\":\"2023-09-08T00:11:13+02:00\"}\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Serving weaviate at http://127.0.0.1:6666\",\"time\":\"2023-09-08T00:11:13+02:00\"}\r\n✔ Client connected to local Weaviate server\r\nSuggestion class already exists, do you want to overwrite it? (y/n): y\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":1000,\"index_id\":\"suggestion_JvWuPHTJUNPN\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:11:14+02:00\",\"took\":199752}\r\n✔ 'Suggestion' schema created\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Shutting down... \",\"time\":\"2023-09-08T00:11:14+02:00\"}\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Stopped serving weaviate at http://127.0.0.1:6666\",\"time\":\"2023-09-08T00:11:14+02:00\"}\r\nℹ Done\r\n\r\n============================ Starting data import ============================\r\nℹ Setting up client\r\nℹ VERBA_URL environment variable not set. Using Weaviate Embedded\r\nStarted ./.verba/cache/weaviate-embedded: process ID 200378\r\n{\"action\":\"startup\",\"default_vectorizer_module\":\"none\",\"level\":\"info\",\"msg\":\"the default vectorizer modules is set to \\\"none\\\", as a result all new schema classes without an explicit vectorizer setting, will use this vectorizer\",\"time\":\"2023-09-08T00:11:14+02:00\"}\r\n{\"action\":\"startup\",\"auto_schema_enabled\":true,\"level\":\"info\",\"msg\":\"auto schema enabled setting is set to \\\"true\\\"\",\"time\":\"2023-09-08T00:11:14+02:00\"}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"cache_n3X4UDflnGSR\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:11:14+02:00\",\"took\":39691}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"chunk_L4xfAO6z3nSu\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:11:14+02:00\",\"took\":54810}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"document_at2uxArUgLG1\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:11:14+02:00\",\"took\":34729}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"suggestion_JvWuPHTJUNPN\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:11:14+02:00\",\"took\":48080}\r\n{\"level\":\"warning\",\"msg\":\"Multiple vector spaces are present, GraphQL Explore and REST API list objects endpoint module include params has been disabled as a result.\",\"time\":\"2023-09-08T00:11:14+02:00\"}\r\n{\"action\":\"grpc_startup\",\"level\":\"info\",\"msg\":\"grpc server listening at [::]:50051\",\"time\":\"2023-09-08T00:11:14+02:00\"}\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Serving weaviate at http://127.0.0.1:6666\",\"time\":\"2023-09-08T00:11:14+02:00\"}\r\n✔ Client connected to local Weaviate server\r\nℹ All schemas available\r\nℹ Reading\r\n/home/snow/Documents/Projects/weaviate-verba/resources/data.txt\r\n✔ Loaded 1 files\r\nℹ Converted\r\n/home/snow/Documents/Projects/weaviate-verba/resources/data.txt\r\n✔ All 1 files successfully loaded\r\nℹ Starting splitting process\r\n✔ Successful splitting (total 0)\r\nℹ (1/1) Importing document\r\n/home/snow/Documents/Projects/weaviate-verba/resources/data.txt\r\n✔ Imported all docs\r\n✔ Imported all chunks\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Shutting down... \",\"time\":\"2023-09-08T00:11:14+02:00\"}\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Stopped serving weaviate at http://127.0.0.1:6666\",\"time\":\"2023-09-08T00:11:14+02:00\"}\r\nException in thread batchSizeRefresh:\r\nTraceback (most recent call last):\r\n  File \"/home/snow/venv/weaviate-verba/lib/python3.10/site-packages/urllib3/connection.py\", line 203, in _new_conn\r\n    sock = connection.create_connection(\r\n  File \"/home/snow/venv/weaviate-verba/lib/python3.10/site-packages/urllib3/util/connection.py\", line 85, in create_connection\r\n    raise err\r\n  File \"/home/snow/venv/weaviate-verba/lib/python3.10/site-packages/urllib3/util/connection.py\", line 73, in create_connection\r\n    sock.connect(sa)\r\nConnectionRefusedError: [Errno 111] Connection refused\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/snow/venv/weaviate-verba/lib/python3.10/site-packages/urllib3/connectionpool.py\", line 790, in urlopen\r\n    response = self._make_request(\r\n  File \"/home/snow/venv/weaviate-verba/lib/python3.10/site-packages/urllib3/connectionpool.py\", line 496, in _make_request\r\n    conn.request(\r\n  File \"/home/snow/venv/weaviate-verba/lib/python3.10/site-packages/urllib3/connection.py\", line 395, in request\r\n    self.endheaders()\r\n  File \"/usr/lib/python3.10/http/client.py\", line 1278, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.10/http/client.py\", line 1038, in _send_output\r\n    self.send(msg)\r\n  File \"/usr/lib/python3.10/http/client.py\", line 976, in send\r\n    self.connect()\r\n  File \"/home/snow/venv/weaviate-verba/lib/python3.10/site-packages/urllib3/connection.py\", line 243, in connect\r\n    self.sock = self._new_conn()\r\n  File \"/home/snow/venv/weaviate-verba/lib/python3.10/site-packages/urllib3/connection.py\", line 218, in _new_conn\r\n    raise NewConnectionError(\r\nurllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPConnection object at 0x7f5eadaec370>: Failed to establish a new connection: [Errno 111] Connection refused\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/snow/venv/weaviate-verba/lib/python3.10/site-packages/requests/adapters.py\", line 486, in send\r\n    resp = conn.urlopen(\r\n  File \"/home/snow/venv/weaviate-verba/lib/python3.10/site-packages/urllib3/connectionpool.py\", line 844, in urlopen\r\n    retries = retries.increment(\r\n  File \"/home/snow/venv/weaviate-verba/lib/python3.10/site-packages/urllib3/util/retry.py\", line 515, in increment\r\n    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]\r\nurllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=6666): Max retries exceeded with url: /v1/nodes (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f5eadaec370>: Failed to establish a new connection: [Errno 111] Connection refused'))\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/snow/venv/weaviate-verba/lib/python3.10/site-packages/weaviate/cluster/cluster.py\", line 62, in get_nodes_status\r\n    response = self._connection.get(path=path)\r\n  File \"/home/snow/venv/weaviate-verba/lib/python3.10/site-packages/weaviate/connect/connection.py\", line 539, in get\r\n    return self._session.get(\r\n  File \"/home/snow/venv/weaviate-verba/lib/python3.10/site-packages/requests/sessions.py\", line 602, in get\r\n    return self.request(\"GET\", url, **kwargs)\r\n  File \"/home/snow/venv/weaviate-verba/lib/python3.10/site-packages/requests/sessions.py\", line 589, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/snow/venv/weaviate-verba/lib/python3.10/site-packages/requests/sessions.py\", line 703, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/home/snow/venv/weaviate-verba/lib/python3.10/site-packages/requests/adapters.py\", line 519, in send\r\n    raise ConnectionError(e, request=request)\r\nrequests.exceptions.ConnectionError: HTTPConnectionPool(host='localhost', port=6666): Max retries exceeded with url: /v1/nodes (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f5eadaec370>: Failed to establish a new connection: [Errno 111] Connection refused'))\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.10/threading.py\", line 1016, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/lib/python3.10/threading.py\", line 953, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/home/snow/venv/weaviate-verba/lib/python3.10/site-packages/weaviate/batch/crud_batch.py\", line 442, in periodic_check\r\n    status = cluster.get_nodes_status()\r\n  File \"/home/snow/venv/weaviate-verba/lib/python3.10/site-packages/weaviate/cluster/cluster.py\", line 64, in get_nodes_status\r\n    raise RequestsConnectionError(\r\nrequests.exceptions.ConnectionError: Get nodes status failed due to connection error\r\n\r\n```\r\n\r\n\r\nafter simply repeating the command: \r\n\r\n```bash \r\n===================== Creating Document and Chunk class =====================\r\nℹ Setting up client\r\nℹ VERBA_URL environment variable not set. Using Weaviate Embedded\r\nStarted ./.verba/cache/weaviate-embedded: process ID 205223\r\n{\"action\":\"startup\",\"default_vectorizer_module\":\"none\",\"level\":\"info\",\"msg\":\"the default vectorizer modules is set to \\\"none\\\", as a result all new schema classes without an explicit vectorizer setting, will use this vectorizer\",\"time\":\"2023-09-08T00:14:46+02:00\"}\r\n{\"action\":\"startup\",\"auto_schema_enabled\":true,\"level\":\"info\",\"msg\":\"auto schema enabled setting is set to \\\"true\\\"\",\"time\":\"2023-09-08T00:14:46+02:00\"}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"cache_n3X4UDflnGSR\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:14:46+02:00\",\"took\":192734}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"chunk_L4xfAO6z3nSu\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:14:46+02:00\",\"took\":180536}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"document_at2uxArUgLG1\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:14:46+02:00\",\"took\":261801}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"suggestion_JvWuPHTJUNPN\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:14:46+02:00\",\"took\":173080}\r\n{\"level\":\"warning\",\"msg\":\"Multiple vector spaces are present, GraphQL Explore and REST API list objects endpoint module include params has been disabled as a result.\",\"time\":\"2023-09-08T00:14:46+02:00\"}\r\n{\"action\":\"grpc_startup\",\"level\":\"info\",\"msg\":\"grpc server listening at [::]:50051\",\"time\":\"2023-09-08T00:14:46+02:00\"}\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Serving weaviate at http://127.0.0.1:6666\",\"time\":\"2023-09-08T00:14:46+02:00\"}\r\n✔ Client connected to local Weaviate server\r\nDocument class already exists, do you want to overwrite it? (y/n): y\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":1000,\"index_id\":\"document_4KF2RtSb7AzF\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:14:49+02:00\",\"took\":50649}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":1000,\"index_id\":\"chunk_afMWBLITi7Hg\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:14:49+02:00\",\"took\":36439}\r\n✔ 'Document' and 'Chunk' schemas created\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Shutting down... \",\"time\":\"2023-09-08T00:14:49+02:00\"}\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Stopped serving weaviate at http://127.0.0.1:6666\",\"time\":\"2023-09-08T00:14:49+02:00\"}\r\nℹ Done\r\n\r\n============================ Creating Cache class ============================\r\nℹ Setting up client\r\nℹ VERBA_URL environment variable not set. Using Weaviate Embedded\r\nStarted ./.verba/cache/weaviate-embedded: process ID 205337\r\n{\"action\":\"startup\",\"default_vectorizer_module\":\"none\",\"level\":\"info\",\"msg\":\"the default vectorizer modules is set to \\\"none\\\", as a result all new schema classes without an explicit vectorizer setting, will use this vectorizer\",\"time\":\"2023-09-08T00:14:49+02:00\"}\r\n{\"action\":\"startup\",\"auto_schema_enabled\":true,\"level\":\"info\",\"msg\":\"auto schema enabled setting is set to \\\"true\\\"\",\"time\":\"2023-09-08T00:14:49+02:00\"}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"cache_n3X4UDflnGSR\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:14:49+02:00\",\"took\":53770}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"chunk_afMWBLITi7Hg\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:14:49+02:00\",\"took\":49957}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"document_4KF2RtSb7AzF\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:14:49+02:00\",\"took\":48970}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"suggestion_JvWuPHTJUNPN\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:14:49+02:00\",\"took\":51621}\r\n{\"level\":\"warning\",\"msg\":\"Multiple vector spaces are present, GraphQL Explore and REST API list objects endpoint module include params has been disabled as a result.\",\"time\":\"2023-09-08T00:14:49+02:00\"}\r\n{\"action\":\"grpc_startup\",\"level\":\"info\",\"msg\":\"grpc server listening at [::]:50051\",\"time\":\"2023-09-08T00:14:49+02:00\"}\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Serving weaviate at http://127.0.0.1:6666\",\"time\":\"2023-09-08T00:14:49+02:00\"}\r\n✔ Client connected to local Weaviate server\r\nCache class already exists, do you want to overwrite it? (y/n): y\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":1000,\"index_id\":\"cache_dE7829wgUrT0\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:14:50+02:00\",\"took\":80944}\r\n✔ 'Cache' schema created\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Shutting down... \",\"time\":\"2023-09-08T00:14:50+02:00\"}\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Stopped serving weaviate at http://127.0.0.1:6666\",\"time\":\"2023-09-08T00:14:50+02:00\"}\r\nℹ Done\r\n\r\n========================= Creating Suggestion class =========================\r\nℹ Setting up client\r\nℹ VERBA_URL environment variable not set. Using Weaviate Embedded\r\nStarted ./.verba/cache/weaviate-embedded: process ID 205405\r\n{\"action\":\"startup\",\"default_vectorizer_module\":\"none\",\"level\":\"info\",\"msg\":\"the default vectorizer modules is set to \\\"none\\\", as a result all new schema classes without an explicit vectorizer setting, will use this vectorizer\",\"time\":\"2023-09-08T00:14:50+02:00\"}\r\n{\"action\":\"startup\",\"auto_schema_enabled\":true,\"level\":\"info\",\"msg\":\"auto schema enabled setting is set to \\\"true\\\"\",\"time\":\"2023-09-08T00:14:50+02:00\"}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"cache_dE7829wgUrT0\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:14:50+02:00\",\"took\":41406}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"chunk_afMWBLITi7Hg\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:14:50+02:00\",\"took\":49932}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"document_4KF2RtSb7AzF\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:14:50+02:00\",\"took\":47882}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"suggestion_JvWuPHTJUNPN\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:14:50+02:00\",\"took\":49368}\r\n{\"level\":\"warning\",\"msg\":\"Multiple vector spaces are present, GraphQL Explore and REST API list objects endpoint module include params has been disabled as a result.\",\"time\":\"2023-09-08T00:14:50+02:00\"}\r\n{\"action\":\"grpc_startup\",\"level\":\"info\",\"msg\":\"grpc server listening at [::]:50051\",\"time\":\"2023-09-08T00:14:50+02:00\"}\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Serving weaviate at http://127.0.0.1:6666\",\"time\":\"2023-09-08T00:14:50+02:00\"}\r\n✔ Client connected to local Weaviate server\r\nSuggestion class already exists, do you want to overwrite it? (y/n): y\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":1000,\"index_id\":\"suggestion_nRDqcQr9MEAo\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:14:51+02:00\",\"took\":186550}\r\n✔ 'Suggestion' schema created\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Shutting down... \",\"time\":\"2023-09-08T00:14:51+02:00\"}\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Stopped serving weaviate at http://127.0.0.1:6666\",\"time\":\"2023-09-08T00:14:51+02:00\"}\r\nℹ Done\r\n\r\n============================ Starting data import ============================\r\nℹ Setting up client\r\nℹ VERBA_URL environment variable not set. Using Weaviate Embedded\r\nStarted ./.verba/cache/weaviate-embedded: process ID 205474\r\n{\"action\":\"startup\",\"default_vectorizer_module\":\"none\",\"level\":\"info\",\"msg\":\"the default vectorizer modules is set to \\\"none\\\", as a result all new schema classes without an explicit vectorizer setting, will use this vectorizer\",\"time\":\"2023-09-08T00:14:51+02:00\"}\r\n{\"action\":\"startup\",\"auto_schema_enabled\":true,\"level\":\"info\",\"msg\":\"auto schema enabled setting is set to \\\"true\\\"\",\"time\":\"2023-09-08T00:14:51+02:00\"}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"cache_dE7829wgUrT0\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:14:51+02:00\",\"took\":196427}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"chunk_afMWBLITi7Hg\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:14:51+02:00\",\"took\":272944}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"document_4KF2RtSb7AzF\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:14:51+02:00\",\"took\":226739}\r\n{\"action\":\"hnsw_vector_cache_prefill\",\"count\":3000,\"index_id\":\"suggestion_nRDqcQr9MEAo\",\"level\":\"info\",\"limit\":1000000000000,\"msg\":\"prefilled vector cache\",\"time\":\"2023-09-08T00:14:51+02:00\",\"took\":157232}\r\n{\"level\":\"warning\",\"msg\":\"Multiple vector spaces are present, GraphQL Explore and REST API list objects endpoint module include params has been disabled as a result.\",\"time\":\"2023-09-08T00:14:51+02:00\"}\r\n{\"action\":\"grpc_startup\",\"level\":\"info\",\"msg\":\"grpc server listening at [::]:50051\",\"time\":\"2023-09-08T00:14:51+02:00\"}\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Serving weaviate at http://127.0.0.1:6666\",\"time\":\"2023-09-08T00:14:51+02:00\"}\r\n✔ Client connected to local Weaviate server\r\nℹ All schemas available\r\nℹ Reading\r\n/home/snow/Documents/Projects/weaviate-verba/resources/data.txt\r\n✔ Loaded 1 files\r\nℹ Converted\r\n/home/snow/Documents/Projects/weaviate-verba/resources/data.txt\r\n✔ All 1 files successfully loaded\r\nℹ Starting splitting process\r\n✔ Successful splitting (total 0)\r\nℹ (1/1) Importing document\r\n/home/snow/Documents/Projects/weaviate-verba/resources/data.txt\r\n✔ Imported all docs\r\n✔ Imported all chunks\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Shutting down... \",\"time\":\"2023-09-08T00:14:52+02:00\"}\r\n{\"action\":\"restapi_management\",\"level\":\"info\",\"msg\":\"Stopped serving weaviate at http://127.0.0.1:6666\",\"time\":\"2023-09-08T00:14:52+02:00\"}\r\n\r\n```",
      "state": "closed",
      "author": "bkocis",
      "author_type": "User",
      "created_at": "2023-09-07T22:19:49Z",
      "updated_at": "2023-11-13T09:25:19Z",
      "closed_at": "2023-11-13T09:25:19Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/9/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/9",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/9",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:34:03.269162",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks a lot! We'll look into this",
          "created_at": "2023-09-08T00:21:11Z"
        },
        {
          "author": "thomashacker",
          "body": "This issue should be fixed with the new 0.3.0 version 🚀  Thanks a lot!",
          "created_at": "2023-11-13T09:25:19Z"
        }
      ]
    },
    {
      "issue_number": 6,
      "title": "When Querying from front end : Quickstart: Build from Source",
      "body": "✘ Query failed\r\nQuery was not successful! Unexpected status code: 422, with response body: {'error': [{'message': 'no graphql provider present, this is most likely because no schema is present. Import a schema first!'}]}.",
      "state": "closed",
      "author": "MHossain-dviz",
      "author_type": "User",
      "created_at": "2023-09-07T10:33:20Z",
      "updated_at": "2023-11-13T09:25:01Z",
      "closed_at": "2023-11-13T09:25:00Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/6/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/6",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/6",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:34:03.472526",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Thanks for the issue! This happened because no data was loaded into the Weaviate cluster. To fix this, you can import test data with the `verba import --path \"./data\"` command.\r\n\r\nThis needs better error handling, we'll look into this!",
          "created_at": "2023-09-07T17:20:18Z"
        },
        {
          "author": "thomashacker",
          "body": "This issue was fixed with the new 0.3.0 version 🚀  Thanks a lot!",
          "created_at": "2023-11-13T09:25:01Z"
        }
      ]
    },
    {
      "issue_number": 5,
      "title": "Either lock input while previous is processing or disable enter/submit",
      "body": "Hi to whoever is reading this! 🤗 BTW great work with `verba`, I've been playing around with it and I find it really useful\r\n\r\n## Issue\r\n\r\nI've realised that you can actually send more than one input sequentially while the first one sent is still processing, so I think that you could either lock the input bar so that the users cannot write anything while the previous request is being processed in that session, or just disable the enter/submit so that when trying to send another message a toast message appears saying that you cannot submit sequential inputs, similarly to what any other chatbot out there may be.\r\n\r\nThanks in advance!",
      "state": "closed",
      "author": "alvarobartt",
      "author_type": "User",
      "created_at": "2023-09-07T07:15:47Z",
      "updated_at": "2023-11-13T09:24:43Z",
      "closed_at": "2023-11-13T09:24:42Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/5/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 1,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/5",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/5",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:34:03.687376",
      "comments": [
        {
          "author": "thomashacker",
          "body": "That's a great idea and makes total sense! Thanks a lot\r\nWe'll put it on our list ✨  \r\n",
          "created_at": "2023-09-07T14:08:27Z"
        },
        {
          "author": "thomashacker",
          "body": "This issue was fixed with the new 0.3.0 version 🚀  Thanks a lot!",
          "created_at": "2023-11-13T09:24:42Z"
        }
      ]
    },
    {
      "issue_number": 4,
      "title": "context length exceeded",
      "body": "Hi,\r\nI tried to use my data (text file with 5k lines), but every time I ask for something I get an error:\r\n`Something went wrong! This model's maximum context length is 4097 tokens. However, your messages resulted in 5747 tokens. Please reduce the length of the messages.|`\r\n![image](https://github.com/weaviate/Verba/assets/16681052/a9f1fdbb-463e-4015-9aee-f596d058fd44)\r\n",
      "state": "closed",
      "author": "gknor",
      "author_type": "User",
      "created_at": "2023-09-07T07:11:04Z",
      "updated_at": "2023-11-13T09:24:26Z",
      "closed_at": "2023-11-13T09:24:25Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/4/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/4",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/4",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:34:03.915795",
      "comments": [
        {
          "author": "gknor",
          "body": "It works with 16k model: `verba start --model \"gpt-3.5-turbo-16k\"`, but in my opinion the exception of too long context should be handled.\r\n",
          "created_at": "2023-09-07T07:26:27Z"
        },
        {
          "author": "thomashacker",
          "body": "Yes, I agree! Nice catch\r\nWe'll look into it",
          "created_at": "2023-09-07T14:10:01Z"
        },
        {
          "author": "thomashacker",
          "body": "This issue was fixed with the new 0.3.0 version 🚀  Thanks a lot!",
          "created_at": "2023-11-13T09:24:25Z"
        }
      ]
    },
    {
      "issue_number": 31,
      "title": "Something went wrong! module 'openai' has no attribute 'ChatCompletion'",
      "body": "Hi! After following the Install guide, I imported personal documents and started the Verba app but received the following error message:  \r\n```\r\nSomething went wrong! module 'openai' has no attribute 'ChatCompletion'\r\n```",
      "state": "closed",
      "author": "mhaegeman",
      "author_type": "User",
      "created_at": "2023-11-07T16:21:25Z",
      "updated_at": "2023-11-10T07:25:11Z",
      "closed_at": "2023-11-08T11:42:26Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/weaviate/Verba/issues/31/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/weaviate/Verba/issues/31",
      "api_url": "https://api.github.com/repos/weaviate/Verba/issues/31",
      "repository": "weaviate/Verba",
      "extraction_date": "2025-06-22T00:34:04.172633",
      "comments": [
        {
          "author": "thomashacker",
          "body": "Hey, thanks for the issue! OpenAI changed their API which broke some of the Verba code, we'll make sure to lock the required openai version for now and migrate later. For now, you can try out the `dev` branch, which should have the correct openai version already locked in. The `dev` branch will be m",
          "created_at": "2023-11-08T11:42:26Z"
        },
        {
          "author": "mhaegeman",
          "body": "Awesome thanks for the info! ",
          "created_at": "2023-11-10T07:25:10Z"
        }
      ]
    }
  ]
}