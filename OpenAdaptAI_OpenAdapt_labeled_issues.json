{
  "repository": "OpenAdaptAI/OpenAdapt",
  "repository_info": {
    "repo": "OpenAdaptAI/OpenAdapt",
    "stars": 1302,
    "language": "Python",
    "description": "Open Source Generative Process Automation (i.e. Generative RPA). AI-First Process Automation with Large ([Language (LLMs) / Action (LAMs) / Multimodal (LMMs)] / Visual Language (VLMs)) Models",
    "url": "https://github.com/OpenAdaptAI/OpenAdapt",
    "topics": [
      "agents",
      "ai-agents",
      "ai-agents-framework",
      "anthropic",
      "computer-use",
      "generative-process-automation",
      "google-gemini",
      "gpt4o",
      "huggingface",
      "large-action-model",
      "large-language-models",
      "large-multimodal-models",
      "omniparser",
      "openai",
      "process-automation",
      "process-mining",
      "python",
      "segment-anything",
      "transformers",
      "ultralytics"
    ],
    "created_at": "2023-04-12T16:20:23Z",
    "updated_at": "2025-06-21T07:28:14Z",
    "search_query": "openai anthropic language:python stars:>2",
    "total_issues_estimate": 82,
    "labeled_issues_estimate": 82,
    "labeling_rate": 100.0,
    "sample_labeled": 18,
    "sample_total": 18,
    "has_issues": true,
    "repo_id": 627024850,
    "default_branch": "main",
    "size": 30323
  },
  "extraction_date": "2025-06-22T09:50:46.787430",
  "extraction_type": "LABELED_ISSUES_ONLY",
  "total_labeled_issues": 423,
  "issues": [
    {
      "issue_number": 701,
      "title": "Base use case: time tracking",
      "body": "### Role\r\nWhite collar contractor (e.g. software developer)\r\n\r\n### Task\r\nHow can we enable contractors to track their time in their existing spreadsheet software which they use to track their time, and then copy the data to the web app from which they get paid?\r\n\r\nThis involves:\r\n\r\n- Microsoft Excel or Google Sheets\r\n- Any time tracking software (e.g. Harvest)\r\n\r\n### Context \r\nTime tracking and invoicing\r\n\r\n### Workflow\r\n1. open Spreadsheet (e.g. Excel, Google Sheets)\r\n2. open App (e.g. Harvest)\r\n3. switch to Spreadsheet\r\n4. copy first cell\r\n5. switch to App\r\n6. paste first cell\r\n7. repeat steps 4-6 while necessary\r\n8. scroll and repeat 4-7 if necessary\r\n\r\nIdeally, there is some sort of data transformation beyond action-for-action replay that needs to happen, e.g. clicking a checkbox in the App rather than typing.\r\n\r\n### Motivation\r\n\r\nSimplest economically useful task",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-03T23:19:54Z",
      "updated_at": "2025-06-15T11:33:37Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "good first issue",
        "help wanted",
        "usecase"
      ],
      "label_count": 4,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/701/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 1,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/701",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/701",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:02.063311",
      "comments": [
        {
          "author": "smilingprogrammer",
          "body": "Hi, I am new to this repository.\nI am interested in this issue as it seems to be a good isssue for a starter.\nIf it is still up for contribution, kindly assign the task to me.\nThank you.",
          "created_at": "2025-06-15T11:33:36Z"
        }
      ]
    },
    {
      "issue_number": 924,
      "title": "[Bug]: bad git executable",
      "body": "### Describe the bug\n\n![image](https://github.com/user-attachments/assets/627a4b30-23b8-47dc-a066-e6b69456b99b)\r\n\n\n### To Reproduce\n\n1. Install via installer\r\n2. Open application",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-11-30T01:23:50Z",
      "updated_at": "2025-05-31T07:12:08Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/924/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/924",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/924",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:02.275503",
      "comments": [
        {
          "author": "LittleDragonIsDead",
          "body": "I HAVE THAT TOO!!\n\nHow do I fix it?\n\n",
          "created_at": "2025-05-31T07:12:07Z"
        }
      ]
    },
    {
      "issue_number": 760,
      "title": "Implement model cursor for visual feedback",
      "body": "### Feature request\r\n\r\nUpdate: see https://github.com/OpenAdaptAI/OpenAdapt/issues/760#issuecomment-2347337901 for the latest requirements.\r\n\r\nWe want to be able to give the model the ability to:\r\n1.  paint a red dot on its suggested target location\r\n2. look at the screenshot with the dot on it,\r\n3. optionally self correct.\r\n\r\nThank you @LunjunZhang for the suggestion 🙏 \r\n\r\nThis involves creating a CursorReplayStrategy (based on the [VanillaReplayStrategy](https://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/strategies/vanilla.py)) that implements the required prompting.\r\n\r\n### Motivation\r\n\r\nCorrect errors, e.g. missed segmentations.\r\n\r\nPossibly related: https://arxiv.org/abs/2406.09403:\r\n\r\n> Humans draw to facilitate reasoning: we draw auxiliary lines when solving geometry problems; we mark and circle when reasoning on maps; we use sketches to amplify our ideas and relieve our limited-capacity working memory. However, such actions are missing in current multimodal language models (LMs). Current chain-of-thought and tool-use paradigms only use text as intermediate reasoning steps. In this work, we introduce Sketchpad, a framework that gives multimodal LMs a visual sketchpad and tools to draw on the sketchpad. The LM conducts planning and reasoning according to the visual artifacts it has drawn.\r\n...\r\n> Sketchpad substantially improves performance on all tasks over strong base models with no sketching, yielding an average gain of 12.7% on math tasks, and 8.6% on vision tasks. GPT-4o with Sketchpad sets a new state of the art on all tasks, including V*Bench (80.3%), BLINK spatial reasoning (83.9%), and visual correspondence (80.8%). All codes and data are in [this https URL](https://visualsketchpad.github.io/).",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-16T12:58:58Z",
      "updated_at": "2025-05-29T10:27:24Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "good first issue",
        "help wanted",
        "$ bounty $",
        "💎 Bounty"
      ],
      "label_count": 5,
      "has_labels": true,
      "comments_count": 20,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/760/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/760",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/760",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:02.435090",
      "comments": [
        {
          "author": "abrichr",
          "body": "/bounty $1000",
          "created_at": "2024-06-17T00:31:01Z"
        },
        {
          "author": "algora-pbc[bot]",
          "body": "## 💎 $1,000 bounty [• OpenAdaptAI](https://algora.io/OpenAdaptAI)\n### Steps to solve:\n1. **Start working**: Comment `/attempt #760` with your implementation plan\n2. **Submit work**: Create a pull request including `/claim #760` in the PR body to claim the bounty\n3. **Receive payment**: 100% of the b",
          "created_at": "2024-06-17T00:31:05Z"
        },
        {
          "author": "Subh231004",
          "body": "/attempt #760\n\n<div id=\"algora-attempt\" />\n\n<details>\n  <summary>Options</summary>\n  <ul>\n    <li>\n      <a href=\"https://console.algora.io/api/bounties/clxi8p5670002lb0a7foyxxp7/cancel-attempt\">\n        Cancel my attempt\n      </a>\n    </li>\n  </ul>\n</details>",
          "created_at": "2024-06-17T06:29:40Z"
        },
        {
          "author": "Anshgrover23",
          "body": " /attempt #760 \r\n\r\nImplementation Plan for Model Cursor Feedback (Issue #760)\r\nCreate CursorReplayStrategy: I'll develop a new CursorReplayStrategy class extending VanillaReplayStrategy.\r\nPaint Red Dot: I'll implement a method to paint a red dot on the target location within a given image.\r\nScreensh",
          "created_at": "2024-06-17T06:31:44Z"
        },
        {
          "author": "abrichr",
          "body": "@Subh231004 please keep the discussion related to your pull request on your pull request and not here. I have replied to your comment there.",
          "created_at": "2024-06-20T13:52:20Z"
        }
      ]
    },
    {
      "issue_number": 951,
      "title": "Natural Language Interface to Trigger Relevant Recordings",
      "body": "### Feature request\n\nEnable users to launch OpenAdapt workflows using natural language commands like “do my taxes,” replacing the current manual replay model. This aligns with modern AI UX expectations and leverages existing recordings more effectively.\n\n### Problem\n\nRequiring users to manually select and replay a `Recording` is unintuitive and limits accessibility. A natural language interface would allow users to describe tasks in plain English and let the system infer the most relevant automation.\n\n### Goal\n\nLet users initiate task automation by typing a natural language description. The system finds relevant past demonstrations and uses them to guide replay or plan next steps adaptively.\n\n### Components\n\n**1. UI Input**\n\n* Launch from system tray icon or similar.\n* Prompt: “What do you want help with today?”\n* Accepts a free-form natural language input.\n\n**2. Embedding Generation**\n\n* Generate an embedding from user input using a model like `sentence-transformers/all-MiniLM-L6-v2`.\n\n**3. Embedding Search**\n\n* Use `sqlite-vss` to find nearest matches among stored `Recording.description` embeddings.\n* Store embeddings in SQLite (`RecordingEmbedding` table or similar).\n* Leverage `Recording.description` as initial source of semantic content.\n\n**4. Reranking & Demonstration Injection (instead of hard selection)**\n\n* Instead of selecting a single best match or displaying a list:\n\n  * Retrieve top-N semantically similar recordings.\n  * Use reranking (e.g. with a cross-encoder) to sort them.\n  * Inject the top few (or most relevant subsections) as demonstrations into the model prompt.\n* At each step, the model sees:\n\n  * Current GUI state (screenshot + accessible DOM or bounding box data).\n  * Prior user query.\n  * Retrieved demonstrations (replay logs or summaries).\n* The model then decides what to do next.\n\n**5. Hierarchical / Recursive Summarization**\n\n* For each recording, generate multi-resolution summaries:\n\n  * High level: “file taxes”\n  * Mid-level: “log in to TurboTax”\n  * Low level: “click 'T4 Income' tab”\n* Use these summaries to:\n\n  * Improve retrieval accuracy.\n  * Enable context-aware planning and prompt construction.\n  * Eventually support segmentation and partial replays.\n\n### UX Considerations\n\n* Lightweight, interruptible input box.\n* System should confirm before executing anything destructive.\n* If confidence is low, suggest clarifications or fallback paths.\n\n### Alternatives Considered\n\n* Keyword search: brittle and non-semantic.\n* Command line or dropdown replay: slower and less intuitive.\n* Static top-k display: less adaptive than demonstration-based inference.\n\n### Acceptance Criteria\n\n* User can enter a natural language query from a tray icon.\n* System retrieves and embeds the query, finds similar past demos.\n* The model uses these demos to determine how to proceed.\n* Summaries and embeddings are auto-generated for future replays.\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2025-05-23T20:13:15Z",
      "updated_at": "2025-05-23T20:21:58Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/951/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "Animesh404"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/951",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/951",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:02.682089",
      "comments": []
    },
    {
      "issue_number": 948,
      "title": "[Bug]: replay() leaks its own kwargs into strategy causing TypeError",
      "body": "### Describe the bug\n\n<p><code inline=\"\">openadapt.replay.replay()</code> forwards <strong>every</strong> keyword argument it receives to the chosen strategy’s constructor.<br>\nKwargs that belong <strong>only</strong> to <code inline=\"\">replay()</code> itself—e.g. <code inline=\"\">recording_id</code>, <code inline=\"\">timestamp</code>, <code inline=\"\">capture</code>, <code inline=\"\">status_pipe</code>—end up in the strategy <code inline=\"\">__init__</code>, which usually does <strong>not</strong> accept them, raising:</p>\n<pre><code>TypeError: VisualReplayStrategy.__init__() got an unexpected keyword argument 'recording_id'\n</code></pre>\n<hr>\n<h3>Expected behaviour</h3>\n<p><code inline=\"\">replay()</code> should strip its own kwargs and pass <strong>only</strong> the ones intended for the strategy constructor.</p>\n<hr>\n<h3>Actual behaviour</h3>\n<p>Internal kwargs are forwarded wholesale, triggering the <code inline=\"\">TypeError</code> above whenever the strategy doesn’t accept them.</p>\n<hr>\n<h3>Root cause (code)</h3>\n<p><code inline=\"\">openadapt/replay.py</code>, inside <code inline=\"\">replay()</code> :</p>\n<pre><code class=\"language-python\">strategy = strategy_class(recording, **kwargs)  # kwargs still includes recording_id, etc.\n</code></pre>\n<hr>\n<h3>Proposed fix</h3>\n<p>A deny‑list works, but an allow‑list derived from the strategy signature is maintenance‑free:</p>\n<pre><code class=\"language-python\">import inspect\n\ninit_params = set(inspect.signature(strategy_class.__init__).parameters) - {\"self\"}\nstrategy_kwargs = {k: v for k, v in kwargs.items() if k in init_params}\nstrategy = strategy_class(recording, **strategy_kwargs)\nlogger.debug(\"Passing to %s: %s\", strategy_class.__name__, strategy_kwargs)\n</code></pre>\n<hr>\n<h3>Environment</h3>\n\nItem | Value (replace)\n-- | --\nOpenAdapt | main @ 1899393e5a349e3358953a83908f581bf49f5d6f\nPython | 3.11.9\nOS | macOS 15.3.2\n\n\n<hr>\n<h3>Workaround</h3>\n<p>Subclass the strategy so it absorbs unexpected kwargs:</p>\n<pre><code class=\"language-python\">from openadapt.strategies import VisualReplayStrategy\n\nclass PatchedVisualReplayStrategy(VisualReplayStrategy):\n    def __init__(self, recording, instructions, **_):\n        super().__init__(recording, instructions)\n</code></pre>\n<p>Pass <code inline=\"\">\"PatchedVisualReplayStrategy\"</code> to <code inline=\"\">replay()</code> until the fix lands.</p>\n<hr>\n<p><em>Thanks for maintaining OpenAdapt—happy to open a PR with the patch!</em></p></body></html>\n\n### To Reproduce\n\nMinimal repro\n```\nfrom openadapt.replay import replay\n\nreplay(\n    \"VisualReplayStrategy\",          # strategy (positional OK)\n    recording_id=1,                   # belongs to replay(), not the strategy\n    instructions=\"Do the task\"        # legitimate strategy kwarg\n)\n```\nAny strategy whose constructor lacks recording_id (or **kwargs) will fail identically.",
      "state": "open",
      "author": "ai-yann",
      "author_type": "User",
      "created_at": "2025-04-17T02:20:27Z",
      "updated_at": "2025-05-23T20:12:28Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/948/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/948",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/948",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:02.682112",
      "comments": [
        {
          "author": "abrichr",
          "body": "Thank you @ai-yann ! A PR would be most appreciated 🙏 ",
          "created_at": "2025-05-23T20:12:27Z"
        }
      ]
    },
    {
      "issue_number": 764,
      "title": "Update Gitbook Getting Started guide with Screenshots",
      "body": "### Feature request\r\n\r\nWe would like to update https://openadapt.gitbook.io/openadapt.ai/getting-started/readme/quick-start with screenshots of the new dashboard + system tray GUI functionality.\r\n\r\nThis is currently a quick-start for developers. We need a new quick-start for users\r\n\r\nNewer functionality is documented at https://github.com/OpenAdaptAI/OpenAdapt#usage, but not for users\r\n\r\nThis involves:\r\n- going through the download + install + record + replay process, documenting the steps as you go (taking screenshots)\r\n- transferring your documentation to Gitbook via a Pull Request into https://github.com/OpenAdaptAI/OpenAdapt/tree/docs containing text and images (screenshots)\r\n- moving the current \"quickstart\" section into a legacy page.\r\n\r\nThe goal of this exercise is to have documentation for *users*, i.e. people with no command line experience.\r\n\r\nI would expect to see the following rough breakdown:\r\n\r\nA: Download and install\r\n1. Download OpenAdapt\r\n2. Install OpenAdapt (for now this is just extracting the zip)\r\n3. Run OpenAdapt\r\n5. Complete the onboarding (this is almost merged, https://github.com/OpenAdaptAI/OpenAdapt/pull/746)\r\n\r\nB: Create a recording\r\n1. Right-click the tray icon -> Click \"Record\" -> Type a task description -> Click \"OK\"\r\n2. Open some apps, type some letters, move/click/scroll the mouse\r\n3. Stop the recording by pressing \"Ctrl\" three times\r\n4. Wait for it to stop\r\n\r\nC: View the recording\r\n1. Right-click the tray icon -> click \"Launch Dashboard\" (if it isn't already running)\r\n2. Click \"Recordings\"\r\n3. Click on the recording you just created\r\n4. Scroll down through the events, removing any accidental/unnecessary actions by clicking \"Delete\"\r\n\r\nD: Scrub the recording (optional)\r\n1. See \"Scrubbing\" in dashboard\r\n\r\nE: Replay the recording\r\n1. Right-click the tray icon -> click \"Replay\" -> Select the recording\r\n2. Select a replay strategy (leaving the default VisualReplayStrategy is recommended)\r\n3. Type some text instructions\r\n4. Click \"OK\"\r\n\r\nF: Upload your recording and replay\r\n1. Coming soon! (https://github.com/OpenAdaptAI/OpenAdapt/issues/767)",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-17T00:05:59Z",
      "updated_at": "2025-04-13T05:38:23Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "💎 Bounty"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 12,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/764/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/764",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/764",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:02.874912",
      "comments": [
        {
          "author": "abrichr",
          "body": "/bounty $100",
          "created_at": "2024-06-17T00:06:27Z"
        },
        {
          "author": "algora-pbc[bot]",
          "body": "## 💎 $100 bounty [• OpenAdaptAI](https://algora.io/OpenAdaptAI)\n### Steps to solve:\n1. **Start working**: Comment `/attempt #764` with your implementation plan\n2. **Submit work**: Create a pull request including `/claim #764` in the PR body to claim the bounty\n3. **Receive payment**: 100% of the bou",
          "created_at": "2024-06-17T00:06:31Z"
        },
        {
          "author": "onyedikachi-david",
          "body": "/attempt #764\n\n<div id=\"algora-attempt\" />\n\n| [Algora profile](https://console.algora.io/@/onyedikachi-david) | Completed bounties | Tech | Active attempts | Options |\n| --- | --- | --- | --- | --- |\n| @onyedikachi-david | 2 bounties from 1 project | <div align=\"center\">JavaScript, Shell</div> | <di",
          "created_at": "2024-06-17T07:40:35Z"
        },
        {
          "author": "shashank40",
          "body": "/attempt #764\r\n\n\n<div id=\"algora-attempt\" />\n\n| [Algora profile](https://console.algora.io/@/shashank40) | Completed bounties | Tech | Active attempts | Options |\n| --- | --- | --- | --- | --- |\n| @shashank40 | 2 bounties from 2 projects | <div align=\"center\">Python, TypeScript, <br />JavaScript</di",
          "created_at": "2024-06-17T12:14:52Z"
        },
        {
          "author": "shashank40",
          "body": "@abrichr Just a quick question, when you say screenshots, would you prefer the ones on GitHub developer documentation? Or should we add new screenshots?",
          "created_at": "2024-06-17T12:21:26Z"
        }
      ]
    },
    {
      "issue_number": 873,
      "title": "Extract application data with COM/AppleScript",
      "body": "### Feature request\r\n\r\nAccessibility data does not always contain all the relevant data from an application (e.g. the cell data in Microsoft Excel on Windows). Instead, we can use COM on Windows and AppleScript on Mac to query for additional information.\r\n\r\ne.g. from https://chatgpt.com/share/66e9bf76-9afc-8002-813d-ffcef27d5112:\r\n\r\n```\r\nimport win32com.client\r\nimport pythoncom\r\nimport psutil\r\nfrom pywinauto import Application\r\nfrom openadapt.custom_logger import logger\r\n\r\n\r\ndef get_active_application_data() -> dict:\r\n    \"\"\"Get data from the currently active application using COM, if available.\r\n\r\n    Returns:\r\n        dict: A dictionary containing data extracted from the active application.\r\n    \"\"\"\r\n    try:\r\n        # Detect the active window and its process name\r\n        active_window = Application(backend=\"uia\").connect(active_only=True).top_window()\r\n        process_id = active_window.process_id()\r\n        process_name = get_process_name_by_pid(process_id)\r\n\r\n        # Attempt to dynamically attach to the application and extract data\r\n        return attempt_dynamic_com_attachment(process_name)\r\n    except Exception as e:\r\n        logger.warning(f\"Failed to attach to active application: {e}\")\r\n        return {}\r\n\r\n\r\ndef get_process_name_by_pid(pid: int) -> str:\r\n    \"\"\"Get the process name from the process ID.\r\n\r\n    Args:\r\n        pid (int): Process ID.\r\n\r\n    Returns:\r\n        str: Process name.\r\n    \"\"\"\r\n    try:\r\n        process = psutil.Process(pid)\r\n        return process.name()\r\n    except Exception as e:\r\n        logger.warning(f\"Failed to get process name for PID {pid}: {e}\")\r\n        return \"\"\r\n\r\n\r\ndef attempt_dynamic_com_attachment(process_name: str) -> dict:\r\n    \"\"\"Attempt to dynamically attach to the active application using its COM interface.\r\n\r\n    Args:\r\n        process_name (str): The name of the process to attach to.\r\n\r\n    Returns:\r\n        dict: Extracted data from the application if the COM interface is accessible.\r\n    \"\"\"\r\n    try:\r\n        # Dynamically attempt to create a COM object using the process name\r\n        # Convert process name to potential COM class name (e.g., \"EXCEL.EXE\" to \"Excel.Application\")\r\n        possible_com_classes = generate_possible_com_classes(process_name)\r\n\r\n        for com_class in possible_com_classes:\r\n            try:\r\n                # Attempt to create a COM object for each possible class name\r\n                app = win32com.client.Dispatch(com_class)\r\n                if app:\r\n                    logger.info(f\"Successfully attached to {com_class}.\")\r\n                    # Extract all available data from the attached COM object\r\n                    return extract_all_com_data(app)\r\n            except (pythoncom.com_error, Exception) as e:\r\n                logger.info(f\"Failed to attach to COM interface {com_class}: {e}\")\r\n\r\n    except Exception as e:\r\n        logger.warning(f\"No COM interface available for process: {process_name}. Error: {e}\")\r\n\r\n    return {}\r\n\r\n\r\ndef generate_possible_com_classes(process_name: str) -> list:\r\n    \"\"\"Generate possible COM class names from the process name.\r\n\r\n    Args:\r\n        process_name (str): The name of the process.\r\n\r\n    Returns:\r\n        list: List of possible COM class names.\r\n    \"\"\"\r\n    # Strip the extension and convert to lowercase\r\n    base_name = process_name.replace(\".exe\", \"\").replace(\".EXE\", \"\").strip().capitalize()\r\n    return [\r\n        f\"{base_name}.Application\",       # Common COM naming convention\r\n        f\"{base_name}App.Application\",    # Alternative naming\r\n        base_name                         # Fallback to just the base name\r\n    ]\r\n\r\n\r\ndef extract_all_com_data(com_object) -> dict:\r\n    \"\"\"Dynamically extract all accessible properties and methods from a COM object.\r\n\r\n    Args:\r\n        com_object: The COM object representing the application.\r\n\r\n    Returns:\r\n        dict: A dictionary containing all available data extracted from the COM object.\r\n    \"\"\"\r\n    data = {}\r\n    try:\r\n        for prop in dir(com_object):\r\n            try:\r\n                # Skip private or protected properties\r\n                if prop.startswith(\"_\"):\r\n                    continue\r\n\r\n                # Attempt to access the property or method\r\n                value = getattr(com_object, prop)\r\n\r\n                # If it's a callable method, call it\r\n                if callable(value):\r\n                    try:\r\n                        data[prop] = value()\r\n                    except Exception:\r\n                        data[prop] = str(value)  # Fallback to the string representation\r\n                else:\r\n                    data[prop] = value\r\n            except (pythoncom.com_error, Exception) as e:\r\n                logger.warning(f\"Failed to retrieve property or method '{prop}': {e}\")\r\n\r\n    except Exception as e:\r\n        logger.warning(f\"Failed to extract COM data: {e}\")\r\n\r\n    return data\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    active_app_data = get_active_application_data()\r\n    if active_app_data:\r\n        print(active_app_data)\r\n    else:\r\n        print(\"No data extracted from the active application.\")\r\n```\r\n\r\nAppleScript:\r\n```\r\ntell application \"Microsoft Excel\"\r\n\tset activeSheet to active sheet of active workbook\r\n\tset dataRange to used range of activeSheet\r\n\tset dataList to {}\r\n\t\r\n\tset rowCount to count rows of dataRange\r\n\tset colCount to count columns of dataRange\r\n\t\r\n\trepeat with r from 1 to rowCount\r\n\t\trepeat with c from 1 to colCount\r\n\t\t\tset theCell to cell (r) of column (c) of dataRange\r\n\t\t\tset cellValue to value of theCell\r\n\t\t\tif cellValue is missing value then set cellValue to \"Empty\"\r\n\t\t\t\r\n\t\t\t-- Use address of the cell to determine location\r\n\t\t\tset cellAddress to get address of theCell\r\n\t\t\t\r\n\t\t\t-- Optionally split address to extract row and column numbers\r\n\t\t\tset cellData to {cellValue, cellAddress}\r\n\t\t\tcopy cellData to the end of dataList\r\n\t\tend repeat\r\n\tend repeat\r\n\t\r\n\treturn dataList\r\nend tell\r\n\r\n```\r\n\r\n### Motivation\r\n\r\nRetrieving all relevant context for model.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-09-17T17:42:56Z",
      "updated_at": "2025-03-03T19:41:20Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/873/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "abrichr"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/873",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/873",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:03.140323",
      "comments": [
        {
          "author": "abrichr",
          "body": "See also: https://github.com/Alkali-Sim/SmartestKid",
          "created_at": "2025-03-03T19:41:18Z"
        }
      ]
    },
    {
      "issue_number": 941,
      "title": "[Bug]: failed to save settings",
      "body": "### Describe the bug\n\nDiscord user nateaune reports:\n\n> i just installed the Chrome extension and have the desktop Mac client running\n> when i try to save settings on this screen, i get an error:\n\n![Image](https://github.com/user-attachments/assets/2c10959f-29fe-48f8-83f7-67dd686ad48d)\n\n> by process of elimination, i discovered that the error is triggered, when i click the checkbox \"Record active element state\" and then click Save Settings. similarly, if i click the \"Record images\" checkbox, and click Save Settings, that also triggers the error.\n\n\n### To Reproduce\n\nsee above",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2025-02-12T13:44:46Z",
      "updated_at": "2025-02-12T13:44:46Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/941/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/941",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/941",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:03.316617",
      "comments": []
    },
    {
      "issue_number": 766,
      "title": "Support multiple monitors",
      "body": "### Feature request\r\n\r\nWe would like to support multiple monitors.\r\n\r\nUser @Alphadev on Discord reports no screenshots in `python -m openadapt.visualize` on https://github.com/OpenAdaptAI/OpenAdapt/pull/763:\r\n\r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/d06f64fb-4171-4b99-ac7f-ed2b216d2437)\r\n\r\nThis involves identifying where support needs to be added. e.g.:\r\n- https://github.com/OpenAdaptAI/OpenAdapt/blob/835bb171bc89bccf67397515ff5eb0b257c528bd/openadapt/utils.py#L421\r\n\r\n### Motivation\r\n\r\nhttps://github.com/OpenAdaptAI/OpenAdapt/issues/583\r\n\r\nWe would like to support configurations as similar as possible to a typical office worker's machine.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-17T15:27:38Z",
      "updated_at": "2025-01-20T04:01:54Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "good first issue",
        "help wanted",
        "💎 Bounty"
      ],
      "label_count": 4,
      "has_labels": true,
      "comments_count": 26,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/766/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/766",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/766",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:03.316640",
      "comments": []
    },
    {
      "issue_number": 775,
      "title": "Add recording smoke test",
      "body": "### Feature request\r\n\r\nWe would like to add an automated test that:\r\n- calls `openadapt.record`\r\n- waits for the `recording.started` signal to be emitted (fails after e.g. 30s if no such signal is emitted)\r\n- stops the recording by emitting the stop sequence on the keyboard (re-use `openadapt.playback`)\r\n- asserts something about the state of the database (e.g. that the recording has been created) and filesystem (the video and performance plots have been created)\r\n\r\n### Motivation\r\n\r\nAvoid regressions like in:\r\n- https://github.com/OpenAdaptAI/OpenAdapt/pull/774\r\n- https://github.com/OpenAdaptAI/OpenAdapt/pull/784",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-18T14:43:37Z",
      "updated_at": "2025-01-20T03:48:43Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "💎 Bounty"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 8,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/775/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/775",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/775",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:03.316649",
      "comments": [
        {
          "author": "abrichr",
          "body": "/bounty $100",
          "created_at": "2024-06-18T14:43:42Z"
        },
        {
          "author": "algora-pbc[bot]",
          "body": "## 💎 $100 bounty [• OpenAdaptAI](https://console.algora.io/org/OpenAdaptAI)\n\n### Steps to solve:\n1. **Start working**: Comment `/attempt #775` with your implementation plan\n2. **Submit work**: Create a pull request including `/claim #775` in the PR body to claim the bounty\n3. **Receive payment**: 10",
          "created_at": "2024-06-18T14:43:47Z"
        },
        {
          "author": "onyedikachi-david",
          "body": "/attempt #775\n\n<div id=\"algora-attempt\" />\n\n| [Algora profile](https://console.algora.io/@/onyedikachi-david) | Completed bounties | Tech | Active attempts | Options |\n| --- | --- | --- | --- | --- |\n| @onyedikachi-david | 2 bounties from 1 project | <div align=\"center\">JavaScript, Shell</div> | <di",
          "created_at": "2024-06-22T08:59:15Z"
        },
        {
          "author": "unworld11",
          "body": "@abrichr can i get assigned?",
          "created_at": "2024-06-24T10:06:35Z"
        },
        {
          "author": "abrichr",
          "body": "@unworld11 feel free to submit an attempt, we will merge whoever submits working code that meets the required standard first.",
          "created_at": "2024-06-24T13:02:43Z"
        }
      ]
    },
    {
      "issue_number": 937,
      "title": "Update documentation to support Poetry 2.0",
      "body": "### Feature request\r\n\r\nAs of Poetry 2.0, `poetry shell` produces:\r\n```\r\nThe command \"shell\" does not exist.\r\n```\r\nRelated: https://github.com/python-poetry/poetry/issues/9962\r\n\r\nWorkaround:\r\n\r\n```\r\npoetry self add poetry-plugin-shell\r\n```\r\n\r\n### Motivation\r\n\r\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2025-01-09T15:37:33Z",
      "updated_at": "2025-01-09T16:10:28Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/937/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/937",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/937",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:03.580578",
      "comments": []
    },
    {
      "issue_number": 935,
      "title": "[Bug]: `ActionEvent.prompt_for_description` is incomplete",
      "body": "### Describe the bug\n\n[`ActionEvent.prompt_for_description`](https://github.com/OpenAdaptAI/OpenAdapt/blob/8a79c83aabe3a084f0a99767236ed859d235f099/openadapt/models.py#L558) does not yet support scrolling, and does not disambiguate between similar elements.\n\n### To Reproduce\n\n1. Create a recording with scrolling\r\n2. Run `experiments/descibe_actions.py",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2025-01-02T06:23:41Z",
      "updated_at": "2025-01-02T06:23:41Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/935/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/935",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/935",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:03.580592",
      "comments": []
    },
    {
      "issue_number": 144,
      "title": "Add Linux support",
      "body": "The following functions, `get_double_click_interval_seconds` and `get_double_click_distance_pixels` in `utils.py` only work for Windows and Mac platforms. The goal is to add Linux support as well.\r\n\r\n```def get_double_click_interval_seconds():\r\n    if hasattr(get_double_click_interval_seconds, \"override_value\"):\r\n        return get_double_click_interval_seconds.override_value\r\n    if sys.platform == \"darwin\":\r\n        from AppKit import NSEvent\r\n        return NSEvent.doubleClickInterval()\r\n    elif sys.platform == \"win32\":\r\n        # https://stackoverflow.com/a/31686041/95989\r\n        from ctypes import windll\r\n        return windll.user32.GetDoubleClickTime() / 1000\r\n    else:\r\n        raise Exception(f\"Unsupported {sys.platform=}\")\r\n\r\n\r\ndef get_double_click_distance_pixels():\r\n    if sys.platform == \"darwin\":\r\n        # From https://developer.apple.com/documentation/appkit/nspressgesturerecognizer/1527495-allowablemovement:\r\n        #     The default value of this property is the same as the\r\n        #     double-click distance.\r\n        # TODO: do this more robustly; see:\r\n        # https://forum.xojo.com/t/get-allowed-unit-distance-between-doubleclicks-on-macos/35014/7\r\n        from AppKit import NSPressGestureRecognizer\r\n        return NSPressGestureRecognizer.new().allowableMovement()\r\n    elif sys.platform == \"win32\":\r\n        import win32api\r\n        import win32con\r\n        x = win32api.GetSystemMetrics(win32con.SM_CXDOUBLECLK)\r\n        y = win32api.GetSystemMetrics(win32con.SM_CYDOUBLECLK)\r\n        if x != y:\r\n            logger.warning(f\"{x=} != {y=}\")\r\n        return max(x, y)\r\n    else:\r\n        raise Exception(f\"Unsupported {sys.platform=}\")```",
      "state": "closed",
      "author": "Mustaballer",
      "author_type": "User",
      "created_at": "2023-05-12T21:30:02Z",
      "updated_at": "2025-01-02T04:18:46Z",
      "closed_at": "2025-01-02T04:18:46Z",
      "labels": [
        "enhancement",
        "good first issue",
        "help wanted",
        "$ bounty $"
      ],
      "label_count": 4,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/144/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/144",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/144",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:03.580598",
      "comments": [
        {
          "author": "abrichr",
          "body": "Looks like this might be window-manager specific; see:\r\n\r\nhttps://stackoverflow.com/questions/50868129/how-to-get-double-click-time-interval-value-programmatically-on-linux\r\n\r\nhttps://bbs.archlinux.org/viewtopic.php?id=240001\r\n\r\nhttps://unix.stackexchange.com/questions/45925/how-to-configure-the-dou",
          "created_at": "2023-05-13T20:00:23Z"
        },
        {
          "author": "abrichr",
          "body": "We are currently using a modified version of pynput at https://github.com/abrichr/pynput that supports distinguishing between organic and injected input. Last time I checked this was not supported on Linux, but strictly speaking it's not absolutely necessary for our purpose.",
          "created_at": "2023-05-15T16:11:27Z"
        },
        {
          "author": "abrichr",
          "body": "@Timothyxxx regarding https://github.com/xlang-ai/OSWorld/issues/30",
          "created_at": "2024-06-14T15:08:13Z"
        },
        {
          "author": "abrichr",
          "body": "Related: https://github.com/OpenAdaptAI/OpenAdapt/issues/631",
          "created_at": "2024-06-14T15:10:01Z"
        },
        {
          "author": "abrichr",
          "body": "Implemented in https://github.com/OpenAdaptAI/OpenAdapt/pull/928",
          "created_at": "2025-01-02T04:18:46Z"
        }
      ]
    },
    {
      "issue_number": 631,
      "title": "please add install instructions for linux on the `https://openadapt.ai/#start` page",
      "body": "### Feature request\n\nplease add install instructions for linux on the `https://openadapt.ai/#start` page\n\n### Motivation\n\nplease add install instructions for linux on the `https://openadapt.ai/#start` page",
      "state": "open",
      "author": "hemangjoshi37a",
      "author_type": "User",
      "created_at": "2024-04-19T09:19:45Z",
      "updated_at": "2024-12-28T21:33:28Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 8,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/631/reactions",
        "total_count": 2,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 2,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/631",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/631",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:03.805237",
      "comments": [
        {
          "author": "abrichr",
          "body": "Hi @hemangjoshi37a , thank you for your interest!\r\n\r\nUnfortunately at this time, OpenAdapt does not currently support linux for two reasons:\r\n\r\n1. This is non-trivial additional effort for minimal gain. According to https://gs.statcounter.com/os-market-share/desktop/worldwide, Linux currently occupi",
          "created_at": "2024-04-23T22:10:12Z"
        },
        {
          "author": "hemangjoshi37a",
          "body": "but you should consider that 96% of the developers use linux who ultimately are going to use openadapt and not your average everyday Karens. LOL also i believe you response is AI generated and not any person is responsible for your response.",
          "created_at": "2024-04-25T14:11:11Z"
        },
        {
          "author": "metatrot",
          "body": "The strength of this project's approach seems to be that it uses SAM and multimodal models to visually parse GUI layouts, instead of relying on OS-specific features like window's accessibility api. Every month I check again to see if I can use it on my OS yet. The feature that I'm really excited abo",
          "created_at": "2024-07-08T22:07:20Z"
        },
        {
          "author": "hemangjoshi37a",
          "body": "@metatrot I have tried building something very similar but at very initial stage : https://github.com/microsoft/graphrag",
          "created_at": "2024-07-12T09:21:06Z"
        },
        {
          "author": "abrichr",
          "body": "@metatrot thank you for the information!\r\n\r\n> I just want a super powerful OCR-like tool that works on whole-screen screenshots to give structured output like text, window, buttons and other input field locations.\r\n\r\nCan you please clarify what this would be useful for?",
          "created_at": "2024-07-12T14:42:15Z"
        }
      ]
    },
    {
      "issue_number": 925,
      "title": "Computer Use Prompt Exporter",
      "body": "### Feature request\n\nWe would like to implement a script that exports a script to a prompt that can be copy and pasted into computer use. e.g.:\r\n\r\n```\r\npython -m openadapt.export_prompt --recording <recording_id> > my_prompt.txt\r\n```\r\n\r\nThis prompt should be of the form:\r\n\r\n```\r\n1. <description of first action>\r\n2. <description of second action>\r\n...\r\n```\r\n\r\nThe action descriptions should be semantically meaningful, e.g. \"click on the \"ok\" button\".\n\n### Motivation\n\nLightweight integration with Anthropic Computer Use",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-12-04T12:51:12Z",
      "updated_at": "2024-12-04T12:51:13Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/925/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/925",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/925",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:04.071830",
      "comments": []
    },
    {
      "issue_number": 741,
      "title": "Summarize actions to sentence + icon",
      "body": "### Feature request\n\nWhen visualizing recordings, we would like to collapse each top level action into a one to two sentence description in a systematized way, ideally with an icon (eg prompt for a segment).\n\n### Motivation\n\nUnderstanding recordings, humans and models.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-12T23:11:17Z",
      "updated_at": "2024-11-17T15:43:05Z",
      "closed_at": null,
      "labels": [
        "good first issue",
        "help wanted",
        "$ bounty $",
        "💎 Bounty"
      ],
      "label_count": 4,
      "has_labels": true,
      "comments_count": 8,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/741/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "Animesh404"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/741",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/741",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:04.071856",
      "comments": [
        {
          "author": "abrichr",
          "body": "/bounty $100",
          "created_at": "2024-06-16T14:58:39Z"
        },
        {
          "author": "algora-pbc[bot]",
          "body": "## 💎 $100 bounty [• OpenAdaptAI](https://console.algora.io/org/OpenAdaptAI)\n\n### Steps to solve:\n1. **Start working**: Comment `/attempt #741` with your implementation plan\n2. **Submit work**: Create a pull request including `/claim #741` in the PR body to claim the bounty\n3. **Receive payment**: 10",
          "created_at": "2024-06-16T14:58:43Z"
        },
        {
          "author": "IvanLauLinTiong",
          "body": "/attempt #741\n\n<div id=\"algora-attempt\" />\n\n<details>\n  <summary>Options</summary>\n  <ul>\n    <li>\n      <a href=\"https://console.algora.io/api/bounties/clxho92uc0006lb09nd1oo3l6/cancel-attempt\">\n        Cancel my attempt\n      </a>\n    </li>\n  </ul>\n</details>",
          "created_at": "2024-06-16T18:46:09Z"
        },
        {
          "author": "shashank40",
          "body": "@abrichr can you please explain the issue a bit more in detail? ",
          "created_at": "2024-06-18T11:18:55Z"
        },
        {
          "author": "abrichr",
          "body": "@shashank40 from the README, here is a screenshot of the dashboard:\r\n\r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/60188491-ea19-410b-9c04-c03fad0d5379)\r\n\r\nHere is a screenshot of Microsoft's recent updates to PowerAutomate:\r\n\r\n<img width=\"868\" alt=\"image\" src=\"https://github.com",
          "created_at": "2024-06-18T13:24:11Z"
        }
      ]
    },
    {
      "issue_number": 919,
      "title": "Implement Phoenix",
      "body": "### Feature request\n\nhttps://phoenix.arize.com/\r\n\r\n\n\n### Motivation\n\n> Trace, evaluate, and iterate on generative AI applications",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-11-12T19:18:34Z",
      "updated_at": "2024-11-12T19:18:34Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/919/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/919",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/919",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:04.316629",
      "comments": []
    },
    {
      "issue_number": 360,
      "title": "[Bug]: processes aren't killed after exiting recording",
      "body": "### Describe the bug\n\nUpon exiting recording:\r\n\r\n```\r\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/resource_tracker.py:224: UserWarning: resource_tracker: There appear to be 32 leaked semaphore objects to clean up at shutdown\r\n```\n\n### To Reproduce\n\n`python -m openadapt.record`\r\n...\r\n`<ctrl>+c`\r\n\r\nTODO: figure out more precise steps to reproduce",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-07T15:02:06Z",
      "updated_at": "2024-11-12T02:41:25Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/360/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/360",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/360",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:04.316650",
      "comments": [
        {
          "author": "ayewo",
          "body": "@abrichr \r\n\r\nWhen you have a moment, please share additional info on how to reproduce.",
          "created_at": "2023-07-28T11:18:27Z"
        },
        {
          "author": "dianzrong",
          "body": "I was unable to fix this bug, however, I did notice a couple things\r\n\r\n- event_q is the only queue that is not empty at the end of the `record` function\r\n- as noted in queue.py's docstrings for qsize and empty, race conditions may cause those functions to be inaccurate so we could use Queue.join() t",
          "created_at": "2023-08-08T23:41:36Z"
        }
      ]
    },
    {
      "issue_number": 917,
      "title": "[Bug]: Pytest getting killed on collection",
      "body": "### Describe the bug\n\nWhen running `pytest tests/openadapt/test_summary.py::test_summary_empty ` \r\n\r\nthe result is:\r\n\r\n```\r\n============================================================================= test session starts ==============================================================================\r\nplatform darwin -- Python 3.10.12, pytest-7.1.3, pluggy-1.5.0\r\nrootdir: /Users/seanmcguire/Documents/OpenAdapt, configfile: pyproject.toml\r\nplugins: hydra-core-1.3.2, anyio-4.6.2.post1\r\ncollecting ... zsh: killed     pytest tests/openadapt/test_summary.py::test_summary_empty\r\n```\r\n\r\nThe following tests are getting killed on collection:\r\n\r\nin `test_summary.py`:\r\n\r\n`test_summary_empty`\r\n`test_summary_sentence`\r\n\r\n\r\nin `test_vision.py`:\r\n\r\n`test_similar_images`\r\n`test_size_similarity`\n\n### To Reproduce\n\nI am running MacOS 15.1 Sequoia with an M3 Pro.\r\n\r\nTo reproduce, run any/all of the following:\r\n\r\n` pytest tests/openadapt/test_summary.py::test_summary_empty`\r\n` pytest tests/openadapt/test_summary.py::test_summary_sentence`\r\n` pytest tests/openadapt/test_vision.py::test_similar_images`\r\n` pytest tests/openadapt/test_vision.py::test_size_similarity`",
      "state": "open",
      "author": "seanmcguire12",
      "author_type": "User",
      "created_at": "2024-11-12T02:03:37Z",
      "updated_at": "2024-11-12T02:26:09Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/917/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/917",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/917",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:04.527051",
      "comments": [
        {
          "author": "abrichr",
          "body": "Related: https://github.com/OpenAdaptAI/OpenAdapt/issues/360",
          "created_at": "2024-11-12T02:26:09Z"
        }
      ]
    },
    {
      "issue_number": 902,
      "title": "[Bug]: Windows SmartScreen warning",
      "body": "### Describe the bug\n\n<img width=\"1438\" alt=\"image\" src=\"https://github.com/user-attachments/assets/4808f165-2b95-42a6-8264-2210b809cda9\">\r\n\n\n### To Reproduce\n\nWindows 10 (UTM):\r\n- Download installer",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-10-28T19:35:44Z",
      "updated_at": "2024-11-08T15:51:30Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/902/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/902",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/902",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:04.747602",
      "comments": [
        {
          "author": "abrichr",
          "body": "Workaround:\r\n1. Right-click on downloaded file\r\n2. Click \"Keep\":\r\n\r\n<img width=\"365\" alt=\"image\" src=\"https://github.com/user-attachments/assets/df047e67-45f7-4349-bd85-2ca4789dec99\">\r\n\r\n3. Click \"Show More\": \r\n<img width=\"361\" alt=\"image\" src=\"https://github.com/user-attachments/assets/a750007b-109",
          "created_at": "2024-10-28T19:36:22Z"
        },
        {
          "author": "abrichr",
          "body": "Possibly related, on Windows 11 Pro:\r\n\r\n```\r\nWindows PowerShell\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nInstall the latest PowerShell for new features and improvements! https://aka.ms/PSWindows\r\n\r\nPS C:\\Users\\user> cd oa\r\nPS C:\\Users\\user\\oa> cd .\\OpenAdapt\\\r\nPS C:\\Users\\user\\o",
          "created_at": "2024-11-08T15:51:29Z"
        }
      ]
    },
    {
      "issue_number": 893,
      "title": "Implement with Anthropic Computer Use",
      "body": "### Feature request\n\n (e.g. like https://github.com/nicholasoxford/computer-use-mac-demo or https://github.com/ashbuilds/computer-use) (i.e. based on https://docs.anthropic.com/en/docs/build-with-claude/computer-use)\r\n\r\nWe will be using ell, which requires building from this: https://github.com/OpenAdaptAI/OpenAdapt/pull/888\r\n\r\nIn https://github.com/OpenAdaptAI/OpenAdapt/issues/882 we are implementing a new strategy that just uses their model on the backend to directly predict coordinates. However I think we also want to extend their reference implementation (https://github.com/anthropics/anthropic-quickstarts/tree/main/computer-use-demo/computer_use_demo) to embed actions recorded by OpenAdapt, e.g. with a tool.\r\n\r\nI'm not sure how this should work exactly. I think the first step is to understand with their code enough to suggest an approach.\n\n### Motivation\n\nNew paradigm",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-10-25T16:06:58Z",
      "updated_at": "2024-11-07T16:44:31Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/893/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/893",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/893",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:04.934289",
      "comments": [
        {
          "author": "abrichr",
          "body": "<img width=\"1512\" alt=\"image\" src=\"https://github.com/user-attachments/assets/c3a6f94b-61a6-421f-8795-5f72caf59612\">\r\n\r\n\r\nhttps://huggingface.co/spaces/orby-osu/UGround",
          "created_at": "2024-11-07T16:44:29Z"
        }
      ]
    },
    {
      "issue_number": 755,
      "title": "Implement automatic updates",
      "body": "### Feature request\n\nWe would like the OpenAdapt app to automatically update on launch.\n\n### Motivation\n\nhttps://github.com/OpenAdaptAI/OpenAdapt/issues/754",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-14T14:31:21Z",
      "updated_at": "2024-11-07T08:58:34Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "💎 Bounty"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 7,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/755/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/755",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/755",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:05.125475",
      "comments": [
        {
          "author": "abrichr",
          "body": "/bounty $100",
          "created_at": "2024-06-16T21:42:10Z"
        },
        {
          "author": "algora-pbc[bot]",
          "body": "## 💎 $100 bounty [• OpenAdaptAI](https://console.algora.io/org/OpenAdaptAI)\n\n### Steps to solve:\n1. **Start working**: Comment `/attempt #755` with your implementation plan\n2. **Submit work**: Create a pull request including `/claim #755` in the PR body to claim the bounty\n3. **Receive payment**: 10",
          "created_at": "2024-06-16T21:42:13Z"
        },
        {
          "author": "mobley-trent",
          "body": "/attempt #755\n\n<div id=\"algora-attempt\" />\n\n| [Algora profile](https://console.algora.io/@/mobley-trent) | Completed bounties | Tech | Active attempts | Options |\n| --- | --- | --- | --- | --- |\n| @mobley-trent | 3 bounties from 2 projects | <div align=\"center\">Python, Rust, <br />Jupyter Notebook</",
          "created_at": "2024-06-17T11:03:36Z"
        },
        {
          "author": "Rutik7066",
          "body": "/attempt #755\n\n<div id=\"algora-attempt\" />\n\n| [Algora profile](https://console.algora.io/@/Rutik7066) | Completed bounties | Tech | Active attempts | Options |\n| --- | --- | --- | --- | --- |\n| @Rutik7066 | 9 bounties from 6 projects | <div align=\"center\">Go, Rust, <br />TypeScript & more</div> | <d",
          "created_at": "2024-06-17T11:04:41Z"
        },
        {
          "author": "KIRA009",
          "body": "@mobley-trent Thanks for the PR. I have taken a look. The script you mentioned seems to be for updating the git repo, for people who are developing/contributing. The current issue is regarding the app (that is created when you run `python -m openadapt.build`). I think what this issue needs is a sepa",
          "created_at": "2024-06-18T12:59:33Z"
        }
      ]
    },
    {
      "issue_number": 914,
      "title": "[Bug]: MacOS build error: `hdiutil: create failed - Resource busy`",
      "body": "### Describe the bug\n\nhttps://github.com/OpenAdaptAI/OpenAdapt/actions/runs/11711420975/job/32619895005 \r\n\r\n```\r\n2024-11-06T20:41:06.6360500Z hdiutil: create failed - Resource busy\r\n```\n\n### To Reproduce\n\nMerge a PR",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-11-06T21:02:52Z",
      "updated_at": "2024-11-06T23:18:14Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/914/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/914",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/914",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:05.361744",
      "comments": [
        {
          "author": "abrichr",
          "body": "Spontaneously resolved in https://github.com/OpenAdaptAI/OpenAdapt/actions/runs/11711420975/job/32622164689 by rerunning all workflows via Github UI.\r\n\r\nEdit: a new error occurred in the `Build python-semantic-release/python-semantic-release@v9.6.0` step:\r\n\r\n```\r\nBuild container for action use: '/ho",
          "created_at": "2024-11-06T21:26:43Z"
        }
      ]
    },
    {
      "issue_number": 904,
      "title": "[Bug]: `openadapt.record` fails executing after getting stuck at `Memory writer starting` ",
      "body": "### Describe the bug\n\n```shell\r\n(openadapt-py3.10) PS D:\\dev\\OpenAdapt> python -m openadapt.record \"testing openadapt record\"\r\nC:\\Users\\akjha\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-07hwbdMh-py3.10\\lib\\site-packages\\pywinauto\\__init__.py:80: UserWarning: Revert to STA COM threading mode\r\n  warnings.warn(\"Revert to STA COM threading mode\", UserWarning)\r\n2024-10-29 23:36:08.374 | INFO     | openadapt.utils:wrapper_logging:711 -  -> Enter: record(testing openadapt record, None, None, None, False)\r\n2024-10-29 23:36:08.389 | INFO     | openadapt.db.crud:release_db_lock:966 - Database lock released.\r\n2024-10-29 23:36:08.389 | INFO     | openadapt.db.crud:acquire_db_lock:948 - Database lock acquired.\r\n2024-10-29 23:36:08.389 | INFO     | __main__:record:1315 - task_description='testing openadapt record'\r\n2024-10-29 23:36:08.389 | INFO     | openadapt.utils:wrapper_logging:711 -  -> Enter: create_recording(testing openadapt record)\r\n2024-10-29 23:36:08.420 | INFO     | __main__:create_recording:923 - recording=Recording(id=5, timestamp=1730225168.3896494, monitor_width=2560, monitor_height=1440, double_click_interval_seconds=0.5, double_click_distance_pixels=4, platform='win32', task_description='testing openadapt record')\r\n2024-10-29 23:36:08.420 | INFO     | openadapt.utils:wrapper_logging:723 -  <- Leave: create_recording(Recording(id=5, timestamp=1730225168.3896494, monitor_width=2560, monitor_height=1440, double_click_interval_seconds=0.5, double_click_distance_pixels=4, platform='win32', task_description='testing openadapt record'))\r\n2024-10-29 23:36:08.436 | INFO     | openadapt.utils:wrapper_logging:711 -  -> Enter: read_window_events(<queue.Queue object at 0x000001F29811B9D0>, <multiprocessing.synchronize.Event object at 0x000001F299199780>, Recording(id=5, timestamp=1730225168.3896494, monitor_width=2560, monitor_height=1440, double_click_interval_seconds=0.5, double_click_distance_pixels=4, platform='win32', task_description='testing openadapt record'), <Synchronized wrapper for c_long(0)>)\r\n2024-10-29 23:36:08.436 | INFO     | __main__:read_screen_events:724 - Starting\r\n2024-10-29 23:36:08.436 | INFO     | openadapt.utils:wrapper_logging:711 -  -> Enter: process_events(<queue.Queue object at 0x000001F29811B9D0>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x000001F298146620>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x000001F2991980D0>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x000001F299198520>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x000001F2991989A0>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x000001F299198E20>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x000001F2991992D0>, Recording(id=5, timestamp=1730225168.3896494, monitor_width=2560, monitor_height=1440, double_click_interval_seconds=0.5, double_click_distance_pixels=4, platform='win32', task_description='testing openadapt record'), <multiprocessing.synchronize.Event object at 0x000001F299199780>, <Synchronized wrapper for c_long(1)>, <Synchronized wrapper for c_long(0)>, <Synchronized wrapper for c_long(0)>, <Synchronized wrapper for c_long(0)>, <Synchronized wrapper for c_long(0)>, <Synchronized wrapper for c_long(0)>)\r\n2024-10-29 23:36:08.436 | INFO     | __main__:read_window_events:756 - Starting\r\n2024-10-29 23:36:08.452 | INFO     | __main__:process_events:169 - Starting\r\n2024-10-29 23:36:09.140 | INFO     | __main__:record:1531 - expected_starts=12\r\nC:\\Users\\akjha\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-07hwbdMh-py3.10\\lib\\site-packages\\pywinauto\\__init__.py:80: UserWarning: Revert to STA COM threading mode\r\n  warnings.warn(\"Revert to STA COM threading mode\", UserWarning)\r\nC:\\Users\\akjha\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-07hwbdMh-py3.10\\lib\\site-packages\\pywinauto\\__init__.py:80: UserWarning: Revert to STA COM threading mode\r\n  warnings.warn(\"Revert to STA COM threading mode\", UserWarning)\r\nC:\\Users\\akjha\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-07hwbdMh-py3.10\\lib\\site-packages\\pywinauto\\__init__.py:80: UserWarning: Revert to STA COM threading mode\r\n  warnings.warn(\"Revert to STA COM threading mode\", UserWarning)\r\nC:\\Users\\akjha\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-07hwbdMh-py3.10\\lib\\site-packages\\pywinauto\\__init__.py:80: UserWarning: Revert to STA COM threading mode\r\n  warnings.warn(\"Revert to STA COM threading mode\", UserWarning)\r\nC:\\Users\\akjha\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-07hwbdMh-py3.10\\lib\\site-packages\\pywinauto\\__init__.py:80: UserWarning: Revert to STA COM threading mode\r\n  warnings.warn(\"Revert to STA COM threading mode\", UserWarning)\r\nC:\\Users\\akjha\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-07hwbdMh-py3.10\\lib\\site-packages\\pywinauto\\__init__.py:80: UserWarning: Revert to STA COM threading mode\r\n  warnings.warn(\"Revert to STA COM threading mode\", UserWarning)\r\n2024-10-29 23:36:14.395 | INFO     | openadapt.utils:wrapper_logging:711 -  -> Enter: write_events(action, <function write_action_event at 0x0000022516C74700>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x000002256F7352D0>, <Synchronized wrapper for c_long(0)>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x0000022516C89630>, Recording(id=5, timestamp=1730225168.3896494, monitor_width=2560, monitor_height=1440, double_click_interval_seconds=0.5, double_click_distance_pixels=4, platform='win32', task_description='testing openadapt record'), <multiprocessing.synchronize.Event object at 0x0000022516C88A00>, <Synchronized wrapper for c_long(4)>)\r\n2024-10-29 23:36:14.395 | DEBUG    | openadapt.utils:set_start_time:376 - _start_time=1730225168.3896494 _start_perf_counter=97976.4549689\r\n2024-10-29 23:36:14.409 | INFO     | __mp_main__:write_events:396 - 2024-10-29 23:36:14.409event_type='action' starting |\r\nINFO     | openadapt.utils:wrapper_logging:711 -  -> Enter: write_events(screen, <function write_screen_event at 0x000002CDAD7148B0>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x000002CD861C52D0>, <Synchronized wrapper for c_long(0)>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x000002CDAD72D5D0>, Recording(id=5, timestamp=1730225168.3896494, monitor_width=2560, monitor_height=1440, double_click_interval_seconds=0.5, double_click_distance_pixels=4, platform='win32', task_description='testing openadapt record'), <multiprocessing.synchronize.Event object at 0x000002CDAD72C9A0>, <Synchronized wrapper for c_long(4)>)\r\n2024-10-29 23:36:14.409 | DEBUG    | openadapt.utils:set_start_time:376 - _start_time=1730225168.3896494 _start_perf_counter=97976.463865\r\n2024-10-29 23:36:14.409 | INFO     | __mp_main__:write_events:396 - event_type='screen' starting\r\nC:\\Users\\akjha\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-07hwbdMh-py3.10\\lib\\site-packages\\pywinauto\\__init__.py:80: UserWarning: Revert to STA COM threading mode\r\n  warnings.warn(\"Revert to STA COM threading mode\", UserWarning)\r\n2024-10-29 23:36:14.597 | INFO     | openadapt.utils:wrapper_logging:711 -  -> Enter: write_events(window, <function write_window_event at 0x000001A4696A4940>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x000001A4421752D0>, <Synchronized wrapper for c_long(0)>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x000001A4696C14B0>, Recording(id=5, timestamp=1730225168.3896494, monitor_width=2560, monitor_height=1440, double_click_interval_seconds=0.5, double_click_distance_pixels=4, platform='win32', task_description='testing openadapt record'), <multiprocessing.synchronize.Event object at 0x000001A4696C0850>, <Synchronized wrapper for c_long(6)>)\r\n2024-10-29 23:36:14.597 | DEBUG    | openadapt.utils:set_start_time:376 - _start_time=1730225168.3896494 _start_perf_counter=97976.6519985\r\n2024-10-29 23:36:14.597 | INFO     | __mp_main__:write_events:396 - event_type='window' starting\r\n2024-10-29 23:36:14.659 | INFO     | openadapt.utils:wrapper_logging:711 -  -> Enter: write_events(screen/video, <function write_video_event at 0x00000160F4154CA0>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x00000160CCC052D0>, <Synchronized wrapper for c_long(0)>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x00000160F416D540>, Recording(id=5, timestamp=1730225168.3896494, monitor_width=2560, monitor_height=1440, double_click_interval_seconds=0.5, double_click_distance_pixels=4, platform='win32', task_description='testing openadapt record'), <multiprocessing.synchronize.Event object at 0x00000160F416C8E0>, <Synchronized wrapper for c_long(7)>, <function video_pre_callback at 0x00000160F4154A60>, <function video_post_callback at 0x00000160F4154C10>)\r\n2024-10-29 23:36:14.659 | DEBUG    | openadapt.utils:set_start_time:376 - _start_time=1730225168.3896494 _start_perf_counter=97976.7179098\r\n2024-10-29 23:36:14.659 | INFO     | __mp_main__:write_events:396 - event_type='screen/video' starting\r\n2024-10-29 23:36:14.753 | INFO     | openadapt.utils:wrapper_logging:711 -  -> Enter: performance_stats_writer(<openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x00000164D99D52D0>, Recording(id=5, timestamp=1730225168.3896494, monitor_width=2560, monitor_height=1440, double_click_interval_seconds=0.5, double_click_distance_pixels=4, platform='win32', task_description='testing openadapt record'), <multiprocessing.synchronize.Event object at 0x0000016480F97CD0>, <Synchronized wrapper for c_long(7)>)\r\n2024-10-29 23:36:14.753 | DEBUG    | openadapt.utils:set_start_time:376 - _start_time=1730225168.3896494 _start_perf_counter=97976.8034325\r\n2024-10-29 23:36:14.753 | INFO     | __mp_main__:performance_stats_writer:813 - Performance stats writer starting\r\n2024-10-29 23:36:14.816 | INFO     | openadapt.video:initialize_video_writer:76 - initializing video stream...\r\n2024-10-29 23:36:14.941 | INFO     | openadapt.db.crud:update_video_start_time:722 - Updated video start time for recording 1730225168.3896494 to 1730225168.6280303.\r\n2024-10-29 23:36:14.941 | INFO     | __mp_main__:record_audio:1107 - Audio recording started.\r\n2024-10-29 23:36:14.956 | DEBUG    | openadapt.utils:set_start_time:376 - _start_time=1730225168.3896494 _start_perf_counter=97977.0169328\r\n2024-10-29 23:36:14.972 | INFO     | __mp_main__:memory_writer:857 - Memory writer starting\r\n```\r\nWhen I try to do any event (mouse, keyboard, etc.,)\r\nI get\r\n```\r\n WARNING  | __main__:process_events:229 - Discarding action that came before window\r\n ```\n\n### To Reproduce\n\n```shell\r\n python -m openadapt.record \"testing openadapt record\"\r\n ```",
      "state": "closed",
      "author": "Animesh404",
      "author_type": "User",
      "created_at": "2024-10-29T18:10:26Z",
      "updated_at": "2024-11-06T20:32:18Z",
      "closed_at": "2024-11-06T20:32:18Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/904/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/904",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/904",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:05.547083",
      "comments": [
        {
          "author": "abrichr",
          "body": "@Animesh404 can you please make sure the following is set in your `openadapt/data/config.json`:\r\nhttps://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/config.py#L140\r\n```\r\n'RECORD_READ_ACTIVE_ELEMENT_STATE': False,\r\n```",
          "created_at": "2024-10-30T02:08:21Z"
        },
        {
          "author": "Animesh404",
          "body": "yes, it is set to false",
          "created_at": "2024-10-30T02:15:05Z"
        },
        {
          "author": "abrichr",
          "body": "It appears the bug is in record.py (or its dependencies) where the window state is being read when it shouldn't be. e.g. in https://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/replay.py or https://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/strategies/base.py",
          "created_at": "2024-10-30T02:18:51Z"
        },
        {
          "author": "abrichr",
          "body": "@Animesh404 https://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/strategies/base.py#L24 should be:\r\n```\r\ninclude_a11y_data: bool = config.RECORD_READ_ACTIVE_ELEMENT_STATE,\r\n```\r\n\r\nThis should be a new parameter. Can you please open a PR with a fix? 🙏 The bug is likely similar/related.\r\n\r\n",
          "created_at": "2024-10-30T02:19:47Z"
        },
        {
          "author": "abrichr",
          "body": "@KIRA009 are you able to reproduce? Can you please help @Animesh404 making a recording?",
          "created_at": "2024-10-31T13:31:27Z"
        }
      ]
    },
    {
      "issue_number": 892,
      "title": "Dashboard improvements",
      "body": "### Feature request\n\n![image](https://github.com/user-attachments/assets/a38e8228-3480-4063-8ad3-a4a0b49c1b46)\r\n\r\nHere are some UI/UX improvement suggestions for the OpenAdapt dashboard based on the screenshot:\r\n\r\nVisual Hierarchy & Spacing:\r\n\r\nIncrease the padding and margin around each action event card to avoid clutter.\r\nUse dividers or subtle shadows around each action event block to better separate them.\r\nReduce the text size for less important details (e.g., timestamps, ID) and increase it for key elements (e.g., event name).\r\nColor and Contrast:\r\n\r\nIntroduce a more sophisticated color palette, using muted backgrounds with higher contrast for text.\r\nDifferentiate between 'press' and 'release' events by adding color codes (e.g., green for 'press', red for 'release').\r\nTypography:\r\n\r\nUse consistent font sizes and styles across similar elements. For example, make timestamps smaller and slightly less bold.\r\nOpt for a modern, sans-serif font to improve readability and style.\r\nButton Styling:\r\n\r\nUpdate the \"Remove action event\" button to a sleeker, icon-based button or a smaller, modern flat button.\r\nUse color to indicate action priority (e.g., red for delete, green for save, etc.).\r\nConsider adding hover effects to the buttons for better interactivity feedback.\r\nEvent Cards Layout:\r\n\r\nDisplay key information (like the event name and timestamp) more prominently, while collapsing or hiding less critical data (like canonical key vk) under expandable sections.\r\nUse collapsible/expandable cards to allow users to toggle details if they need more information.\r\nHeader & Sidebar:\r\n\r\nAdd icons next to the sidebar items (\"Recordings\", \"Settings\", \"Scrubbing\") for better visual cues.\r\nMake the active sidebar section more prominent with a highlight or different background color.\r\nIntroduce a cleaner, more minimalistic header design, potentially with more informative icons and labels.\r\nOverall Aesthetic:\r\n\r\nSwitch to a card-based design with rounded corners for a more modern look.\r\nReduce the overall contrast by using lighter backgrounds for each card and a slightly darker background for the dashboard.\r\nIntroduce animations (e.g., smooth transitions for expanding/collapsing sections or button clicks).\r\nIcons & Tooltips:\r\n\r\nUse icons to represent key elements like \"keyboard events,\" \"mouse clicks,\" etc., for quicker visual identification.\r\nAdd tooltips for elements that may not be immediately clear, especially where space constraints limit detail.\r\nThese updates would enhance the application's visual appeal and improve overall usability, making it look modern and polished.\n\n### Motivation\n\nUX",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-10-25T16:00:55Z",
      "updated_at": "2024-11-06T18:16:21Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/892/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "Animesh404"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/892",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/892",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:05.831192",
      "comments": [
        {
          "author": "abrichr",
          "body": "@Animesh404 I believe we want to move away from NextJS as a dependency so that we can support Electron (e.g. Vite + React).",
          "created_at": "2024-10-28T04:27:36Z"
        },
        {
          "author": "Animesh404",
          "body": "@abrichr but doesn't Next already supports electron?",
          "created_at": "2024-10-28T04:42:40Z"
        },
        {
          "author": "abrichr",
          "body": "> doesn't Next already supports electron\r\nnot as far as I know.\r\n\r\n@Animesh404 I think we want to revisit https://github.com/OpenAdaptAI/OpenAdapt/issues/761. Essentially we want to paint each action.screenshot to the HTML Canvas while keeping track of action.timestamp, e.g.:\r\n\r\n```\r\n      this.canv",
          "created_at": "2024-10-30T02:04:42Z"
        }
      ]
    },
    {
      "issue_number": 877,
      "title": "Implement `ell`",
      "body": "### Feature request\n\nWe would like to explore implementing [`ell`](https://github.com/MadcowD/ell) throughout the OpenAdapt codebase.\n\n### Motivation\n\nFrom https://x.com/wgussml/status/1833615864131948756:\r\n\r\n- automatic versioning & tracing\r\n- rich local oss visualization tools\r\n- multimodality native",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-10-15T23:33:13Z",
      "updated_at": "2024-11-04T13:30:18Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "$ bounty $"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/877/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/877",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/877",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:06.048726",
      "comments": [
        {
          "author": "abrichr",
          "body": "c.f. https://github.com/SylphAI-Inc/AdalFlow",
          "created_at": "2024-11-04T13:30:16Z"
        }
      ]
    },
    {
      "issue_number": 909,
      "title": "Trim dependencies",
      "body": "### Feature request\r\n\r\nWith the advent of OmniParse/Anthopic 3.5/Uground, we likely no longer need separate segmentation models.\r\n\r\nThis task involves removing dependencies and deprecating unused code around them:\r\n- detectron2\r\n- ultralytics\r\n- large parts of the vision module\r\n- what else?\r\n\r\n### Motivation\r\n\r\nStability, file size\r\n\r\nRelated:\r\n- https://github.com/OpenAdaptAI/OpenAdapt/issues/912",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-10-30T13:17:15Z",
      "updated_at": "2024-11-03T21:22:28Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/909/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/909",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/909",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:06.235291",
      "comments": [
        {
          "author": "KIRA009",
          "body": "@abrichr Are you talking about the adapters in https://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/adapters/?",
          "created_at": "2024-10-30T14:29:03Z"
        }
      ]
    },
    {
      "issue_number": 897,
      "title": "[Bug]: Glitchtip broken",
      "body": "### Describe the bug\n\n<img width=\"1512\" alt=\"image\" src=\"https://github.com/user-attachments/assets/5adacfe4-465d-4d69-8edb-c45c02d63687\">\r\n\n\n### To Reproduce\n\nhttps://app.glitchtip.com/openadaptai/settings/projects/openadapt",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-10-28T02:19:31Z",
      "updated_at": "2024-11-01T18:47:14Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/897/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/897",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/897",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:06.447994",
      "comments": [
        {
          "author": "abrichr",
          "body": "<img width=\"1490\" alt=\"image\" src=\"https://github.com/user-attachments/assets/1df3c71e-6f94-4b65-885c-e6c5aace474d\">\r\n",
          "created_at": "2024-10-28T02:23:37Z"
        },
        {
          "author": "abrichr",
          "body": "From @0dm on Discord:\r\n\r\n> ok so removing the @logger.catch in replay(...) lets the error reporter do its thing, but i get an error related to QT because of the before_send_event function. removing it allows sentry to work\r\n",
          "created_at": "2024-10-28T04:09:27Z"
        },
        {
          "author": "abrichr",
          "body": "@0dm:\r\n> needs to be configured to only report issues instead of performance metrics\r\n\r\ne.g.\r\n```\r\ndef configure_error_reporting() -> None:\r\n...\r\n    if is_reporting_branch:\r\n        sentry_sdk.init(\r\n            dsn=config.ERROR_REPORTING_DSN,\r\n            # Disable performance events\r\n            ",
          "created_at": "2024-11-01T18:47:14Z"
        }
      ]
    },
    {
      "issue_number": 912,
      "title": "Refactor scrubbing into OpenAdaptAI/OpenSanitizer",
      "body": "### Feature request\r\n\r\nWe want to refactor https://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/scrub.py and related into https://github.com/OpenAdaptAI/OpenSanitizer/.\r\n\r\n\r\n### Motivation\r\n\r\nModularity, portability, stability",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-10-31T19:15:28Z",
      "updated_at": "2024-10-31T19:27:59Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/912/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/912",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/912",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:06.683259",
      "comments": []
    },
    {
      "issue_number": 911,
      "title": "Implement \"openadapt.adapters.parser\" API",
      "body": "### Feature request\n\nWe would like to implement an `openadapt.adapters.parser` API that is compatible with `openadapt.drivers.anthropic` and `openadapt.drivers.omniparser`.\n\n### Motivation\n\nDeveloper productivity",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-10-31T15:34:22Z",
      "updated_at": "2024-10-31T15:34:22Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/911/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/911",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/911",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:06.683283",
      "comments": []
    },
    {
      "issue_number": 907,
      "title": "[Bug]: Build Issue",
      "body": "### Describe the bug\n\n```\r\nRun poetry run python -m openadapt.build\r\nMatplotlib is building the font cache; this may take a moment.\r\nTraceback (most recent call last):\r\n  File \"C:\\hostedtoolcache\\windows\\Python\\3.10.11\\x64\\lib\\runpy.py\", line 196, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n  File \"C:\\hostedtoolcache\\windows\\Python\\3.10.11\\x64\\lib\\runpy.py\", line 86, in _run_code\r\n    exec(code, run_globals)\r\n  File \"D:\\a\\OpenAdapt\\OpenAdapt\\openadapt\\build.py\", line 25, in <module>\r\n    import ultralytics\r\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-caElWqeS-py3.10\\lib\\site-packages\\ultralytics\\__init__.py\", line 11, in <module>\r\n    from ultralytics.models import NAS, RTDETR, SAM, YOLO, FastSAM, YOLOWorld\r\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-caElWqeS-py3.10\\lib\\site-packages\\ultralytics\\models\\__init__.py\", line 3, in <module>\r\n    from .fastsam import FastSAM\r\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-caElWqeS-py3.10\\lib\\site-packages\\ultralytics\\models\\fastsam\\__init__.py\", line 3, in <module>\r\n    from .model import FastSAM\r\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-caElWqeS-py3.10\\lib\\site-packages\\ultralytics\\models\\fastsam\\model.py\", line 5, in <module>\r\n    from ultralytics.engine.model import Model\r\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-caElWqeS-py3.10\\lib\\site-packages\\ultralytics\\engine\\model.py\", line 11, in <module>\r\n    from ultralytics.cfg import TASK2DATA, get_cfg, get_save_dir\r\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-caElWqeS-py3.10\\lib\\site-packages\\ultralytics\\cfg\\__init__.py\", line 10, in <module>\r\n    from ultralytics.utils import (\r\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-caElWqeS-py3.10\\lib\\site-packages\\ultralytics\\utils\\__init__.py\", line 22, in <module>\r\n    import cv2\r\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-caElWqeS-py3.10\\lib\\site-packages\\cv2\\__init__.py\", line 181, in <module>\r\n    bootstrap()\r\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-caElWqeS-py3.10\\lib\\site-packages\\cv2\\__init__.py\", line [15](https://github.com/OpenAdaptAI/OpenAdapt/actions/runs/11555312502/job/32234633770#step:6:16)3, in bootstrap\r\n    native_module = importlib.import_module(\"cv2\")\r\n  File \"C:\\hostedtoolcache\\windows\\Python\\3.10.11\\x64\\lib\\importlib\\__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\nImportError: DLL load failed while importing cv2: %1 is not a valid Win32 application.\r\nSet-Location: D:\\a\\_temp\\e40b2fee-3c25-4ce8-ac7f-2e987d1c6799.ps1:3\r\nLine |\r\n   3 |  cd dist\r\n     |  ~~~~~~~\r\n     | Cannot find path 'D:\\a\\OpenAdapt\\OpenAdapt\\dist' because it does not exist.\r\nError: Process completed with exit code 1.\r\n```\n\n### To Reproduce\n\nhttps://github.com/OpenAdaptAI/OpenAdapt/actions/runs/11555312502/job/32234633770",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-10-29T22:15:06Z",
      "updated_at": "2024-10-31T13:30:41Z",
      "closed_at": "2024-10-31T13:30:40Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/907/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/907",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/907",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:06.683290",
      "comments": [
        {
          "author": "abrichr",
          "body": "Appears to have been fixed in https://github.com/OpenAdaptAI/OpenAdapt/pull/905",
          "created_at": "2024-10-31T13:30:40Z"
        }
      ]
    },
    {
      "issue_number": 901,
      "title": "[Bug]: App broken",
      "body": "### Describe the bug\n\nReported by @limaconnect on Discord:\r\n\r\n```\r\nFault bucket 1886883604746232999, type 5\r\nEvent Name: RADAR_PRE_LEAK_64\r\nResponse: Not available\r\nCab Id: 0\r\n\r\nProblem signature:\r\nP1: OpenAdapt.exe\r\nP2: 0.0.0.0\r\nP3: 10.0.22621.2.0.0\r\nP4: \r\nP5: \r\nP6: \r\nP7: \r\nP8: \r\nP9: \r\nP10: \r\n\r\nAttached files:\r\n\\?\\C:\\Users\\p8tty\\AppData\\Local\\Temp\\RDR68C6.tmp\\empty.txt\r\n\\?\\C:\\ProgramData\\Microsoft\\Windows\\WER\\Temp\\WER.7409c011-1509-42cd-9a1a-a2f9310c4d51.tmp.WERInternalMetadata.xml\r\nWPR_initiated_DiagTrackMiniLogger_OneTrace_User_Logger_20240808_1_EC_0_inject.etl\r\n\\?\\C:\\ProgramData\\Microsoft\\Windows\\WER\\Temp\\WER.e430c38c-72b6-4ff9-a0c1-09c09e93d028.tmp.etl\r\nWPR_initiated_DiagTrackMiniLogger_WPR System Collector_inject.etl\r\n\\?\\C:\\ProgramData\\Microsoft\\Windows\\WER\\Temp\\WER.7090ee98-19d5-4d7c-8f0e-aba8d84fd42a.tmp.etl\r\n\\?\\C:\\ProgramData\\Microsoft\\Windows\\WER\\Temp\\WER.6b931244-23eb-401a-adb5-83684c27782c.tmp.csv\r\n\\?\\C:\\ProgramData\\Microsoft\\Windows\\WER\\Temp\\WER.f35ee554-9df9-44b9-bb63-992266d4df5c.tmp.txt\r\n\\?\\C:\\ProgramData\\Microsoft\\Windows\\WER\\Temp\\WER.09e6073b-3093-44c0-bbb5-11e607716d97.tmp.xml\r\n\r\nThese files may be available here:\r\nNULL\r\n\r\nAnalysis symbol: \r\nRechecking for solution: 0\r\nReport Id: 9d378650-a5bd-4763-bbbf-016a41ebd4df\r\nReport Status: 268435456\r\nHashed bucket: ca0f8745ab8c5b7fba2f8ea4316864a7\r\nCab Guid: 0\r\n```\n\n### To Reproduce\n\nWindows 11 Pro:\r\n1. Download installer from OpenAdapt.AI website\r\n2. Run Installer by opening installer\r\n3. Run OpenAdapt by opening installed executable (e.g. via Start menu)\r\n4. Observe no running application in system tray or task manager.\r\n5. Open event viewer and click Find, \"OpenAdapt\"",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-10-28T18:23:05Z",
      "updated_at": "2024-10-31T13:30:11Z",
      "closed_at": "2024-10-31T13:30:11Z",
      "labels": [
        "bug",
        "main-broken"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/901/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/901",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/901",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:06.860401",
      "comments": [
        {
          "author": "abrichr",
          "body": "Verification form has been submitted at https://feedback.smartscreen.microsoft.com/feedback.aspx",
          "created_at": "2024-10-28T19:39:04Z"
        },
        {
          "author": "abrichr",
          "body": "<img width=\"531\" alt=\"image\" src=\"https://github.com/user-attachments/assets/5690f533-2588-4b6c-a779-576f09185f0f\">\r\nWorkaround:\r\nClick \"More Info\"\r\n<img width=\"529\" alt=\"image\" src=\"https://github.com/user-attachments/assets/3ba3aed0-64b4-477e-96d2-f8685b491bb2\">\r\n\r\nClick \"Run Anyway\"",
          "created_at": "2024-10-28T19:39:08Z"
        },
        {
          "author": "abrichr",
          "body": "<img width=\"498\" alt=\"image\" src=\"https://github.com/user-attachments/assets/4bbb7e88-f5f8-48d5-add7-81b27acce4c1\">\r\n<img width=\"505\" alt=\"image\" src=\"https://github.com/user-attachments/assets/9532a9d3-f133-492c-8e23-12f340e62bd9\">\r\n<img width=\"503\" alt=\"image\" src=\"https://github.com/user-attachme",
          "created_at": "2024-10-28T19:43:04Z"
        },
        {
          "author": "abrichr",
          "body": "From C:\\Users\\user\\AppData\\Roaming\\openadapt\\data\\logs\\0.41.0\\2024-10-28:\r\n```\r\npywinauto\\__init__.py:80: UserWarning: Revert to STA COM threading mode\r\n2024-10-28 15:42:23.544 | ERROR    | __main__:run_openadapt:27 - [Errno 2] No such file or directory: 'C:\\\\Users\\\\user\\\\AppData\\\\Roaming\\\\openadapt",
          "created_at": "2024-10-28T19:45:38Z"
        }
      ]
    },
    {
      "issue_number": 906,
      "title": "Implement \"Agent\" (models.py and Dashboard)",
      "body": "### Feature request\r\n\r\nAn OpenAdapt Agent consists of:\r\n- model.py classes:\r\n\r\n```\r\nclass Agent:\r\n    name: str\r\n\r\nclass AgentContext:\r\n    recordings: list[Recordings]\r\n    ...\r\n\r\nclass Replay:\r\n    agent: Agent\r\n    agent_context: AgentContext\r\n...\r\n```\r\n\r\n\r\n- Dashboard mechanism to easily create agents by selecting recordings\r\n\r\n### Motivation\r\n\r\nGiving the user tools to specify desired behavior",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-10-29T20:49:54Z",
      "updated_at": "2024-10-29T20:50:04Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/906/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/906",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/906",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:07.131397",
      "comments": []
    },
    {
      "issue_number": 899,
      "title": "[Bug]: Replay Broken",
      "body": "### Describe the bug\n\n<img width=\"1512\" alt=\"image\" src=\"https://github.com/user-attachments/assets/d68ba189-6bce-4613-971a-bfa5b3cd3c9e\">\r\n\n\n### To Reproduce\n\n```\r\npoetry shell\r\npython -m openadapt.replay NaiveReplayStrategy\r\n```",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-10-28T04:18:43Z",
      "updated_at": "2024-10-28T19:18:31Z",
      "closed_at": "2024-10-28T19:18:31Z",
      "labels": [
        "bug",
        "main-broken"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/899/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/899",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/899",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:07.131419",
      "comments": [
        {
          "author": "abrichr",
          "body": "Possibly related: https://github.com/OpenAdaptAI/OpenAdapt/issues/897",
          "created_at": "2024-10-28T04:18:50Z"
        }
      ]
    },
    {
      "issue_number": 880,
      "title": "Implement UGround",
      "body": "### Feature request\n\nWe would like to incorporate UGround for identifying regions of interest:\r\n\r\nhttps://x.com/ysu_nlp/status/1844186560901808328\r\n\r\nInference code here: https://github.com/boyugou/llava_uground/\n\n### Motivation\n\nAs an alternative to segmentation / description.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-10-22T17:57:34Z",
      "updated_at": "2024-10-28T13:53:50Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "$ bounty $"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/880/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/880",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/880",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:07.355588",
      "comments": [
        {
          "author": "aybanda",
          "body": "After reviewing the integration requirements for UGround, I estimate that the implementation will require approximately 2 to 4 days of work, considering the complexity of adapting the inference code from https://github.com/boyugou/llava_uground/ and ensuring proper testing and documentation. Therefo",
          "created_at": "2024-10-28T07:45:26Z"
        },
        {
          "author": "abrichr",
          "body": "Thank you @aybanda ! Can you please clarify your proposal? Since UGround requires CUDA and OpenAdapt is designed to run locally, I believe this will require implementing a separate UGround server and deploying it. What do you think about fleshing out what other steps are involved so that we can narr",
          "created_at": "2024-10-28T12:37:15Z"
        },
        {
          "author": "aybanda",
          "body": "got it @abrichr sent you a request in discord, I will send you detailed proposal there.",
          "created_at": "2024-10-28T13:53:48Z"
        }
      ]
    },
    {
      "issue_number": 898,
      "title": "Automating Security, Compliance, and Operational Tasks for Information Security Teams",
      "body": "### Role\r\nTODO: Identify roles within information security, compliance, billing, and operational teams responsible for managing compliance, auditing, data protection, security monitoring, and procurement tasks.\r\n\r\n### Task\r\nTODO: Identify repetitive, time-intensive tasks across security, compliance, billing, and operations that involve regular monitoring, verification, and documentation to enhance efficiency, reduce risk, and optimize resources.\r\n\r\nExamples of these tasks include:\r\n- Conducting billing audits to ensure accurate coding and prevent revenue loss\r\n- Automating medical coding for efficient and accurate billing submission\r\n- Monitoring EHR access logs for unauthorized access and security risks\r\n- Validating vendor certifications and contract terms in procurement for quality assurance\r\n- Reviewing insurance claims to identify fraud and ensure accurate reimbursements\r\n- Managing patient data transfers to maintain data privacy and streamline research collaborations\r\n\r\n### Context\r\nIndustries such as healthcare, finance, and legal services handle many repetitive tasks essential to regulatory compliance, operational efficiency, and risk management. For example, healthcare organizations perform regular billing audits, insurance checks, and procurement verifications that involve detailed data entry, cross-referencing, and documentation. Information security and compliance teams, especially in healthcare, handle numerous tasks that are crucial for protecting sensitive data, maintaining compliance, and responding to security incidents. Billing teams also perform intensive coding and claims processing tasks to ensure reimbursement and revenue compliance. These repetitive tasks consume significant resources but are necessary for a secure, compliant, and efficient environment.\r\n\r\n### Examples of Automation Use Cases\r\n- **Billing Audits in Healthcare**: Reviewing patient billing records for coding discrepancies and compliance.\r\n- **Medical Coding Automation for Billing**: Automating CPT and ICD-10 code selection, cross-referencing payer requirements, and preparing claims.\r\n- **Transaction Monitoring in Finance**: Verifying transaction records, detecting anomalies, and documenting findings.\r\n- **Contract Compliance in Legal**: Reviewing contract terms for compliance and reporting discrepancies.\r\n- **Electronic Health Record (EHR) Access Audits**: Regular audits of EHR access logs to monitor for unauthorized access.\r\n- **Medical Device Security Monitoring**: Logging and monitoring connected medical devices to detect vulnerabilities.\r\n- **Patient Data Transfer Monitoring**: Ensuring data is shared only with authorized parties to maintain privacy.\r\n- **Pharmacy Compliance Audits**: Auditing pharmacy transactions for controlled substances compliance.\r\n- **Insurance Claims Review for Fraud Detection**: Scanning claims data to detect fraudulent patterns.\r\n- **Data Loss Prevention (DLP) in Research Data Sharing**: Monitoring data flows in research to ensure secure data sharing.\r\n- **Incident Response Drill Automation**: Automating simulated cybersecurity incidents to test and train staff.\r\n- **Data Access Consent Verification for Patient Records**: Verifying that consent forms are current for data-sharing activities.\r\n- **Vendor Compliance Checks in Procurement**: Reviewing vendor certifications and delivery records for regulatory compliance.\r\n\r\n### Workflow\r\nExample workflows for specific roles:\r\n\r\n#### 1. General Security and Compliance Workflow\r\n1. Access records in relevant systems (e.g., billing, access control lists).\r\n2. Retrieve records for compliance review.\r\n3. Flag compliance or accuracy issues.\r\n4. Cross-reference flagged items with policies or regulations.\r\n5. Document findings, escalate unresolved issues, and notify relevant teams.\r\n6. Generate reports on compliance status and risks.\r\n\r\n#### 2. Workflow for a Billing Code Specialist Automating Medical Coding\r\n1. **Retrieve Patient Records**: Access EHR for coding.\r\n2. **Automate Code Selection**: Assign CPT/ICD-10 codes based on documented treatments.\r\n3. **Cross-Reference Payer Requirements**: Ensure codes meet payer-specific requirements for reimbursement.\r\n4. **Verify and Submit**: Review selected codes, format claims, and submit for reimbursement.\r\n5. **Generate Summary**: Prepare a billing summary report for audit and compliance.\r\n\r\n#### 3. Workflow for a Data Privacy Officer Handling Patient Consent and Data Sharing Compliance\r\n1. **Collect Consent Records**: Access patient consent records.\r\n2. **Verify Consent Validity**: Confirm specific permissions for data sharing.\r\n3. **Check Compliance**: Ensure compliance with HIPAA and data-sharing agreements.\r\n4. **Document Actions**: Log verifications and any necessary follow-up.\r\n5. **Report Findings**: Generate reports on consent status and risks.\r\n\r\n#### 4. Workflow for a Procurement Compliance Officer Verifying Vendor Compliance\r\n1. **Access Vendor Records**: Retrieve vendor data from procurement systems.\r\n2. **Verify Certifications**: Check necessary vendor certifications.\r\n3. **Review Contracts**: Confirm contract terms align with policies.\r\n4. **Validate Delivery**: Ensure timely delivery and quality standards.\r\n5. **Document Findings**: Log compliance verification results.\r\n6. **Notify Teams**: Share results with procurement and legal departments.\r\n\r\n### Evaluation Table\r\n\r\n| Task                                        | Role                               | Automation Potential | Compliance Impact | Time Saved | Error Reduction | Cognitive Load | Portion of Task(s) Automated (%) | Number of Users (Local) | Annual Pay per User | Estimated Annual $ Reduction (Local) | Number of Users (Federal) | Estimated Annual $ Reduction (Federal) | Score |\r\n|---------------------------------------------|------------------------------------|-----------------------|-------------------|------------|-----------------|----------------|----------------------------------|--------------------------|---------------------|---------------------------------------|---------------------------|----------------------------------------|-------|\r\n| EHR Access Audits                           | Security Analyst                   | 4                     | 4                 | 3          | 4               | 2              | 50%                             | 10                       | $75,000 - $100,000 | $375,000 - $500,000                  | 500                       | $18.75M - $25M                        | 17    |\r\n| Medical Device Security Monitoring          | Device Security Specialist         | 3                     | 4                 | 3          | 3               | 3              | 50%                             | 3                        | $70,000 - $90,000  | $105,000 - $135,000                  | 100                       | $3.5M - $4.5M                          | 16    |\r\n| Patient Data Transfer Monitoring            | Data Privacy Officer               | 4                     | 4                 | 4          | 4               | 3              | 60%                             | 4                        | $70,000 - $90,000  | $168,000 - $216,000                  | 300                       | $12.6M - $16.2M                        | 19    |\r\n| Pharmacy Compliance Audits                  | Pharmacy Compliance Officer        | 3                     | 3                 | 3          | 3               | 2              | 50%                             | 3                        | $50,000 - $70,000  | $75,000 - $105,000                   | 200                       | $5M - $7M                              | 14    |\r\n| Insurance Claims Review for Fraud Detection | Insurance Claims Analyst           | 3                     | 4                 | 4          | 4               | 4              | 60%                             | 5                        | $85,000 - $110,000 | $255,000 - $330,000                  | 400                       | $20.4M - $26.4M                        | 18    |\r\n| DLP in Research Data Sharing                | Data Privacy Officer               | 4                     | 4                 | 3          | 4               | 3              | 60%                             | 3                        | $70,000 - $90,000  | $126,000 - $162,000                  | 250                       | $10.5M - $13.5M                        | 18    |\r\n| Incident Response Drill Automation          | Security Operations Manager        | 3                     | 3                 | 3          | 3               | 4              | 30%                             | 2                        | $100,000           | $60,000                               | 150                       | $4.5M                                  | 16    |\r\n| Data Access Consent Verification            | Data Privacy Officer               | 4                     | 4                 | 4          | 4               | 2              | 60%                             | 5                        | $70,000 - $90,000  | $210,000 - $270,000                  | 300                       | $12.6M - $16.2M                        | 18    |\r\n| Vendor Compliance Checks in Procurement     | Procurement Compliance Officer     | 3                     | 4                 | 3          | 3               | 3              | 50%                             | 4                        | $60,000 - $80,000  | $120,000 - $160,000                  | 250                       | $7.5M - $10M                           | 16    |\r\n| Medical Coding Automation                   | Billing Code Specialist            | 4                     | 4                 | 4          | 4               | 1              | 60%                             | 8                        | $60,000 - $80,000  | $288,000 - $384,000                  | 200,000                   | $7.2B - $9.6B                          | 17    |\r\n\r\n#### Assumptions\r\n\r\n- **Estimated Annual $ Reduction Formula**: Calculated as `Number of Users * Portion of Task(s) Automated (%) * Annual Pay per User`.\r\n- **Portion of Task(s) Automated (%)**: Represents the estimated percentage of repetitive or routine tasks automated within each role, without reducing headcount.\r\n- **Annual Pay per User**: Reflects typical salary ranges based on industry standards in the U.S. Midwest.\r\n- **Number of Users (Local)**: Represents estimated users in a medium-sized city.\r\n- **Number of Users (Federal)**: Reflects national estimates for each role across the U.S.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-10-28T02:51:03Z",
      "updated_at": "2024-10-28T03:58:08Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/898/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/898",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/898",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:07.584426",
      "comments": []
    },
    {
      "issue_number": 882,
      "title": "Implement CoordinateReplayStrategy with Claude/UGround/Omniparser",
      "body": "### Feature request\r\n\r\nWe would like to implement a new replay strategy that directly extracts and generates target element coordinates using https://docs.anthropic.com/en/docs/build-with-claude/computer-use and/or https://github.com/OpenAdaptAI/OpenAdapt/issues/880 and/or https://github.com/OpenAdaptAI/OpenAdapt/issues/894.\r\n\r\n### Motivation\r\n\r\nRobustness, speed",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-10-24T15:48:16Z",
      "updated_at": "2024-10-26T03:07:48Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "$ bounty $"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/882/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "abrichr"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/882",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/882",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:07.584447",
      "comments": []
    },
    {
      "issue_number": 894,
      "title": "Implement Omniparser",
      "body": "### Feature request\n\nWe want to implement https://huggingface.co/microsoft/OmniParser in a `ReplayStrategy` (e.g. https://github.com/OpenAdaptAI/OpenAdapt/pull/888)\n\n### Motivation\n\n> OmniParser is designed to be able to convert unstructured screenshot image into structured list of elements including interactable regions location and captions of icons on its potential functionality.\r\nOmniParser is intended to be used in settings where users are already trained on responsible analytic approaches and critical reasoning is expected. OmniParser is capable of providing extracted information from the screenshot, however human judgement is needed for the output of OmniParser.\r\nOmniParser is intended to be used on various screenshots, which includes both PC and Phone, and also on various applications.\r\n",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-10-26T02:43:53Z",
      "updated_at": "2024-10-26T02:43:54Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/894/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/894",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/894",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:07.584453",
      "comments": []
    },
    {
      "issue_number": 891,
      "title": "Explore agency-swarm",
      "body": "### Feature request\n\nUser @limaconnect on Discord:\r\n\r\n> Have you taken a look at agency swarm? It's also open source\r\n> I think if you incorporated that into your tool it could be a beast\r\n> Smart ai agents that use the pc and it's tools on its own. 👑\r\n\r\nhttps://github.com/VRSEN/agency-swarm\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-10-25T15:37:09Z",
      "updated_at": "2024-10-25T15:37:09Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/891/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/891",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/891",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:07.584459",
      "comments": []
    },
    {
      "issue_number": 890,
      "title": "[Bug]: dashboard recordings missing",
      "body": "### Describe the bug\n\nNo recordings are displayed in the dashboard:\r\n\r\n<img width=\"1512\" alt=\"image\" src=\"https://github.com/user-attachments/assets/3eee94d6-48c3-456d-9dc5-0c6c1e75731d\">\r\n\n\n### To Reproduce\n\n```\r\npoetry shell\r\npython -m openadapt.entrypoint\r\n```\r\nClick on \"Recordings\" tab",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-10-25T15:31:53Z",
      "updated_at": "2024-10-25T15:31:54Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/890/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/890",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/890",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:07.584464",
      "comments": []
    },
    {
      "issue_number": 889,
      "title": "[Bug]: dashboard error",
      "body": "### Describe the bug\n\n```\r\npoetry shell\r\npython -m openadapt.entrypoint\r\n...\r\n2024-10-25 11:21:52.595 | INFO     | openadapt.error_reporting:configure_error_reporting:28 - is_reporting_branch=True\r\nDB_URL=sqlite:////Users/abrichr/oa/src/OpenAdapt/openadapt/data/openadapt.db\r\nINFO  [alembic.runtime.migration] Context impl SQLiteImpl.\r\nINFO  [alembic.runtime.migration] Will assume non-transactional DDL.\r\n\r\n> nextjs-fastapi@0.1.0 dev\r\n> concurrently \"npm run next-dev\" \"npm run fastapi-dev\"\r\n\r\n[0] \r\n[0] > nextjs-fastapi@0.1.0 next-dev\r\n[0] > next dev -p $DASHBOARD_CLIENT_PORT\r\n[0] \r\n[1] \r\n[1] > nextjs-fastapi@0.1.0 fastapi-dev\r\n[1] > python3 -m uvicorn api.index:app --port $DASHBOARD_SERVER_PORT --reload\r\n[1] \r\n[1] INFO:     Will watch for changes in these directories: ['/Users/abrichr/oa/src/OpenAdapt/openadapt/app/dashboard']\r\n[1] INFO:     Uvicorn running on http://127.0.0.1:8080 (Press CTRL+C to quit)\r\n[1] INFO:     Started reloader process [36490] using WatchFiles\r\n[0]  ⚠ Specified \"rewrites\" will not automatically work with \"output: export\". See more info here: https://nextjs.org/docs/messages/export-no-custom-routes\r\n[0]  ⚠ Specified \"rewrites\" will not automatically work with \"output: export\". See more info here: https://nextjs.org/docs/messages/export-no-custom-routes\r\n[0]    ▲ Next.js 14.1.4\r\n[0]    - Local:        http://localhost:5173\r\n[0] \r\n[0]  ⚠ Specified \"rewrites\" will not automatically work with \"output: export\". See more info here: https://nextjs.org/docs/messages/export-no-custom-routes\r\n[0]  ⚠ Specified \"rewrites\" will not automatically work with \"output: export\". See more info here: https://nextjs.org/docs/messages/export-no-custom-routes\r\n[0]  ✓ Ready in 935ms\r\n[1] INFO:     Started server process [36492]\r\n[1] INFO:     Waiting for application startup.\r\n[1] INFO:     Application startup complete.\r\n[0]  ○ Compiling /recordings ...\r\n[0]  ✓ Compiled /recordings in 1474ms (2325 modules)\r\n[0] (node:36493) [DEP0060] DeprecationWarning: The `util._extend` API is deprecated. Please use Object.assign() instead.\r\n[0] (Use `node --trace-deprecation ...` to show where the warning was created)\r\n[1] INFO:     127.0.0.1:50055 - \"GET /api/recordings HTTP/1.1\" 200 OK\r\n[1] INFO:     127.0.0.1:50057 - \"GET /api/recordings/status HTTP/1.1\" 200 OK\r\n[1] INFO:     127.0.0.1:50056 - \"GET /api/recordings/scrubbed HTTP/1.1\" 200 OK\r\n[0]  ○ Compiling /settings ...\r\n[0] Browserslist: caniuse-lite is outdated. Please run:\r\n[0]   npx update-browserslist-db@latest\r\n[0]   Why you should do it regularly: https://github.com/browserslist/update-db#readme\r\n[0]  ✓ Compiled /settings in 1213ms (2429 modules)\r\n[1] INFO:     127.0.0.1:50139 - \"GET /api/settings?category=api_keys HTTP/1.1\" 200 OK\r\n[1] INFO:     127.0.0.1:50187 - \"GET /api/recordings HTTP/1.1\" 200 OK\r\n[1] INFO:     127.0.0.1:50189 - \"GET /api/recordings/status HTTP/1.1\" 200 OK\r\n[1] INFO:     127.0.0.1:50188 - \"GET /api/recordings/scrubbed HTTP/1.1\" 200 OK\r\n```\r\n```\r\nWarning: A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components\r\n    at input\r\n    at eval (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/core/Box/Box.mjs:36:11)\r\n    at div\r\n    at eval (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/core/Box/Box.mjs:36:11)\r\n    at eval (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/components/Input/Input.mjs:70:106)\r\n    at div\r\n    at eval (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/core/Box/Box.mjs:36:11)\r\n    at Provider (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/core/utils/create-optional-context/create-optional-context.mjs:17:15)\r\n    at eval (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/components/Input/InputWrapper/InputWrapper.mjs:71:106)\r\n    at eval (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/components/InputBase/InputBase.mjs:36:126)\r\n    at eval (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/components/TextInput/TextInput.mjs:27:107)\r\n    at div\r\n    at eval (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/core/Box/Box.mjs:36:11)\r\n    at eval (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/components/Stack/Stack.mjs:48:106)\r\n    at fieldset\r\n    at eval (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/core/Box/Box.mjs:36:11)\r\n    at eval (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/components/Fieldset/Fieldset.mjs:44:106)\r\n    at div\r\n    at eval (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/core/Box/Box.mjs:36:11)\r\n    at eval (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/components/Grid/GridCol/GridCol.mjs:36:106)\r\n    at div\r\n    at div\r\n    at eval (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/core/Box/Box.mjs:36:11)\r\n    at Provider (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/core/utils/create-safe-context/create-safe-context.mjs:20:15)\r\n    at eval (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/components/Grid/Grid.mjs:54:106)\r\n    at form\r\n    at Form (webpack-internal:///(app-pages-browser)/./app/settings/(api_keys)/form.tsx:23:11)\r\n    at APIKeys (webpack-internal:///(app-pages-browser)/./app/settings/(api_keys)/page.tsx:22:84)\r\n    at StaticGenerationSearchParamsBailoutProvider (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/static-generation-searchparams-bailout-provider.js:16:11)\r\n    at InnerLayoutRouter (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/layout-router.js:242:11)\r\n    at RedirectErrorBoundary (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/redirect-boundary.js:74:9)\r\n    at RedirectBoundary (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/redirect-boundary.js:82:11)\r\n    at NotFoundBoundary (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/not-found-boundary.js:84:11)\r\n    at LoadingBoundary (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/layout-router.js:340:11)\r\n    at ErrorBoundary (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/error-boundary.js:162:11)\r\n    at InnerScrollAndFocusHandler (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/layout-router.js:152:9)\r\n    at ScrollAndFocusHandler (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/layout-router.js:227:11)\r\n    at RenderFromTemplateContext (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/render-from-template-context.js:16:44)\r\n    at OuterLayoutRouter (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/layout-router.js:359:11)\r\n    at InnerLayoutRouter (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/layout-router.js:242:11)\r\n    at RedirectErrorBoundary (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/redirect-boundary.js:74:9)\r\n    at RedirectBoundary (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/redirect-boundary.js:82:11)\r\n    at NotFoundBoundary (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/not-found-boundary.js:84:11)\r\n    at LoadingBoundary (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/layout-router.js:340:11)\r\n    at ErrorBoundary (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/error-boundary.js:162:11)\r\n    at InnerScrollAndFocusHandler (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/layout-router.js:152:9)\r\n    at ScrollAndFocusHandler (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/layout-router.js:227:11)\r\n    at RenderFromTemplateContext (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/render-from-template-context.js:16:44)\r\n    at OuterLayoutRouter (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/layout-router.js:359:11)\r\n    at div\r\n    at eval (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/core/Box/Box.mjs:36:11)\r\n    at div\r\n    at eval (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/core/Box/Box.mjs:36:11)\r\n    at eval (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/components/Flex/Flex.mjs:41:106)\r\n    at div\r\n    at eval (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/core/Box/Box.mjs:36:11)\r\n    at InnerLayoutRouter (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/layout-router.js:242:11)\r\n    at RedirectErrorBoundary (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/redirect-boundary.js:74:9)\r\n    at RedirectBoundary (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/redirect-boundary.js:82:11)\r\n    at NotFoundErrorBoundary (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/not-found-boundary.js:76:9)\r\n    at NotFoundBoundary (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/not-found-boundary.js:84:11)\r\n    at LoadingBoundary (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/layout-router.js:340:11)\r\n    at ErrorBoundary (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/error-boundary.js:162:11)\r\n    at InnerScrollAndFocusHandler (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/layout-router.js:152:9)\r\n    at ScrollAndFocusHandler (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/layout-router.js:227:11)\r\n    at RenderFromTemplateContext (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/render-from-template-context.js:16:44)\r\n    at OuterLayoutRouter (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/layout-router.js:359:11)\r\n    at main\r\n    at eval (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/core/Box/Box.mjs:36:11)\r\n    at eval (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/components/AppShell/AppShellMain/AppShellMain.mjs:30:106)\r\n    at div\r\n    at eval (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/core/Box/Box.mjs:36:11)\r\n    at Provider (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/core/utils/create-safe-context/create-safe-context.mjs:20:15)\r\n    at eval (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/components/AppShell/AppShell.mjs:68:106)\r\n    at Shell (webpack-internal:///(app-pages-browser)/./components/Shell/Shell.tsx:24:11)\r\n    at MantineThemeProvider (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs:31:11)\r\n    at MantineProvider (webpack-internal:///(app-pages-browser)/./node_modules/@mantine/core/esm/core/MantineProvider/MantineProvider.mjs:28:11)\r\n    at body\r\n    at CSPostHogProvider (webpack-internal:///(app-pages-browser)/./app/providers.tsx:26:11)\r\n    at html\r\n    at RedirectErrorBoundary (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/redirect-boundary.js:74:9)\r\n    at RedirectBoundary (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/redirect-boundary.js:82:11)\r\n    at NotFoundErrorBoundary (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/not-found-boundary.js:76:9)\r\n    at NotFoundBoundary (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/not-found-boundary.js:84:11)\r\n    at DevRootNotFoundBoundary (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/dev-root-not-found-boundary.js:33:11)\r\n    at ReactDevOverlay (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/react-dev-overlay/internal/ReactDevOverlay.js:84:9)\r\n    at HotReload (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/react-dev-overlay/hot-reloader-client.js:307:11)\r\n    at Router (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/app-router.js:182:11)\r\n    at ErrorBoundaryHandler (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/error-boundary.js:115:9)\r\n    at ErrorBoundary (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/error-boundary.js:162:11)\r\n    at AppRouter (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/app-router.js:542:13)\r\n    at ServerRoot (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/app-index.js:129:11)\r\n    at RSCComponent\r\n    at Root (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/app-index.js:145:11)\r\n```\r\n\r\nThis warning typically occurs when an input's value prop changes from undefined to a defined value. It's likely happening in your Settings page, specifically in the API Keys form. To fix this:\r\n\r\nEnsure that all form inputs have an initial value, even if it's an empty string.\r\nMake sure you're properly handling the state of these inputs.\r\nFor example:\r\n\r\n<JAVASCRIPT>\r\nconst [inputValue, setInputValue] = useState('');\r\n\r\n// In your JSX\r\n<TextInput\r\n  value={inputValue}\r\n  onChange={(event) => setInputValue(event.currentTarget.value)}\r\n/>\n\n### To Reproduce\n\n```\r\npoetry shell\r\npython -m openadapt.entrypoint\r\n```\r\nSelect settings tab",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-10-25T15:30:24Z",
      "updated_at": "2024-10-25T15:30:24Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/889/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/889",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/889",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:07.584469",
      "comments": []
    },
    {
      "issue_number": 887,
      "title": "Explore Tree-of-Lens Grounding",
      "body": "### Feature request\r\n\r\nHow can we incorporate the ideas/code from https://arxiv.org/abs/2406.19263?\r\n\r\n> Graphical User Interfaces (GUIs) are central to our interaction with digital devices. Recently, growing efforts have been made to build models for various GUI understanding tasks. However, these efforts largely overlook an important GUI-referring task: screen reading based on user-indicated points, which we name the Screen Point-and-Read (SPR) task. This task is predominantly handled by rigid accessible screen reading tools, in great need of new models driven by advancements in Multimodal Large Language Models (MLLMs). In this paper, we propose a Tree-of-Lens (ToL) agent, utilizing a novel ToL grounding mechanism, to address the SPR task. Based on the input point coordinate and the corresponding GUI screenshot, our ToL agent constructs a Hierarchical Layout Tree. Based on the tree, our ToL agent not only comprehends the content of the indicated area but also articulates the layout and spatial relationships between elements. Such layout information is crucial for accurately interpreting information on the screen, distinguishing our ToL agent from other screen reading tools. We also thoroughly evaluate the ToL agent against other baselines on a newly proposed SPR benchmark, which includes GUIs from mobile, web, and operating systems. Last but not least, we test the ToL agent on mobile GUI navigation tasks, demonstrating its utility in identifying incorrect actions along the path of agent execution trajectories. Code and data: [this http URL](http://screen-point-and-read.github.io/)\r\n\r\n \r\nhttps://x.com/YFan_UCSC/status/1806523107081081154\r\n\r\n### Motivation\r\n\r\nImproved reasoning",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-10-25T00:07:41Z",
      "updated_at": "2024-10-25T00:08:08Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/887/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/887",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/887",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:07.584475",
      "comments": []
    },
    {
      "issue_number": 883,
      "title": "[Bug]:  The 'Set-ExecutionPolicy' command was found in the module 'Microsoft.PowerShell.Security', but the module could not be loaded. ",
      "body": "### Describe the bug\r\n\r\nfrom @limaconnect on Discord:\r\n```\r\nSet-ExecutionPolicy : The 'Set-ExecutionPolicy' command was found in the module 'Microsoft.PowerShell.Security', but\r\nthe module could not be loaded. For more information, run 'Import-Module Microsoft.PowerShell.Security'.\r\nAt line:341 char:1\r\n+ Set-ExecutionPolicy RemoteSigned -Scope Process -Force\r\n+ ~~~\r\n    + CategoryInfo          : ObjectNotFound: (Set-ExecutionPolicy:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CouldNotAutoloadMatchingModule\r\n```\r\n\r\nNote:\r\n\r\n> Please run `Import-Module Microsoft.PowerShell.Security`\r\n\r\nPossibly related:\r\n\r\n- https://github.com/OpenAdaptAI/OpenAdapt/issues/581\r\n- https://github.com/OpenAdaptAI/OpenAdapt/issues/626\r\n\r\n### To Reproduce\r\n\r\nOn Windows 11 Pro:\r\n\r\n1. Download and install OpenAdapt from website\r\n2. Try running OpenAdapt via Installed Apps\r\n3. Observe Security Warning:\r\n\r\n![image](https://github.com/user-attachments/assets/67572efd-ebce-4987-b9dc-975d84af7fab)\r\n\r\n4. ...?",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-10-24T16:50:18Z",
      "updated_at": "2024-10-24T20:19:03Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/883/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/883",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/883",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:07.584482",
      "comments": [
        {
          "author": "abrichr",
          "body": "User subsequently attempted to install via install command on website:\r\n\r\n> `Start-Process powershell -Verb RunAs -ArgumentList '-NoExit', '-ExecutionPolicy', 'Bypass', '-Command', \"iwr -UseBasicParsing -Uri 'https://raw.githubusercontent.com/OpenAdaptAI/OpenAdapt/main/install/install_openadapt.ps1'",
          "created_at": "2024-10-24T16:52:49Z"
        },
        {
          "author": "abrichr",
          "body": "Via ChatGPT (https://chatgpt.com/share/671a7949-2db8-8002-8d60-9bdf7ad52bbc):\r\n---\r\nThe error indicates that PowerShell is unable to find or load the `Microsoft.PowerShell.Security` module, which contains the `Set-ExecutionPolicy` command. This might occur if the module is missing, corrupted, or not",
          "created_at": "2024-10-24T20:17:27Z"
        },
        {
          "author": "abrichr",
          "body": "@0dm:\r\n\r\n> this could be because onedrive is being accessed instead of local documents",
          "created_at": "2024-10-24T20:19:02Z"
        }
      ]
    },
    {
      "issue_number": 881,
      "title": "Explore OpenSSA",
      "body": "### Feature request\n\nHow might we be able to leverage https://github.com/aitomatic/openssa?\n\n### Motivation\n\nRobustness",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-10-24T15:17:10Z",
      "updated_at": "2024-10-24T15:17:10Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/881/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/881",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/881",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:07.761089",
      "comments": []
    },
    {
      "issue_number": 878,
      "title": "Avoid reading window accessibility data for hidden elements",
      "body": "### Feature request\n\nOn Windows, when reading window (accessibility) data, we can observe context menus being activated automatically. We would like to prevent this.\r\n\r\nOne way is to avoid descending into branches of the accessibility tree for elements that are not already visible.\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-10-17T15:57:18Z",
      "updated_at": "2024-10-17T15:57:18Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/878/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/878",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/878",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:07.761113",
      "comments": []
    },
    {
      "issue_number": 876,
      "title": "Strict type checking",
      "body": "### Feature request\n\nPick one of:\r\n- https://github.com/beartype/beartype\r\n- https://github.com/agronholm/typeguard\r\n- others?\n\n### Motivation\n\nMaintainability",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-10-09T14:19:46Z",
      "updated_at": "2024-10-09T14:19:46Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/876/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/876",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/876",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:07.761120",
      "comments": []
    },
    {
      "issue_number": 748,
      "title": "Implement TextGrad (bounty)",
      "body": "### Feature request\r\n\r\nWe would like to implement https://github.com/zou-group/textgrad.\r\n\r\n### Motivation\r\n\r\n> It works out-of-the-box for a variety of tasks,\r\nwhere the users only provide the objective function without tuning components or prompts of\r\nthe framework.\r\n\r\n<img width=\"125\" alt=\"image\" src=\"https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/45811761-a873-4f80-9cc4-6fa07e52829d\">\r\n\r\n### Bounty\r\n\r\nA paid bounty is available. Please suggest a price range 🙏 ",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-13T15:27:49Z",
      "updated_at": "2024-10-07T13:47:25Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "good first issue",
        "help wanted",
        "$ bounty $"
      ],
      "label_count": 4,
      "has_labels": true,
      "comments_count": 9,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/748/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/748",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/748",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:07.761128",
      "comments": [
        {
          "author": "kernel-loophole",
          "body": "@abrichr wanted to work on this in $750.looking forward to discuss more about it .",
          "created_at": "2024-09-14T08:40:17Z"
        },
        {
          "author": "abrichr",
          "body": "Sounds good @kernel-loophole ! Please DM me on Discord 🙏",
          "created_at": "2024-09-14T16:32:44Z"
        },
        {
          "author": "kernel-loophole",
          "body": "@abrichr can you share your discord username ",
          "created_at": "2024-09-14T16:55:22Z"
        },
        {
          "author": "kernel-loophole",
          "body": "@abrichr send you request on discord ",
          "created_at": "2024-09-18T05:54:58Z"
        },
        {
          "author": "kernel-loophole",
          "body": "@abrichr  I will implement TextGrad into OpenAdapt, leveraging its framework for textual gradients to optimize and automate GUI workflows with Large Multimodal Models (LMMs). By integrating TextGrad's natural-language loss function and optimization through textual feedback, I aim to enhance process ",
          "created_at": "2024-09-20T15:14:48Z"
        }
      ]
    },
    {
      "issue_number": 862,
      "title": "[Bug]: `QWindowsContext: OleInitialize() failed` error on running: `python -m openadapt.app.visualize`",
      "body": "### Describe the bug\n\n\r\n```\r\n(.venv) PS P:\\OpenAdapt> python -m openadapt.app.visualize\r\n2024-07-21 11:25:44.667 | INFO     | openadapt.events:get_events:74 - num_process_iters=0 num_action_events=2600 num_window_events=1 num_screenshots=179\r\n2024-07-21 11:25:44.669 | INFO     | openadapt.events:process_events:825 - before num_action_events=2600 num_window_events=1 num_screenshots=179 num_total=2780\r\n2024-07-21 11:25:44.710 | INFO     | openadapt.events:merge_consecutive_action_events:757 - name='redundant_mouse_move' num_events_removed=66\r\n2024-07-21 11:25:44.733 | INFO     | openadapt.events:get_group_idx_tups:529 - len(to_merge)=10 group_idx_tups=[(0, 8), (8, 10)]\r\n2024-07-21 11:25:44.977 | INFO     | openadapt.events:get_group_idx_tups:529 - len(to_merge)=38 group_idx_tups=[(0, 8), (8, 10), (10, 22), (22, 24), (24, 28), (28, 31), (31, 34), (34, 36), (36, 38)]\r\n2024-07-21 11:25:44.999 | INFO     | openadapt.events:get_group_idx_tups:529 - len(to_merge)=18 group_idx_tups=[(0, 2), (2, 6), (6, 8), (8, 10), (10, 12), (12, 14), (14, 16), (16, 18)]\r\n2024-07-21 11:25:45.048 | INFO     | openadapt.events:merge_consecutive_action_events:757 - name='keyboard' num_events_removed=47\r\n2024-07-21 11:25:45.069 | INFO     | openadapt.events:merge_consecutive_action_events:757 - name='mouse_move' num_events_removed=2415\r\n2024-07-21 11:25:45.069 | INFO     | openadapt.events:merge_consecutive_action_events:757 - name='mouse_scroll' num_events_removed=0\r\n2024-07-21 11:25:45.072 | INFO     | openadapt.events:merge_consecutive_action_events:757 - name='mouse_click' num_events_removed=14\r\n2024-07-21 11:25:45.072 | INFO     | openadapt.events:process_events:873 - after num_action_events_=58 num_window_events_=1 num_screenshots_=52 num_total_=111\r\n2024-07-21 11:25:45.072 | INFO     | openadapt.events:process_events:877 - pct_action_events=0.022307692307692306 pct_window_events=1.0 pct_screenshots=0.2905027932960894 pct_total=0.039928057553956835\r\n2024-07-21 11:25:45.073 | INFO     | openadapt.events:get_events:127 - duration=2.549567461013794\r\n2024-07-21 11:25:45.386 | INFO     | __main__:main:154 - event_dicts=\r\n[{'children': [{'id': 243,\r\n                'mouse_x': 1257,\r\n                'mouse_y': 652,\r\n                'screenshot_id': 11,\r\n                'screenshot_timestamp': 1721569972.3549984,\r\n                'timestamp': 1721569972.3864052},\r\n               {'id': 244,\r\n                'mouse_x': 1254,\r\n                'mouse_y': 652,\r\n                'screenshot_id': 11,\r\n                'screenshot_timestamp': 1721569972.3549984,\r\n                'timestamp': 1721569972.3908093},\r\n               {'id': 245,\r\n                'mouse_x': 1245,\r\n                'mouse_y': 653,\r\n                'screenshot_id': 11,\r\n                'screenshot_timestamp': 1721569972.3549984,\r\n                'timestamp': 1721569972.40064},\r\n               {'id': 246,\r\n                'mouse_x': 1242,\r\n                'mouse_y': 653,\r\n                'screenshot_id': 11,\r\n                'screenshot_timestamp': 1721569972.3549984,\r\n                'timestamp': 1721569972.4023662},\r\n               {'id': 247,\r\n                'mouse_x': 1239,\r\n                'mouse_y': 653,\r\n                'screenshot_id': 11,\r\n                'screenshot_timestamp': 1721569972.3549984,\r\n                'timestamp': 1721569972.4231231},\r\n               {'id': 248,\r\n                'mouse_x': 1232,\r\n                'mouse_y': 653,\r\n                'screenshot_id': 11,\r\n                'screenshot_timestamp': 1721569972.3549984,\r\n                'timestamp': 1721569972.4339736},\r\n               {'id': 249,\r\n                'mouse_x': 1232,\r\n                'mouse_y': 652,\r\n                'screenshot_id': 12,\r\n                'screenshot_timestamp': 1721569975.5022848,\r\n                'timestamp': 1721569975.5144775},\r\n               {'id': 250,\r\n                'mouse_x': 1234,\r\n                'mouse_y': 645,\r\n                'screenshot_id': 12,\r\n                'screenshot_timestamp': 1721569975.5022848,\r\n                'timestamp': 1721569975.5282133},\r\n               {'id': 251,\r\n                'mouse_x': 1272,\r\n                'mouse_y': 583,\r\n                'screenshot_id': 12,\r\n                'screenshot_timestamp': 1721569975.5022848,\r\n                'timestamp': 1721569975.5507956},\r\n               {'id': 252,\r\n                'mouse_x': 1275,\r\n                'mouse_y': 575,\r\n                'screenshot_id': 12,\r\n                'screenshot_timestamp': 1721569975.5022848,\r\n                'timestamp': 1721569975.5543833},\r\n               {'id': 253,\r\n                'mouse_x': 1279,\r\n                'mouse_y': 567,\r\n                'screenshot_id': 12,\r\n                'screenshot_timestamp': 1721569975.5022848,\r\n                'timestamp': 1721569975.5824442},\r\n               {'id': 254,\r\n                'mouse_x': 1291,\r\n                'mouse_y': 559,\r\n                'screenshot_id': 12,\r\n                'screenshot_timestamp': 1721569975.5022848,\r\n                'timestamp': 1721569975.5831692},\r\n               {'children': [{'id': 255,\r\n                              'screenshot_id': 12,\r\n                              'screenshot_timestamp': 1721569975.5022848,\r\n                              'timestamp': 1721569975.586228},\r\n                             {'id': 256,\r\n                              'screenshot_id': 13,\r\n                              'screenshot_timestamp': 1721569995.8832257,\r\n                              'timestamp': 1721569995.9327462}],\r\n                'id': 257,\r\n                'mouse_x': 1290,\r\n                'mouse_y': 559,\r\n                'screenshot_id': 13,\r\n                'screenshot_timestamp': 1721569995.8832257,\r\n                'timestamp': 1721569975.6031942},\r\n               {'id': 258,\r\n                'mouse_x': 1289,\r\n                'mouse_y': 555,\r\n                'screenshot_id': 13,\r\n                'screenshot_timestamp': 1721569995.8832257,\r\n                'timestamp': 1721569975.6038504},\r\n               {'id': 259,\r\n                'mouse_x': 1289,\r\n                'mouse_y': 554,\r\n                'screenshot_id': 13,\r\n                'screenshot_timestamp': 1721569995.8832257,\r\n                'timestamp': 1721569975.6065505},\r\n               {'id': 260,\r\n                'mouse_x': 1289,\r\n                'mouse_y': 552,\r\n                'screenshot_id': 13,\r\n                'screenshot_timestamp': 1721569995.8832257,\r\n                'timestamp': 1721569975.6224337},\r\n               {'id': 261,\r\n                'mouse_x': 1289,\r\n                'mouse_y': 549,\r\n                'screenshot_id': 14,\r\n                'screenshot_timestamp': 1721569995.974621,\r\n                'timestamp': 1721569975.625444},\r\n               {'id': 262,\r\n                'mouse_x': 1289,\r\n                'mouse_y': 550,\r\n                'screenshot_id': 14,\r\n                'screenshot_timestamp': 1721569995.974621,\r\n                'timestamp': 1721569975.6386862},\r\n               {'children': [{'id': 263, 'timestamp': 1721569995.9923966},\r\n                             {'id': 264, 'timestamp': 1721569996.0092666}],\r\n                'id': 265,\r\n                'mouse_x': 1287,\r\n                'mouse_y': 557,\r\n                'screenshot_id': 14,\r\n                'screenshot_timestamp': 1721569995.974621,\r\n                'timestamp': 1721569975.640003},\r\n               {'id': 266,\r\n                'mouse_x': 1286,\r\n                'mouse_y': 558,\r\n                'screenshot_id': 14,\r\n                'screenshot_timestamp': 1721569995.974621,\r\n                'timestamp': 1721569975.6418583},\r\n               {'id': 267,\r\n                'mouse_x': 1284,\r\n                'mouse_y': 561,\r\n                'screenshot_id': 14,\r\n                'screenshot_timestamp': 1721569995.974621,\r\n                'timestamp': 1721569975.6455777},\r\n               {'id': 268,\r\n                'mouse_x': 1281,\r\n                'mouse_y': 565,\r\n                'screenshot_id': 14,\r\n                'screenshot_timestamp': 1721569995.974621,\r\n                'timestamp': 1721569975.6496458},\r\n               {'id': 269,\r\n                'mouse_x': 1278,\r\n                'mouse_y': 568,\r\n                'screenshot_id': 14,\r\n                'screenshot_timestamp': 1721569995.974621,\r\n                'timestamp': 1721569975.6545453},\r\n               {'id': 270,\r\n                'mouse_x': 1274,\r\n                'mouse_y': 576,\r\n                'screenshot_id': 14,\r\n                'screenshot_timestamp': 1721569995.974621,\r\n                'timestamp': 1721569975.657772},\r\n               {'id': 271,\r\n                'mouse_x': 1272,\r\n                'mouse_y': 581,\r\n                'screenshot_id': 14,\r\n                'screenshot_timestamp': 1721569995.974621,\r\n                'timestamp': 1721569975.6616013},\r\n               {'id': 272,\r\n                'mouse_x': 1270,\r\n                'mouse_y': 588,\r\n                'screenshot_id': 14,\r\n                'screenshot_timestamp': 1721569995.974621,\r\n                'timestamp': 1721569975.6656053},\r\n               {'id': 273,\r\n                'mouse_x': 1268,\r\n                'mouse_y': 594,\r\n                'screenshot_id': 14,\r\n                'screenshot_timestamp': 1721569995.974621,\r\n                'timestamp': 1721569975.6695735},\r\n               {'id': 274,\r\n                'mouse_x': 1267,\r\n                'mouse_y': 599,\r\n                'screenshot_id': 14,\r\n                'screenshot_timestamp': 1721569995.974621,\r\n                'timestamp': 1721569975.6741111},\r\n               {'id': 275,\r\n                'mouse_x': 1267,\r\n                'mouse_y': 606,\r\n                'screenshot_id': 14,\r\n                'screenshot_timestamp': 1721569995.974621,\r\n                'timestamp': 1721569975.6818907},\r\n               {'id': 276,\r\n                'mouse_x': 1263,\r\n                'mouse_y': 614,\r\n                'screenshot_id': 14,\r\n                'screenshot_timestamp': 1721569995.974621,\r\n                'timestamp': 1721569975.6998923},\r\n               {'id': 277,\r\n                'mouse_x': 1247,\r\n                'mouse_y': 663,\r\n                'screenshot_id': 14,\r\n                'screenshot_timestamp': 1721569995.974621,\r\n                'timestamp': 1721569975.7018683},\r\n               {'id': 278,\r\n                'mouse_x': 1240,\r\n                'mouse_y': 680,\r\n                'screenshot_id': 14,\r\n                'screenshot_timestamp': 1721569995.974621,\r\n                'timestamp': 1721569975.7030241},\r\n               {'id': 279,\r\n                'mouse_x': 1233,\r\n                'mouse_y': 694,\r\n                'screenshot_id': 14,\r\n                'screenshot_timestamp': 1721569995.974621,\r\n                'timestamp': 1721569975.7056851},\r\n               {'id': 280,\r\n                'mouse_x': 1228,\r\n                'mouse_y': 705,\r\n                'screenshot_id': 14,\r\n                'screenshot_timestamp': 1721569995.974621,\r\n                'timestamp': 1721569975.7095895},\r\n               {'id': 281,\r\n                'mouse_x': 1226,\r\n                'mouse_y': 715,\r\n                'screenshot_id': 14,\r\n                'screenshot_timestamp': 1721569995.974621,\r\n                'timestamp': 1721569975.715115},\r\n               {'id': 282,\r\n                'mouse_x': 1222,\r\n                'mouse_y': 726,\r\n                'screenshot_id': 14,\r\n                'screenshot_timestamp': 1721569995.974621,\r\n                'timestamp': 1721569975.7177162},\r\n               {'id': 283,\r\n                'mouse_x': 1220,\r\n                'mouse_y': 736,\r\n                'screenshot_id': 14,\r\n                'screenshot_timestamp': 1721569995.974621,\r\n                'timestamp': 1721569975.7216306},\r\n               {'id': 284,\r\n                'mouse_x': 1215,\r\n                'mouse_y': 747,\r\n                'screenshot_id': 14,\r\n                'screenshot_timestamp':QWindowsContext: OleInitialize() failed:  \"COM error 0x80010106: Cannot change thread mode after it is set.\"\r\nqt.qpa.window: SetProcessDpiAwarenessContext() failed: The operation completed successfully.\r\nQt's default DPI awareness context is DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2. If you know what you are doing, you can overwrite this default using qt.conf (https://doc.qt.io/qt-6/highdpi.html#configuring-windows).\r\n2024-07-21 11:25:47.482 | INFO     | __main__:main:258 - len(action_events)=58\r\nGenerating Visualization:   0%|                                                                     | 0/58 [00:00<?, ?event/s] \r\n--- Logging error in Loguru Handler #1 ---\r\nRecord was: None\r\nTraceback (most recent call last):\r\n  File \"P:\\OpenAdapt\\.venv\\lib\\site-packages\\loguru\\_handler.py\", line 272, in _queued_writer\r\n    message = queue.get()\r\n  File \"P:\\Program Files\\Python310\\lib\\multiprocessing\\queues.py\", line 367, in get\r\n    return _ForkingPickler.loads(res)\r\n  File \"av\\\\enum.pyx\", line 130, in av.enum._unpickle\r\n  File \"av\\\\enum.pyx\", line 58, in av.enum.EnumType.__getitem__\r\nKeyError: 'ERRORTYPE_2'\r\n--- End of logging error ---\r\n(.venv) PS P:\\OpenAdapt> \r\n```\n\n### To Reproduce\n\nI use Windows 11 OS.\r\n\r\nStep 1: Setup OpenAdapt.\r\nStep 2: Record a small clip with clicking on `calculator` app and type 10 - 2 = operation. Then, I open chrome. And there as well I typed, 10 - 2. FInally, stop the recording. I wait for the record to finish successfully.\r\nStep 3: Run `python -m openadapt.app.visualize`.",
      "state": "open",
      "author": "KrishPatel13",
      "author_type": "User",
      "created_at": "2024-07-21T15:29:54Z",
      "updated_at": "2024-09-20T14:00:46Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/862/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "abrichr"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/862",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/862",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:07.950004",
      "comments": [
        {
          "author": "abrichr",
          "body": "Thank you for reporting this @KrishPatel13. Can you please run `poetry update av` and try again?",
          "created_at": "2024-07-21T15:57:42Z"
        },
        {
          "author": "KrishPatel13",
          "body": "As per the pair-programming session between @abrichr and me,\r\n```\r\npoetry remove av\r\npoetry add av\r\n```\r\n\r\nworked for me. The old av version was 11.0.0 and the new version was: `12.3.0`",
          "created_at": "2024-07-21T16:35:42Z"
        },
        {
          "author": "KrishPatel13",
          "body": "Closing in light of: https://github.com/OpenAdaptAI/OpenAdapt/issues/862#issuecomment-2241706739.",
          "created_at": "2024-07-21T16:36:17Z"
        },
        {
          "author": "wjs9715",
          "body": "This is still happening in the macOS Sonoma. I've updated the AV library and using the latest master\r\nhttps://github.com/PyAV-Org/PyAV/issues/991#issuecomment-1706713466\r\nI followed the above to fix it",
          "created_at": "2024-08-08T05:18:55Z"
        },
        {
          "author": "abrichr",
          "body": "Reported by Bach Vu on Discord:\r\n```\r\nLast login: Fri Sep 20 13:53:00 on ttys000\r\nmacbook@May-tinh-xach-tay-cua-Macbook ~ % cd OpenAdapt\r\nmacbook@May-tinh-xach-tay-cua-Macbook OpenAdapt % poetry shell\r\nSpawning shell within /Users/macbook/Library/Caches/pypoetry/virtualenvs/openadapt-o9nVgTAt-py3.10",
          "created_at": "2024-09-20T14:00:10Z"
        }
      ]
    },
    {
      "issue_number": 874,
      "title": "Use Case: Corporation Registration",
      "body": "### Role\n\nFuture Corporation Owner\n\n### Task\n\n\r\n![image](https://github.com/user-attachments/assets/1f9d2570-f948-4c13-92c5-c6e4b64253b5)\r\n\r\n\r\nFor 1. Search the name you want on <state> SOS. If it’s not already a company then you can use it\r\n\r\n2. X will be the registered agent \r\n\r\n3. Ask ChatGPT to write articles of organization for a <state> LLC\r\n\r\n4. Call <state> SOS and ask how to file \r\n\r\n5. Prompt GPT to create operating agreement with X\r\n\r\n6. Get EIN from IRS website \r\n\r\n7. N/A\r\n\r\n8. See if the city X is in requires business license\n\n### Context\n\nRegistering a company to sponsor visa\n\n### Workflow\n\nTODO",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-09-17T20:52:00Z",
      "updated_at": "2024-09-17T20:52:01Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/874/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/874",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/874",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:08.151271",
      "comments": []
    },
    {
      "issue_number": 588,
      "title": "Implement Replay Action Confirmation",
      "body": "### Feature request\n\nWe would like to implement a `config.REPLAY_ENABLE_ACTION_CONFIRMATION: bool` that prompts the user via a desktop dialog (e.g. transparent modal, system tray button) that describes to the user what action the model is going to take next, and gets the user to confirm, modify, or cancel.\n\n### Motivation\n\nNot all `ActionEvent`s generated by all `ReplayStrategy`s will be correct.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-03-08T01:17:02Z",
      "updated_at": "2024-07-25T19:20:26Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "good first issue",
        "help wanted"
      ],
      "label_count": 3,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/588/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/588",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/588",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:10.056037",
      "comments": []
    },
    {
      "issue_number": 740,
      "title": "[Bug]: HTTP Error 400: Can't have direct dependency: openai-whisper",
      "body": "### Describe the bug\n\nhttps://github.com/OpenAdaptAI/OpenAdapt/actions/runs/9484457521/job/26135042643:\r\n\r\n```\r\n - Uploading openadapt-0.31.0-py3-none-any.whl 100%\r\nHTTP Error 400: Can't have direct dependency: openai-whisper@ git+https://github.com/openai/whisper.git. See https://packaging.python.org/specifications/core-metadata for more information. | b\"<html>\\n <head>\\n  <title>400 Can't have direct dependency: openai-whisper@ git+https://github.com/openai/whisper.git. See https://packaging.python.org/specifications/core-metadata for more information.\\n \\n <body>\\n  <h1>400 Can't have direct dependency: openai-whisper@ git+https://github.com/openai/whisper.git. See https://packaging.python.org/specifications/core-metadata for more information.\\n  The server could not comply with the request since it is either malformed or otherwise incorrect.<br/><br/>\\nCan&#x27;t have direct dependency: openai-whisper@ git+https://github.com/openai/whisper.git. See https://packaging.python.org/specifications/core-metadata for more information.\\n\\n\\n \\n\"\r\nError: Process completed with exit code 1.\r\n```\r\n\r\nWhile this workflow fails, the version bump succeeds:\r\n\r\nhttps://github.com/OpenAdaptAI/OpenAdapt/commit/1338fa22391af12b8d867b0cbc9f1429c4eeb450\n\n### To Reproduce\n\nMerge a PR",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-12T15:04:20Z",
      "updated_at": "2024-07-25T19:16:31Z",
      "closed_at": "2024-07-25T19:16:31Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 15,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/740/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/740",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/740",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:10.056074",
      "comments": [
        {
          "author": "abrichr",
          "body": "@KIRA009 your thoughts on this would be very much appreciated! 🙏 ",
          "created_at": "2024-06-12T15:04:40Z"
        },
        {
          "author": "abrichr",
          "body": "@KIRA009 the \"publish to pypi\" step failed: https://github.com/OpenAdaptAI/OpenAdapt/actions/runs/9516888546\r\n\r\n```\r\nPublishing openadapt (0.33.1) to PyPI\r\n - Uploading openadapt-0.33.1-py3-none-any.whl 0%\r\n\r\n - Uploading openadapt-0.33.1-py3-none-any.whl 100%\r\nHTTP Error 400: Can't have direct depe",
          "created_at": "2024-06-14T13:57:37Z"
        },
        {
          "author": "abrichr",
          "body": "The same step failed again in https://github.com/OpenAdaptAI/OpenAdapt/actions/runs/9529191944/job/26267849108:\r\n\r\n```\r\nInstalling the current project: openadapt (0.33.2)\r\nUsing a plaintext file to store credentials\r\nBuilding openadapt (0.33.2)\r\n  - Building sdist\r\n  - Built openadapt-0.33.2.tar.gz\r",
          "created_at": "2024-06-15T16:08:08Z"
        },
        {
          "author": "KIRA009",
          "body": "Having looked online, this is a known issue with PyPI which they don't intend to patch. The temporary solution that many have suggested is to upload the dependency as a temporary package to pypi - https://til.dchan.cc/posts/11-29-2022/, https://github.com/pypi/warehouse/issues/9404",
          "created_at": "2024-06-17T09:41:01Z"
        },
        {
          "author": "abrichr",
          "body": "Thanks @KIRA009 ! I believe we did this with `oa_pynput` and `oa_atomacos`. Why do we need to do this with whisper? It appears to be pointing to the official release.",
          "created_at": "2024-06-17T15:33:39Z"
        }
      ]
    },
    {
      "issue_number": 658,
      "title": "[Bug]: VisualReplayStrategy fails endlessly",
      "body": "### Describe the bug\n\n```\r\n2024-05-10 10:20:11.748 | WARNING  | openadapt.strategies.visual:get_next_action_event:275 - exc=ValueError(\"'Equal sign operator button' is not in list\")\r\n2024-05-10 10:20:11.761 | INFO     | openadapt.strategies.visual:find_similar_image_segmentation:434 - similarity_index=0.9868481990212511\r\n2024-05-10 10:20:11.762 | WARNING  | openadapt.strategies.visual:get_next_action_event:275 - exc=ValueError(\"'Equal sign operator button' is not in list\")\r\n2024-05-10 10:20:11.774 | INFO     | openadapt.strategies.visual:find_similar_image_segmentation:434 - similarity_index=0.9868481990212511\r\n2024-05-10 10:20:11.775 | WARNING  | openadapt.strategies.visual:get_next_action_event:275 - exc=ValueError(\"'Equal sign operator button' is not in list\")\r\n2024-05-10 10:20:11.788 | INFO     | openadapt.strategies.visual:find_similar_image_segmentation:434 - similarity_index=0.9868481990212511\r\n2024-05-10 10:20:11.788 | WARNING  | openadapt.strategies.visual:get_next_action_event:275 - exc=ValueError(\"'Equal sign operator button' is not in list\")\r\n2024-05-10 10:20:11.800 | INFO     | openadapt.strategies.visual:find_similar_image_segmentation:434 - similarity_index=0.9868481990212511\r\n2024-05-10 10:20:11.801 | WARNING  | openadapt.strategies.visual:get_next_action_event:275 - exc=ValueError(\"'Equal sign operator button' is not in list\")\r\n2024-05-10 10:20:11.814 | INFO     | openadapt.strategies.visual:find_similar_image_segmentation:434 - similarity_index=0.9868481990212511\r\n2024-05-10 10:20:11.814 | WARNING  | openadapt.strategies.visual:get_next_action_event:275 - exc=ValueError(\"'Equal sign operator button' is not in list\")\r\n2024-05-10 10:20:11.827 | INFO     | openadapt.strategies.visual:find_similar_image_segmentation:434 - similarity_index=0.9868481990212511\r\n2024-05-10 10:20:11.827 | WARNING  | openadapt.strategies.visual:get_next_action_event:275 - exc=ValueError(\"'Equal sign operator button' is not in list\")\r\n2024-05-10 10:20:11.840 | INFO     | openadapt.strategies.visual:find_similar_image_segmentation:434 - similarity_index=0.9868481990212511\r\n2024-05-10 10:20:11.840 | WARNING  | openadapt.strategies.visual:get_next_action_event:275 - exc=ValueError(\"'Equal sign operator button' is not in list\")\r\n2024-05-10 10:20:11.853 | INFO     | openadapt.strategies.visual:find_similar_image_segmentation:434 - similarity_index=0.9868481990212511\r\n2024-05-10 10:20:11.853 | WARNING  | openadapt.strategies.visual:get_next_action_event:275 - exc=ValueError(\"'Equal sign operator button' is not in list\")\r\n2024-05-10 10:20:11.866 | INFO     | openadapt.strategies.visual:find_similar_image_segmentation:434 - similarity_index=0.9868481990212511\r\n2024-05-10 10:20:11.866 | WARNING  | openadapt.strategies.visual:get_next_action_event:275 - exc=ValueError(\"'Equal sign operator button' is not in list\")\r\n2024-05-10 10:20:11.879 | INFO     | openadapt.strategies.visual:find_similar_image_segmentation:434 - similarity_index=0.9868481990212511\r\n2024-05-10 10:20:11.880 | WARNING  | openadapt.strategies.visual:get_next_action_event:275 - exc=ValueError(\"'Equal sign operator button' is not in list\")\r\n2024-05-10 10:20:11.892 | INFO     | openadapt.strategies.visual:find_similar_image_segmentation:434 - similarity_index=0.9868481990212511\r\n2024-05-10 10:20:11.893 | WARNING  | openadapt.strategies.visual:get_next_action_event:275 - exc=ValueError(\"'Equal sign operator button' is not in list\")\r\n2024-05-10 10:20:11.906 | INFO     | openadapt.strategies.visual:find_similar_image_segmentation:434 - similarity_index=0.9868481990212511\r\n2024-05-10 10:20:11.906 | WARNING  | openadapt.strategies.visual:get_next_action_event:275 - exc=ValueError(\"'Equal sign operator button' is not in list\")\r\n```\n\n### To Reproduce\n\n`python -m openadapt.replay VisualReplayStrategy \"calculate 2+3-4\"`",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-05-10T14:32:54Z",
      "updated_at": "2024-07-25T16:34:58Z",
      "closed_at": "2024-07-25T16:34:58Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/658/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/658",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/658",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:10.316853",
      "comments": []
    },
    {
      "issue_number": 725,
      "title": "Modify `WindowEvent.to_prompt_dict` to include computed centroid",
      "body": "### Feature request\n\nFrom https://arxiv.org/pdf/2406.03679:\r\n\r\n> When predicting an action that involves a target element, the model should output sufficient details to\r\nlocate the target UI element, either an index or its geometric information such as its bounding rectangle.\r\nTo reduce the complexity of parsing the model output, we prompt an LLM to output its action selection\r\nin a predefined JSON format. In the case of element click, for instance, the model outputs a prediction\r\nin the following format: {\"action_type\":\"click\",\"x\":<x_coordinate>,\"y\":<y_coordinate>}, where the\r\ntarget element is identified by its center coordinates. We found LLMs work equally well with\r\npredicting element centers or element indices, but as the former approach is compatible with click\r\nactions that are not restricted to specific UI elements, our implementation always outputs the center\r\nof the target UI element. The same applies to all actions that take an element as input.\r\n\r\nWe have not tried modifying the accessibility tree to include centroids. We just use the bounding box as provided by the API.\r\n\r\nThis task involves modifying `WindowEvent.to_prompt_dict` to replace bounding boxes with centroids.\n\n### Motivation\n\n_No response_",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-08T14:29:52Z",
      "updated_at": "2024-07-24T23:43:09Z",
      "closed_at": "2024-07-24T23:43:09Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/725/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KrishPatel13"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/725",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/725",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:10.316881",
      "comments": [
        {
          "author": "KrishPatel13",
          "body": "Ready for review @abrichr !\nPR: https://github.com/OpenAdaptAI/OpenAdapt/pull/840",
          "created_at": "2024-07-14T22:42:54Z"
        }
      ]
    },
    {
      "issue_number": 861,
      "title": "[Bug]: ValueError in `openadapt\\video.py:151` - Specified pixel format rgb24 is invalid or not supported",
      "body": "### Describe the bug\n\nI was not expecting this error to occur:\r\n\r\nTerminal Log:\r\n```\r\n(.venv) PS P:\\OpenAdapt\\openadapt> python -m openadapt.record \"calculator 10 - 2 example\" \r\n2024-07-21 09:50:42.043 | INFO     | openadapt.utils:wrapper_logging:717 -  -> Enter: record(calculator 10 - 2 example, None, None, None, False)\r\n2024-07-21 09:50:42.121 | INFO     | openadapt.db.crud:acquire_db_lock:885 - Database lock acquired.\r\n2024-07-21 09:50:42.137 | INFO     | __main__:record:1169 - task_description='calculator 10 - 2 example'\r\n2024-07-21 09:50:42.144 | INFO     | openadapt.utils:wrapper_logging:717 -  -> Enter: create_recording(calculator 10 - 2 example)\r\n2024-07-21 09:50:42.212 | INFO     | __main__:create_recording:877 - recording=Recording(id=2, timestamp=1721569842.1443634, monitor_width=2560, monitor_height=1600, double_click_interval_seconds=0.5, double_click_distance_pixels=4, platform='win32', task_description='calculator 10 - 2 example', config={'ROOT_DIR_PATH': 'P:\\\\OpenAdapt\\\\openadapt', 'PRIVATE_AI_API_KEY': '******************Y>', 'REPLICATE_API_TOKEN': '*******************N>', 'DEFAULT_SEGMENTATION_ADAPTER': 'ultralytics', 'OPENAI_API_KEY': '***************>', 'ANTHROPIC_API_KEY': '******************>', 'GOOGLE_API_KEY': '***************>', 'CACHE_DIR_PATH': '.cache', 'CACHE_ENABLED': True, 'CACHE_VERBOSITY': 0, 'DB_ECHO': False, 'ERROR_REPORTING_ENABLED': True, 'OPENAI_MODEL_NAME': 'gpt-3.5-turbo', 'RECORD_WINDOW_DATA': False, 'RECORD_READ_ACTIVE_ELEMENT_STATE': False, 'RECORD_VIDEO': True, 'RECORD_AUDIO': True, 'RECORD_FULL_VIDEO': False, 'RECORD_IMAGES': False, 'LOG_MEMORY': False, 'REPLAY_STRIP_ELEMENT_STATE': True, 'VIDEO_ENCODING': 'libx264', 'VIDEO_PIXEL_FORMAT': 'rgb24', 'VIDEO_DIR_PATH': 'P:\\\\OpenAdapt\\\\openadapt\\\\data\\\\videos', 'STOP_SEQUENCES': [['o', 'a', '.', 's', 't', 'o', 'p'], ['ctrl', 'ctrl', 'ctrl']], 'IGNORE_WARNINGS': False, 'MAX_NUM_WARNINGS_PER_SECOND': 5, 'WARNING_SUPPRESSION_PERIOD': 1, 'MESSAGES_TO_FILTER': ['Cannot pickle Objective-C objects'], 'ACTION_TEXT_SEP': '-', 'ACTION_TEXT_NAME_PREFIX': '<', 'ACTION_TEXT_NAME_SUFFIX': '>', 'PLOT_PERFORMANCE': True, 'APP_DARK_MODE': False, 'SCRUB_ENABLED': False, 'SCRUB_CHAR': '*', 'SCRUB_LANGUAGE': 'en', 'SCRUB_FILL_COLOR': 255, 'SCRUB_KEYS_HTML': ['text', 'canonical_text', 'title', 'state', 'task_description', 'key_char', 'canonical_key_char', 'key_vk', 'children'], 'SCRUB_CONFIG_TRF': {'nlp_engine_name': 'spacy', 'models': [{'lang_code': 'en', 'model_name': 'en_core_web_trf'}]}, 'SCRUB_PRESIDIO_IGNORE_ENTITIES': [], 'VISUALIZE_DARK_MODE': False, 'VISUALIZE_RUN_NATIVELY': True, 'VISUALIZE_DENSE_TREES': True, 'VISUALIZE_ANIMATIONS': True, 'VISUALIZE_EXPAND_ALL': False, 'VISUALIZE_MAX_TABLE_CHILDREN': 10, 'SAVE_SCREENSHOT_DIFF': False, 'SPACY_MODEL_NAME': 'en_core_web_trf', 'DASHBOARD_CLIENT_PORT': 5173, 'DASHBOARD_SERVER_PORT': 8080, 'SOM_SERVER_URL': '<SOM_SERVER_URL>', 'UNIQUE_USER_ID': '02dc5f85-b96a-4cd6-94d0-6ab08a8227e0', 'REDIRECT_TO_ONBOARDING': True, 'DEFAULT_ADAPTER': 'openai'})\r\n2024-07-21 09:50:42.212 | INFO     | openadapt.utils:wrapper_logging:729 -  <- Leave: create_recording(Recording(id=2, timestamp=1721569842.1443634, monitor_width=2560, monitor_height=1600, double_click_interval_seconds=0.5, double_click_distance_pixels=4, platform='win32', task_description='calculator 10 - 2 example', config={'ROOT_DIR_PATH': 'P:\\\\OpenAdapt\\\\openadapt', 'PRIVATE_AI_API_KEY': '******************Y>', 'REPLICATE_API_TOKEN': '*******************N>', 'DEFAULT_SEGMENTATION_ADAPTER': 'ultralytics', 'OPENAI_API_KEY': '***************>', 'ANTHROPIC_API_KEY': '******************>', 'GOOGLE_API_KEY': '***************>', 'CACHE_DIR_PATH': '.cache', 'CACHE_ENABLED': True, 'CACHE_VERBOSITY': 0, 'DB_ECHO': False, 'ERROR_REPORTING_ENABLED': True, 'OPENAI_MODEL_NAME': 'gpt-3.5-turbo', 'RECORD_WINDOW_DATA': False, 'RECORD_READ_ACTIVE_ELEMENT_STATE': False, 'RECORD_VIDEO': True, 'RECORD_AUDIO': True, 'RECORD_FULL_VIDEO': False, 'RECORD_IMAGES': False, 'LOG_MEMORY': False, 'REPLAY_STRIP_ELEMENT_STATE': True, 'VIDEO_ENCODING': 'libx264', 'VIDEO_PIXEL_FORMAT': 'rgb24', 'VIDEO_DIR_PATH': 'P:\\\\OpenAdapt\\\\openadapt\\\\data\\\\videos', 'STOP_SEQUENCES': [['o', 'a', '.', 's', 't', 'o', 'p'], ['ctrl', 'ctrl', 'ctrl']], 'IGNORE_WARNINGS': False, 'MAX_NUM_WARNINGS_PER_SECOND': 5, 'WARNING_SUPPRESSION_PERIOD': 1, 'MESSAGES_TO_FILTER': ['Cannot pickle Objective-C objects'], 'ACTION_TEXT_SEP': '-', 'ACTION_TEXT_NAME_PREFIX': '<', 'ACTION_TEXT_NAME_SUFFIX': '>', 'PLOT_PERFORMANCE': True, 'APP_DARK_MODE': False, 'SCRUB_ENABLED': False, 'SCRUB_CHAR': '*', 'SCRUB_LANGUAGE': 'en', 'SCRUB_FILL_COLOR': 255, 'SCRUB_KEYS_HTML': ['text', 'canonical_text', 'title', 'state', 'task_description', 'key_char', 'canonical_key_char', 'key_vk', 'children'], 'SCRUB_CONFIG_TRF': {'nlp_engine_name': 'spacy', 'models': [{'lang_code': 'en', 'model_name': 'en_core_web_trf'}]}, 'SCRUB_PRESIDIO_IGNORE_ENTITIES': [], 'VISUALIZE_DARK_MODE': False, 'VISUALIZE_RUN_NATIVELY': True, 'VISUALIZE_DENSE_TREES': True, 'VISUALIZE_ANIMATIONS': True, 'VISUALIZE_EXPAND_ALL': False, 'VISUALIZE_MAX_TABLE_CHILDREN': 10, 'SAVE_SCREENSHOT_DIFF': False, 'SPACY_MODEL_NAME': 'en_core_web_trf', 'DASHBOARD_CLIENT_PORT': 5173, 'DASHBOARD_SERVER_PORT': 8080, 'SOM_SERVER_URL': '<SOM_SERVER_URL>', 'UNIQUE_USER_ID': '02dc5f85-b96a-4cd6-94d0-6ab08a8227e0', 'REDIRECT_TO_ONBOARDING': True, 'DEFAULT_ADAPTER': 'openai'}))\r\n2024-07-21 09:50:42.234 | INFO     | openadapt.utils:wrapper_logging:717 -  -> Enter: read_window_events(<queue.Queue object at 0x00000242B9139360>, <multiprocessing.synchronize.Event object at 0x00000242B92B8100>, Recording(id=2, timestamp=1721569842.1443634, monitor_width=2560, monitor_height=1600, double_click_interval_seconds=0.5, double_click_distance_pixels=4, platform='win32', task_description='calculator 10 - 2 example', config={'ROOT_DIR_PATH': 'P:\\\\OpenAdapt\\\\openadapt', 'PRIVATE_AI_API_KEY': '******************Y>', 'REPLICATE_API_TOKEN': '*******************N>', 'DEFAULT_SEGMENTATION_ADAPTER': 'ultralytics', 'OPENAI_API_KEY': '***************>', 'ANTHROPIC_API_KEY': '******************>', 'GOOGLE_API_KEY': '***************>', 'CACHE_DIR_PATH': '.cache', 'CACHE_ENABLED': True, 'CACHE_VERBOSITY': 0, 'DB_ECHO': False, 'ERROR_REPORTING_ENABLED': True, 'OPENAI_MODEL_NAME': 'gpt-3.5-turbo', 'RECORD_WINDOW_DATA': False, 'RECORD_READ_ACTIVE_ELEMENT_STATE': False, 'RECORD_VIDEO': True, 'RECORD_AUDIO': True, 'RECORD_FULL_VIDEO': False, 'RECORD_IMAGES': False, 'LOG_MEMORY': False, 'REPLAY_STRIP_ELEMENT_STATE': True, 'VIDEO_ENCODING': 'libx264', 'VIDEO_PIXEL_FORMAT': 'rgb24', 'VIDEO_DIR_PATH': 'P:\\\\OpenAdapt\\\\openadapt\\\\data\\\\videos', 'STOP_SEQUENCES': [['o', 'a', '.', 's', 't', 'o', 'p'], ['ctrl', 'ctrl', 'ctrl']], 'IGNORE_WARNINGS': False, 'MAX_NUM_WARNINGS_PER_SECOND': 5, 'WARNING_SUPPRESSION_PERIOD': 1, 'MESSAGES_TO_FILTER': ['Cannot pickle Objective-C objects'], 'ACTION_TEXT_SEP': '-', 'ACTION_TEXT_NAME_PREFIX': '<', 'ACTION_TEXT_NAME_SUFFIX': '>', 'PLOT_PERFORMANCE': True, 'APP_DARK_MODE': False, 'SCRUB_ENABLED': False, 'SCRUB_CHAR': '*', 'SCRUB_LANGUAGE': 'en', 'SCRUB_FILL_COLOR': 255, 'SCRUB_KEYS_HTML': ['text', 'canonical_text', 'title', 'state', 'task_description', 'key_char', 'canonical_key_char', 'key_vk', 'children'], 'SCRUB_CONFIG_TRF': {'nlp_engine_name': 'spacy', 'models': [{'lang_code': 'en', 'model_name': 'en_core_web_trf'}]}, 'SCRUB_PRESIDIO_IGNORE_ENTITIES': [], 'VISUALIZE_DARK_MODE': False, 'VISUALIZE_RUN_NATIVELY': True, 'VISUALIZE_DENSE_TREES': True, 'VISUALIZE_ANIMATIONS': True, 'VISUALIZE_EXPAND_ALL': False, 'VISUALIZE_MAX_TABLE_CHILDREN': 10, 'SAVE_SCREENSHOT_DIFF': False, 'SPACY_MODEL_NAME': 'en_core_web_trf', 'DASHBOARD_CLIENT_PORT': 5173, 'DASHBOARD_SERVER_PORT': 8080, 'SOM_SERVER_URL': '<SOM_SERVER_URL>', 'UNIQUE_USER_ID': '02dc5f85-b96a-4cd6-94d0-6ab08a8227e0', 'REDIRECT_TO_ONBOARDING': True, 'DEFAULT_ADAPTER': 'openai'}), <Synchronized wrapper for c_long(0)>)\r\n2024-07-21 09:50:42.234 | INFO     | __main__:read_screen_events:678 - Starting\r\n2024-07-21 09:50:42.242 | INFO     | __main__:read_window_events:710 - Starting\r\n2024-07-21 09:50:42.242 | INFO     | openadapt.utils:wrapper_logging:717 -  -> Enter: process_events(<queue.Queue object at 0x00000242B9139360>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x00000242B90E2350>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x00000242B925B640>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x00000242B925AD10>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x00000242B925BBB0>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x00000242B925AB30>, Recording(id=2, timestamp=1721569842.1443634, monitor_width=2560, monitor_height=1600, double_click_interval_seconds=0.5, double_click_distance_pixels=4, platform='win32', task_description='calculator 10 - 2 example', config={'ROOT_DIR_PATH': 'P:\\\\OpenAdapt\\\\openadapt', 'PRIVATE_AI_API_KEY': '******************Y>', 'REPLICATE_API_TOKEN': '*******************N>', 'DEFAULT_SEGMENTATION_ADAPTER': 'ultralytics', 'OPENAI_API_KEY': '***************>', 'ANTHROPIC_API_KEY': '******************>', 'GOOGLE_API_KEY': '***************>', 'CACHE_DIR_PATH': '.cache', 'CACHE_ENABLED': True, 'CACHE_VERBOSITY': 0, 'DB_ECHO': False, 'ERROR_REPORTING_ENABLED': True, 'OPENAI_MODEL_NAME': 'gpt-3.5-turbo', 'RECORD_WINDOW_DATA': False, 'RECORD_READ_ACTIVE_ELEMENT_STATE': False, 'RECORD_VIDEO': True, 'RECORD_AUDIO': True, 'RECORD_FULL_VIDEO': False, 'RECORD_IMAGES': False, 'LOG_MEMORY': False, 'REPLAY_STRIP_ELEMENT_STATE': True, 'VIDEO_ENCODING': 'libx264', 'VIDEO_PIXEL_FORMAT': 'rgb24', 'VIDEO_DIR_PATH': 'P:\\\\OpenAdapt\\\\openadapt\\\\data\\\\videos', 'STOP_SEQUENCES': [['o', 'a', '.', 's', 't', 'o', 'p'], ['ctrl', 'ctrl', 'ctrl']], 'IGNORE_WARNINGS': False, 'MAX_NUM_WARNINGS_PER_SECOND': 5, 'WARNING_SUPPRESSION_PERIOD': 1, 'MESSAGES_TO_FILTER': ['Cannot pickle Objective-C objects'], 'ACTION_TEXT_SEP': '-', 'ACTION_TEXT_NAME_PREFIX': '<', 'ACTION_TEXT_NAME_SUFFIX': '>', 'PLOT_PERFORMANCE': True, 'APP_DARK_MODE': False, 'SCRUB_ENABLED': False, 'SCRUB_CHAR': '*', 'SCRUB_LANGUAGE': 'en', 'SCRUB_FILL_COLOR': 255, 'SCRUB_KEYS_HTML': ['text', 'canonical_text', 'title', 'state', 'task_description', 'key_char', 'canonical_key_char', 'key_vk', 'children'], 'SCRUB_CONFIG_TRF': {'nlp_engine_name': 'spacy', 'models': [{'lang_code': 'en', 'model_name': 'en_core_web_trf'}]}, 'SCRUB_PRESIDIO_IGNORE_ENTITIES': [], 'VISUALIZE_DARK_MODE': False, 'VISUALIZE_RUN_NATIVELY': True, 'VISUALIZE_DENSE_TREES': True, 'VISUALIZE_ANIMATIONS': True, 'VISUALIZE_EXPAND_ALL': False, 'VISUALIZE_MAX_TABLE_CHILDREN': 10, 'SAVE_SCREENSHOT_DIFF': False, 'SPACY_MODEL_NAME': 'en_core_web_trf', 'DASHBOARD_CLIENT_PORT': 5173, 'DASHBOARD_SERVER_PORT': 8080, 'SOM_SERVER_URL': '<SOM_SERVER_URL>', 'UNIQUE_USER_ID': '02dc5f85-b96a-4cd6-94d0-6ab08a8227e0', 'REDIRECT_TO_ONBOARDING': True, 'DEFAULT_ADAPTER': 'openai'}), <multiprocessing.synchronize.Event object at 0x00000242B92B8100>, <Synchronized wrapper for c_long(1)>, <Synchronized wrapper for c_long(0)>, <Synchronized wrapper for c_long(0)>, <Synchronized wrapper for c_long(0)>, <Synchronized wrapper for c_long(0)>)\r\n2024-07-21 09:50:42.255 | INFO     | __main__:process_events:160 - Starting\r\n2024-07-21 09:50:55.174 | INFO     | openadapt.utils:wrapper_logging:717 -  -> Enter: write_events(action, <function write_action_event at 0x0000020A131DE0E0>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x0000020A6CF631F0>, <Synchronized wrapper for c_long(0)>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x0000020A13205E40>, Recording(id=2, timestamp=1721569842.1443634, monitor_width=2560, monitor_height=1600, double_click_interval_seconds=0.5, double_click_distance_pixels=4, platform='win32', task_description='calculator 10 - 2 example', config={'ROOT_DIR_PATH': 'P:\\\\OpenAdapt\\\\openadapt', 'PRIVATE_AI_API_KEY': '******************Y>', 'REPLICATE_API_TOKEN': '*******************N>', 'DEFAULT_SEGMENTATION_ADAPTER': 'ultralytics', 'OPENAI_API_KEY': '***************>', 'ANTHROPIC_API_KEY': '******************>', 'GOOGLE_API_KEY': '***************>', 'CACHE_DIR_PATH': '.cache', 'CACHE_ENABLED': True, 'CACHE_VERBOSITY': 0, 'DB_ECHO': False, 'ERROR_REPORTING_ENABLED': True, 'OPENAI_MODEL_NAME': 'gpt-3.5-turbo', 'RECORD_WINDOW_DATA': False, 'RECORD_READ_ACTIVE_ELEMENT_STATE': False, 'RECORD_VIDEO': True, 'RECORD_AUDIO': True, 'RECORD_FULL_VIDEO': False, 'RECORD_IMAGES': False, 'LOG_MEMORY': False, 'REPLAY_STRIP_ELEMENT_STATE': True, 'VIDEO_ENCODING': 'libx264', 'VIDEO_PIXEL_FORMAT': 'rgb24', 'VIDEO_DIR_PATH': 'P:\\\\OpenAdapt\\\\openadapt\\\\data\\\\videos', 'STOP_SEQUENCES': [['o', 'a', '.', 's', 't', 'o', 'p'], ['ctrl', 'ctrl', 'ctrl']], 'IGNORE_WARNINGS': False, 'MAX_NUM_WARNINGS_PER_SECOND': 5, 'WARNING_SUPPRESSION_PERIOD': 1, 'MESSAGES_TO_FILTER': ['Cannot pickle Objective-C objects'], 'ACTION_TEXT_SEP': '-', 'ACTION_TEXT_NAME_PREFIX': '<', 'ACTION_TEXT_NAME_SUFFIX': '>', 'PLOT_PERFORMANCE': True, 'APP_DARK_MODE': False, 'SCRUB_ENABLED': False, 'SCRUB_CHAR': '*', 'SCRUB_LANGUAGE': 'en', 'SCRUB_FILL_COLOR': 255, 'SCRUB_KEYS_HTML': ['text', 'canonical_text', 'title', 'state', 'task_description', 'key_char', 'canonical_key_char', 'key_vk', 'children'], 'SCRUB_CONFIG_TRF': {'nlp_engine_name': 'spacy', 'models': [{'lang_code': 'en', 'model_name': 'en_core_web_trf'}]}, 'SCRUB_PRESIDIO_IGNORE_ENTITIES': [], 'VISUALIZE_DARK_MODE': False, 'VISUALIZE_RUN_NATIVELY': True, 'VISUALIZE_DENSE_TREES': True, 'VISUALIZE_ANIMATIONS': True, 'VISUALIZE_EXPAND_ALL': False, 'VISUALIZE_MAX_TABLE_CHILDREN': 10, 'SAVE_SCREENSHOT_DIFF': False, 'SPACY_MODEL_NAME': 'en_core_web_trf', 'DASHBOARD_CLIENT_PORT': 5173, 'DASHBOARD_SERVER_PORT': 8080, 'SOM_SERVER_URL': '<SOM_SERVER_URL>', 'UNIQUE_USER_ID': '02dc5f85-b96a-4cd6-94d0-6ab08a8227e0', 'REDIRECT_TO_ONBOARDING': True, 'DEFAULT_ADAPTER': 'openai'}), <multiprocessing.synchronize.Event object at 0x0000020A13205270>, <Synchronized wrapper for c_long(4)>)\r\n2024-07-21 09:50:55.188 | DEBUG    | openadapt.utils:set_start_time:375 - _start_time=1721569842.1443634 _start_perf_counter=48673.43568\r\n2024-07-21 09:50:55.188 | INFO     | __mp_main__:write_events:350 - event_type='action' starting\r\n2024-07-21 09:50:55.194 | INFO     | openadapt.utils:wrapper_logging:717 -  -> Enter: write_events(window, <function write_window_event at 0x0000028EC90AE320>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x0000028EA30131F0>, <Synchronized wrapper for c_long(0)>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x0000028EC90D5EA0>, Recording(id=2, timestamp=1721569842.1443634, monitor_width=2560, monitor_height=1600, double_click_interval_seconds=0.5, double_click_distance_pixels=4, platform='win32', task_description='calculator 10 - 2 example', config={'ROOT_DIR_PATH': 'P:\\\\OpenAdapt\\\\openadapt', 'PRIVATE_AI_API_KEY': '******************Y>', 'REPLICATE_API_TOKEN': '*******************N>', 'DEFAULT_SEGMENTATION_ADAPTER': 'ultralytics', 'OPENAI_API_KEY': '***************>', 'ANTHROPIC_API_KEY': '******************>', 'GOOGLE_API_KEY': '***************>', 'CACHE_DIR_PATH': '.cache', 'CACHE_ENABLED': True, 'CACHE_VERBOSITY': 0, 'DB_ECHO': False, 'ERROR_REPORTING_ENABLED': True, 'OPENAI_MODEL_NAME': 'gpt-3.5-turbo', 'RECORD_WINDOW_DATA': False, 'RECORD_READ_ACTIVE_ELEMENT_STATE': False, 'RECORD_VIDEO': True, 'RECORD_AUDIO': True, 'RECORD_FULL_VIDEO': False, 'RECORD_IMAGES': False, 'LOG_MEMORY': False, 'REPLAY_STRIP_ELEMENT_STATE': True, 'VIDEO_ENCODING': 'libx264', 'VIDEO_PIXEL_FORMAT': 'rgb24', 'VIDEO_DIR_PATH': 'P:\\\\OpenAdapt\\\\openadapt\\\\data\\\\videos', 'STOP_SEQUENCES': [['o', 'a', '.', 's', 't', 'o', 'p'], ['ctrl', 'ctrl', 'ctrl']], 'IGNORE_WARNINGS': False, 'MAX_NUM_WARNINGS_PER_SECOND': 5, 'WARNING_SUPPRESSION_PERIOD': 1, 'MESSAGES_TO_FILTER': ['Cannot pickle Objective-C objects'], 'ACTION_TEXT_SEP': '-', 'ACTION_TEXT_NAME_PREFIX': '<', 'ACTION_TEXT_NAME_SUFFIX': '>', 'PLOT_PERFORMANCE': True, 'APP_DARK_MODE': False, 'SCRUB_ENABLED': False, 'SCRUB_CHAR': '*', 'SCRUB_LANGUAGE': 'en', 'SCRUB_FILL_COLOR': 255, 'SCRUB_KEYS_HTML': ['text', 'canonical_text', 'title', 'state', 'task_description', 'key_char', 'canonical_key_char', 'key_vk', 'children'], 'SCRUB_CONFIG_TRF': {'nlp_engine_name': 'spacy', 'models': [{'lang_code': 'en', 'model_name': 'en_core_web_trf'}]}, 'SCRUB_PRESIDIO_IGNORE_ENTITIES': [], 'VISUALIZE_DARK_MODE': False, 'VISUALIZE_RUN_NATIVELY': True, 'VISUALIZE_DENSE_TREES': True, 'VISUALIZE_ANIMATIONS': True, 'VISUALIZE_EXPAND_ALL': False, 'VISUALIZE_MAX_TABLE_CHILDREN': 10, 'SAVE_SCREENSHOT_DIFF': False, 'SPACY_MODEL_NAME': 'en_core_web_trf', 'DASHBOARD_CLIENT_PORT': 5173, 'DASHBOARD_SERVER_PORT': 8080, 'SOM_SERVER_URL': '<SOM_SERVER_URL>', 'UNIQUE_USER_ID': '02dc5f85-b96a-4cd6-94d0-6ab08a8227e0', 'REDIRECT_TO_ONBOARDING': True, 'DEFAULT_ADAPTER': 'openai'}), <multiprocessing.synchronize.Event object at 0x0000028EC90D52D0>, <Synchronized wrapper for c_long(4)>)\r\n2024-07-21 09:50:55.196 | DEBUG    | openadapt.utils:set_start_time:375 - _start_time=1721569842.1443634 _start_perf_counter=48673.4525746\r\n2024-07-21 09:50:55.196 | INFO     | __mp_main__:write_events:350 - event_type='window' starting\r\n2024-07-21 09:50:55.378 | INFO     | openadapt.utils:wrapper_logging:717 -  -> Enter: write_events(screen, <function write_screen_event at 0x000001B5C178E290>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x000001B59B7031F0>, <Synchronized wrapper for c_long(0)>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x000001B5C17B5E70>, Recording(id=2, timestamp=1721569842.1443634, monitor_width=2560, monitor_height=1600, double_click_interval_seconds=0.5, double_click_distance_pixels=4, platform='win32', task_description='calculator 10 - 2 example', config={'ROOT_DIR_PATH': 'P:\\\\OpenAdapt\\\\openadapt', 'PRIVATE_AI_API_KEY': '******************Y>', 'REPLICATE_API_TOKEN': '*******************N>', 'DEFAULT_SEGMENTATION_ADAPTER': 'ultralytics', 'OPENAI_API_KEY': '***************>', 'ANTHROPIC_API_KEY': '******************>', 'GOOGLE_API_KEY': '***************>', 'CACHE_DIR_PATH': '.cache', 'CACHE_ENABLED': True, 'CACHE_VERBOSITY': 0, 'DB_ECHO': False, 'ERROR_REPORTING_ENABLED': True, 'OPENAI_MODEL_NAME': 'gpt-3.5-turbo', 'RECORD_WINDOW_DATA': False, 'RECORD_READ_ACTIVE_ELEMENT_STATE': False, 'RECORD_VIDEO': True, 'RECORD_AUDIO': True, 'RECORD_FULL_VIDEO': False, 'RECORD_IMAGES': False, 'LOG_MEMORY': False, 'REPLAY_STRIP_ELEMENT_STATE': True, 'VIDEO_ENCODING': 'libx264', 'VIDEO_PIXEL_FORMAT': 'rgb24', 'VIDEO_DIR_PATH': 'P:\\\\OpenAdapt\\\\openadapt\\\\data\\\\videos', 'STOP_SEQUENCES': [['o', 'a', '.', 's', 't', 'o', 'p'], ['ctrl', 'ctrl', 'ctrl']], 'IGNORE_WARNINGS': False, 'MAX_NUM_WARNINGS_PER_SECOND': 5, 'WARNING_SUPPRESSION_PERIOD': 1, 'MESSAGES_TO_FILTER': ['Cannot pickle Objective-C objects'], 'ACTION_TEXT_SEP': '-', 'ACTION_TEXT_NAME_PREFIX': '<', 'ACTION_TEXT_NAME_SUFFIX': '>', 'PLOT_PERFORMANCE': True, 'APP_DARK_MODE': False, 'SCRUB_ENABLED': False, 'SCRUB_CHAR': '*', 'SCRUB_LANGUAGE': 'en', 'SCRUB_FILL_COLOR': 255, 'SCRUB_KEYS_HTML': ['text', 'canonical_text', 'title', 'state', 'task_description', 'key_char', 'canonical_key_char', 'key_vk', 'children'], 'SCRUB_CONFIG_TRF': {'nlp_engine_name': 'spacy', 'models': [{'lang_code': 'en', 'model_name': 'en_core_web_trf'}]}, 'SCRUB_PRESIDIO_IGNORE_ENTITIES': [], 'VISUALIZE_DARK_MODE': False, 'VISUALIZE_RUN_NATIVELY': True, 'VISUALIZE_DENSE_TREES': True, 'VISUALIZE_ANIMATIONS': True, 'VISUALIZE_EXPAND_ALL': False, 'VISUALIZE_MAX_TABLE_CHILDREN': 10, 'SAVE_SCREENSHOT_DIFF': False, 'SPACY_MODEL_NAME': 'en_core_web_trf', 'DASHBOARD_CLIENT_PORT': 5173, 'DASHBOARD_SERVER_PORT': 8080, 'SOM_SERVER_URL': '<SOM_SERVER_URL>', 'UNIQUE_USER_ID': '02dc5f85-b96a-4cd6-94d0-6ab08a8227e0', 'REDIRECT_TO_ONBOARDING': True, 'DEFAULT_ADAPTER': 'openai'}), <multiprocessing.synchronize.Event object at 0x000001B5C17B52A0>, <Synchronized wrapper for c_long(6)>)\r\n2024-07-21 09:50:55.390 | DEBUG    | openadapt.utils:set_start_time:375 - _start_time=1721569842.1443634 _start_perf_counter=48673.6376194\r\n2024-07-21 09:50:55.392 | INFO     | __mp_main__:write_events:350 - event_type='screen' starting\r\n2024-07-21 09:50:55.981 | INFO     | openadapt.utils:wrapper_logging:717 -  -> Enter: write_events(screen/video, <function write_video_event at 0x00000294C75CE5F0>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x00000294A15B31F0>, <Synchronized wrapper for c_long(0)>, <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x00000294C75F5E40>, Recording(id=2, timestamp=1721569842.1443634, monitor_width=2560, monitor_height=1600, double_click_interval_seconds=0.5, double_click_distance_pixels=4, platform='win32', task_description='calculator 10 - 2 example', config={'ROOT_DIR_PATH': 'P:\\\\OpenAdapt\\\\openadapt', 'PRIVATE_AI_API_KEY': '******************Y>', 'REPLICATE_API_TOKEN': '*******************N>', 'DEFAULT_SEGMENTATION_ADAPTER': 'ultralytics', 'OPENAI_API_KEY': '***************>', 'ANTHROPIC_API_KEY': '******************>', 'GOOGLE_API_KEY': '***************>', 'CACHE_DIR_PATH': '.cache', 'CACHE_ENABLED': True, 'CACHE_VERBOSITY': 0, 'DB_ECHO': False, 'ERROR_REPORTING_ENABLED': True, 'OPENAI_MODEL_NAME': 'gpt-3.5-turbo', 'RECORD_WINDOW_DATA': False, 'RECORD_READ_ACTIVE_ELEMENT_STATE': False, 'RECORD_VIDEO': True, 'RECORD_AUDIO': True, 'RECORD_FULL_VIDEO': False, 'RECORD_IMAGES': False, 'LOG_MEMORY': False, 'REPLAY_STRIP_ELEMENT_STATE': True, 'VIDEO_ENCODING': 'libx264', 'VIDEO_PIXEL_FORMAT': 'rgb24', 'VIDEO_DIR_PATH': 'P:\\\\OpenAdapt\\\\openadapt\\\\data\\\\videos', 'STOP_SEQUENCES': [['o', 'a', '.', 's', 't', 'o', 'p'], ['ctrl', 'ctrl', 'ctrl']], 'IGNORE_WARNINGS': False, 'MAX_NUM_WARNINGS_PER_SECOND': 5, 'WARNING_SUPPRESSION_PERIOD': 1, 'MESSAGES_TO_FILTER': ['Cannot pickle Objective-C objects'], 'ACTION_TEXT_SEP': '-', 'ACTION_TEXT_NAME_PREFIX': '<', 'ACTION_TEXT_NAME_SUFFIX': '>', 'PLOT_PERFORMANCE': True, 'APP_DARK_MODE': False, 'SCRUB_ENABLED': False, 'SCRUB_CHAR': '*', 'SCRUB_LANGUAGE': 'en', 'SCRUB_FILL_COLOR': 255, 'SCRUB_KEYS_HTML': ['text', 'canonical_text', 'title', 'state', 'task_description', 'key_char', 'canonical_key_char', 'key_vk', 'children'], 'SCRUB_CONFIG_TRF': {'nlp_engine_name': 'spacy', 'models': [{'lang_code': 'en', 'model_name': 'en_core_web_trf'}]}, 'SCRUB_PRESIDIO_IGNORE_ENTITIES': [], 'VISUALIZE_DARK_MODE': False, 'VISUALIZE_RUN_NATIVELY': True, 'VISUALIZE_DENSE_TREES': True, 'VISUALIZE_ANIMATIONS': True, 'VISUALIZE_EXPAND_ALL': False, 'VISUALIZE_MAX_TABLE_CHILDREN': 10, 'SAVE_SCREENSHOT_DIFF': False, 'SPACY_MODEL_NAME': 'en_core_web_trf', 'DASHBOARD_CLIENT_PORT': 5173, 'DASHBOARD_SERVER_PORT': 8080, 'SOM_SERVER_URL': '<SOM_SERVER_URL>', 'UNIQUE_USER_ID': '02dc5f85-b96a-4cd6-94d0-6ab08a8227e0', 'REDIRECT_TO_ONBOARDING': True, 'DEFAULT_ADAPTER': 'openai'}), <multiprocessing.synchronize.Event object at 0x00000294C75F5270>, <Synchronized wrapper for c_long(7)>, <function video_pre_callback at 0x00000294C75CE3B0>, <function video_post_callback at 0x00000294C75CE560>)\r\n2024-07-21 09:50:55.990 | DEBUG    | openadapt.utils:set_start_time:375 - _start_time=1721569842.1443634 _start_perf_counter=48674.242318\r\n2024-07-21 09:50:55.990 | INFO     | __mp_main__:write_events:350 - event_type='screen/video' starting\r\n2024-07-21 09:50:56.084 | INFO     | __mp_main__:record_audio:1061 - Audio recording started.\r\n2024-07-21 09:50:56.177 | INFO    2024-07-21 09:50:56.182 | INFO     |  | openadapt.videoopenadapt.utils::initialize_video_writerwrapper_logging::76717 -  - initializing video stream... -> Enter: performance_stats_writer(<openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x0000027332C831F0>, Recording(id=2, timestamp=1721569842.1443634, monitor_width=2560, monitor_height=1600, double_click_interval_seconds=0.5, double_click_distance_pixels=4, platform='win32', task_description='calculator 10 - 2 example', config={'ROOT_DIR_PATH': 'P:\\\\OpenAdapt\\\\openadapt', 'PRIVATE_AI_API_KEY': '******************Y>', 'REPLICATE_API_TOKEN': '*******************N>', 'DEFAULT_SEGMENTATION_ADAPTER': 'ultralytics', 'OPENAI_API_KEY': '***************>', 'ANTHROPIC_API_KEY': '******************>', 'GOOGLE_API_KEY': '***************>', 'CACHE_DIR_PATH': '.cache', 'CACHE_ENABLED': True, 'CACHE_VERBOSITY': 0, 'DB_ECHO': False, 'ERROR_REPORTING_ENABLED': True, 'OPENAI_MODEL_NAME': 'gpt-3.5-turbo', 'RECORD_WINDOW_DATA': False, 'RECORD_READ_ACTIVE_ELEMENT_STATE': False, 'RECORD_VIDEO': True, 'RECORD_AUDIO': True, 'RECORD_FULL_VIDEO': False, 'RECORD_IMAGES': False, 'LOG_MEMORY': False, 'REPLAY_STRIP_ELEMENT_STATE': True, 'VIDEO_ENCODING': 'libx264', 'VIDEO_PIXEL_FORMAT': 'rgb24', 'VIDEO_DIR_PATH': 'P:\\\\OpenAdapt\\\\openadapt\\\\data\\\\videos', 'STOP_SEQUENCES': [['o', 'a', '.', 's', 't', 'o', 'p'], ['ctrl', 'ctrl', 'ctrl']], 'IGNORE_WARNINGS': False, 'MAX_NUM_WARNINGS_PER_SECOND': 5, 'WARNING_SUPPRESSION_PERIOD': 1, 'MESSAGES_TO_FILTER': ['Cannot pickle Objective-C objects'], 'ACTION_TEXT_SEP': '-', 'ACTION_TEXT_NAME_PREFIX': '<', 'ACTION_TEXT_NAME_SUFFIX': '>', 'PLOT_PERFORMANCE': True, 'APP_DARK_MODE': False, 'SCRUB_ENABLED': False, 'SCRUB_CHAR': '*', 'SCRUB_LANGUAGE': 'en', 'SCRUB_FILL_COLOR': 255, 'SCRUB_KEYS_HTML': ['text', 'canonical_text', 'title', 'state', 'task_description', 'key_char', 'canonical_key_char', 'key_vk', 'children'], 'SCRUB_CONFIG_TRF': {'nlp_engine_name': 'spacy', 'models': [{'lang_code': 'en', 'model_name': 'en_core_web_trf'}]}, 'SCRUB_PRESIDIO_IGNORE_ENTITIES': [], 'VISUALIZE_DARK_MODE': False, 'VISUALIZE_RUN_NATIVELY': True, 'VISUALIZE_DENSE_TREES': True, 'VISUALIZE_ANIMATIONS': True, 'VISUALIZE_EXPAND_ALL': False, 'VISUALIZE_MAX_TABLE_CHILDREN': 10, 'SAVE_SCREENSHOT_DIFF': False, 'SPACY_MODEL_NAME': 'en_core_web_trf', 'DASHBOARD_CLIENT_PORT': 5173, 'DASHBOARD_SERVER_PORT': 8080, 'SOM_SERVER_URL': '<SOM_SERVER_URL>', 'UNIQUE_USER_ID': '02dc5f85-b96a-4cd6-94d0-6ab08a8227e0', 'REDIRECT_TO_ONBOARDING': True, 'DEFAULT_ADAPTER': 'openai'}), <multiprocessing.synchronize.Event object at 0x0000027358CA5E40>, <Synchronized wrapper for c_long(8)>)2024-07-21 09:50:56.259\r\n |\r\nDEBUG    | openadapt.utils:set_start_time:375 - _start_time=1721569842.1443634 _start_perf_counter=48674.5070935       \r\n2024-07-21 09:50:56.262 | INFO     | __mp_main__:memory_writer:811 - Memory writer starting\r\n2024-07-21 09:50:56.274 | DEBUG    | openadapt.utils:set_start_time:375 - _start_time=1721569842.1443634 _start_perf_counter=48674.5218195\r\n2024-07-21 09:50:56.355 | INFO     | __mp_main__:performance_stats_writer:767 - Performance stats writer starting\r\n2024-07-21 09:50:56.417 | INFO     | openadapt.db.crud:update_video_start_time:671 - Updated video start time for recording 1721569842.1443634 to 1721569842.5058875.\r\n2024-07-21 09:51:26.816 | WARNING  | __main__:process_events:205 - Discarding input that came before window\r\n2024-07-21 09:51:26.833 | WARNING  | __main__:process_events:205 - Discarding input that came before window\r\n2024-07-21 09:51:26.836 | WARNING  | __main__:process_events:205 - Discarding input that came before window\r\n2024-07-21 09:51:26.841 | WARNING  | __main__:process_events:205 - Discarding input that came before window\r\n2024-07-21 09:52:28.846 | WARNING  | __main__:process_events:205 - Discarding input that came before window\r\n2024-07-21 09:52:28.846 | WARNING  | __main__:process_events:205 - Discarding input that came before window\r\n2024-07-21 09:52:42.743 | INFO     | __main__:read_window_events:735 - _window_data={'title': 'OpenAdapt - Visual Studio Code - Insiders', 'left': -11, 'top': -11, 'width': 2582, 'height': 1550, 'window_id': 0}\r\n2024-07-21 09:52:42.805 | INFO     | __main__:record:1351 - ****************************************\r\n2024-07-21 09:52:42.805 | INFO     | __main__:record:1351 - ****************************************\r\n2024-07-21 09:52:42.805 | INFO     | __main__:record:1351 - ****************************************\r\n2024-07-21 09:52:42.805 | INFO     | __main__:record:1351 - ****************************************\r\n2024-07-21 09:52:42.809 | INFO     | __main__:record:1351 - ****************************************\r\n2024-07-21 09:52:42.809 | INFO     | __main__:record:1354 - All readers and writers have started. Waiting for input events...\r\n2024-07-21 09:52:52.521 | DEBUG    | __mp_main__:write_events:396 - event_type='action' written\r\n2024-07-21 09:52:52.547 | DEBUG    | __mp_main__:write_events:396 - event_type='action' written\r\n2024-07-21 09:52:52.578 | DEBUG    | __mp_main__:write_events:396 - event_type='action' written\r\n2024-07-21 09:52:52.587 | DEBUG    | __mp_main__:write_events:396 - event_type='action' written\r\n2024-07-21 09:52:52.637 | DEBUG    | __mp_main__:write_events:396 - event_type='action' written\r\n2024-07-21 09:52:52.670 | DEBUG    | openadapt.video:write_video_frame:139 - timestamp=1721569972.3549984 video_start_timestamp=1721569842.5058875 time_diff=129.8491108417511 pts=3116 force_key_frame=True\r\nSpecified pixel format rgb24 is invalid or not supported\r\n2024-07-21 09:52:52.704 | DEBUG    | __mp_main__:write_events:396 - event_type='window' written\r\n2024-07-21 09:52:52.681 | ERROR    | openadapt.utils:__call__:968 - Error running process: [Errno 22] Invalid argument; last error log: [libx264] Specified pixel format rgb24 is invalid or not supported\r\nTraceback (most recent call last):\r\n\r\n  File \"<string>\", line 1, in <module>\r\n\r\n  File \"P:\\Program Files\\Python310\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\r\n    exitcode = _main(fd, parent_sentinel)\r\n               │     │   └ 532\r\n               │     └ 3\r\n               └ <function _main at 0x00000294A159EC20>\r\n\r\n  File \"P:\\Program Files\\Python310\\lib\\multiprocessing\\spawn.py\", line 129, in _main\r\n    2024-07-21 09:52:52.755return |  DEBUG   self | __mp_main__.:_bootstrapwrite_events(:396parent_sentinel - )event_type='screen' written\r\n\r\n       │    │          └ 532\r\n           │    └ <function BaseProcess._bootstrap at 0x00000294A14E9D80>\r\n           └ <Process name='Process-4' parent=6436 started>\r\n\r\n  File \"P:\\Program Files\\Python310\\lib\\multiprocessing\\process.py\", line 314, in _bootstrap\r\n    self.run()\r\n    │    └ <function BaseProcess.run at 0x00000294A14E93F0>\r\n    └ <Process name='Process-4' parent=6436 started>\r\n\r\n  File \"P:\\Program Files\\Python310\\lib\\multiprocessing\\process.py\", line 108, in run\r\n    self._target(*self._args, **self._kwargs)\r\n    │    │        │    │        │    └ {}\r\n    │    │        │    │        └ <Process name='Process-4' parent=6436 started>\r\n    │    │        │    └ ('screen/video', <function write_video_event at 0x00000294C75CE5F0>, <openadapt.extensions.synchronized_queue.SynchronizedQue...\r\n    │    │        └ <Process name='Process-4' parent=6436 started>\r\n    │    └ <openadapt.utils.WrapStdout object at 0x00000294A15B3280>\r\n    └ <Process name='Process-4' parent=6436 started>\r\n\r\n> File \"P:\\OpenAdapt\\openadapt\\utils.py\", line 966, in __call__\r\n    return self.target(*args, **kwargs)\r\n           │    │       │       └ {}\r\n           │    │       └ ('screen/video', <function write_video_event at 0x00000294C75CE5F0>, <openadapt.extensions.synchronized_queue.SynchronizedQue...\r\n           │    └ <function write_events at 0x00000294C75CE4D0>\r\n           └ <openadapt.utils.WrapStdout object at 0x00000294A15B3280>\r\n\r\n  File \"P:\\OpenAdapt\\openadapt\\utils.py\", line 727, in wrapper_logging\r\n    result 2024-07-21 09:52:52.831 | DEBUG    | __mp_main__:write_events:396 - =event_type='action' written\r\nfunc(*args, **kwargs)\r\n             │     │       └ {}\r\n             │     └ ('screen/video', <function write_video_event at 0x00000294C75CE5F0>, <openadapt.extensions.synchronized_queue.SynchronizedQue...\r\n             └ <function write_events at 0x00000294C75CE440>\r\n\r\n  File \"P:\\OpenAdapt\\openadapt\\record.py\", line 387, in write_events\r\n    state = write_fn(session, recording, event, perf_q, **(state or {}))\r\n            │        │        │          │      │          └ {'video_container': <av.OutputContainer 'P:\\\\OpenAdapt\\\\openadapt\\\\data\\\\videos\\\\oa_recording-1721569842.1443634.mp4'>, 'vide...\r\n            │        │        │          │      └ <openadapt.extensions.synchronized_queue.SynchronizedQueue object at 0x00000294C75F5E40>\r\n            │        │        │          └ Event(timestamp=1721569972.3549984, type='screen/video', data=<PIL.Image.Image image mode=RGB size=2560x1600 at 0x294C76861D0>)\r\n            │        │        └ Recording(id=2, timestamp=1721569842.1443634, monitor_width=2560, monitor_height=1600, double_click_interval_seconds=0.5, dou...\r\n            │        └ <sqlalchemy.orm.session.Session object at 0x00000294C7684C10>\r\n            └ <function write_video_event at 0x00000294C75CE5F0>\r\n\r\n  File \"P:\\OpenAdapt\\openadapt\\record.py\", line 488, in write_video_event\r\n    last_pts = video.write_video_frame(\r\n               │     └ <function write_video_frame at 0x00000294C75BE4D0>\r\n               └ <module 'openadapt.video' from 'P:\\\\OpenAdapt\\\\openadapt\\\\video.py'>\r\n\r\n  File \"P:\\OpenAdapt\\openadapt\\video.py\", line 151, in write_video_frame\r\n    for packet in video_stream.encode(av_frame):\r\n                  │            │      └ <av.VideoFrame #0, pts=3116 rgb24 2560x1600 at 0x294c76e7520>\r\n                  │            └ <cyfunction Stream.encode at 0x00000294B1CA1700>\r\n                  └ <av.VideoStream #0 libx264, rgb24 2560x1600 at 0x294c67fbec0>\r\n\r\n  File \"av\\\\stream.pyx\", line 149, in av.stream.Stream.encode\r\n  File \"av\\\\codec\\\\context.pyx\", line 471, in av.codec.context.CodecContext.encode\r\n  File \"av\\\\codec\\\\context.pyx\", line 280, in av.codec.context.CodecContext.open\r\n  File \"av\\\\error.pyx\", line 336, in av.error.err_check\r\n\r\nav.error.ValueError: [Errno 22] Invalid argument; last error log: [libx264] Specified pixel format rgb24 is invalid or not supported\r\n2024-07-21 09:52:55.674 | DEBUG    | __mp_main__:write_events:396 - event_type='action' written\r\n2024-07-21 09:52:55.706 | DEBUG    | __mp_main__:write_events:396 - event_type='action' written\r\n2024-07-21 09:52:55.754 | DEBUG    | __mp_main__:write_events:396 - event_type='screen' written\r\n2024-07-21 09:52:55.778 | DEBUG    | __mp_main__:write_events:396 - event_type='action' written\r\n2024-07-21 09:52:55.804 | DEBUG    | __mp_main__:write_events:396 - event_type='action' written\r\n2024-07-21 09:52:55.845 | DEBUG    | __mp_main__:write_events:396 - event_type='action' written\r\n2024-07-21 09:52:55.938 | DEBUG    | __mp_main__:write_events:396 - event_type='action' written\r\n...\r\n...\r\n...\r\n2024-07-21 09:55:22.646 | DEBUG    | __mp_main__:write_events:396 - event_type='action' written\r\nWriting action events...: 100%|████████████████████████████████████████████████| 2606/2606 [01:21<00:00, 32.16event/s]\r\n2024-07-21 09:55:22.646 | INFO     | __mp_main__:write_events:404 - event_type='action' done\r\n2024-07-21 09:55:22.646 | INFO     | openadapt.utils:wrapper_logging:729 -  <- Leave: write_events(None)\r\n2024-07-21 09:56:31.092 | INFO     | __mp_main__:record_audio:1084 - The narrated text is:  [REDACTED] \r\n2024-07-21 09:56:31.092 | INFO     | __mp_main__:record_audio:1094 - Size of uncompressed audio data: 11852672 bytes\r\n2024-07-21 09:56:31.202 | INFO     | __mp_main__:record_audio:1106 - Size of compressed audio data: 2487690 bytes\r\n```\n\n### To Reproduce\n\nI use Windows 11 OS.\r\n\r\nStep 1: Setup `openadapt`.\r\nStep 2: Start Recording in poetry shell using the command: `python -m openadapt.record \"testing out openadapt\"`.\r\nStep 3: Notice the error in log during recording.\r\n\r\nPossibly due to `RECORD_VIDEO` is True.",
      "state": "closed",
      "author": "KrishPatel13",
      "author_type": "User",
      "created_at": "2024-07-21T14:06:09Z",
      "updated_at": "2024-07-21T15:26:50Z",
      "closed_at": "2024-07-21T15:19:52Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/861/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/861",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/861",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:10.503890",
      "comments": [
        {
          "author": "KrishPatel13",
          "body": "THe issue is that when we record the video, the data/config.json looks like this:\r\n![image](https://github.com/user-attachments/assets/41ddfab7-045b-4161-9981-6bb8bef484aa)\r\n\r\nNotice, how the default is set to \"rgb24\", if we set this to the actual one  `VIDEO_PIXEL_FORMAT: str = \"yuv444p\"`",
          "created_at": "2024-07-21T14:59:23Z"
        },
        {
          "author": "KrishPatel13",
          "body": "@abrichr How do we over-ride the value in data/config.json ? If we can do this in runtime, and over-ride with the actual value, mentioned in openadapt/config/config.py, then this issue can be fixed for windows.",
          "created_at": "2024-07-21T15:01:31Z"
        },
        {
          "author": "abrichr",
          "body": "@KrishPatel13 the data in `data/config.json` is populated when you first run OpenAdapt. This value was updated in a later version. You can remove the value from your `data/config.json` and it will read the latest value from [`openadapt/config.defaults.json`](https://github.com/OpenAdaptAI/OpenAdapt/",
          "created_at": "2024-07-21T15:19:37Z"
        },
        {
          "author": "KrishPatel13",
          "body": "Make sense now, thank you!",
          "created_at": "2024-07-21T15:26:49Z"
        }
      ]
    },
    {
      "issue_number": 564,
      "title": "Extract process models with pm4py",
      "body": "### Feature request\r\n\r\nWe would like to convert a recording of one or more workflow iterations into a repeatable and versionable process representation, i.e. a process model.\r\n\r\nhttps://pm4py.fit.fraunhofer.de/static/assets/api/2.7.9/api.html#llm-integration-pm4py-llm\r\n\r\nWe wish to extract process logs from `Screenshot` and `ActionEvents` in order to generate a process log, e.g.\r\n\r\n```\r\nselect r.id as case_id, \r\n\twe.title as activity, \r\n    -- ae.\"timestamp\" as timestamp,\t\r\n    datetime(ae.\"timestamp\", 'unixepoch', 'localtime') AS \"timestamp\",\r\n\tCOALESCE(ae.\"timestamp\" - LAG(ae.\"timestamp\") OVER (ORDER BY ae.\"timestamp\"), 0) as costs,\r\n\tae.name\tas resource\r\nfrom recording r\r\ninner join action_event ae on r.\"timestamp\" = ae.recording_timestamp \r\ninner join window_event we on r.\"timestamp\" = we.recording_timestamp and we.\"timestamp\" = ae.window_event_timestamp\r\nwhere r.id = 1\r\norder by r.id, ae.\"timestamp\";\r\n\r\n``` \r\n\r\nReplaces https://github.com/OpenAdaptAI/OpenAdapt/issues/545\r\n\r\n### Motivation\r\n\r\nExtract process logs to generate process model that can serve as replay state machine in model prompt.\r\n\r\n<img width=\"263\" alt=\"image\" src=\"https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/cfda5eb3-4724-4dbe-a42c-8e02de6a57f4\">\r\n",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-02-19T22:34:54Z",
      "updated_at": "2024-07-20T19:13:38Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "help wanted"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/564/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KrishPatel13"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/564",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/564",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:10.682083",
      "comments": [
        {
          "author": "abrichr",
          "body": "Each process log entry should contain at least the following:\r\n- window title\r\n- action name (e.g. \"click\", \"type\", etc.)\r\n- action target (for mouse events this would be the [active_segment_description](https://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/models.py#L134), for keyboard event",
          "created_at": "2024-07-08T16:58:20Z"
        }
      ]
    },
    {
      "issue_number": 841,
      "title": "[Bug]: Nonetype object has no attribute write",
      "body": "### Describe the bug\n\n```\r\nTraceback (most recent call last):\r\n  File \"sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\r\n  File \"sqlalchemy\\engine\\default.py\", line 736, in do_execute\r\nsqlite3.InterfaceError: Error binding parameter 5 - probably unsupported type.\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"multiprocessing\\process.py\", line 314, in _bootstrap\r\n  File \"multiprocessing\\process.py\", line 108, in run\r\n  File \"openadapt\\utils.py\", line 727, in wrapper_logging\r\n    result = func(*args, **kwargs)\r\n  File \"openadapt\\record.py\", line 387, in write_events\r\n    state = write_fn(session, recording, event, perf_q, **(state or {}))\r\n  File \"openadapt\\record.py\", line 315, in write_window_event\r\n    crud.insert_window_event(db, recording, event.timestamp, event.data)\r\n  File \"openadapt\\db\\crud.py\", line 154, in insert_window_event\r\n    _insert(session, event_data, WindowEvent, window_events)\r\n  File \"openadapt\\db\\crud.py\", line 80, in _insert\r\n    result = session.execute(sa.insert(table), to_insert)\r\n  File \"sqlalchemy\\orm\\session.py\", line 1714, in execute\r\n  File \"sqlalchemy\\engine\\base.py\", line 1705, in _execute_20\r\n  File \"sqlalchemy\\sql\\elements.py\", line 333, in _execute_on_connection\r\n  File \"sqlalchemy\\engine\\base.py\", line 1572, in _execute_clauseelement\r\n  File \"sqlalchemy\\engine\\base.py\", line 1943, in _execute_context\r\n  File \"sqlalchemy\\engine\\base.py\", line 2124, in _handle_dbapi_exception\r\n  File \"sqlalchemy\\util\\compat.py\", line 208, in raise_\r\n  File \"sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\r\n  File \"sqlalchemy\\engine\\default.py\", line 736, in do_execute\r\nsqlalchemy.exc.InterfaceError: (sqlite3.InterfaceError) Error binding parameter 5 - probably unsupported type.\r\n[SQL: INSERT INTO window_event (id, recording_timestamp, recording_id, timestamp, state, title, \"left\", top, width, height, window_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]\r\n[parameters: (None, 1720455851.1191764, 4, 1720455870.9879966, '{\"title\": [\"\"], \"left\": 1188, \"top\": 1377, \"width\": 864, \"height\": 303, \"meta\": {\"class_name\": \"TaskListThumbnailWnd\", \"friendly_class_name\": \"ListBo ... (219 characters truncated) ... rd_focusable\": true, \"has_keyboard_focus\": true, \"automation_id\": \"\", \"column_count\": 0, \"item_count\": 3, \"columns\": []}, \"data\": {}, \"window_id\": 0}', [''], 1188, 1377, 864, 303, 0)]\r\n(Background on this error at: https://sqlalche.me/e/14/rvf5)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"openadapt\\entrypoint.py\", line 7, in <module>\r\n    multiprocessing.freeze_support()\r\n  File \"Lib\\site-packages\\PyInstaller\\hooks\\rthooks\\pyi_rth_multiprocessing.py\", line 50, in _freeze_support\r\n  File \"multiprocessing\\spawn.py\", line 116, in spawn_main\r\n  File \"multiprocessing\\spawn.py\", line 129, in _main\r\n  File \"multiprocessing\\process.py\", line 329, in _bootstrap\r\nAttributeError: 'NoneType' object has no attribute 'write'\r\n```\r\n\n\n### To Reproduce\n\nDownload OpenAdapt 0.36.2, unzip, run, create a recording.",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-07-08T16:46:07Z",
      "updated_at": "2024-07-19T17:05:06Z",
      "closed_at": "2024-07-19T17:05:06Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/841/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/841",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/841",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:10.919846",
      "comments": [
        {
          "author": "KIRA009",
          "body": "@abrichr I wasn't able to reproduce the issue, but from the error message you posted it looks like the data coming from `get_active_window_data` is flawed in some cases.\r\n\r\n```\r\n[parameters: (None, 1720455851.1191764, 4, 1720455870.9879966, '{\"title\": [\"\"], \"left\": 1188, \"top\": 1377,....\r\n```\r\n\r\nThe",
          "created_at": "2024-07-08T20:09:10Z"
        },
        {
          "author": "abrichr",
          "body": "Thank you @KIRA009!\r\n\r\nI think the first issue of checking if the title is an array may be solved by https://github.com/OpenAdaptAI/OpenAdapt/pull/842.\r\n\r\nCan you lease look into the second issue? 🙏 ",
          "created_at": "2024-07-10T21:28:18Z"
        },
        {
          "author": "abrichr",
          "body": "One solution may be to spawn a terminal like we're doing on MacOS. If this is easiest, let's go with that.\r\n\r\nAnother one seems to be catching the exceptions and handling them. Instead of calling multiprocessing.Process directly, we can implement a function that wraps it in a try/catch. Apparently t",
          "created_at": "2024-07-15T16:50:16Z"
        }
      ]
    },
    {
      "issue_number": 859,
      "title": "[Bug]: Vanilla replay strategy fails with below error",
      "body": "### Describe the bug\n\nPS C:\\Users\\abhis\\openAdapt\\OpenAdapt> poetry shell\r\nSpawning shell within C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\r\nPowerShell 7.4.3\r\n(openadapt-py3.10) PS C:\\Users\\abhis\\openAdapt\\OpenAdapt> python -m openadapt.replay VanillaReplayStrategy --instructions \"calculate 9-8\"\r\n[2024-07-18 00:09:23.481] [recordLogger] [info] Created d3d11 device from 0\r\n[2024-07-18 00:09:23.482] [recordLogger] [info] found 1 displays\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\Programs\\Python\\Python310\\lib\\runpy.py\", line 196, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\Programs\\Python\\Python310\\lib\\runpy.py\", line 86, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\replay.py\", line 19, in <module>\r\n    from openadapt import capture as _capture, utils\r\n  File \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\utils.py\", line 50, in <module>\r\n    from openadapt.models import ActionEvent\r\n  File \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\models.py\", line 16, in <module>\r\n    from openadapt import window\r\n  File \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\window\\__init__.py\", line 17, in <module>\r\n    from . import _windows as impl\r\n  File \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\window\\_windows.py\", line 6, in <module>\r\n    import pywinauto\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\pywinauto\\__init__.py\", line 87, in <module>\r\n    from .sysinfo import UIA_support\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\pywinauto\\sysinfo.py\", line 44, in <module>\r\n    import comtypes  # noqa: E402\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\comtypes\\__init__.py\", line 191, in <module>\r\n    CoInitializeEx()\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\comtypes\\__init__.py\", line 181, in CoInitializeEx\r\n    _ole32.CoInitializeEx(None, flags)\r\n  File \"_ctypes/callproc.c\", line 993, in GetResult\r\nOSError: [WinError -2147417850] Cannot change thread mode after it is set\n\n### To Reproduce\n\non win PowerShell 7 follow steps as mentioned",
      "state": "open",
      "author": "absha03",
      "author_type": "User",
      "created_at": "2024-07-18T04:11:13Z",
      "updated_at": "2024-07-19T02:39:08Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/859/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/859",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/859",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:11.124933",
      "comments": [
        {
          "author": "abrichr",
          "body": "Thank you @absha03 ! Can you please clarify whether this also happens with other strategies, e.g. `NaiveReplayStrategy`?",
          "created_at": "2024-07-18T16:26:02Z"
        },
        {
          "author": "absha03",
          "body": "yes as seen below: (openadapt-py3.10) PS C:\\Users\\abhis\\openAdapt\\OpenAdapt> python -m openadapt.replay NaiveReplayStrategy --instructions \"calculate 9-8\"\r\n[2024-07-18 22:38:32.963] [recordLogger] [info] Created d3d11 device from 0\r\n[2024-07-18 22:38:32.964] [recordLogger] [info] found 1 displays\r\nT",
          "created_at": "2024-07-19T02:39:06Z"
        }
      ]
    },
    {
      "issue_number": 374,
      "title": "CodeReview-GPT",
      "body": "### Feature request\n\nFrom https://github.com/anc95/ChatGPT-CodeReview:\r\n\r\n\r\n<img width=\"862\" alt=\"image\" src=\"https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/fa447403-0fc7-4113-9556-355bc0d44b81\">\r\n\r\n<img width=\"861\" alt=\"image\" src=\"https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/ded43360-94fd-4b7e-a0b1-dd99f8d38a21\">\r\n\r\n\n\n### Motivation\n\nFaster code review",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-11T01:14:06Z",
      "updated_at": "2024-07-17T02:28:28Z",
      "closed_at": "2023-07-14T01:34:49Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/374/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/374",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/374",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:11.332065",
      "comments": [
        {
          "author": "FFFiend",
          "body": "Tried this on one of my branches, got the error described here: https://github.com/anc95/ChatGPT-CodeReview/issues/104 ",
          "created_at": "2023-07-11T15:43:51Z"
        },
        {
          "author": "0dm",
          "body": "> Tried this on one of my branches, got the error described here: [anc95/ChatGPT-CodeReview#104](https://github.com/anc95/ChatGPT-CodeReview/issues/104)\r\n\r\nself hosting would be independent of the github action -> see https://github.com/anc95/ChatGPT-CodeReview/blob/main/.env.example",
          "created_at": "2023-07-12T03:34:27Z"
        },
        {
          "author": "abrichr",
          "body": "The comments produced by this bot do not seem to be useful.",
          "created_at": "2023-07-14T01:34:49Z"
        },
        {
          "author": "0dm",
          "body": "🙏 the amount of comments i had to delete from it",
          "created_at": "2023-07-14T02:29:19Z"
        }
      ]
    },
    {
      "issue_number": 856,
      "title": "Wait for action effect to complete before attempting to get next action",
      "body": "### Feature request\n\nAfter executing an action that takes a while to complete (e.g. opening an application that takes a few second to load), we need to wait for the effect of that action to complete before attempting to get the next action.\n\n### Motivation\n\nOtherwise the screenshot sent to the model will be stale and the resulting action will no longer be applicable.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-07-16T20:11:58Z",
      "updated_at": "2024-07-16T20:11:58Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/856/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/856",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/856",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:11.546825",
      "comments": []
    },
    {
      "issue_number": 853,
      "title": "[Bug]: handle OpenAI API image errors",
      "body": "### Describe the bug\n\n```\r\npython -m openadapt.replay VisualReplayStrategy --instructions=\"enter the word 'goodbye' in cell D5\"\r\n...\r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/replay.py\", line 84, in replay                                                                                                                \r\n    strategy = strategy_class(recording, **kwargs)                                                                                                                                          \r\n               |              |            -> {'instructions': \"enter the word 'goodbye' in cell D5\"}                                                                                       \r\n               |              -> Recording(id=79, timestamp=1720741542.6430058, monitor_width=1512, monitor_height=982, double_click_interval_seconds=0.5, dou...                                                                                                                                                                                                                       \r\n               -> <class 'openadapt.strategies.visual.VisualReplayStrategy'>                                                                                                                \r\n                                                                                                                                                                                                                                                                                                                                                                                        \r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/strategies/visual.py\", line 182, in __init__                                                                                                                                                                                                                                                                                              \r\n    add_active_segment_descriptions(recording.processed_action_events)                                                                                                                      \r\n    |                               |         -> <property object at 0x12fb0f880>                                                                                                           \r\n    |                               -> Recording(id=79, timestamp=1720741542.6430058, monitor_width=1512, monitor_height=982, double_click_interval_seconds=0.5, dou...                                                                                                                                                                                                                 \r\n    -> <function add_active_segment_descriptions at 0x2a904e710>                                                                                                                            \r\n                                                                                                                                                                                            \r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/strategies/visual.py\", line 109, in add_active_segment_descriptions                                                                                                                                                                                                                                                                       \r\n    window_segmentation = get_window_segmentation(action)                                                                                                                                   \r\n                          |                       -> ActionEvent(name='move', timestamp=1720741549.2011595, recording_timestamp=1720741542.6430058, screenshot_timestamp=172074155...                                                                                                                                                                                                   \r\n                          -> <function get_window_segmentation at 0x2cecd5d80>                                                                                                              \r\n                                                                                                                                                                                                                                                                                                                                                                                        \r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/strategies/visual.py\", line 431, in get_window_segmentation                                                                                   \r\n    descriptions = prompt_for_descriptions(                                                                                                                                                 \r\n                   -> <function prompt_for_descriptions at 0x2cecd5e10>                                                                                                                     \r\n                                                                                                                                                                                                                                                                                                                                                                                        \r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/strategies/visual.py\", line 512, in prompt_for_descriptions                                                                                   \r\n    descriptions_json = driver.prompt(                                                                                                                                                      \r\n                        |      -> <function prompt at 0x16cb51480>                                                                                                                                                                                                                                                                                                                      \r\n                        -> <module 'openadapt.drivers.openai' from '/Users/abrichr/oa/OpenAdapt/openadapt/drivers/openai.py'>                                                                                                                                                                                                                                                           \r\n                                                                                                                                                                                            \r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/drivers/openai.py\", line 209, in prompt                                                                                                       \r\n    result = get_completion(payload)                                                                                                                                                        \r\n             |              -> {'model': 'gpt-4o', 'messages': [{'role': 'system', 'content': [{'type': 'text', 'text': \"You are the cognitive engine poweri...                                                                                                                                                                                                                         \r\n             -> <function get_completion at 0x16cb51240>                                                                                                                                                                                                                                                                                                                                \r\n                                                                                                                                                                                            \r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/drivers/openai.py\", line 155, in get_completion                                                                                                                                                                                                                                                                                           \r\n    raise exc                                                                                                                                                                               \r\n                                                                                                                                                                                            \r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/drivers/openai.py\", line 145, in get_completion                                                                                               \r\n    result = get_response(payload)                                                                                                                                                          \r\n             |            -> {'model': 'gpt-4o', 'messages': [{'role': 'system', 'content': [{'type': 'text', 'text': \"You are the cognitive engine poweri...                                                                                                                                                                                                                           \r\n             -> <function get_response at 0x16cb51360>                                                                                                                                      \r\n                                                                                                                                                                                                                                                                                                                                                                                        \r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/cache.py\", line 85, in wrapper                                                                                                                                                                                                                                                                                                            \r\n    rval = fn(*args, **kwargs)                                                                                                                                                              \r\n           |   |       -> {}                                                                                                                                                                \r\n           |   -> ({'model': 'gpt-4o', 'messages': [{'role': 'system', 'content': [{'type': 'text', 'text': \"You are the cognitive engine power...                                                                                                                                                                                                                                      \r\n           -> MemorizedFunc(func=<function get_response at 0x16cb512d0>, location=.cache/joblib)                                                                                            \r\n                                                                                                                                                                                                                                                                                                                                                                                        \r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/joblib/memory.py\", line 573, in __call__                                                                                                                                                                                                                              \r\n    return self._cached_call(args, kwargs, shelving=False)                                                                                                                                  \r\n           |    |            |     -> {}                                                                                                                                                    \r\n           |    |            -> ({'model': 'gpt-4o', 'messages': [{'role': 'system', 'content': [{'type': 'text', 'text': \"You are the cognitive engine power...                                                                                                                                                                                                                        \r\n           |    -> <function MemorizedFunc._cached_call at 0x168a2a440>                                                                                                                     \r\n           -> MemorizedFunc(func=<function get_response at 0x16cb512d0>, location=.cache/joblib)                                                                                            \r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/joblib/memory.py\", line 530, in _cached_call                                                                                                                                                                                                                          \r\n    return self._call(call_id, args, kwargs, shelving)                                                                                                                                      \r\n           |    |     |        |     |       -> False                                                                                                                                       \r\n           |    |     |        |     -> {}                                                                                                                                                  \r\n           |    |     |        -> ({'model': 'gpt-4o', 'messages': [{'role': 'system', 'content': [{'type': 'text', 'text': \"You are the cognitive engine power...                                                                                                                                                                                                                      \r\n           |    |     -> ('openadapt/drivers/openai/get_response', '59a23667cfdc4ce3d6fff1877495bcc5')                                                                                      \r\n           |    -> <function MemorizedFunc._call at 0x168a2ab00>                                                                                                                            \r\n           -> MemorizedFunc(func=<function get_response at 0x16cb512d0>, location=.cache/joblib)                                                                                            \r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/joblib/memory.py\", line 762, in _call                                                                                                                                                                                                                                 \r\n    output = self.func(*args, **kwargs)                                                                                                                                                                                                                                                                                                                                                 \r\n             |    |     |       -> {}                                                                                                                                                       \r\n             |    |     -> ({'model': 'gpt-4o', 'messages': [{'role': 'system', 'content': [{'type': 'text', 'text': \"You are the cognitive engine power...                                                                                                                                                                                                                             \r\n             |    -> <function get_response at 0x16cb512d0>                                                                                                                                                                                                                                                                                                                             \r\n             -> MemorizedFunc(func=<function get_response at 0x16cb512d0>, location=.cache/joblib)                                                                                          \r\n\r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/drivers/openai.py\", line 130, in get_response                                                                                                 \r\n    raise Exception(message)                                                                  \r\n                    -> \"You uploaded an unsupported image. Please make sure your image is below 20 MB in size and is of one the following formats: [...                                                                                                                                                                                                                                 \r\n\r\nException: You uploaded an unsupported image. Please make sure your image is below 20 MB in size and is of one the following formats: ['png', 'jpeg', 'gif', 'webp'].                                                                                                                                                                                                                   \r\n```\n\n### To Reproduce\n\nCreate a recording involving a spreadsheet, then run `python -m openadapt.replay VisualReplayStrategy --instructions=\"enter the word 'goodbye' in cell D5\"`",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-07-15T16:02:32Z",
      "updated_at": "2024-07-15T17:17:18Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/853/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "abrichr"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/853",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/853",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:11.546847",
      "comments": []
    },
    {
      "issue_number": 819,
      "title": "Handle similar segments",
      "body": "### Feature request\n\nWe would like for VisualReplayStrategy to work with segments which are visually identical but in different locations on screen.\r\n\r\nRelated: https://github.com/OpenAdaptAI/OpenAdapt/pull/679\n\n### Motivation\n\nSpreadsheet task",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-07-01T17:10:46Z",
      "updated_at": "2024-07-15T17:15:45Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/819/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "abrichr"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/819",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/819",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:11.546855",
      "comments": [
        {
          "author": "abrichr",
          "body": "To begin with, instead of the full timetracking task, let's just simplify to much simpler spreadsheet tasks, e.g. \"enter the value 'foo' into cell C3\".",
          "created_at": "2024-07-08T17:00:40Z"
        },
        {
          "author": "abrichr",
          "body": "https://huggingface.co/papers/2407.09025\n\n> SpreadsheetLLM: Encoding Spreadsheets for Large Language Models",
          "created_at": "2024-07-15T17:15:44Z"
        }
      ]
    },
    {
      "issue_number": 757,
      "title": "Replay instrumentation",
      "body": "### Feature request\r\n\r\nWe would like to display replays in the dashboard, and all associated data.\r\n\r\nThis involves instrumenting replays to record all data, e.g. segmentations, prompts.\r\n\r\nProbably the easiest way to do this is at the `adapter` level. This may also involve calling `record` from `replay`.\r\n\r\n### Motivation\r\n\r\n- Partial outcome verification (i.e. not just the final state)\r\n- Visibility during debugging + development",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-14T18:54:47Z",
      "updated_at": "2024-07-15T17:14:19Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/757/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/757",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/757",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:11.783135",
      "comments": [
        {
          "author": "abrichr",
          "body": "There are two pieces:\r\n\r\n1. whenever a replay happens, record as much as possible about the replay action automatically (e.g. date/time, strategy, strategy arguments)\r\n\r\n2. As a developer, I would like to add this to replay code:\r\n\r\n```\r\nself.replay_log.capture({\"segmentation\": segmentation})\r\n```\r\n",
          "created_at": "2024-06-17T17:05:11Z"
        },
        {
          "author": "abrichr",
          "body": "ChatGPT:\r\n---\r\nTo automatically instrument the execution of `replay.py` and ensure that all relevant inferences are stored to the database efficiently and systematically, you can utilize Python's decorators and context managers to capture relevant data points during the execution of specific functio",
          "created_at": "2024-06-22T20:02:08Z"
        },
        {
          "author": "abrichr",
          "body": "ChatGPT:\r\n---\r\nTo handle the replay ID automatically and ensure it's used seamlessly throughout the execution of `python -m openadapt.replay` without the developer needing to set it manually, you can use a context manager or a global state management approach. The goal is to manage the lifecycle of ",
          "created_at": "2024-06-22T21:13:22Z"
        },
        {
          "author": "abrichr",
          "body": "Let's also implement basic functionality for displaying in the dashboard.",
          "created_at": "2024-07-15T17:14:19Z"
        }
      ]
    },
    {
      "issue_number": 816,
      "title": "[Bug]: `WindowEvent` race condition",
      "body": "### Describe the bug\n\nDuring recording, if the active window changes and the user emits an `ActionEvent` before a new `WindowEvent` is received, the resulting segmentation (during replay) will fail.\n\nEdit: this only happens if READ_WINDOW_DATA is True.\n\n`WindowEvents` are read in https://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/record.py#L713\n\n### To Reproduce\n\nTODO",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-29T22:50:55Z",
      "updated_at": "2024-07-15T17:04:43Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/816/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "Animesh404"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/816",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/816",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:11.995900",
      "comments": [
        {
          "author": "abrichr",
          "body": "It's possible that `pywinauto` is too slow here: https://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/window/_windows.py#L90C1-L98C35.\r\n\r\nVia ChatGPT:\r\n---\r\nYou can use the `pygetwindow` library for a faster solution. Here’s how to get the name, dimensions, and position of the active window:",
          "created_at": "2024-06-29T22:56:50Z"
        },
        {
          "author": "abrichr",
          "body": "We need `window.get_active_window_data` (https://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/window/__init__.py#L22) to return more quickly.\n\nProbably the simplest way to approach this is to leave existing functionality as-is, and implement a separate function that uses pygetwindow to retur",
          "created_at": "2024-07-01T17:18:19Z"
        },
        {
          "author": "abrichr",
          "body": "There are two possible solutions:\n\n1. Separate window_events containing metadata from those containing accessibility data into separate event types. When the accessibility event is received, update the already written action event to point to it (or have the accessibility event point to the action e",
          "created_at": "2024-07-15T17:02:02Z"
        }
      ]
    },
    {
      "issue_number": 450,
      "title": "Investigate Improving Redaction",
      "body": "### Feature request\r\n\r\ne.g. Presidio, others?\r\n\r\nWe need a (VERY LIGHTWEIGHT) evaluation framework for different commercial and non-commercial redaction APIs/libraries.\r\n\r\nWe want to generate plots of various accuracy measures for each one.\r\n\r\n### Motivation\r\n\r\nhttps://github.com/OpenAdaptAI/OpenAdapt/pull/418",
      "state": "open",
      "author": "KrishPatel13",
      "author_type": "User",
      "created_at": "2023-08-01T17:03:34Z",
      "updated_at": "2024-07-15T15:29:51Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/450/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KrishPatel13"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/450",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/450",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:12.217089",
      "comments": [
        {
          "author": "KrishPatel13",
          "body": "My next follow-up is that: Since there are not any other Redaction tool that are working effectively. How could we investigate improving redaction. Should we rename this Issue to investigation improving redaction in Presidio instead ?\r\n",
          "created_at": "2023-08-04T20:06:41Z"
        },
        {
          "author": "KrishPatel13",
          "body": "Shall we close this @abrichr as completed?",
          "created_at": "2024-07-14T15:42:10Z"
        },
        {
          "author": "abrichr",
          "body": "@KrishPatel13 I think for this to be considered completed we will need to implement automated tests which evaluate each provider on a dataset we curate.\r\n\r\nThis is low priority for now.",
          "created_at": "2024-07-15T15:29:50Z"
        }
      ]
    },
    {
      "issue_number": 264,
      "title": "Pseudonymization (aka. Maintain Identity semantics during Scrub)",
      "body": "### Feature request\n\nWhen calling scrub.scrub_text, instead of just replacing with `***`, we would like to retain semantic meaning. e.g. given:\r\n\r\n```\r\nAlice said hi to Bob\r\n```\r\n\r\nWe want:\r\n\r\n```\r\n<PersonA> said hi to <PersonB>\r\n```\r\n\r\nand not just:\r\n\r\n```\r\n*** said hi to ***\r\n```\r\n\r\n@KrishPatel13 🙏 \n\n### Motivation\n\nI'm always frustrated when [...] so this feature would [...].",
      "state": "open",
      "author": "atomicrichard",
      "author_type": "User",
      "created_at": "2023-06-14T23:43:45Z",
      "updated_at": "2024-07-15T15:28:41Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/264/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KrishPatel13"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/264",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/264",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:12.417031",
      "comments": [
        {
          "author": "KrishPatel13",
          "body": "Nice Article which describes the `Pseudonymization` (related Library: [OpenRedact](https://github.com/openredact/anonymizer))\r\n\r\nLink: https://medium.com/@openredact/anonymizer-a-framework-for-text-anonymization-499855f639d4\r\n![image](https://github.com/MLDSAI/OpenAdapt/assets/65433817/87217d56-dfa3",
          "created_at": "2023-06-29T05:15:45Z"
        },
        {
          "author": "KrishPatel13",
          "body": "Must Read: https://github.com/MLDSAI/OpenAdapt/issues/330#issuecomment-1612437801",
          "created_at": "2023-06-29T05:33:03Z"
        },
        {
          "author": "KrishPatel13",
          "body": "Tested OpenRedact/anonymizer (but the there is no API refrence, no docs) and also had issues on testing it manuallly.\r\n\r\nThen proceeded to find another psuedonymization library, and found about Cape-Privacy\r\n\r\nGood Choice Cape-Privacy for OpenAdapt: https://docs.capeprivacy.com/getting-started/\r\n",
          "created_at": "2023-07-21T17:56:06Z"
        },
        {
          "author": "KrishPatel13",
          "body": "Shall we close this @abrichr as completed ?",
          "created_at": "2024-07-14T15:37:33Z"
        },
        {
          "author": "abrichr",
          "body": "@KrishPatel13 can you please link to where this has been implemented?",
          "created_at": "2024-07-15T15:28:40Z"
        }
      ]
    },
    {
      "issue_number": 825,
      "title": "Dashboard: delete parent events",
      "body": "### Feature request\n\nIn a situation like this one, we don't want to force the user to delete each event individually:\r\n\r\n<img width=\"1091\" alt=\"image\" src=\"https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/9a34af25-c826-439d-b0a7-ec3ccb4d946a\">\r\n\r\nIt would be better to automatically delete all child events by deleting the parent event.\n\n### Motivation\n\nUsability",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-07-04T23:13:23Z",
      "updated_at": "2024-07-15T12:07:18Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/825/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/825",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/825",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:12.619239",
      "comments": [
        {
          "author": "Jagdeepkhunan",
          "body": "/attempt #825 ",
          "created_at": "2024-07-10T09:02:24Z"
        },
        {
          "author": "Jagdeepkhunan",
          "body": "@abrichr  \r\n\r\nevent.isComputed || ! event.isOriginal  \r\n\r\nimplies that user can delete all events  \r\nbut cannot delete ( parent ) event if it is Computed  event or not original event \r\n\r\nremoving this condition will fix issue : will allow to delete all events ( from parent event ) \r\n\r\nlet me know if",
          "created_at": "2024-07-10T09:56:53Z"
        },
        {
          "author": "Jagdeepkhunan",
          "body": "please consider this pull request for review #844\r\n\r\nhttps://github.com/OpenAdaptAI/OpenAdapt/pull/844",
          "created_at": "2024-07-10T14:10:45Z"
        },
        {
          "author": "abrichr",
          "body": "@Jagdeepkhunan have you tested this? I don't believe it will work.\r\n\r\nRemoving a parent event requires removing all the child events.",
          "created_at": "2024-07-12T14:50:40Z"
        },
        {
          "author": "Jagdeepkhunan",
          "body": "@abrichr  , yes  necessary  changes was not include in my last commit  \r\n\r\nI apologize for my negligence \r\nand pull request is updated ",
          "created_at": "2024-07-15T12:07:17Z"
        }
      ]
    },
    {
      "issue_number": 51,
      "title": "Implement Chrome Extension",
      "body": "Certain use cases (e.g. SalesForce, LinkedIn) would greatly benefit from reading and writing website markup and the DOM (i.e. by simplifying tokenization of screenshots).\r\n\r\n1) Implement a Chrome Plugin that sends and receives messages from PuterBot via native messaging: https://developer.chrome.com/docs/extensions/mv3/nativeMessaging/ . On every change to the Document Object Model (DOM) of the currently opened page, the extension should send a message to PuterBot.\r\n\r\n2) Implement an adapter in PuterBot to receive and store the messages with https://github.com/Rayquaza01/nativemessaging. To start with, this can look something like this:\r\n\r\n`browser.py`:\r\n```\r\nimport nativemessaging\r\n\r\ndef main():\r\n    # based on https://github.com/Rayquaza01/nativemessaging#sample\r\n    reply_num = 0\r\n    while True:\r\n        message = nativemessaging.get_message()\r\n        print(message)\r\n        nativemessaging.send_message(nativemessaging.encode_message(str(reply_num))\r\n        reply_num += 1\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n\r\nIn the extension:\r\n\r\n```\r\n// from https://github.com/Rayquaza01/nativemessaging#sample\r\n\r\nfunction onReceived(response) {\r\n    console.log(response);\r\n}\r\n\r\n// runtime.connectNative\r\nvar port = browser.runtime.connectNative(\"application_name\");\r\nport.onMessage.addListener(onReceived);\r\nport.postMessage(\"hello\");\r\n\r\n\r\n// runtime.sendNativeMessage\r\nbrowser.runtime.sendNativeMessage(\"puterbot\", document).then(onReceived);\r\n\r\n// based on https://stackoverflow.com/questions/8882502/how-to-track-dom-change-in-chrome-extension\r\n\r\nlet observer = new MutationObserver(mutations => {\r\n    for(let mutation of mutations) {\r\n        browser.runtime.sendNativeMessage(\"puterbot\", mutation).then(onReceived);\r\n    }\r\n});\r\nobserver.observe(document, { childList: true, subtree: true });\r\n```\r\n\r\nOnce this is working, we will want to add the necessary functionality to `record.py`.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-01T02:40:52Z",
      "updated_at": "2024-07-14T15:59:21Z",
      "closed_at": null,
      "labels": [
        "help wanted"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 6,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/51/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KrishPatel13"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/51",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/51",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:12.851982",
      "comments": [
        {
          "author": "KrishPatel13",
          "body": "Regarding MutationObserver: https://stackoverflow.com/questions/20383356/mutation-observer-is-undefined\r\nIt is only supported in Internet Explorer 11.\r\n\r\nCurrently Figuring out an alternative for Chrome.",
          "created_at": "2023-06-07T13:51:45Z"
        },
        {
          "author": "abrichr",
          "body": "> It is only supported in Internet Explorer 11.\r\n\r\nAre you sure? https://developer.chrome.com/blog/detect-dom-changes-with-mutation-observers/",
          "created_at": "2023-06-17T16:52:45Z"
        },
        {
          "author": "KrishPatel13",
          "body": "Some Notes regarding Chrome Extension: https://docs.google.com/presentation/d/106AXW3sBe7-7E-zIggnMnaUKUXWAj_aAuSxBspTDcGk/edit?usp=sharing",
          "created_at": "2023-07-03T05:32:01Z"
        },
        {
          "author": "KrishPatel13",
          "body": "Link to information on publishing extension: https://developer.chrome.com/docs/webstore/publish/",
          "created_at": "2023-07-12T15:57:29Z"
        },
        {
          "author": "abrichr",
          "body": "https://github.com/OpenAdaptAI/OpenAdapt/pull/364",
          "created_at": "2023-08-11T18:30:07Z"
        }
      ]
    },
    {
      "issue_number": 485,
      "title": "Refactor config",
      "body": "### Feature request\r\n\r\nCurrently we have:\r\n\r\n```\r\n_DEFAULTS = {\r\n    \"FOO\": \"bar\",\r\n    ...\r\n}\r\n```\r\n\r\nThis requires lots of linter pragmas. This task involves refactoring simply:\r\n\r\n```\r\nFOO = \"bar\"\r\n```\r\n\r\nThis will involve considering loading variables from .env and saving defaults correctly (e.g. `DEFAULTS = locals()` ?)\r\n\r\n### Motivation\r\n\r\nToo many linter pragmas when using config vars\n\n\n<details open>\n<summary>Checklist</summary>\n\n- [X] Extract `openadapt/config.py` ✓ https://github.com/OpenAdaptAI/OpenAdapt/commit/26b994ea64e5e83d7ff4f6f550a5562589db36f4\n- [X] Create `tests/test_config.py` ✓ https://github.com/OpenAdaptAI/OpenAdapt/commit/210457c3f2e00bcd9214f82b56af7c934527345e\n- [X] Check `tests/test_config.py` ✗\n- [X] Modify `tests/test_config.py` ! No changes made\n- [X] Check `tests/test_config.py` ✗\n\n![Flowchart](http://24.199.78.105:8082/public/f5e1eaea5907d9df0d2d723ddb8396adf0c367cd78b5e196277832d9073958ce_485_flowchart.svg)\n</details>\n",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-08-28T21:29:16Z",
      "updated_at": "2024-07-14T15:46:42Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "sweep"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/485/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 1,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/485",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/485",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:13.045026",
      "comments": [
        {
          "author": "sweep-ai[bot]",
          "body": "## Here's the PR! [https://github.com/OpenAdaptAI/OpenAdapt/pull/516](https://github.com/OpenAdaptAI/OpenAdapt/pull/516).\n<div align='center'>⚡ <b>Sweep Basic Tier</b>: I'm using GPT-4. You have 4 GPT-4 tickets left for the month and 2 for the day.<br/><br/> For more GPT-4 tickets, visit <a href=htt",
          "created_at": "2023-11-10T19:40:26Z"
        },
        {
          "author": "abrichr",
          "body": "Unless there are compelling reasons otherwise, we likely want to go with Pydantic, as per https://github.com/OpenAdaptAI/OpenAdapt/pull/489#issuecomment-1806343167, e.g:\r\n\r\n```\r\nfrom pydantic import BaseModel, Field\r\nfrom typing import Optional\r\n\r\nclass Config(BaseModel):\r\n    cache_dir_path: str = ",
          "created_at": "2023-11-10T19:48:39Z"
        }
      ]
    },
    {
      "issue_number": 432,
      "title": "Implement Memorizing Transformers",
      "body": "### Feature request\r\n\r\nWe would like to implement https://openreview.net/pdf?id=TrjbxzRcnf- via https://github.com/lucidrains/memorizing-transformers-pytorch and/or https://github.com/google-research/meliad as a completion provider.\r\n\r\nSee also https://twitter.com/ChrSzegedy/status/1589492667247132672?s=20&t=1VqJB9gI-yAmv2wM6VoYiQ\r\n\r\n### Motivation\r\n\r\nLong term memory implemented by vector databases that are external to the model has fundamental limitations.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-26T02:28:36Z",
      "updated_at": "2024-07-14T15:38:57Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/432/reactions",
        "total_count": 2,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 1
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/432",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/432",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:13.223322",
      "comments": []
    },
    {
      "issue_number": 851,
      "title": "[Bug]:  VanillaReplayStategy returns KeyError",
      "body": "### Describe the bug\r\n\r\n\r\n\r\n\r\nVanillaReplayStategy returns KeyError\r\nI have pulled the latest upstream and tested it. here's the log: \r\n\r\n```﻿\r\n(openadapt-py3.10) C:\\Users\\nsaip\\Desktop\\algora\\OpenAdapt>python -m openadapt.replay VanillaReplayStrategy --instructions \"calculate 9-8\"\r\n[2024-07-12 13:23:34.345] [recordLogger] [info] Created d3d11 device from 0\r\n[2024-07-12 13:23:34.345] [recordLogger] [info] found 1 displays\r\nC:\\Users\\nsaip\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-28n1JpsV-py3.10\\lib\\site-packages\\pywinauto\\_init_.py:80: UserWarning: Revert to STA COM threading mode\r\n  warnings.warn(\"Revert to STA COM threading mode\", UserWarning)\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:409 - Reading from C:\\Users\\nsaip\\Desktop\\algora\\OpenAdapt\\openadapt\\data\\config.json\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - ROOT_DIR_PATH=C:\\Users\\nsaip\\Desktop\\algora\\OpenAdapt\\openadapt\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - PRIVATE_AI_API_KEY=********Y>\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - REPLICATE_API_TOKEN=*******N>\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - DEFAULT_SEGMENTATION_ADAPTER=ultralytics\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - OPENAI_API_KEY=*****>\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - ANTHROPIC_API_KEY=******>\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - GOOGLE_API_KEY=*****>\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - CACHE_DIR_PATH=.cache\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - CACHE_ENABLED=True\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - CACHE_VERBOSITY=0\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - DB_ECHO=False\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - ERROR_REPORTING_ENABLED=True\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - OPENAI_MODEL_NAME=gpt-3.5-turbo\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - RECORD_WINDOW_DATA=False\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - RECORD_READ_ACTIVE_ELEMENT_STATE=False\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - RECORD_VIDEO=True\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - RECORD_AUDIO=True\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - RECORD_FULL_VIDEO=False\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - RECORD_IMAGES=False\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - LOG_MEMORY=False\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - REPLAY_STRIP_ELEMENT_STATE=True\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - VIDEO_ENCODING=libx264\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - VIDEO_PIXEL_FORMAT=yuv444p\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - VIDEO_DIR_PATH=C:\\Users\\nsaip\\Desktop\\algora\\OpenAdapt\\openadapt\\data\\videos\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - STOP_SEQUENCES=[['o', 'a', '.', 's', 't', 'o', 'p'], ['ctrl', 'ctrl', 'ctrl']]\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - IGNORE_WARNINGS=False\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - MAX_NUM_WARNINGS_PER_SECOND=5\r\n2024-07-12 13:23:35.690 | INFO     | openadapt.config:print_config:413 - WARNING_SUPPRESSION_PERIOD=1\r\n2024-07-12 13:23:35.706 | INFO     | openadapt.config:print_config:413 - MESSAGES_TO_FILTER=['Cannot pickle Objective-C objects']\r\n2024-07-12 13:23:35.706 | INFO     | openadapt.config:print_config:413 - ACTION_TEXT_SEP=-\r\n2024-07-12 13:23:35.706 | INFO     | openadapt.config:print_config:413 - ACTION_TEXT_NAME_PREFIX=<\r\n2024-07-12 13:23:35.706 | INFO     | openadapt.config:print_config:413 - ACTION_TEXT_NAME_SUFFIX=>\r\n2024-07-12 13:23:35.706 | INFO     | openadapt.config:print_config:413 - PLOT_PERFORMANCE=True\r\n2024-07-12 13:23:35.706 | INFO     | openadapt.config:print_config:413 - APP_DARK_MODE=False\r\n2024-07-12 13:23:35.706 | INFO     | openadapt.config:print_config:413 - SCRUB_ENABLED=False\r\n2024-07-12 13:23:35.706 | INFO     | openadapt.config:print_config:413 - SCRUB_CHAR=*\r\n2024-07-12 13:23:35.706 | INFO     | openadapt.config:print_config:413 - SCRUB_LANGUAGE=en\r\n2024-07-12 13:23:35.706 | INFO     | openadapt.config:print_config:413 - SCRUB_FILL_COLOR=255\r\n2024-07-12 13:23:35.706 | INFO     | openadapt.config:print_config:413 - SCRUB_KEYS_HTML=['text', 'canonical_text', 'title', 'state', 'task_description', 'key_char', 'canonical_key_char', 'key_vk', 'children']\r\n2024-07-12 13:23:35.706 | INFO     | openadapt.config:print_config:413 - SCRUB_CONFIG_TRF={'nlp_engine_name': 'spacy', 'models': [{'lang_code': 'en', 'model_name': 'en_core_web_trf'}]}\r\n2024-07-12 13:23:35.706 | INFO     | openadapt.config:print_config:413 - SCRUB_PRESIDIO_IGNORE_ENTITIES=[]\r\n2024-07-12 13:23:35.706 | INFO     | openadapt.config:print_config:413 - VISUALIZE_DARK_MODE=False\r\n2024-07-12 13:23:35.706 | INFO     | openadapt.config:print_config:413 - VISUALIZE_RUN_NATIVELY=True\r\n2024-07-12 13:23:35.706 | INFO     | openadapt.config:print_config:413 - VISUALIZE_DENSE_TREES=True\r\n2024-07-12 13:23:35.706 | INFO     | openadapt.config:print_config:413 - VISUALIZE_ANIMATIONS=True\r\n2024-07-12 13:23:35.706 | INFO     | openadapt.config:print_config:413 - VISUALIZE_EXPAND_ALL=False\r\n2024-07-12 13:23:35.706 | INFO     | openadapt.config:print_config:413 - VISUALIZE_MAX_TABLE_CHILDREN=10\r\n2024-07-12 13:23:35.706 | INFO     | openadapt.config:print_config:413 - SAVE_SCREENSHOT_DIFF=False\r\n2024-07-12 13:23:35.706 | INFO     | openadapt.config:print_config:413 - SPACY_MODEL_NAME=en_core_web_trf\r\n2024-07-12 13:23:35.706 | INFO     | openadapt.config:print_config:413 - DASHBOARD_CLIENT_PORT=5173\r\n2024-07-12 13:23:35.706 | INFO     | openadapt.config:print_config:413 - DASHBOARD_SERVER_PORT=8080\r\n2024-07-12 13:23:35.706 | INFO     | openadapt.config:print_config:413 - SOM_SERVER_URL=<SOM_SERVER_URL>\r\n2024-07-12 13:23:35.721 | INFO     | openadapt.config:print_config:413 - UNIQUE_USER_ID=b802d869-3605-490c-a3f6-019edb336876\r\n2024-07-12 13:23:35.721 | INFO     | openadapt.config:print_config:413 - REDIRECT_TO_ONBOARDING=True\r\n2024-07-12 13:23:35.721 | INFO     | openadapt.config:print_config:413 - DEFAULT_ADAPTER=openai\r\n2024-07-12 13:23:35.721 | INFO     | openadapt.config:print_config:420 - active_branch_name='main'\r\n2024-07-12 13:23:35.721 | INFO     | openadapt.config:print_config:424 - is_reporting_branch=True\r\n2024-07-12 13:23:37.504 | INFO     | _main_:replay:69 - strategy_name='VanillaReplayStrategy'\r\n2024-07-12 13:23:48.097 | INFO     | _main_:replay:82 - strategy_class=<class 'openadapt.strategies.vanilla.VanillaReplayStrategy'>\r\n2024-07-12 13:23:49.301 | INFO     | openadapt.events:get_events:74 - num_process_iters=0 num_action_events=504 num_window_events=6 num_screenshots=53\r\n2024-07-12 13:23:49.301 | INFO     | openadapt.events:process_events:825 - before num_action_events=504 num_window_events=6 num_screenshots=53 num_total=563\r\n2024-07-12 13:23:49.317 | INFO     | openadapt.events:merge_consecutive_action_events:757 - name='redundant_mouse_move' num_events_removed=93\r\n2024-07-12 13:23:49.458 | INFO     | openadapt.events:merge_consecutive_action_events:757 - name='keyboard' num_events_removed=0\r\n2024-07-12 13:23:49.473 | INFO     | openadapt.events:merge_consecutive_action_events:757 - name='mouse_move' num_events_removed=387\r\n2024-07-12 13:23:49.473 | INFO     | openadapt.events:merge_consecutive_action_events:757 - name='mouse_scroll' num_events_removed=0\r\n2024-07-12 13:23:49.473 | INFO     | openadapt.events:merge_consecutive_action_events:757 - name='mouse_click' num_events_removed=7\r\n2024-07-12 13:23:49.473 | INFO     | openadapt.events:process_events:873 - after num_action_events_=17 num_window_events_=5 num_screenshots_=17 num_total_=39\r\n2024-07-12 13:23:49.473 | INFO     | openadapt.events:process_events:877 - pct_action_events=0.03373015873015873 pct_window_events=0.8333333333333334 pct_screenshots=0.32075471698113206 pct_total=0.06927175843694494\r\n2024-07-12 13:23:49.473 | INFO     | openadapt.events:get_events:127 - duration=1.3763306140899658\r\n2024-07-12 13:23:49.489 | ERROR    | fire.core:_CallAndUpdateTrace:681 - An error has been caught in function '_CallAndUpdateTrace', process 'MainProcess' (16932), thread 'MainThread' (20464):\r\nTraceback (most recent call last):\r\n\r\n  File \"C:\\Users\\nsaip\\AppData\\Local\\Programs\\Python\\Python310\\lib\\runpy.py\", line 196, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n           |         |     -> {'_name': 'main', 'doc_': 'Replay recorded events.\\n\\nUsage:\\n    python -m openadapt.replay.py <strategy_name> [--...\r\n           |         -> <code object <module> at 0x0000023D52F2C240, file \"C:\\Users\\nsaip\\Desktop\\algora\\OpenAdapt\\openadapt\\replay.py\", line 1>\r\n           -> <function _run_code at 0x0000023D52F0A3B0>\r\n\r\n  File \"C:\\Users\\nsaip\\AppData\\Local\\Programs\\Python\\Python310\\lib\\runpy.py\", line 86, in _run_code\r\n    exec(code, run_globals)\r\n         |     -> {'_name': 'main', 'doc_': 'Replay recorded events.\\n\\nUsage:\\n    python -m openadapt.replay.py <strategy_name> [--...\r\n         -> <code object <module> at 0x0000023D52F2C240, file \"C:\\Users\\nsaip\\Desktop\\algora\\OpenAdapt\\openadapt\\replay.py\", line 1>\r\n\r\n  File \"C:\\Users\\nsaip\\Desktop\\algora\\OpenAdapt\\openadapt\\replay.py\", line 126, in <module>\r\n    fire.Fire(replay)\r\n    |    |    -> <function replay at 0x0000023D6CE44280>\r\n    |    -> <function Fire at 0x0000023D552CEDD0>\r\n    -> <module 'fire' from 'C:\\\\Users\\\\nsaip\\\\AppData\\\\Local\\\\pypoetry\\\\Cache\\\\virtualenvs\\\\openadapt-28n1JpsV-py3.10\\\\lib\\\\site-pac...\r\n\r\n  File \"C:\\Users\\nsaip\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-28n1JpsV-py3.10\\lib\\site-packages\\fire\\core.py\", line 141, in Fire\r\n    component_trace = _Fire(component, args, parsed_flag_args, context, name)\r\n                      |     |          |     |                 |        -> 'replay.py'\r\n                      |     |          |     |                 -> {}\r\n                      |     |          |     -> Namespace(verbose=False, interactive=False, separator='-', completion=None, help=False, trace=False)\r\n                      |     |          -> ['VanillaReplayStrategy']\r\n                      |     -> <function replay at 0x0000023D6CE44280>\r\n                      -> <function _Fire at 0x0000023D553AA5F0>\r\n\r\n  File \"C:\\Users\\nsaip\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-28n1JpsV-py3.10\\lib\\site-packages\\fire\\core.py\", line 466, in _Fire\r\n    component, remaining_args = _CallAndUpdateTrace(\r\n    |                           -> <function _CallAndUpdateTrace at 0x0000023D553AA710>\r\n    -> <function replay at 0x0000023D6CE44280>\r\n\r\n> File \"C:\\Users\\nsaip\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-28n1JpsV-py3.10\\lib\\site-packages\\fire\\core.py\", line 681, in _CallAndUpdateTrace\r\n    component = fn(*varargs, **kwargs)\r\n                |   |          -> {}\r\n                |   -> ['VanillaReplayStrategy', False, None, None, None]\r\n                -> <function replay at 0x0000023D6CE44280>\r\n\r\n  File \"C:\\Users\\nsaip\\Desktop\\algora\\OpenAdapt\\openadapt\\replay.py\", line 84, in replay\r\n    strategy = strategy_class(recording, **kwargs)\r\n               |              |            -> {}\r\n               |              -> Recording(id=2, timestamp=1720770391.9934068, monitor_width=1920, monitor_height=1080, double_click_interval_seconds=0.5, dou...\r\n               -> <class 'openadapt.strategies.vanilla.VanillaReplayStrategy'>\r\n\r\n  File \"C:\\Users\\nsaip\\Desktop\\algora\\OpenAdapt\\openadapt\\strategies\\vanilla.py\", line 56, in _init_\r\n    self.recording_description = describe_recording(\r\n    |                            -> <function describe_recording at 0x0000023D13271A20>\r\n    -> <openadapt.strategies.vanilla.VanillaReplayStrategy object at 0x0000023D6F507310>\r\n\r\n  File \"C:\\Users\\nsaip\\Desktop\\algora\\OpenAdapt\\openadapt\\strategies\\vanilla.py\", line 131, in describe_recording\r\n    window_dicts = [\r\n\r\n  File \"C:\\Users\\nsaip\\Desktop\\algora\\OpenAdapt\\openadapt\\strategies\\vanilla.py\", line 132, in <listcomp>\r\n    action.window_event.to_prompt_dict(include_window_data)\r\n    |      |                           -> False\r\n    |      -> <sqlalchemy.orm.attributes.InstrumentedAttribute object at 0x0000023D6CCD34C0>\r\n    -> ActionEvent(name='singleclick', timestamp=1720770437.7697651, recording_timestamp=1720770391.9934068, screenshot_timestamp=17...\r\n\r\n  File \"C:\\Users\\nsaip\\Desktop\\algora\\OpenAdapt\\openadapt\\models.py\", line 576, in to_prompt_dict\r\n    window_dict[\"state\"].pop(\"data\")\r\n    -> {'title': 'Search', 'left': 684, 'top': 282, 'width': 800, 'height': 798}\r\n\r\nKeyError: 'state'\r\n\r\n```\r\n\r\n### To Reproduce\r\n\r\n[ ] Windows\r\n\r\n```\r\npython -m openadapt.replay VanillaReplayStrategy --instructions \"calculate 9-8\"\r\n\r\n```",
      "state": "open",
      "author": "varshith257",
      "author_type": "User",
      "created_at": "2024-07-13T11:51:49Z",
      "updated_at": "2024-07-13T11:52:22Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/851/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/851",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/851",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:13.223343",
      "comments": []
    },
    {
      "issue_number": 848,
      "title": "[Bug]:  VanillaReplayStategy returns unexpected keyword argument instructions",
      "body": "### Describe the bug\n\nWhen I ran the replay strategy of Vanilla after the record it returned the following error:\r\n\r\n```\r\n(openadapt-py3.10) C:\\Users\\nsaip\\Desktop\\algora\\OpenAdapt>python -m openadapt.replay VanillaReplayStrategy --instructions \"calculate 9-8\"\r\n[2024-07-12 13:23:08.801] [recordLogger] [info] Created d3d11 device from 0\r\n[2024-07-12 13:23:08.801] [recordLogger] [info] found 1 displays\r\nC:\\Users\\nsaip\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-28n1JpsV-py3.10\\lib\\site-packages\\pywinauto\\_init_.py:80: UserWarning: Revert to STA COM threading mode\r\n  warnings.warn(\"Revert to STA COM threading mode\", UserWarning)\r\n2024-07-12 13:23:10.135 | INFO     | openadapt.config:print_config:409 - Reading from C:\\Users\\nsaip\\Desktop\\algora\\OpenAdapt\\openadapt\\data\\config.json\r\n2024-07-12 13:23:10.135 | INFO     | openadapt.config:print_config:413 - ROOT_DIR_PATH=C:\\Users\\nsaip\\Desktop\\algora\\OpenAdapt\\openadapt\r\n2024-07-12 13:23:10.135 | INFO     | openadapt.config:print_config:413 - PRIVATE_AI_API_KEY=********Y>\r\n2024-07-12 13:23:10.135 | INFO     | openadapt.config:print_config:413 - REPLICATE_API_TOKEN=*******N>\r\n2024-07-12 13:23:10.135 | INFO     | openadapt.config:print_config:413 - DEFAULT_SEGMENTATION_ADAPTER=ultralytics\r\n2024-07-12 13:23:10.135 | INFO     | openadapt.config:print_config:413 - OPENAI_API_KEY=*****>\r\n2024-07-12 13:23:10.135 | INFO     | openadapt.config:print_config:413 - ANTHROPIC_API_KEY=******>\r\n2024-07-12 13:23:10.135 | INFO     | openadapt.config:print_config:413 - GOOGLE_API_KEY=*****>\r\n2024-07-12 13:23:10.135 | INFO     | openadapt.config:print_config:413 - CACHE_DIR_PATH=.cache\r\n2024-07-12 13:23:10.135 | INFO     | openadapt.config:print_config:413 - CACHE_ENABLED=True\r\n2024-07-12 13:23:10.135 | INFO     | openadapt.config:print_config:413 - CACHE_VERBOSITY=0\r\n2024-07-12 13:23:10.135 | INFO     | openadapt.config:print_config:413 - DB_ECHO=False\r\n2024-07-12 13:23:10.135 | INFO     | openadapt.config:print_config:413 - ERROR_REPORTING_ENABLED=True\r\n2024-07-12 13:23:10.140 | INFO     | openadapt.config:print_config:413 - OPENAI_MODEL_NAME=gpt-3.5-turbo\r\n2024-07-12 13:23:10.140 | INFO     | openadapt.config:print_config:413 - RECORD_WINDOW_DATA=False\r\n2024-07-12 13:23:10.140 | INFO     | openadapt.config:print_config:413 - RECORD_READ_ACTIVE_ELEMENT_STATE=False\r\n2024-07-12 13:23:10.140 | INFO     | openadapt.config:print_config:413 - RECORD_VIDEO=True\r\n2024-07-12 13:23:10.140 | INFO     | openadapt.config:print_config:413 - RECORD_AUDIO=True\r\n2024-07-12 13:23:10.140 | INFO     | openadapt.config:print_config:413 - RECORD_FULL_VIDEO=False\r\n2024-07-12 13:23:10.143 | INFO     | openadapt.config:print_config:413 - RECORD_IMAGES=False\r\n2024-07-12 13:23:10.144 | INFO     | openadapt.config:print_config:413 - LOG_MEMORY=False\r\n2024-07-12 13:23:10.144 | INFO     | openadapt.config:print_config:413 - REPLAY_STRIP_ELEMENT_STATE=True\r\n2024-07-12 13:23:10.145 | INFO     | openadapt.config:print_config:413 - VIDEO_ENCODING=libx264\r\n2024-07-12 13:23:10.145 | INFO     | openadapt.config:print_config:413 - VIDEO_PIXEL_FORMAT=yuv444p\r\n2024-07-12 13:23:10.145 | INFO     | openadapt.config:print_config:413 - VIDEO_DIR_PATH=C:\\Users\\nsaip\\Desktop\\algora\\OpenAdapt\\openadapt\\data\\videos\r\n2024-07-12 13:23:10.145 | INFO     | openadapt.config:print_config:413 - STOP_SEQUENCES=[['o', 'a', '.', 's', 't', 'o', 'p'], ['ctrl', 'ctrl', 'ctrl']]\r\n2024-07-12 13:23:10.145 | INFO     | openadapt.config:print_config:413 - IGNORE_WARNINGS=False\r\n2024-07-12 13:23:10.145 | INFO     | openadapt.config:print_config:413 - MAX_NUM_WARNINGS_PER_SECOND=5\r\n2024-07-12 13:23:10.145 | INFO     | openadapt.config:print_config:413 - WARNING_SUPPRESSION_PERIOD=1\r\n2024-07-12 13:23:10.145 | INFO     | openadapt.config:print_config:413 - MESSAGES_TO_FILTER=['Cannot pickle Objective-C objects']\r\n2024-07-12 13:23:10.145 | INFO     | openadapt.config:print_config:413 - ACTION_TEXT_SEP=-\r\n2024-07-12 13:23:10.145 | INFO     | openadapt.config:print_config:413 - ACTION_TEXT_NAME_PREFIX=<\r\n2024-07-12 13:23:10.145 | INFO     | openadapt.config:print_config:413 - ACTION_TEXT_NAME_SUFFIX=>\r\n2024-07-12 13:23:10.145 | INFO     | openadapt.config:print_config:413 - PLOT_PERFORMANCE=True\r\n2024-07-12 13:23:10.145 | INFO     | openadapt.config:print_config:413 - APP_DARK_MODE=False\r\n2024-07-12 13:23:10.145 | INFO     | openadapt.config:print_config:413 - SCRUB_ENABLED=False\r\n2024-07-12 13:23:10.145 | INFO     | openadapt.config:print_config:413 - SCRUB_CHAR=*\r\n2024-07-12 13:23:10.145 | INFO     | openadapt.config:print_config:413 - SCRUB_LANGUAGE=en\r\n2024-07-12 13:23:10.145 | INFO     | openadapt.config:print_config:413 - SCRUB_FILL_COLOR=255\r\n2024-07-12 13:23:10.145 | INFO     | openadapt.config:print_config:413 - SCRUB_KEYS_HTML=['text', 'canonical_text', 'title', 'state', 'task_description', 'key_char', 'canonical_key_char', 'key_vk', 'children']\r\n2024-07-12 13:23:10.145 | INFO     | openadapt.config:print_config:413 - SCRUB_CONFIG_TRF={'nlp_engine_name': 'spacy', 'models': [{'lang_code': 'en', 'model_name': 'en_core_web_trf'}]}\r\n2024-07-12 13:23:10.154 | INFO     | openadapt.config:print_config:413 - SCRUB_PRESIDIO_IGNORE_ENTITIES=[]\r\n2024-07-12 13:23:10.154 | INFO     | openadapt.config:print_config:413 - VISUALIZE_DARK_MODE=False\r\n2024-07-12 13:23:10.154 | INFO     | openadapt.config:print_config:413 - VISUALIZE_RUN_NATIVELY=True\r\n2024-07-12 13:23:10.154 | INFO     | openadapt.config:print_config:413 - VISUALIZE_DENSE_TREES=True\r\n2024-07-12 13:23:10.154 | INFO     | openadapt.config:print_config:413 - VISUALIZE_ANIMATIONS=True\r\n2024-07-12 13:23:10.154 | INFO     | openadapt.config:print_config:413 - VISUALIZE_EXPAND_ALL=False\r\n2024-07-12 13:23:10.157 | INFO     | openadapt.config:print_config:413 - VISUALIZE_MAX_TABLE_CHILDREN=10\r\n2024-07-12 13:23:10.157 | INFO     | openadapt.config:print_config:413 - SAVE_SCREENSHOT_DIFF=False\r\n2024-07-12 13:23:10.157 | INFO     | openadapt.config:print_config:413 - SPACY_MODEL_NAME=en_core_web_trf\r\n2024-07-12 13:23:10.157 | INFO     | openadapt.config:print_config:413 - DASHBOARD_CLIENT_PORT=5173\r\n2024-07-12 13:23:10.159 | INFO     | openadapt.config:print_config:413 - DASHBOARD_SERVER_PORT=8080\r\n2024-07-12 13:23:10.160 | INFO     | openadapt.config:print_config:413 - SOM_SERVER_URL=<SOM_SERVER_URL>\r\n2024-07-12 13:23:10.160 | INFO     | openadapt.config:print_config:413 - UNIQUE_USER_ID=b802d869-3605-490c-a3f6-019edb336876\r\n2024-07-12 13:23:10.160 | INFO     | openadapt.config:print_config:413 - REDIRECT_TO_ONBOARDING=True\r\n2024-07-12 13:23:10.160 | INFO     | openadapt.config:print_config:413 - DEFAULT_ADAPTER=openai\r\n2024-07-12 13:23:10.165 | INFO     | openadapt.config:print_config:420 - active_branch_name='main'\r\n2024-07-12 13:23:10.165 | INFO     | openadapt.config:print_config:424 - is_reporting_branch=True\r\n2024-07-12 13:23:12.058 | INFO     | _main_:replay:69 - strategy_name='VanillaReplayStrategy'\r\nException ignored in: <function VanillaReplayStrategy._del_ at 0x000002082D421BD0>\r\nTraceback (most recent call last):\r\n2024-07-12 13:23:23.264 | INFO     | _main_:replay:82 - strategy_class=<class 'openadapt.strategies.vanilla.VanillaReplayStrategy'>\r\n  File \"C:\\Users\\nsaip\\Desktop\\algora\\OpenAdapt\\openadapt\\strategies\\vanilla.py\", line 103, in _del_\r\n    action.to_prompt_dict() for action in self.action_history\r\nAttributeError: 'VanillaReplayStrategy' object has no attribute 'action_history'\r\n2024-07-12 13:23:23.264 | ERROR    | fire.core:_CallAndUpdateTrace:681 - An error has been caught in function '_CallAndUpdateTrace', process 'MainProcess' (22368), thread 'MainThread' (20752):\r\nTraceback (most recent call last):\r\n\r\n  File \"C:\\Users\\nsaip\\AppData\\Local\\Programs\\Python\\Python310\\lib\\runpy.py\", line 196, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n           |         |     -> {'_name': 'main', 'doc_': 'Replay recorded events.\\n\\nUsage:\\n    python -m openadapt.replay.py <strategy_name> [--...\r\n           |         -> <code object <module> at 0x000002086D46C240, file \"C:\\Users\\nsaip\\Desktop\\algora\\OpenAdapt\\openadapt\\replay.py\", line 1>\r\n           -> <function _run_code at 0x000002086D44A3B0>\r\n\r\n  File \"C:\\Users\\nsaip\\AppData\\Local\\Programs\\Python\\Python310\\lib\\runpy.py\", line 86, in _run_code\r\n    exec(code, run_globals)\r\n         |     -> {'_name': 'main', 'doc_': 'Replay recorded events.\\n\\nUsage:\\n    python -m openadapt.replay.py <strategy_name> [--...\r\n         -> <code object <module> at 0x000002086D46C240, file \"C:\\Users\\nsaip\\Desktop\\algora\\OpenAdapt\\openadapt\\replay.py\", line 1>\r\n\r\n  File \"C:\\Users\\nsaip\\Desktop\\algora\\OpenAdapt\\openadapt\\replay.py\", line 126, in <module>\r\n    fire.Fire(replay)\r\n    |    |    -> <function replay at 0x0000020807544280>\r\n    |    -> <function Fire at 0x000002086F82EDD0>\r\n    -> <module 'fire' from 'C:\\\\Users\\\\nsaip\\\\AppData\\\\Local\\\\pypoetry\\\\Cache\\\\virtualenvs\\\\openadapt-28n1JpsV-py3.10\\\\lib\\\\site-pac...\r\n\r\n  File \"C:\\Users\\nsaip\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-28n1JpsV-py3.10\\lib\\site-packages\\fire\\core.py\", line 141, in Fire\r\n    component_trace = _Fire(component, args, parsed_flag_args, context, name)\r\n                      |     |          |     |                 |        -> 'replay.py'\r\n                      |     |          |     |                 -> {}\r\n                      |     |          |     -> Namespace(verbose=False, interactive=False, separator='-', completion=None, help=False, trace=False)\r\n                      |     |          -> ['VanillaReplayStrategy', '--instructions', 'calculate 9-8']\r\n                      |     -> <function replay at 0x0000020807544280>\r\n                      -> <function _Fire at 0x000002086F90A5F0>\r\n\r\n  File \"C:\\Users\\nsaip\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-28n1JpsV-py3.10\\lib\\site-packages\\fire\\core.py\", line 466, in _Fire\r\n    component, remaining_args = _CallAndUpdateTrace(\r\n    |                           -> <function _CallAndUpdateTrace at 0x000002086F90A710>\r\n    -> <function replay at 0x0000020807544280>\r\n\r\n> File \"C:\\Users\\nsaip\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-28n1JpsV-py3.10\\lib\\site-packages\\fire\\core.py\", line 681, in _CallAndUpdateTrace\r\n    component = fn(*varargs, **kwargs)\r\n                |   |          -> {'instructions': 'calculate 9-8'}\r\n                |   -> ['VanillaReplayStrategy', False, None, None, None]\r\n                -> <function replay at 0x0000020807544280>\r\n\r\n  File \"C:\\Users\\nsaip\\Desktop\\algora\\OpenAdapt\\openadapt\\replay.py\", line 84, in replay\r\n    strategy = strategy_class(recording, **kwargs)\r\n               |              |            -> {'instructions': 'calculate 9-8'}\r\n               |              -> Recording(id=2, timestamp=1720770391.9934068, monitor_width=1920, monitor_height=1080, double_click_interval_seconds=0.5, dou...\r\n               -> <class 'openadapt.strategies.vanilla.VanillaReplayStrategy'>\r\n\r\nTypeError: VanillaReplayStrategy._init_() got an unexpected keyword argument 'instructions'\r\n```\n\n### To Reproduce\n\n[ ] Windows\r\n\r\nTo reproduce run this cd to replay the VanillaReplayStrategy\r\n\r\n```\r\npython -m openadapt.replay VanillaReplayStrategy --instructions \"calculate 9-8\"\r\n```\r\n\r\n\r\nIMO the fix is to add the apply_replay_instructions to VanillaReplayStrategy as what we have for the VisualReplayStrategy",
      "state": "closed",
      "author": "varshith257",
      "author_type": "User",
      "created_at": "2024-07-12T16:33:07Z",
      "updated_at": "2024-07-12T16:38:40Z",
      "closed_at": "2024-07-12T16:38:40Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/848/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/848",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/848",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:13.223350",
      "comments": []
    },
    {
      "issue_number": 824,
      "title": "[Bug]:  searching for deleted file while replaying",
      "body": "### Describe the bug\r\n\r\nI create a new recording with description `testing calculator` but I accidently opened some other app so I delete this recording using app tray and again create a new recording with same description. Now, when I try to replay I get this error which probably means it is checking for a file that is not present in db.\r\n\r\n\r\n2024-07-04 17:14:58.926 | ERROR    | fire.core:_CallAndUpdateTrace:681 - An error has been caught in function '_CallAndUpdateTrace', process 'MainProcess' (1684), thread 'MainThread' (9260):\r\nTraceback (most recent call last):\r\n\r\n  File \"C:\\Users\\akjha\\AppData\\Local\\Programs\\Python\\Python310\\lib\\runpy.py\", line 196, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n           |         |     -> {'__name__': '__main__', '__doc__': 'Replay recorded events.\\n\\nUsage:\\n    python -m openadapt.replay.py <strategy_name> [--...\r\n           |         -> <code object <module> at 0x0000012541898660, file \"D:\\test\\OpenAdapt\\openadapt\\replay.py\", line 1>\r\n           -> <function _run_code at 0x0000012541C22C20>\r\n\r\n  File \"C:\\Users\\akjha\\AppData\\Local\\Programs\\Python\\Python310\\lib\\runpy.py\", line 86, in _run_code\r\n    exec(code, run_globals)\r\n         |     -> {'__name__': '__main__', '__doc__': 'Replay recorded events.\\n\\nUsage:\\n    python -m openadapt.replay.py <strategy_name> [--...\r\n         -> <code object <module> at 0x0000012541898660, file \"D:\\test\\OpenAdapt\\openadapt\\replay.py\", line 1>\r\n\r\n  File \"D:\\test\\OpenAdapt\\openadapt\\replay.py\", line 126, in <module>\r\n    fire.Fire(replay)\r\n    |    |    -> <function replay at 0x000001256555EDD0>\r\n    |    -> <function Fire at 0x0000012543B564D0>\r\n    -> <module 'fire' from 'C:\\\\Users\\\\akjha\\\\AppData\\\\Local\\\\pypoetry\\\\Cache\\\\virtualenvs\\\\openadapt-PrTjJyzk-py3.10\\\\lib\\\\site-pac...\r\n\r\n  File \"C:\\Users\\akjha\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-PrTjJyzk-py3.10\\lib\\site-packages\\fire\\core.py\", line 141, in Fire\r\n    component_trace = _Fire(component, args, parsed_flag_args, context, name)\r\n                      |     |          |     |                 |        -> 'replay.py'\r\n                      |     |          |     |                 -> {}\r\n                      |     |          |     -> Namespace(verbose=False, interactive=False, separator='-', completion=None, help=False, trace=False)\r\n                      |     |          -> ['VisualReplayStrategy', '--instructions', 'calculate 4*8-2']\r\n                      |     -> <function replay at 0x000001256555EDD0>\r\n                      -> <function _Fire at 0x0000012544042050>\r\n\r\n  File \"C:\\Users\\akjha\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-PrTjJyzk-py3.10\\lib\\site-packages\\fire\\core.py\", line 466, in _Fire\r\n    component, remaining_args = _CallAndUpdateTrace(\r\n    |                           -> <function _CallAndUpdateTrace at 0x0000012544042170>\r\n    -> <function replay at 0x000001256555EDD0>\r\n\r\n> File \"C:\\Users\\akjha\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-PrTjJyzk-py3.10\\lib\\site-packages\\fire\\core.py\", line 681, in _CallAndUpdateTrace\r\n    component = fn(*varargs, **kwargs)\r\n                |   |          -> {'instructions': 'calculate 4*8-2'}\r\n                |   -> ['VisualReplayStrategy', False, None, None, None]\r\n                -> <function replay at 0x000001256555EDD0>\r\n\r\n  File \"D:\\test\\OpenAdapt\\openadapt\\replay.py\", line 84, in replay\r\n    strategy = strategy_class(recording, **kwargs)\r\n               |              |            -> {'instructions': 'calculate 4*8-2'}\r\n               |              -> Recording(id=2, timestamp=1720093433.8658783, monitor_width=1920, monitor_height=1080, double_click_interval_seconds=0.5, dou...\r\n               -> <class 'openadapt.strategies.visual.VisualReplayStrategy'>\r\n\r\n  File \"D:\\test\\OpenAdapt\\openadapt\\strategies\\visual.py\", line 182, in __init__\r\n    add_active_segment_descriptions(recording.processed_action_events)\r\n    |                               |         -> <property object at 0x00000125648E0FE0>\r\n    |                               -> Recording(id=2, timestamp=1720093433.8658783, monitor_width=1920, monitor_height=1080, double_click_interval_seconds=0.5, dou...\r\n    -> <function add_active_segment_descriptions at 0x0000012578E868C0>\r\n\r\n  File \"D:\\test\\OpenAdapt\\openadapt\\strategies\\visual.py\", line 109, in add_active_segment_descriptions\r\n    window_segmentation = get_window_segmentation(action)\r\n                          |                       -> ActionEvent(name='move', timestamp=1720092739.9282093, recording_timestamp=1720092722.585144, screenshot_timestamp=1720092740...\r\n                          -> <function get_window_segmentation at 0x00000125117FED40>\r\n\r\n  File \"D:\\test\\OpenAdapt\\openadapt\\strategies\\visual.py\", line 394, in get_window_segmentation\r\n    original_image = screenshot.cropped_image\r\n                     |          -> <property object at 0x0000012565415D50>\r\n                     -> Screenshot(id=31, recording_timestamp=1720092722.585144, recording_id=2, timestamp=1720092740.5336316)\r\n\r\n  File \"D:\\test\\OpenAdapt\\openadapt\\models.py\", line 763, in cropped_image\r\n    self._cropped_image = self.crop_active_window(action_event)\r\n    |    |                |    |                  -> ActionEvent(name='move', timestamp=1720092739.9282093, recording_timestamp=1720092722.585144, screenshot_timestamp=1720092740...\r\n    |    |                |    -> <function Screenshot.crop_active_window at 0x00000125653C70A0>\r\n    |    |                -> Screenshot(id=31, recording_timestamp=1720092722.585144, recording_id=2, timestamp=1720092740.5336316)\r\n    |    -> None\r\n    -> Screenshot(id=31, recording_timestamp=1720092722.585144, recording_id=2, timestamp=1720092740.5336316)\r\n\r\n  File \"D:\\test\\OpenAdapt\\openadapt\\models.py\", line 810, in crop_active_window\r\n    width_ratio, height_ratio = utils.get_scale_ratios(action_event)\r\n                                |     |                -> ActionEvent(name='move', timestamp=1720092739.9282093, recording_timestamp=1720092722.585144, screenshot_timestamp=1720092740...\r\n                                |     -> <function get_scale_ratios at 0x0000012565452CB0>\r\n                                -> <module 'openadapt.utils' from 'D:\\\\test\\\\OpenAdapt\\\\openadapt\\\\utils.py'>\r\n\r\n  File \"D:\\test\\OpenAdapt\\openadapt\\utils.py\", line 304, in get_scale_ratios\r\n    image = action_event.screenshot.image\r\n            |            -> <sqlalchemy.orm.attributes.InstrumentedAttribute object at 0x00000125653EF9C0>\r\n            -> ActionEvent(name='move', timestamp=1720092739.9282093, recording_timestamp=1720092722.585144, screenshot_timestamp=1720092740...\r\n\r\n  File \"D:\\test\\OpenAdapt\\openadapt\\models.py\", line 740, in image\r\n    frame_cache.cache_frames(video_file_path, screenshot_timestamps)\r\n    |           |            |                -> [-697.5915327072144, -697.4836299419403, -696.3792924880981, -696.22749376297, -696.1467545032501, -696.0308392047882, -695.9...\r\n    |           |            -> 'D:\\\\test\\\\OpenAdapt\\\\openadapt\\\\data\\\\videos\\\\oa_recording-1720092722.585144.mp4'\r\n    |           -> <function FrameCache.cache_frames at 0x00000125653C6A70>\r\n    -> <openadapt.models.FrameCache object at 0x0000012565409930>\r\n\r\n  File \"D:\\test\\OpenAdapt\\openadapt\\models.py\", line 656, in cache_frames\r\n    frames = video.extract_frames(video_file_path, uncached_timestamps)\r\n             |     |              |                -> [-697.5915327072144, -697.4836299419403, -696.3792924880981, -696.22749376297, -696.1467545032501, -696.0308392047882, -695.9...\r\n             |     |              -> 'D:\\\\test\\\\OpenAdapt\\\\openadapt\\\\data\\\\videos\\\\oa_recording-1720092722.585144.mp4'\r\n             |     -> <function extract_frames at 0x0000012512ECB910>\r\n             -> <module 'openadapt.video' from 'D:\\\\test\\\\OpenAdapt\\\\openadapt\\\\video.py'>\r\n\r\n  File \"D:\\test\\OpenAdapt\\openadapt\\video.py\", line 287, in extract_frames\r\n    video_container = av.open(video_filename)\r\n                      |  |    -> 'D:\\\\test\\\\OpenAdapt\\\\openadapt\\\\data\\\\videos\\\\oa_recording-1720092722.585144.mp4'\r\n                      |  -> <cyfunction open at 0x000001257281CBA0>\r\n                      -> <module 'av' from 'C:\\\\Users\\\\akjha\\\\AppData\\\\Local\\\\pypoetry\\\\Cache\\\\virtualenvs\\\\openadapt-PrTjJyzk-py3.10\\\\lib\\\\site-packa...\r\n\r\n  File \"av\\\\container\\\\core.pyx\", line 420, in av.container.core.open\r\n  File \"av\\\\container\\\\core.pyx\", line 266, in av.container.core.Container.__cinit__\r\n  File \"av\\\\container\\\\core.pyx\", line 286, in av.container.core.Container.err_check\r\n  File \"av\\\\error.pyx\", line 328, in av.error.err_check\r\n\r\nav.error.FileNotFoundError: [Errno 2] No such file or directory: 'D:\\\\test\\\\OpenAdapt\\\\openadapt\\\\data\\\\videos\\\\oa_recording-1720092722.585144.mp4' \r\n\r\n### To Reproduce\r\n\r\nI use Microsoft Windows\r\nStep 1: Create a new recording\r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/60042503/6999cb9f-19e9-414b-8fc4-5c14b32b6bdb)\r\nStep 2: Delete this recording \r\n![Screenshot 2024-07-04 170819](https://github.com/OpenAdaptAI/OpenAdapt/assets/60042503/3f9d58cb-841a-49e2-a8a5-5d89c016195b)\r\nStep 3: Create a new recording with same description\r\nStep 4: Run\r\n```bash\r\n python -m openadapt.replay VisualReplayStrategy --instructions \"calculate 4*8-2\" ```",
      "state": "closed",
      "author": "Animesh404",
      "author_type": "User",
      "created_at": "2024-07-04T11:59:58Z",
      "updated_at": "2024-07-11T19:33:46Z",
      "closed_at": "2024-07-11T19:33:46Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/824/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "Animesh404"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/824",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/824",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:13.223358",
      "comments": []
    },
    {
      "issue_number": 847,
      "title": "Support for Efficient Multi-Window Accessibility Tree Capture",
      "body": "### Feature request\n\nThank you for your excellent work on OpenAdapt! Currently, OpenAdapt captures the accessibility tree (a11ytree) of only the foremost window. This approach works well for single-window applications. But when I try to capture multiple windows' a11ytrees (by modifying `openadapt/window/_macos.py`), the process becomes extremely slow (~10 seconds to acquire all windows' a11ytrees). I wonder if there are ways to capture a11ytrees more efficiently.\n\n### Motivation\n\nWe may need the accessibility trees of all windows in the current state as usable data, especially for tasks that involve interactions across multiple windows.",
      "state": "open",
      "author": "ZeonLap",
      "author_type": "User",
      "created_at": "2024-07-11T17:52:30Z",
      "updated_at": "2024-07-11T19:22:03Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/847/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/847",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/847",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:13.223363",
      "comments": [
        {
          "author": "abrichr",
          "body": "Thank you @ZeonLap!\r\n\r\n> I wonder if there are ways to capture a11ytrees more efficiently.\r\n\r\nMe too! If anyone knows of one, I hope they leave a comment. Unfortunately I believe this is unlikely however, since we are using native OS APIs for this.\r\n\r\n> We may need the accessibility trees of all win",
          "created_at": "2024-07-11T19:19:26Z"
        }
      ]
    },
    {
      "issue_number": 813,
      "title": "[Bug]: hide fixture recordings in dashboard",
      "body": "### Describe the bug\n\nWhen running the dashboard for the first time, I expect there to be no recordings. However the fixture recording is there. This would be fine except that it doesn't contain any images.\n\n### To Reproduce\n\nDownload and run main build.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-29T16:58:53Z",
      "updated_at": "2024-07-08T16:48:39Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/813/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/813",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/813",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:13.397032",
      "comments": [
        {
          "author": "abrichr",
          "body": "Let's add a column to the recording table indicating that this is a fixture, and hide it in the dashboard.",
          "created_at": "2024-07-01T16:50:45Z"
        },
        {
          "author": "KIRA009",
          "body": "The only place where the data is loaded from `fixtures.sql`, is in `setup_database`, and the database into which it is recorded is `recording.db`, different from the database used over the project. I tried a fresh install (download -> unzip -> run) and I don't see any recordings.\n\n@abrichr Could you",
          "created_at": "2024-07-04T07:18:30Z"
        }
      ]
    },
    {
      "issue_number": 814,
      "title": "[Bug]: database contains recordings from previous versions",
      "body": "### Describe the bug\r\n\r\nWhen downloading and running a new version of openadapt, I would expect not to see recordings from previous versions.\r\n\r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/f445582a-ec6c-4aed-892a-2a6f9262e069)\r\n\r\n\r\n### To Reproduce\r\n\r\nDownload and run openadapt twice.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-29T16:59:53Z",
      "updated_at": "2024-07-08T16:48:33Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/814/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/814",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/814",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:13.618268",
      "comments": [
        {
          "author": "abrichr",
          "body": "When creating database fixtures, drop existing fixtures first.",
          "created_at": "2024-07-01T16:51:27Z"
        },
        {
          "author": "KIRA009",
          "body": "Hi @abrichr I don't see any fixtures with the description \"calculator\" in the project (checked on the main branch).\n\nCan you point out to where the data is coming from?",
          "created_at": "2024-07-04T07:04:58Z"
        }
      ]
    },
    {
      "issue_number": 818,
      "title": "[Bug]: mouse positions on Windows are not accurate",
      "body": "### Describe the bug\n\nOn Windows it is reported that mouse locations are off by a few pixels (e.g. negative values):\r\n\r\nhttps://github.com/moses-palmer/pynput/issues/386\n\n### To Reproduce\n\nTODO",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-07-01T13:20:01Z",
      "updated_at": "2024-07-08T16:46:46Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/818/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/818",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/818",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:13.810402",
      "comments": [
        {
          "author": "abrichr",
          "body": "First, let's re-produce this issue by creating a recording on windows, and visualizing it, and confirming that mouse positions are incorrect (e.g. negative).",
          "created_at": "2024-07-01T17:04:27Z"
        },
        {
          "author": "abrichr",
          "body": "We should also add something like this to each of `on_move`, `on_click`, and `on_scroll` in `record.py`:\r\n\r\n```\r\ndef on_move(event_q: queue.Queue, x: int, y: int, injected: bool) -> None:\r\n    ...\r\n    x, y = validate_position(x, y)\r\n    ...\r\n```\r\n```\r\ndef validate_position(x: int, y: int) -> tuple(",
          "created_at": "2024-07-05T17:24:49Z"
        }
      ]
    },
    {
      "issue_number": 815,
      "title": "[Bug]: Failed to execute script 'entrypoint' due to unhandled exception: 'NoneType' has no attribute 'write'",
      "body": "### Describe the bug\n\nAfter stopping a recording on Windows executable via stop sequence, the following error is displayed:\r\n\r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/cb4e0df1-139c-41c4-82b5-e8a152a19464)\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"multiprocessing\\process.py\", line 314, in _bootstrap\r\n  File \"multiprocessing\\process.py\", line 108, in run\r\n  File \"openadapt\\record.py\", line 1081, in record_audio\r\n    model = whisper.load_model(\"base\")\r\n  File \"whisper\\__init__.py\", line 133, in load_model\r\n    checkpoint_file = _download(_MODELS[name], download_root, in_memory)\r\n  File \"whisper\\__init__.py\", line 70, in _download\r\n    with tqdm(\r\n  File \"tqdm\\std.py\", line 1109, in __init__\r\n  File \"tqdm\\std.py\", line 1361, in refresh\r\n  File \"tqdm\\std.py\", line 1509, in display\r\n  File \"tqdm\\std.py\", line 350, in print_status\r\n  File \"tqdm\\std.py\", line 343, in fp_write\r\n  File \"tqdm\\utils.py\", line 89, in __getattr__\r\nAttributeError: 'NoneType' object has no attribute 'write'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"openadapt\\entrypoint.py\", line 7, in <module>\r\n    multiprocessing.freeze_support()\r\n  File \"Lib\\site-packages\\PyInstaller\\hooks\\rthooks\\pyi_rth_multiprocessing.py\", line 50, in _freeze_support\r\n  File \"multiprocessing\\spawn.py\", line 116, in spawn_main\r\n  File \"multiprocessing\\spawn.py\", line 129, in _main\r\n  File \"multiprocessing\\process.py\", line 329, in _bootstrap\r\nAttributeError: 'NoneType' object has no attribute 'write'\r\n```\n\n### To Reproduce\n\nDownload and run executable, start a recording, then stop it.",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-29T17:02:50Z",
      "updated_at": "2024-07-08T16:44:57Z",
      "closed_at": "2024-07-08T16:44:56Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/815/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/815",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/815",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:14.070910",
      "comments": [
        {
          "author": "abrichr",
          "body": "Possibly related: https://www.eatdirtshit.rocks/sittin-on-a-rainbow-using-buzz-to-transcribe-speech/\r\n\r\nAs a workaround we should add `RECORD_AUDIO` to the dashboard config and default to `False`.",
          "created_at": "2024-06-29T17:07:21Z"
        },
        {
          "author": "KIRA009",
          "body": "@abrichr I checked this out with the latest build on windows on a fresh install, and didn't face this issue. Since we are bundling the whisper 'base' model with the build, I don't think we should be  Could you try it one more time and let me know if you still find this, we can disable audio recordin",
          "created_at": "2024-07-04T08:36:17Z"
        },
        {
          "author": "abrichr",
          "body": "@KIRA009 it does not appear to be consistent. Let's disable audio recording by default, and also add it to the dashboard configuration.",
          "created_at": "2024-07-04T17:28:10Z"
        },
        {
          "author": "KIRA009",
          "body": "PR: https://github.com/OpenAdaptAI/OpenAdapt/pull/826",
          "created_at": "2024-07-05T09:44:03Z"
        }
      ]
    },
    {
      "issue_number": 804,
      "title": "Store application logs",
      "body": "### Feature request\n\nWe would like to store application logs to a file.\n\n### Motivation\n\nDebugging",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-26T13:56:19Z",
      "updated_at": "2024-07-05T22:56:47Z",
      "closed_at": "2024-07-05T22:56:47Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/804/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/804",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/804",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:14.280558",
      "comments": [
        {
          "author": "KIRA009",
          "body": "This has been addressed",
          "created_at": "2024-07-01T10:19:01Z"
        }
      ]
    },
    {
      "issue_number": 801,
      "title": "[Bug]: Test command not working",
      "body": "### Describe the bug\n\n(openadapt-py3.10) PS C:\\Users\\abhis\\openAdapt\\OpenAdapt> python -m openadapt.record \"testing out openadapt\"\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\Programs\\Python\\Python310\\lib\\runpy.py\", line 196, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\Programs\\Python\\Python310\\lib\\runpy.py\", line 86, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\record.py\", line 28, in <module>\r\n    from openadapt.models import Recording\r\n  File \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\models.py\", line 18, in <module>\r\n    from openadapt.db import db\r\n  File \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\db\\__init__.py\", line 3, in <module>\r\n    from .db import export_recording  # noqa: F401\r\n  File \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\db\\db.py\", line 77, in <module>\r\n    Base = get_base(engine)\r\n  File \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\db\\db.py\", line 68, in get_base\r\n    Base = declarative_base(\r\n  File \"<string>\", line 2, in declarative_base\r\n  File \"c:\\users\\abhis\\appdata\\local\\programs\\python\\python310\\lib\\site-packages\\sqlalchemy\\util\\deprecations.py\", line 386, in warned\r\n    return fn(*args, **kwargs)  # type: ignore[no-any-return]\r\n  File \"c:\\users\\abhis\\appdata\\local\\programs\\python\\python310\\lib\\site-packages\\sqlalchemy\\ext\\declarative\\__init__.py\", line 27, in declarative_base\r\n    return _declarative_base(*arg, **kw)\r\nTypeError: declarative_base() got an unexpected keyword argument 'bind'\n\n### To Reproduce\n\non windows 11 powershell while running: (openadapt-py3.10) PS C:\\Users\\abhis\\openAdapt\\OpenAdapt> python -m openadapt.record \"testing out openadapt\"\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\Programs\\Python\\Python310\\lib\\runpy.py\", line 196, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\Programs\\Python\\Python310\\lib\\runpy.py\", line 86, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\record.py\", line 28, in <module>\r\n    from openadapt.models import Recording\r\n  File \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\models.py\", line 18, in <module>\r\n    from openadapt.db import db\r\n  File \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\db\\__init__.py\", line 3, in <module>\r\n    from .db import export_recording  # noqa: F401\r\n  File \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\db\\db.py\", line 77, in <module>\r\n    Base = get_base(engine)\r\n  File \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\db\\db.py\", line 68, in get_base\r\n    Base = declarative_base(\r\n  File \"<string>\", line 2, in declarative_base\r\n  File \"c:\\users\\abhis\\appdata\\local\\programs\\python\\python310\\lib\\site-packages\\sqlalchemy\\util\\deprecations.py\", line 386, in warned\r\n    return fn(*args, **kwargs)  # type: ignore[no-any-return]\r\n  File \"c:\\users\\abhis\\appdata\\local\\programs\\python\\python310\\lib\\site-packages\\sqlalchemy\\ext\\declarative\\__init__.py\", line 27, in declarative_base\r\n    return _declarative_base(*arg, **kw)\r\nTypeError: declarative_base() got an unexpected keyword argument 'bind'",
      "state": "closed",
      "author": "absha03",
      "author_type": "User",
      "created_at": "2024-06-25T03:16:03Z",
      "updated_at": "2024-07-05T20:03:41Z",
      "closed_at": "2024-07-05T20:03:41Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 11,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/801/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/801",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/801",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:14.476571",
      "comments": [
        {
          "author": "abrichr",
          "body": "Hi @absha03 , this is the same error you reported in https://github.com/OpenAdaptAI/OpenAdapt/issues/800. Please try the suggested resolution, i.e. follow the instructions in https://github.com/OpenAdaptAI/OpenAdapt?tab=readme-ov-file#manual-setup, which includes running `poetry install`.",
          "created_at": "2024-06-26T18:08:29Z"
        },
        {
          "author": "absha03",
          "body": "I did follow all of the steps in sequence as mentioned, not sure what went missing, any help is highly appreciated.\r\nRegards Abhishek\r\n\r\n\r\nSent from Yahoo Mail for iPhone\r\n\r\n\r\nOn Wednesday, June 26, 2024, 2:08 PM, Richard Abrich ***@***.***> wrote:\r\n\r\n\r\n\r\n\r\nHi @absha03 , this is the same error you r",
          "created_at": "2024-06-27T04:02:11Z"
        },
        {
          "author": "abrichr",
          "body": "Can you please show the output of `poetry install` followed by `pytest`?",
          "created_at": "2024-06-27T14:57:38Z"
        },
        {
          "author": "absha03",
          "body": "PS C:\\Users\\abhis\\openAdapt\\OpenAdapt> poetry install\r\nInstalling dependencies from lock file\r\nPackage operations: 0 installs, 37 updates, 0 removals\r\n  - Updating typing-extensions (4.11.0 -> 4.12.2): Installing...\r\nInstalling C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqw",
          "created_at": "2024-06-28T19:53:25Z"
        },
        {
          "author": "absha03",
          "body": "[poetryInstall.txt](https://github.com/user-attachments/files/16036323/poetryInstall.txt)\r\nattached output in file as well @abrichr , had to cut some of the output in above comment as it was too long, but poetry install was a success",
          "created_at": "2024-06-28T19:55:13Z"
        }
      ]
    },
    {
      "issue_number": 455,
      "title": "[Bug]: Minor bug at the end of the recording for Windows",
      "body": "### Describe the bug\n\nAfter ending a replay the following is logged:\r\n```\r\n2023-08-08 16:36:47.813 | INFO     | __main__:record:1149 - joining...\r\n2023-08-08 16:36:47.995 | INFO     | __mp_main__:write_events:407 - event_type='screen' done\r\n2023-08-08 16:36:47.996 | INFO     | __mp_main__:wrapper_logging:131 -  <- Leave: write_events(None)\r\n2023-08-08 16:36:49.457 | INFO     | __main__:wrapper_logging:131 -  <- Leave: read_window_events(None)\r\n2023-08-08 16:36:49.458 | INFO     | __mp_main__:performance_stats_writer:750 - Performance stats writer done\r\n2023-08-08 16:36:49.458 | INFO     | __mp_main__:wrapper_logging:131 -  <- Leave: performance_stats_writer(None)\r\n2023-08-08 16:36:49.464 | INFO     | __mp_main__:memory_writer:797 - Memory writer done\r\n2023-08-08 16:36:49.788 | INFO     | openadapt.utils:plot_performance:706 - fpath='performance\\\\performance-1691526966.8701015.png'\r\n'open' is not recognized as an internal or external command,\r\noperable program or batch file.\r\n2023-08-08 16:36:50.063 | INFO     | __main__:record:1168 - Saved recording_timestamp=1691526966.8701015\r\n2023-08-08 16:36:50.065 | INFO     | __main__:wrapper_logging:131 -  <- Leave: record(None)\r\n```\r\n\r\n**'open' is not recognized as an internal or external command**: \r\n - According to the following link this is a Windows only issue and an alternative command is needed. https://stackoverflow.com/questions/49997547/open-is-not-recognized-as-an-internal-or-external-command-while-running-projec\n\n### To Reproduce\n\nRun the following:\r\n```\r\npython .\\openadapt\\record.py test_record\r\n```",
      "state": "closed",
      "author": "AvidEslami",
      "author_type": "User",
      "created_at": "2023-08-08T20:44:57Z",
      "updated_at": "2024-07-05T18:20:14Z",
      "closed_at": "2024-07-05T18:20:14Z",
      "labels": [
        "bug",
        "Windows"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/455/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/455",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/455",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:15.705963",
      "comments": [
        {
          "author": "AvidEslami",
          "body": "Source of this bug: https://github.com/OpenAdaptAI/OpenAdapt/blob/764821039e3a03cb4dc3ec80b744f61a48c71461/openadapt/utils.py#L711C5-L711C31",
          "created_at": "2023-08-08T20:48:06Z"
        },
        {
          "author": "Jagdeepkhunan",
          "body": "please close this issue , as bug not exist anymore / code change  \r\n\r\nbug not reproduce via command >> python .\\openadapt\\record.py test_record",
          "created_at": "2024-07-04T13:07:54Z"
        }
      ]
    },
    {
      "issue_number": 798,
      "title": "[Bug]: windows install script not working",
      "body": "### Describe the bug\n\nRunning the install script fails:\r\n\r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/2f53bf84-e803-459f-ba3f-56be9bb24d32)\r\n\r\nA new shell window opens, flashes some text about OCR, then immediately exits.\n\n### To Reproduce\n\nPaste into powershell:\r\n\r\n```\r\nStart-Process powershell -Verb RunAs -ArgumentList '-NoExit', '-ExecutionPolicy', 'Bypass', '-Command', \"iwr -UseBasicParsing -Uri 'https://raw.githubusercontent.com/OpenAdaptAI/OpenAdapt/main/install/install_openadapt.ps1' | Invoke-Expression\"\r\n```",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-24T19:58:58Z",
      "updated_at": "2024-07-05T01:08:38Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/798/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/798",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/798",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:15.897353",
      "comments": []
    },
    {
      "issue_number": 794,
      "title": "[Bug]: `poetry postinstall` fails",
      "body": "### Describe the bug\n\n```\r\npoetry install\r\n...\r\npoetry postinstall\r\n...\r\n error: Microsoft Visual C++ 14.0 or greater is required. Get it with \"Microsoft C++ Build Tools\": https://visualstudio.microsoft.com/visual-cpp-build-tools/\r\n```\n\n### To Reproduce\n\nWindows 11 on Parallels for Mac M2.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-23T19:03:09Z",
      "updated_at": "2024-07-04T17:09:10Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/794/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/794",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/794",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:15.897372",
      "comments": [
        {
          "author": "abrichr",
          "body": "Workaround:\r\n\r\n```\r\nwinget install --id Microsoft.VisualStudio.2022.BuildTools --accept-package-agreements --accept-source-agreements\r\n```\r\n\r\nEdit: modify to install C++:\r\n\r\n<img width=\"444\" alt=\"image\" src=\"https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/25a0b46f-6b25-45e6-8d35-e81bf64d59ec\"",
          "created_at": "2024-06-23T19:11:47Z"
        },
        {
          "author": "lectrician1",
          "body": "This should be included in the readme",
          "created_at": "2024-07-02T19:59:18Z"
        },
        {
          "author": "abrichr",
          "body": "@lectrician1 please feel free to submit a PR!",
          "created_at": "2024-07-04T17:09:09Z"
        }
      ]
    },
    {
      "issue_number": 797,
      "title": "[Bug]: Windows build fails silently",
      "body": "### Describe the bug\n\nOn a fresh Windows 11, double-clicking on \"OpenAdapt\" after downloading and extracting results in a waiting cursor for a few seconds, then returns to normal as if nothing had happened. Nothing appears in the system tray, and no process named OpenAdapt or Python is running.\n\n### To Reproduce\n\n- Download Windows app from https://openadapt.ai/\r\n- extract\r\n- double-click \"OpenAdapt\"",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-24T19:53:17Z",
      "updated_at": "2024-07-04T16:14:28Z",
      "closed_at": "2024-07-04T16:14:28Z",
      "labels": [
        "bug",
        "main-broken"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/797/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/797",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/797",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:16.075757",
      "comments": [
        {
          "author": "abrichr",
          "body": "If I run as administrator, it creates the system tray icon and opens a tab, but the tab show ERR_CONNECTION_REFUSED. Attempting to create a recording similarly has no effect.",
          "created_at": "2024-06-26T13:55:23Z"
        },
        {
          "author": "abrichr",
          "body": "Related: https://github.com/OpenAdaptAI/OpenAdapt/issues/804",
          "created_at": "2024-06-26T13:56:23Z"
        }
      ]
    },
    {
      "issue_number": 807,
      "title": "[Bug]: not bound to a Session; lazy load operation of attribute 'action_event' cannot proceed",
      "body": "### Describe the bug\n\n```\r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/replay.py\", line 84, in replay\r\n    strategy = strategy_class(recording, **kwargs)\r\n               |              |            -> {'instructions': 'complete the timesheet'}\r\n               |              -> Recording(id=76, timestamp=1719443335.466385, monitor_width=1512, monitor_height=982, double_click_interval_seconds=0.5, doub...\r\n               -> <class 'openadapt.strategies.visual.VisualReplayStrategy'>\r\n\r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/strategies/visual.py\", line 182, in __init__\r\n    add_active_segment_descriptions(recording.processed_action_events)\r\n    |                               |         -> <property object at 0x16c362f20>\r\n    |                               -> Recording(id=76, timestamp=1719443335.466385, monitor_width=1512, monitor_height=982, double_click_interval_seconds=0.5, doub...\r\n    -> <function add_active_segment_descriptions at 0x2b2745a20>\r\n\r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/strategies/visual.py\", line 109, in add_active_segment_descriptions\r\n    window_segmentation = get_window_segmentation(action)\r\n                          |                       -> ActionEvent(name='singleclick', timestamp=1719443344.59867, recording_timestamp=1719443335.466385, screenshot_timestamp=17194...\r\n                          -> <function get_window_segmentation at 0x2cecfd090>\r\n\r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/strategies/visual.py\", line 394, in get_window_segmentation\r\n    original_image = screenshot.cropped_image\r\n                     |          -> <property object at 0x16c3be160>\r\n                     -> Screenshot(id=4666, recording_timestamp=1719443335.466385, recording_id=76, timestamp=1719443349.534288)\r\n\r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/models.py\", line 762, in cropped_image\r\n    action_event = self.action_event[-1]\r\n                   |    -> <sqlalchemy.orm.attributes.InstrumentedAttribute object at 0x16c3bee80>\r\n                   -> Screenshot(id=4666, recording_timestamp=1719443335.466385, recording_id=76, timestamp=1719443349.534288)\r\n\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/sqlalchemy/orm/attributes.py\", line 482, in __get__\r\n    return self.impl.get(state, dict_)\r\n           |    |    |   |      -> {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x2cf27e440>, 'id': 4666, 'timestamp': 1719443349.534288...\r\n           |    |    |   -> <sqlalchemy.orm.state.InstanceState object at 0x2cf27e440>\r\n           |    |    -> <function AttributeImpl.get at 0x115df4310>\r\n           |    -> <sqlalchemy.orm.attributes.CollectionAttributeImpl object at 0x2929eba00>\r\n           -> <sqlalchemy.orm.attributes.InstrumentedAttribute object at 0x16c3bee80>\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/sqlalchemy/orm/attributes.py\", line 942, in get\r\n    value = self._fire_loader_callables(state, key, passive)\r\n            |    |                      |      |    -> symbol('PASSIVE_OFF')\r\n            |    |                      |      -> 'action_event'\r\n            |    |                      -> <sqlalchemy.orm.state.InstanceState object at 0x2cf27e440>\r\n            |    -> <function AttributeImpl._fire_loader_callables at 0x115df43a0>\r\n            -> <sqlalchemy.orm.attributes.CollectionAttributeImpl object at 0x2929eba00>\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/sqlalchemy/orm/attributes.py\", line 978, in _fire_loader_callables\r\n    return self.callable_(state, passive)\r\n           |    |         |      -> symbol('PASSIVE_OFF')\r\n           |    |         -> <sqlalchemy.orm.state.InstanceState object at 0x2cf27e440>\r\n           |    -> <member 'callable_' of 'AttributeImpl' objects>\r\n           -> <sqlalchemy.orm.attributes.CollectionAttributeImpl object at 0x2929eba00>\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/sqlalchemy/orm/strategies.py\", line 863, in _load_for_state\r\n    raise orm_exc.DetachedInstanceError(\r\n          |       -> <class 'sqlalchemy.orm.exc.DetachedInstanceError'>\r\n          -> <module 'sqlalchemy.orm.exc' from '/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.1...\r\n\r\nsqlalchemy.orm.exc.DetachedInstanceError: Parent instance <Screenshot at 0x2cf27e470> is not bound to a Session; lazy load operation of attribute 'action_event' cannot proceed (Background on this error at: https://sqlalche.me/e/14/bhk3)\r\n\r\n\r\n2024-06-26 19:11:22.065 | INFO     | openadapt.strategies.visual:__del__:258 - action_history=\r\n[]\r\n```\n\n### To Reproduce\n\n```\r\npython -m openadapt.replay VisualReplayStrategy --instructions \"complete the timesheet\" --capture\r\n```\r\n",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-26T23:12:54Z",
      "updated_at": "2024-07-03T17:27:42Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/807/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "Animesh404"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/807",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/807",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:16.259678",
      "comments": [
        {
          "author": "KIRA009",
          "body": "@abrichr This looks like its because the session you are fetching `recording.processed_action_events` from is closed, which means only direct relationships would work. `action_event.screenshot` would work, but any relationships on `screenshot` would fail, which is what is happening when `cropped_ima",
          "created_at": "2024-06-27T11:29:21Z"
        },
        {
          "author": "abrichr",
          "body": "@KIRA009 this should really be abstracted away somehow. Any idea when this regression was introduced? This code hasn't changed in a while.\r\n\r\nEdit: it appears to have spontaneously resolved. The timesheet task has different timing than the calculator task (i.e. more segments take longer to describe)",
          "created_at": "2024-06-27T15:01:01Z"
        },
        {
          "author": "KIRA009",
          "body": "Doesn't really look like a race condition, especially because it looks like its running on the same process.\r\n\r\n> This code hasn't changed in a while.\r\n\r\nDo you mean this was working after the changes we made to the different types of db sessions?",
          "created_at": "2024-06-28T09:32:21Z"
        },
        {
          "author": "abrichr",
          "body": "ChatGPT:\r\n\r\n---\r\n\r\nThe `DetachedInstanceError` in SQLAlchemy occurs when you try to access a related object or attribute that requires a database query, but the parent object is not attached to an active session. Here are steps to address this issue:\r\n\r\n### 1. Ensure Session is Open\r\nMake sure the s",
          "created_at": "2024-07-01T15:07:25Z"
        },
        {
          "author": "abrichr",
          "body": "This is happening because the session is closed at the end of https://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/models.py#L103",
          "created_at": "2024-07-01T16:46:44Z"
        }
      ]
    },
    {
      "issue_number": 660,
      "title": "Avoid unnecessary segmentations",
      "body": "### Feature request\n\n`VisualReplayStrategy` appears to perform segmentations even when a previous screenshot meets the similarity index threshold.\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-05-10T14:35:53Z",
      "updated_at": "2024-07-01T17:06:20Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/660/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/660",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/660",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:16.486004",
      "comments": []
    },
    {
      "issue_number": 742,
      "title": "Compare to Powerautomate",
      "body": "### Feature request\n\nWe want to find out how Microsoft PowerAutomate works in Citrix.\n\n\n\n![Image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/f743abef-4d88-46dd-a5f4-694f18031669)\n\n\n\n### Motivation\n\nUnderstanding differentiation",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-12T23:13:22Z",
      "updated_at": "2024-07-01T16:41:55Z",
      "closed_at": "2024-07-01T16:41:55Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/742/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "abrichr"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/742",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/742",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:16.486025",
      "comments": []
    },
    {
      "issue_number": 721,
      "title": "[Bug]: recording from Dashboard doesn't display toast notifications",
      "body": "### Describe the bug\n\nWhen recording from the dashboard, there are no toast notifications that are displayed. This is inconsistent with the behavior when recording from the tray icon.\r\n\r\nThis task involves refactoring notifications so that they occur regardless from where the recording started.\n\n### To Reproduce\n\n- Start Dashboard\r\n- Click \"Start Recording\"",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-06T21:42:13Z",
      "updated_at": "2024-07-01T16:37:19Z",
      "closed_at": "2024-07-01T16:37:19Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/721/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/721",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/721",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:16.486032",
      "comments": [
        {
          "author": "abrichr",
          "body": "When addressing this, it may make sense to address https://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/app/tray.py#L80 as well:\r\n\r\n```\r\n# TODO: remove once https://github.com/niklashenning/pyqt-toast/issues/9\r\n# is addressed\r\n```\r\n\r\nhttps://github.com/niklashenning/pyqt-toast/issues/9 has b",
          "created_at": "2024-06-06T21:44:41Z"
        },
        {
          "author": "abrichr",
          "body": "@KIRA009 Until this is resolved, let's disable recording from dashboard (e.g. comment out Record button).",
          "created_at": "2024-06-17T17:28:28Z"
        },
        {
          "author": "KIRA009",
          "body": "This has been addressed",
          "created_at": "2024-07-01T10:20:09Z"
        },
        {
          "author": "abrichr",
          "body": "Fixed in https://github.com/OpenAdaptAI/OpenAdapt/pull/809",
          "created_at": "2024-07-01T16:37:09Z"
        }
      ]
    },
    {
      "issue_number": 754,
      "title": "[Bug]: FileNotFoundError [Errno 2] No such file or directory: '/Applications/OpenAdapt.app/Contents/Frameworks/pyqttoast/css/toast_notification.css'",
      "body": "### Describe the bug\n\n```\r\nIssue #\r\nEvents\r\n31\r\nFirst Seen\r\n21 days ago\r\nMay 24, 2024 at 7:01:22 AM GMT-4\r\nLast Seen\r\n3 days ago\r\nJune 11, 2024 at 9:36:26 PM GMT-4\r\n```\r\n```\r\nMessage\r\nFileNotFoundError: [Errno 2] No such file or directory: '/Applications/OpenAdapt.app/Contents/Frameworks/pyqttoast/css…\r\nException\r\n\r\n\r\nFileNotFoundError:[Errno 2] No such file or directory: '/Applications/OpenAdapt.app/Contents/Frameworks/pyqttoast/css/toast_notification.css'\r\nFile \"openadapt/app/tray.py\", line 388, in _delete\r\n     self.show_toast(\"Recording deleted.\")\r\nFile \"openadapt/app/tray.py\", line 588, in show_toast\r\n     toast = Toast(self.main_window)\r\nFile \"pyqttoast/toast.py\", line 193, in __init__\r\n```\n\n### To Reproduce\n\nSee https://app.glitchtip.com/openadaptai/issues/292030",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-14T14:28:52Z",
      "updated_at": "2024-07-01T16:36:50Z",
      "closed_at": "2024-07-01T16:36:49Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/754/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/754",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/754",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:16.757512",
      "comments": [
        {
          "author": "abrichr",
          "body": "It's interesting to note that all of these errors are coming from the same host.\r\n\r\nI think these errors may no longer exist in main, but the user is still using the old download.\r\n\r\nThis points to a need for autoupdating.",
          "created_at": "2024-06-14T14:30:52Z"
        },
        {
          "author": "KIRA009",
          "body": "This is interesting. Autoupdates could definitely be done, especially since we don't have any windows that need to be interacted with when installing",
          "created_at": "2024-06-17T08:00:52Z"
        },
        {
          "author": "KIRA009",
          "body": "This has been addressed in the PR related to the build issues",
          "created_at": "2024-07-01T10:19:41Z"
        },
        {
          "author": "abrichr",
          "body": "Fixed in https://github.com/OpenAdaptAI/OpenAdapt/pull/809",
          "created_at": "2024-07-01T16:36:49Z"
        }
      ]
    },
    {
      "issue_number": 811,
      "title": "Loading / Splash screen",
      "body": "### Feature request\n\nWe would like to show a loading / splash screen while the dashboard / tray is starting up.\r\n\r\ne.g. with https://doc.qt.io/qtforpython-6/PySide6/QtWidgets/QSplashScreen.html\n\n### Motivation\n\nIt can take quite long (e.g. 20 seconds) for the dashboard to appear after double clicking on the executable for the first time.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-27T14:52:34Z",
      "updated_at": "2024-06-27T14:52:35Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/811/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/811",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/811",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:17.052418",
      "comments": []
    },
    {
      "issue_number": 800,
      "title": "[Bug]: alembic command not working",
      "body": "### Describe the bug\n\nat the last setup command, I get this alembic error:\r\n\r\n(openadapt-py3.10) PS C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt> alembic upgrade head\r\n\r\nTraceback (most recent call last):\r\nFile \"C:\\Users\\abhis\\AppData\\Local\\Programs\\Python\\Python310\\lib\\runpy.py\", line 196, in _run_module_as_main\r\nreturn run_code(code, main_globals, None,\r\nFile \"C:\\Users\\abhis\\AppData\\Local\\Programs\\Python\\Python310\\lib\\runpy.py\", line 86, in run_code\r\nexec(code, run_globals)\r\nFile \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\Scripts\\alembic.exe_main.py\", line 7, in\r\nFile \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\alembic\\config.py\", line 590, in main\r\nCommandLine(prog=prog).main(argv=argv)\r\nFile \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\alembic\\config.py\", line 584, in main\r\nself.run_cmd(cfg, options)\r\nFile \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\alembic\\config.py\", line 561, in run_cmd\r\nfn(\r\nFile \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\alembic\\command.py\", line 322, in upgrade\r\nscript.run_env()\r\nFile \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\alembic\\script\\base.py\", line 569, in run_env\r\nutil.load_python_file(self.dir, \"env.py\")\r\nFile \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\alembic\\util\\pyfiles.py\", line 94, in load_python_file\r\nmodule = load_module_py(module_id, path)\r\nFile \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\alembic\\util\\pyfiles.py\", line 110, in load_module_py\r\nspec.loader.exec_module(module) # type: ignore\r\nFile \"\", line 883, in exec_module\r\nFile \"\", line 241, in call_with_frames_removed\r\nFile \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\alembic\\env.py\", line 12, in\r\nfrom openadapt.db import db\r\nFile \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\db_init.py\", line 3, in\r\nfrom .db import export_recording # noqa: F401\r\nFile \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\db\\db.py\", line 77, in\r\nBase = get_base(engine)\r\nFile \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\db\\db.py\", line 68, in get_base\r\nBase = declarative_base(\r\nFile \"\", line 2, in declarative_base\r\nFile \"c:\\users\\abhis\\appdata\\local\\programs\\python\\python310\\lib\\site-packages\\sqlalchemy\\util\\deprecations.py\", line 386, in warned\r\nreturn fn(*args, **kwargs) # type: ignore[no-any-return]\r\nFile \"c:\\users\\abhis\\appdata\\local\\programs\\python\\python310\\lib\\site-packages\\sqlalchemy\\ext\\declarative_init.py\", line 27, in declarative_base\r\nreturn _declarative_base(*arg, **kw)\r\n\r\nTypeError: declarative_base() got an unexpected keyword argument 'bind'\n\n### To Reproduce\n\non windows 11 on PowerShell 7: (openadapt-py3.10) PS C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt> alembic upgrade head",
      "state": "open",
      "author": "absha03",
      "author_type": "User",
      "created_at": "2024-06-25T02:16:49Z",
      "updated_at": "2024-06-26T18:07:36Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/800/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/800",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/800",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:17.052435",
      "comments": [
        {
          "author": "abrichr",
          "body": "Thanks for reporting this @absha03 . It seems you may not be on the correct version of `alembic`. Can you please `poetry install` before running this command? Make sure to follow the instructions in https://github.com/OpenAdaptAI/OpenAdapt?tab=readme-ov-file#manual-setup",
          "created_at": "2024-06-26T18:07:35Z"
        }
      ]
    },
    {
      "issue_number": 790,
      "title": "[Bug]: Not able to create a recording",
      "body": "### Describe the bug\n\nI expected it start recording while running: python -m openadapt.record \"testing out openadapt\" instead got this error:\r\n\r\n\r\n\r\n(openadapt-py3.10) C:\\Users\\abhis\\openAdapt\\OpenAdapt>python -m openadapt.record \"testing out openadapt\"\r\n2024-06-21 16:31:50.917 | INFO     | openadapt.utils:wrapper_logging:676 -  -> Enter: record(testing out openadapt, None, None, None, False)\r\n2024-06-21 16:31:50.969 | INFO     | openadapt.db.crud:release_db_lock:871 - Database lock released.\r\n2024-06-21 16:31:50.971 | INFO     | openadapt.db.crud:acquire_db_lock:853 - Database lock acquired.\r\n2024-06-21 16:31:50.972 | INFO     | __main__:record:1168 - task_description='testing out openadapt'\r\n2024-06-21 16:31:50.974 | INFO     | openadapt.utils:wrapper_logging:676 -  -> Enter: create_recording(testing out openadapt)\r\n2024-06-21 16:31:51.026 | ERROR    | fire.core:_CallAndUpdateTrace:681 - An error has been caught in function '_CallAndUpdateTrace', process 'MainProcess' (21276), thread 'MainThread' (20956):Traceback (most recent call last):\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\r\n    self.dialect.do_execute(\r\n    |    |       -> <function DefaultDialect.do_execute at 0x000001B5D5DBDCF0>\r\n    |    -> <sqlalchemy.dialects.sqlite.pysqlite.SQLiteDialect_pysqlite object at 0x000001B5D9EE3880>\r\n    -> <sqlalchemy.engine.base.Connection object at 0x000001B5E8A5FA30>\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\r\n    cursor.execute(statement, parameters)\r\n    |      |       |          -> (1719001910.9778485, 3840, 2160, 0.5, 4.0, 'win32', 'testing out openadapt', None, '{\"ROOT_DIR_PATH\": \"C:\\\\\\\\Users\\\\\\\\abhis\\\\...\r\n    |      |       -> 'INSERT INTO recording (timestamp, monitor_width, monitor_height, double_click_interval_seconds, double_click_distance_pixels...\r\n    |      -> <method 'execute' of 'sqlite3.Cursor' objects>\r\n    -> <sqlite3.Cursor object at 0x000001B5E89F7BC0>\r\n\r\nsqlite3.OperationalError: no such table: recording\r\n\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\n\r\n\r\nTraceback (most recent call last):\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\Programs\\Python\\Python310\\lib\\runpy.py\", line 196, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n           |         |     -> {'__name__': '__main__', '__doc__': 'Script for creating Recordings.\\n\\nUsage:\\n\\n    $ python -m openadapt.record \"<descript...\r\n           |         -> <code object <module> at 0x000001B5B408F100, file \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\record.py\", line 1>\r\n           -> <function _run_code at 0x000001B5B401AA70>\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\Programs\\Python\\Python310\\lib\\runpy.py\", line 86, in _run_code\r\n    exec(code, run_globals)\r\n         |     -> {'__name__': '__main__', '__doc__': 'Script for creating Recordings.\\n\\nUsage:\\n\\n    $ python -m openadapt.record \"<descript...\r\n         -> <code object <module> at 0x000001B5B408F100, file \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\record.py\", line 1>\r\n\r\n  File \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\record.py\", line 1414, in <module>\r\n    fire.Fire(record)\r\n    |    |    -> <function record at 0x000001B5E896FC70>\r\n    |    -> <function Fire at 0x000001B5DAB4B6D0>\r\n    -> <module 'fire' from 'C:\\\\Users\\\\abhis\\\\AppData\\\\Local\\\\pypoetry\\\\Cache\\\\virtualenvs\\\\openadapt-8xtrqwsq-py3.10\\\\lib\\\\site-pac...\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\fire\\core.py\", line 141, in Fire\r\n    component_trace = _Fire(component, args, parsed_flag_args, context, name)\r\n                      |     |          |     |                 |        -> 'record.py'\r\n                      |     |          |     |                 -> {}\r\n                      |     |          |     -> Namespace(verbose=False, interactive=False, separator='-', completion=None, help=False, trace=False)\r\n                      |     |          -> ['testing out openadapt']\r\n                      |     -> <function record at 0x000001B5E896FC70>\r\n                      -> <function _Fire at 0x000001B5DABF32E0>\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\fire\\core.py\", line 466, in _Fire\r\n    component, remaining_args = _CallAndUpdateTrace(\r\n    |                           -> <function _CallAndUpdateTrace at 0x000001B5DABF3400>\r\n    -> <function record at 0x000001B5E896FC70>\r\n\r\n> File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\fire\\core.py\", line 681, in _CallAndUpdateTrace\r\n    component = fn(*varargs, **kwargs)\r\n                |   |          -> {}\r\n                |   -> ['testing out openadapt', None, None, None, False]\r\n                -> <function record at 0x000001B5E896FC70>\r\n\r\n  File \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\utils.py\", line 686, in wrapper_logging\r\n    result = func(*args, **kwargs)\r\n             |     |       -> {}\r\n             |     -> ('testing out openadapt', None, None, None, False)\r\n             -> <function record at 0x000001B5E896FD90>\r\n\r\n  File \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\record.py\", line 1170, in record\r\n    recording = create_recording(task_description)\r\n                |                -> 'testing out openadapt'\r\n                -> <function create_recording at 0x000001B5E896FAC0>\r\n\r\n  File \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\utils.py\", line 686, in wrapper_logging\r\n    result = func(*args, **kwargs)\r\n             |     |       -> {}\r\n             |     -> ('testing out openadapt',)\r\n             -> <function create_recording at 0x000001B5E896FA30>\r\n\r\n  File \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\record.py\", line 876, in create_recording\r\n    recording = crud.insert_recording(session, recording_data)\r\n                |    |                |        -> {'timestamp': 1719001910.9778485, 'monitor_width': 3840, 'monitor_height': 2160, 'double_click_distance_pixels': 4, 'double_c...\r\n                |    |                -> <sqlalchemy.orm.session.Session object at 0x000001B5E8A00F40>\r\n                |    -> <function insert_recording at 0x000001B5E8957D00>\r\n                -> <module 'openadapt.db.crud' from 'C:\\\\Users\\\\abhis\\\\openAdapt\\\\OpenAdapt\\\\openadapt\\\\db\\\\crud.py'>\r\n\r\n  File \"C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt\\db\\crud.py\", line 259, in insert_recording\r\n    session.commit()\r\n    |       -> <function Session.commit at 0x000001B5D9DB72E0>\r\n    -> <sqlalchemy.orm.session.Session object at 0x000001B5E8A00F40>\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1451, in commit\r\n    self._transaction.commit(_to_root=self.future)\r\n    |    |            |               |    -> False\r\n    |    |            |               -> <sqlalchemy.orm.session.Session object at 0x000001B5E8A00F40>\r\n    |    |            -> <function SessionTransaction.commit at 0x000001B5D9DB6290>\r\n    |    -> <sqlalchemy.orm.session.SessionTransaction object at 0x000001B5E8A00D30>\r\n    -> <sqlalchemy.orm.session.Session object at 0x000001B5E8A00F40>\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 829, in commit\r\n    self._prepare_impl()\r\n    |    -> <function SessionTransaction._prepare_impl at 0x000001B5D9DB6200>\r\n    -> <sqlalchemy.orm.session.SessionTransaction object at 0x000001B5E8A00D30>\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 808, in _prepare_impl\r\n    self.session.flush()\r\n    |    |       -> <function Session.flush at 0x000001B5D9DCCF70>\r\n    |    -> <sqlalchemy.orm.session.Session object at 0x000001B5E8A00F40>\r\n    -> <sqlalchemy.orm.session.SessionTransaction object at 0x000001B5E8A00D30>\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 3444, in flush\r\n    self._flush(objects)\r\n    |    |      -> None\r\n    |    -> <function Session._flush at 0x000001B5D9DCD120>\r\n    -> <sqlalchemy.orm.session.Session object at 0x000001B5E8A00F40>\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 3583, in _flush\r\n    with util.safe_reraise():\r\n         |    -> <class 'sqlalchemy.util.langhelpers.safe_reraise'>\r\n         -> <module 'sqlalchemy.util' from 'C:\\\\Users\\\\abhis\\\\AppData\\\\Local\\\\pypoetry\\\\Cache\\\\virtualenvs\\\\openadapt-8xtrqwsq-py3.10\\\\li...\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 70, in __exit__\r\n    compat.raise_(\r\n    |      -> <function raise_ at 0x000001B5D576B490>\r\n    -> <module 'sqlalchemy.util.compat' from 'C:\\\\Users\\\\abhis\\\\AppData\\\\Local\\\\pypoetry\\\\Cache\\\\virtualenvs\\\\openadapt-8xtrqwsq-py3...\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\sqlalchemy\\util\\compat.py\", line 208, in raise_\r\n    raise exception\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 3544, in _flush\r\n    flush_context.execute()\r\n    |             -> <function UOWTransaction.execute at 0x000001B5D9D3B880>\r\n    -> <sqlalchemy.orm.unitofwork.UOWTransaction object at 0x000001B5E8A5F280>\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 456, in execute\r\n    rec.execute(self)\r\n    |   |       -> <sqlalchemy.orm.unitofwork.UOWTransaction object at 0x000001B5E8A5F280>\r\n    |   -> <function SaveUpdateAll.execute at 0x000001B5D9DB41F0>\r\n    -> SaveUpdateAll(mapped class Recording->recording)\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 630, in execute\r\n    util.preloaded.orm_persistence.save_obj(\r\n    |    |         |               -> <function save_obj at 0x000001B5D9D39360>\r\n    |    |         -> <module 'sqlalchemy.orm.persistence' from 'C:\\\\Users\\\\abhis\\\\AppData\\\\Local\\\\pypoetry\\\\Cache\\\\virtualenvs\\\\openadapt-8xtrqwsq...\r\n    |    -> <sqlalchemy.util._preloaded._ModuleRegistry object at 0x000001B5D55ADBD0>\r\n    -> <module 'sqlalchemy.util' from 'C:\\\\Users\\\\abhis\\\\AppData\\\\Local\\\\pypoetry\\\\Cache\\\\virtualenvs\\\\openadapt-8xtrqwsq-py3.10\\\\li...\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 245, in save_obj\r\n    _emit_insert_statements(\r\n    -> <function _emit_insert_statements at 0x000001B5D9D39990>\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1238, in _emit_insert_statements\r\n    result = connection._execute_20(\r\n             |          -> <function Connection._execute_20 at 0x000001B5D5CFCA60>\r\n             -> <sqlalchemy.engine.base.Connection object at 0x000001B5E8A5FA30>\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1705, in _execute_20\r\n    return meth(self, args_10style, kwargs_10style, execution_options)\r\n           |    |     |             |               -> {'compiled_cache': {(<sqlalchemy.dialects.sqlite.pysqlite.SQLiteDialect_pysqlite object at 0x000001B5D9EE3880>, ('0', <class ...\r\n           |    |     |             -> immutabledict({})\r\n           |    |     -> ({'monitor_height': 2160, 'monitor_width': 3840, 'task_description': 'testing out openadapt', 'config': {'ROOT_DIR_PATH': 'C:...\r\n           |    -> <sqlalchemy.engine.base.Connection object at 0x000001B5E8A5FA30>\r\n           -> <bound method ClauseElement._execute_on_connection of <sqlalchemy.sql.dml.Insert object at 0x000001B5E8A5FB80>>\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 333, in _execute_on_connection\r\n    return connection._execute_clauseelement(\r\n           |          -> <function Connection._execute_clauseelement at 0x000001B5D5CFC8B0>\r\n           -> <sqlalchemy.engine.base.Connection object at 0x000001B5E8A5FA30>\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1572, in _execute_clauseelement\r\n    ret = self._execute_context(\r\n          |    -> <function Connection._execute_context at 0x000001B5D5CFCB80>\r\n          -> <sqlalchemy.engine.base.Connection object at 0x000001B5E8A5FA30>\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1943, in _execute_context\r\n    self._handle_dbapi_exception(\r\n    |    -> <function Connection._handle_dbapi_exception at 0x000001B5D5CFCD30>\r\n    -> <sqlalchemy.engine.base.Connection object at 0x000001B5E8A5FA30>\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2124, in _handle_dbapi_exception\r\n    util.raise_(\r\n    |    -> <function raise_ at 0x000001B5D576B490>\r\n    -> <module 'sqlalchemy.util' from 'C:\\\\Users\\\\abhis\\\\AppData\\\\Local\\\\pypoetry\\\\Cache\\\\virtualenvs\\\\openadapt-8xtrqwsq-py3.10\\\\li...\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\sqlalchemy\\util\\compat.py\", line 208, in raise_\r\n    raise exception\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1900, in _execute_context\r\n    self.dialect.do_execute(\r\n    |    |       -> <function DefaultDialect.do_execute at 0x000001B5D5DBDCF0>\r\n    |    -> <sqlalchemy.dialects.sqlite.pysqlite.SQLiteDialect_pysqlite object at 0x000001B5D9EE3880>\r\n    -> <sqlalchemy.engine.base.Connection object at 0x000001B5E8A5FA30>\r\n\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-8xtrqwsq-py3.10\\lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 736, in do_execute\r\n    cursor.execute(statement, parameters)\r\n    |      |       |          -> (1719001910.9778485, 3840, 2160, 0.5, 4.0, 'win32', 'testing out openadapt', None, '{\"ROOT_DIR_PATH\": \"C:\\\\\\\\Users\\\\\\\\abhis\\\\...\r\n    |      |       -> 'INSERT INTO recording (timestamp, monitor_width, monitor_height, double_click_interval_seconds, double_click_distance_pixels...\r\n    |      -> <method 'execute' of 'sqlite3.Cursor' objects>\r\n    -> <sqlite3.Cursor object at 0x000001B5E89F7BC0>\r\n\r\nsqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: recording\r\n[SQL: INSERT INTO recording (timestamp, monitor_width, monitor_height, double_click_interval_seconds, double_click_distance_pixels, platform, task_description, video_start_time, config, original_recording_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]\r\n[parameters: (1719001910.9778485, 3840, 2160, 0.5, 4.0, 'win32', 'testing out openadapt', None, '{\"ROOT_DIR_PATH\": \"C:\\\\\\\\Users\\\\\\\\abhis\\\\\\\\openAdapt\\\\\\\\OpenAdapt\\\\\\\\openadapt\", \"PRIVATE_AI_API_KEY\": \"******************Y>\", \"REPLICATE_API_TOKEN\": ... (1764 characters truncated) ... DASHBOARD_CLIENT_PORT\": 5173, \"DASHBOARD_SERVER_PORT\": 8080, \"SOM_SERVER_URL\": \"<SOM_SERVER_URL>\", \"UNIQUE_USER_ID\": \"\", \"DEFAULT_ADAPTER\": \"openai\"}', None)]\r\n(Background on this error at: https://sqlalche.me/e/14/e3q8)\r\n\r\n\r\n\r\n(openadapt-py3.10) C:\\Users\\abhis\\openAdapt\\OpenAdapt>\n\n### To Reproduce\n\nstart recording while running: python -m openadapt.record \"testing out openadapt\" on windows",
      "state": "closed",
      "author": "absha03",
      "author_type": "User",
      "created_at": "2024-06-21T20:34:31Z",
      "updated_at": "2024-06-25T11:40:18Z",
      "closed_at": "2024-06-25T11:40:18Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/790/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/790",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/790",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:17.330051",
      "comments": [
        {
          "author": "abrichr",
          "body": "Thank you for reporting this @absha03 !\r\n\r\n> `no such table: recording`\r\n\r\nThis suggests that the database has not been initialized correctly. Can you please follow the instructions step by step in https://github.com/OpenAdaptAI/OpenAdapt?tab=readme-ov-file#manual-setup ?\r\n",
          "created_at": "2024-06-22T13:52:54Z"
        },
        {
          "author": "absha03",
          "body": "Hi @abrichr thanks for you reply, I have installed the requisites, including tesseract and nvm and node powershel 7 for windows, python 3.10 on the setup now I get this error: \r\n\r\nPS C:\\Users\\abhis\\openAdapt\\OpenAdapt> poetry run postinstall\r\nCollecting git+https://github.com/facebookresearch/detect",
          "created_at": "2024-06-24T19:33:58Z"
        },
        {
          "author": "abrichr",
          "body": "Thank you @absha03. Please try the solution described here: https://github.com/OpenAdaptAI/OpenAdapt/issues/626#issuecomment-2187362965",
          "created_at": "2024-06-25T01:11:46Z"
        },
        {
          "author": "absha03",
          "body": "Hi @abrichr , I am past the npm issue, now pls help with this alembic error: \r\n\r\n(openadapt-py3.10) PS C:\\Users\\abhis\\openAdapt\\OpenAdapt\\openadapt> alembic upgrade head\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\abhis\\AppData\\Local\\Programs\\Python\\Python310\\lib\\runpy.py\", line 196, in ",
          "created_at": "2024-06-25T02:02:27Z"
        },
        {
          "author": "absha03",
          "body": "opened a seperate issue for above",
          "created_at": "2024-06-25T11:40:18Z"
        }
      ]
    },
    {
      "issue_number": 626,
      "title": "[Bug]: manual installation on Windows fails on `poetry shell`",
      "body": "### Describe the bug\r\n\r\nWhen running manual install steps on Windows 11 emulated in UTM on a MacOS host, at `poetry shell`:\r\n\r\n```\r\nFile C: \\Users\\user\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-yEkGQRTF-py3.10\\Scripts\\activate.ps1 cannot be\r\nLoaded because running scripts is disabled on this system. For more information, see about_Execution_Policies at https:/go.microsoft.com/fwlink/?LinkID=135170.\r\n+ CategoryInfo\r\n: SecurityError: (:) I, ParentContainsErrorRecordException\r\n+ FullyQualifiedErrorId : UnauthorizedAccess\r\n```\r\n\r\nTo fix, run in every new powershell terminal:\r\n\r\n```\r\nSet-ExecutionPolicy RemoteSigned -Scope Process -Force\r\n```\r\n\r\nOr, with admin privileges, run this once:\r\n\r\n```\r\nSet-ExecutionPolicy RemoteSigned -Scope CurrentUser -Force\r\n```\r\n\r\nThis should be documented.\r\n\r\n### To Reproduce\r\n\r\nRun manual installation steps on Windows 11 inside UTM.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-04-18T14:11:08Z",
      "updated_at": "2024-06-25T01:17:57Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/626/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "Animesh404"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/626",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/626",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:17.547352",
      "comments": [
        {
          "author": "abrichr",
          "body": "Reproduced on fresh Windows 11 machine:\r\n\r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/999b7fac-6d8c-409d-8592-9ec28063800f)\r\n\r\nWorkaround should be automated or at least documented in README.md.",
          "created_at": "2024-06-24T20:27:08Z"
        },
        {
          "author": "abrichr",
          "body": "`poetry run postinstall` fails:\r\n\r\n```\r\n      C:\\Users\\user\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-0Ma3Pw0X-py3.10\\lib\\site-packages\\torch\\utils\\cpp_extension.py:359: UserWarning: Error checking compiler version for cl: [WinError 2] The system cannot find the file specified\r\n        warn",
          "created_at": "2024-06-24T20:30:48Z"
        },
        {
          "author": "abrichr",
          "body": "```\r\nPS C:\\openadapt\\openadapt> alembic upgrade head\r\nalembic : The term 'alembic' is not recognized as the name of a cmdlet, function, script file, or operable program.\r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:1\r\n+ al",
          "created_at": "2024-06-24T20:38:17Z"
        },
        {
          "author": "absha03",
          "body": "This worked for me, on windows 11 \r\n\r\n: First, Open PowerShell with Run as Administrator.\r\nThen, run this command in PowerShell\r\nSet-ExecutionPolicy -ExecutionPolicy RemoteSigned\r\nAfter that type Y and press Enter.",
          "created_at": "2024-06-25T01:17:56Z"
        }
      ]
    },
    {
      "issue_number": 799,
      "title": "[Bug]: windows desktop system tray icon not visible in dark mode",
      "body": "### Describe the bug\n\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/73340758-6c8b-4620-a1b3-8df5b57203d9)\r\n\r\n\n\n### To Reproduce\n\nrun manual setup on windows, then run with `python -m openadapt.app.tray`",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-24T20:55:29Z",
      "updated_at": "2024-06-24T20:55:29Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/799/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/799",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/799",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:17.765648",
      "comments": []
    },
    {
      "issue_number": 614,
      "title": "Avoid unnecessary segmentation + description in `VisualReplayStrategy`",
      "body": "### Feature request\r\n\r\nhttps://github.com/OpenAdaptAI/OpenAdapt/pull/610 introduced the `VisualReplayStrategy` which works by segmenting the active window for every mouse event.\r\n\r\nThis is wasteful because some or all of the active window may not change between mouse events.\r\n\r\nWe would like to implement the following optimization:\r\n\r\n~~1. Store the segmentation retrieved in https://github.com/OpenAdaptAI/OpenAdapt/pull/610/files#diff-4123d48b6e604812e5bbba6507183956b05038539947eedfd02a7e475344cbc5R313 (i.e. the `Segmentation` object) in the database.~~ Implemented in https://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/models.py#L178.\r\n\r\n~~2. During replay, in the `VisualReplayStrategy`, find the active window screenshot that is most similar to the current active window, e.g. using https://github.com/JohannesBuchner/imagehash. (Retrieve all `Screenshot`s for the recording, and extract the active window with https://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/models.py#L315.)~~ Implemented in https://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/strategies/visual.py#L409\r\n\r\n3. Extract the portion of the active window that is different (i.e. greater than some tolerance) from the window retrieved in step 2, and segment + describe only this portion, rather than the full thing. Then recombine the new segments with the unchanged segments from the window retrieved in step 2.\r\n\r\nNote: in the case of the calculator example, the only difference will be the text containing the number at the top of the window. This will be removed in `vision.refine_masks`, which means that there will be nothing more to describe, and we can re-use the previous `Segmentation` and descriptions. Therefore, this will be working when, during the calculator example, we only need to get descriptions once, for the first action.\r\n\r\n### Motivation\r\n\r\nVisualReplayStrategy is very slow.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-04-09T14:27:58Z",
      "updated_at": "2024-06-24T17:00:48Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/614/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "Animesh404"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/614",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/614",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:17.765669",
      "comments": [
        {
          "author": "abrichr",
          "body": "- https://github.com/JohannesBuchner/imagehash\r\n- https://github.com/facebookresearch/faiss\r\n- https://github.com/up42/image-similarity-measures\r\n\r\nChatGPT:\r\n---\r\nFor the task of finding similar UI images, here are comparisons of the three libraries:\r\n\r\n**FAISS (Facebook AI Similarity Search):**\r\n\r\n",
          "created_at": "2024-04-24T17:50:31Z"
        }
      ]
    },
    {
      "issue_number": 704,
      "title": "Add Replay (\"Policy\") performance tests (TaskCompletionRateTest)",
      "body": "### Feature request\r\n\r\nWe need to extend https://github.com/OpenAdaptAI/OpenAdapt/issues/314 to include some useful tests and generate an automated report.\r\n\r\nThis involves:\r\n\r\n- Create recordings of three tasks:\r\n\r\n1. Open a calculator and perform a short calculation\r\n2. Open a spreadsheet (e.g. https://github.com/OpenAdaptAI/OpenAdapt/blob/cb70f35985eeb579fd3e13b20a9839b10729921d/tests/assets/excel.png), open a time tracking app (e.g. https://clockify.me), copy a week's worth of data from the spreadsheet into the app, and save/submit the data in the app. (e.g. https://www.youtube.com/watch?v=omP11q-o_0I)\r\nAlternatively if browser events are not yet available (see https://github.com/OpenAdaptAI/OpenAdapt/pull/744), replicate something similar with two different spreadsheets open simultaneously (one for reading, one for writing).\r\n4. Open powerpoint and create a short presentation.\r\n\r\n- Save them as fixtures\r\n- Add automated tests to run a replay (with configurable strategy, defaulting to `VanillaReplayStrategy`) and evaluate the outcome. Outcome evaluation can be implemented with `WindowEvent` data.\r\n- Add a script to log the outcome results to stdout and/or to a file.\r\n\r\n### Motivation\r\n\r\nScientific rigor and reproducibility.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-04T23:46:48Z",
      "updated_at": "2024-06-24T16:59:46Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "good first issue",
        "help wanted"
      ],
      "label_count": 3,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/704/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "Animesh404"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/704",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/704",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:17.982251",
      "comments": [
        {
          "author": "abrichr",
          "body": "@seanmcguire12 your assistance would be greatly appreciated!",
          "created_at": "2024-06-04T23:56:51Z"
        },
        {
          "author": "abrichr",
          "body": "@KrishPatel13 outcome evaluation for web apps will depend on finishing https://github.com/OpenAdaptAI/OpenAdapt/pull/364",
          "created_at": "2024-06-07T17:37:25Z"
        },
        {
          "author": "abrichr",
          "body": "Save a fixture with `recording.task_description = \"test: calculate 2x3\"` that is just like the video currently on the website. \r\n\r\nTest 1: Run the `VanillaReplayStrategy` with empty `instructions` (or give it instructions like `replay the recording verbatim`). Use `openadapt.window` to assert that t",
          "created_at": "2024-06-10T16:40:53Z"
        },
        {
          "author": "abrichr",
          "body": "@seanmcguire12 please submit a PR with your work-in-progress 🙏 ",
          "created_at": "2024-06-13T13:43:52Z"
        }
      ]
    },
    {
      "issue_number": 711,
      "title": "Onboarding",
      "body": "### Feature request\r\n\r\nOn first run, we would like to:\r\n- display a message (e.g. \"Welcome to OpenAdapt! To get started...\")\r\n- let the user enter their email to register for updates (re-use form from openadapt.web)\r\n- optionally invite them to book a 15min call to discuss how openadapt can help them\r\n- opt in to anonymous metadata collection\r\n\r\nIdeally it should show up in the dashboard, but it might be too high friction (startup + loading times) (@KIRA009 please correct me if I'm wrong!).\r\n\r\nAlternatively, perhaps we can display a web page inside an embedded browser control in PySide, e.g. with https://wiki.qt.io/QtWebEngine\r\n\r\n### Motivation\r\n\r\nTalk to users",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-05T21:37:26Z",
      "updated_at": "2024-06-24T16:48:34Z",
      "closed_at": "2024-06-24T16:48:34Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/711/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/711",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/711",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:18.244654",
      "comments": [
        {
          "author": "abrichr",
          "body": "From:\r\nhttps://review.firstround.com/how-superhuman-built-an-engine-to-find-product-market-fit/\r\n\r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/253ca3a8-d1fc-4eed-9105-f0b200cfcbf0)\r\n\r\nEventually we should also ask them the same questions about OpenAdapt (not in this ticket).",
          "created_at": "2024-06-08T19:42:44Z"
        }
      ]
    },
    {
      "issue_number": 793,
      "title": "Rename `ReplayStrategy` to `Policy`",
      "body": "### Feature request\r\n\r\nWe would like to rename all instances of `ReplayStrategy` to `Policy` (and related).\r\n\r\n### Motivation\r\n\r\nClarity.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-22T22:41:23Z",
      "updated_at": "2024-06-24T03:32:14Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/793/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/793",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/793",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:20.209381",
      "comments": [
        {
          "author": "abrichr",
          "body": "And `Recording` to `Demonstration`.",
          "created_at": "2024-06-24T03:32:13Z"
        }
      ]
    },
    {
      "issue_number": 682,
      "title": "[Bug]: windows install command",
      "body": "### Describe the bug\r\n\r\nOn a Windows 11 VM, the install command fails silently when checking for NVM (i.e. the window closes).\r\n\r\nWorkaround: install nvm with winget:\r\n\r\n```\r\nwinget install -e --id CoreyButler.NVMforWindows\r\n```\r\n\r\nWhen trying again after installing NVM:\r\n\r\n```\r\nSuccess: Run `pip install poetry`\r\nInstalling dependencies from lock file\r\n\r\nNo dependencies to install or update\r\n\r\nInstalling the current project: openadapt (0.25.3)\r\nSuccess: Run `poetry install`\r\nVersion 21.7.3 is already installed.\r\nNow using node v21.7.3 (64-bit)\r\n\r\nadded 457 packages, and audited 458 packages in 46s\r\n\r\n173 packages are looking for funding\r\n  run `npm fund` for details\r\n\r\n3 moderate severity vulnerabilities\r\n\r\nTo address issues that do not require attention, run:\r\n  npm audit fix\r\n\r\nTo address all issues, run:\r\n  npm audit fix --force\r\n\r\nRun `npm audit` for details.\r\nSuccess: Install dashboard dependencies\r\n\r\ncmdlet RunAndCheck at command pipeline position 1\r\nSupply values for the following parameters:\r\nDesc:\r\n```\r\nTyping any string allows the installation to continue.\r\n\r\n\r\n### To Reproduce\r\n\r\nRun the install command:\r\n```\r\nStart-Process powershell -Verb RunAs -ArgumentList '-NoExit', '-ExecutionPolicy', 'Bypass', '-Command', \"iwr -UseBasicParsing -Uri 'https://raw.githubusercontent.com/OpenAdaptAI/OpenAdapt/main/install/install_openadapt.ps1' | Invoke-Expression\"\r\n```",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-05-22T17:57:41Z",
      "updated_at": "2024-06-23T19:31:30Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/682/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/682",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/682",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:20.439603",
      "comments": [
        {
          "author": "abrichr",
          "body": "```\r\n(openadapt-py3.10) PS C:\\Users\\abrichr\\oa\\openadapt> npm\r\nnpm <command>\r\n\r\nUsage:\r\n\r\nnpm install        install all the dependencies in your project\r\nnpm install <foo>  add the <foo> dependency to your project\r\nnpm test           run this project's tests\r\nnpm run <foo>      run the script named",
          "created_at": "2024-06-23T19:31:29Z"
        }
      ]
    },
    {
      "issue_number": 625,
      "title": "Support winget",
      "body": "### Feature request\n\nOn Windows 11, we can do:\r\n\r\n```\r\nwinget install --id Git.Git -e --source winget\r\nwinget install -i Python.Python.3.10\r\nwinget install --id=UB-Mannheim.TesseractOCR  -e\r\n```\n\n### Motivation\n\nSimplify installation",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-04-18T13:58:42Z",
      "updated_at": "2024-06-23T19:11:52Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/625/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/625",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/625",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:20.654077",
      "comments": [
        {
          "author": "abrichr",
          "body": "One line:\r\n\r\n```\r\n winget install --id Git.Git -e --source winget; winget install -i Python.Python.3.10; winget install --id=UB-Mannheim.TesseractOCR -e\r\n```\r\n\r\nWith auto-accept:\r\n\r\n```\r\nwinget install --id Git.Git -e --source winget --accept-source-agreements --accept-package-agreements; winget ins",
          "created_at": "2024-04-19T17:12:46Z"
        }
      ]
    },
    {
      "issue_number": 789,
      "title": "Add click and drag reducer to `events.py`",
      "body": "### Feature request\n\nWe would like to implement an ActionEvent reducer function in https://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/events.py#L829 that merges the following sequence into a keyframe:\r\n\r\n- press mouse button\r\n- mouse move\r\n- release mouse button\n\n### Motivation\n\nTODO",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-21T18:32:35Z",
      "updated_at": "2024-06-21T18:32:35Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/789/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/789",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/789",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:20.905012",
      "comments": []
    },
    {
      "issue_number": 788,
      "title": "Investigate semantic-kernel",
      "body": "### Feature request\n\nHow can we take advantage of https://github.com/microsoft/semantic-kernel?\n\n### Motivation\n\nhttps://learn.microsoft.com/en-us/semantic-kernel/overview/\r\n\r\n> Semantic Kernel is an open-source SDK that lets you easily build agents that can call your existing code.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-21T14:21:43Z",
      "updated_at": "2024-06-21T14:21:44Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/788/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/788",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/788",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:20.905033",
      "comments": []
    },
    {
      "issue_number": 5,
      "title": "Bug: Memory leak",
      "body": "After a while, `python puterbot/record.py` will cause the system to run out of memory.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-04-12T22:48:46Z",
      "updated_at": "2024-06-21T02:48:03Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 8,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/5/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "angelala3252"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/5",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/5",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:20.905040",
      "comments": [
        {
          "author": "abrichr",
          "body": "First step: identify sources of memory leaks (there may be more than one!)",
          "created_at": "2023-06-13T14:37:26Z"
        },
        {
          "author": "abrichr",
          "body": "https://docs.python.org/3/library/tracemalloc.html",
          "created_at": "2023-06-13T14:39:22Z"
        },
        {
          "author": "abrichr",
          "body": "https://github.com/denis-ryzhkov/mem_top",
          "created_at": "2023-06-13T14:41:16Z"
        },
        {
          "author": "angelala3252",
          "body": "After using tracemalloc and pympler to profile a few longer recordings with a lot of `ActionEvents`, this is the output I get:\r\n\r\nFrom tracemalloc, the top 3 largest remaining memory allocations after Ctrl + C:\r\n\r\n```\r\nC:\\Users\\Angel\\Desktop\\OpenAdapt.venv\\lib\\site-packages\\mss\\windows.py:287: size=",
          "created_at": "2023-06-15T15:47:57Z"
        },
        {
          "author": "abrichr",
          "body": "@KrishPatel13 @angelala3252 can you please confirm whether this fixed?",
          "created_at": "2023-07-27T02:13:22Z"
        }
      ]
    },
    {
      "issue_number": 786,
      "title": "Convert to PNG base64",
      "body": "### Feature request\n\n`Screenshot.base64` should support PNG:\r\n\r\nhttps://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/models.py#L770\r\n\r\nhttps://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/utils.py#L313\n\n### Motivation\n\nPrompt models with lossless images",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-21T02:29:18Z",
      "updated_at": "2024-06-21T02:29:19Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/786/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/786",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/786",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:21.213393",
      "comments": []
    },
    {
      "issue_number": 785,
      "title": "[Bug]: build fails on M2",
      "body": "### Describe the bug\r\n\r\nBuilding on MacOS running on Apple Silicon fails:\r\n\r\n```\r\npython openadapt/build.py\r\n...\r\n136272 INFO: Converting EXE to target arch (arm64)                                                                                                                                                                                                                                      09:37:57 [256/80932]\r\n136496 INFO: Removing signature(s) from EXE                                                                                                                                                                                                                                                                 \r\n136569 INFO: Appending PKG archive to EXE                                                                                                                                                                                                                                                                   \r\n136682 INFO: Fixing EXE headers for code signing                                                                                                                                                                                                                                                            \r\n136684 INFO: Re-signing the EXE                                                                                                                                                                                                                                                                             \r\n137030 INFO: Building EXE from EXE-00.toc completed successfully.                                                                                                                                                                                                                                           \r\n137265 INFO: checking COLLECT                                                                                                                                                                                                                                                                               \r\n137265 INFO: Building COLLECT because COLLECT-00.toc is non existent                                                                                                                                                                                                                                        \r\n137265 INFO: Building COLLECT COLLECT-00.toc                                                                                                                                                                                                                                                                \r\nTraceback (most recent call last):                                                                                                                                                                                                                                                                          \r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/bin/pyinstaller\", line 8, in <module>                                                                                                                                                                                  \r\n    sys.exit(_console_script_run())                                                                                                                                                                                                                                                                         \r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/PyInstaller/__main__.py\", line 228, in _console_script_run                                                                                                                                \r\n    run()                                                                                                                                                                                                                                                                                                   \r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/PyInstaller/__main__.py\", line 212, in run                                                                                                                                                \r\n    run_build(pyi_config, spec_file, **vars(args))                                                                                                                                                                                                                                                          \r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/PyInstaller/__main__.py\", line 69, in run_build                                                                                                                                           \r\n    PyInstaller.building.build_main.main(pyi_config, spec_file, **kwargs)                                                                                                                                                                                                                                   \r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/PyInstaller/building/build_main.py\", line 1139, in main                                                                                                                                   \r\n    build(specfile, distpath, workpath, clean_build)                                                                                                                                                                                                                                                        \r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/PyInstaller/building/build_main.py\", line 1079, in build                                                                                                                                  \r\n    exec(code, spec_namespace)                                                                                                                                                                                                                                                                              \r\n  File \"OpenAdapt.spec\", line 40, in <module>                                                                                                                                                                                                                                                               \r\n    coll = COLLECT(                                                                                                                                                                                                                                                                                         \r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/PyInstaller/building/api.py\", line 1092, in __init__                                                                                                                                      \r\n    self.__postinit__()                                                                                                                                                                                                                                                                                     \r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/PyInstaller/building/datastruct.py\", line 184, in __postinit__                                                                                                                            \r\n    self.assemble()                                                                                                                                                                                                                                                                                         \r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/PyInstaller/building/api.py\", line 1138, in assemble                                                                                                                                      \r\n    src_name = process_collected_binary(                                                                                                                                                                                                                                                                    \r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/PyInstaller/building/utils.py\", line 309, in process_collected_binary                                                                                                                     \r\n    osxutils.binary_to_target_arch(cached_name, target_arch, display_name=src_name)                                                                                                                                                                                                                         \r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/PyInstaller/utils/osx.py\", line 351, in binary_to_target_arch                                                                                                                             \r\n    raise IncompatibleBinaryArchError(                                                                                                                                                                                                                                                                      \r\nPyInstaller.utils.osx.IncompatibleBinaryArchError: /Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/sqlalchemy/cresultproxy.cpython-310-darwin.so is incompatible with target arch arm64 (has arch: x86_64)!                                       \r\nTraceback (most recent call last):                                                                                                                                                                                                                                                                          \r\n  File \"/opt/homebrew/Cellar/python@3.10/3.10.14/Frameworks/Python.framework/Versions/3.10/lib/python3.10/shutil.py\", line 816, in move                                                                                                                                                                     \r\n    os.rename(src, real_dst)                                                                                                                                                                                                                                                                                \r\nFileNotFoundError: [Errno 2] No such file or directory: '/Users/abrichr/oa/OpenAdapt/dist/OpenAdapt.app/Contents/MacOS/OpenAdapt' -> '/Users/abrichr/oa/OpenAdapt/dist/OpenAdapt.app/Contents/MacOS/OpenAdapt.app'                                                                                          \r\n                                                                                                                                                                                                                                                                                                            \r\nDuring handling of the above exception, another exception occurred:                                                                                                                                                                                                                                         \r\n                                                                                                                                                                                                                                                                                                            \r\nTraceback (most recent call last):                                                                                                                                                                                                                                                                          \r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/build.py\", line 180, in <module>                                                                                                                                                                                                                              \r\n    main()                                                                                                                                                                                                                                                                                                  \r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/build.py\", line 164, in main                                                                            \r\n    shutil.move(                                                           \r\n  File \"/opt/homebrew/Cellar/python@3.10/3.10.14/Frameworks/Python.framework/Versions/3.10/lib/python3.10/shutil.py\", line 836, in move                                                                                                                                                                     \r\n    copy_function(src, real_dst)                                           \r\n  File \"/opt/homebrew/Cellar/python@3.10/3.10.14/Frameworks/Python.framework/Versions/3.10/lib/python3.10/shutil.py\", line 434, in copy2                                                                                                                                                                    \r\n    copyfile(src, dst, follow_symlinks=follow_symlinks)                    \r\n  File \"/opt/homebrew/Cellar/python@3.10/3.10.14/Frameworks/Python.framework/Versions/3.10/lib/python3.10/shutil.py\", line 254, in copyfile                                                                                                                                                                 \r\n    with open(src, 'rb') as fsrc:                                          \r\nFileNotFoundError: [Errno 2] No such file or directory: '/Users/abrichr/oa/OpenAdapt/dist/OpenAdapt.app/Contents/MacOS/OpenAdapt'      \r\n```\r\n\r\nAs per https://pyinstaller.org/en/latest/feature-notes.html#macos-multi-arch-support, I tried replacing this line in build.py:\r\n\r\n```\r\n    proc = subprocess.Popen(\"pyinstaller OpenAdapt.spec --noconfirm\", shell=True)\r\n```\r\n\r\nWith this:\r\n\r\n```\r\n    proc = subprocess.Popen(\"pyinstaller OpenAdapt.spec --noconfirm —-target-arch x86_64\", shell=True)\r\n```\r\n\r\nWhich caused this error:\r\n```\r\nWrote /Users/abrichr/oa/OpenAdapt/OpenAdapt.spec.\r\nNow run pyinstaller.py to build the executable.\r\nusage: pyinstaller [-h] [-v] [-D] [-F] [--specpath DIR] [-n NAME] [--contents-directory CONTENTS_DIRECTORY] [--add-data SOURCE:DEST] [--add-binary SOURCE:DEST] [-p DIR] [--hidden-import MODULENAME] [--collect-submodules MODULENAME] [--collect-data MODULENAME] [--collect-binaries MODULENAME]\r\n                   [--collect-all MODULENAME] [--copy-metadata PACKAGENAME] [--recursive-copy-metadata PACKAGENAME] [--additional-hooks-dir HOOKSPATH] [--runtime-hook RUNTIME_HOOKS] [--exclude-module EXCLUDES] [--splash IMAGE_FILE] [-d {all,imports,bootloader,noarchive}]\r\n                   [--python-option PYTHON_OPTION] [-s] [--noupx] [--upx-exclude FILE] [-c] [-w] [--hide-console {minimize-late,minimize-early,hide-early,hide-late}] [-i <FILE.ico or FILE.exe,ID or FILE.icns or Image or \"NONE\">] [--disable-windowed-traceback] [--version-file FILE]\r\n                   [-m <FILE or XML>] [-r RESOURCE] [--uac-admin] [--uac-uiaccess] [--argv-emulation] [--osx-bundle-identifier BUNDLE_IDENTIFIER] [--target-architecture ARCH] [--codesign-identity IDENTITY] [--osx-entitlements-file FILENAME] [--runtime-tmpdir PATH] [--bootloader-ignore-signals]\r\n                   [--distpath DIR] [--workpath WORKPATH] [-y] [--upx-dir UPX_DIR] [--clean] [--log-level LEVEL]\r\n                   scriptname [scriptname ...]\r\npyinstaller: error: unrecognized arguments: —-target-arch x86_64\r\nTraceback (most recent call last):\r\n  File \"/opt/homebrew/Cellar/python@3.10/3.10.14/Frameworks/Python.framework/Versions/3.10/lib/python3.10/shutil.py\", line 816, in move\r\n    os.rename(src, real_dst)\r\nFileNotFoundError: [Errno 2] No such file or directory: '/Users/abrichr/oa/OpenAdapt/dist/OpenAdapt.app/Contents/MacOS/OpenAdapt' -> '/Users/abrichr/oa/OpenAdapt/dist/OpenAdapt.app/Contents/MacOS/OpenAdapt.app'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/build.py\", line 180, in <module>\r\n    main()\r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/build.py\", line 164, in main\r\n    shutil.move(\r\n  File \"/opt/homebrew/Cellar/python@3.10/3.10.14/Frameworks/Python.framework/Versions/3.10/lib/python3.10/shutil.py\", line 836, in move\r\n    copy_function(src, real_dst)\r\n  File \"/opt/homebrew/Cellar/python@3.10/3.10.14/Frameworks/Python.framework/Versions/3.10/lib/python3.10/shutil.py\", line 434, in copy2\r\n    copyfile(src, dst, follow_symlinks=follow_symlinks)\r\n  File \"/opt/homebrew/Cellar/python@3.10/3.10.14/Frameworks/Python.framework/Versions/3.10/lib/python3.10/shutil.py\", line 254, in copyfile\r\n    with open(src, 'rb') as fsrc:\r\nFileNotFoundError: [Errno 2] No such file or directory: '/Users/abrichr/oa/OpenAdapt/dist/OpenAdapt.app/Contents/MacOS/OpenAdapt'\r\n```\r\n\r\n### To Reproduce\r\n\r\nOn Apple silicon:\r\n\r\n```\r\npython openadapt/build.py\r\n```",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-20T14:07:31Z",
      "updated_at": "2024-06-20T14:08:04Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/785/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/785",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/785",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:21.213417",
      "comments": []
    },
    {
      "issue_number": 479,
      "title": "Investigate litellm",
      "body": "### Feature request\n\nHow can we take advantage of https://github.com/BerriAI/litellm ?\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-08-25T00:07:49Z",
      "updated_at": "2024-06-18T21:59:40Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 6,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/479/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "abrichr"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/479",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/479",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:21.213427",
      "comments": [
        {
          "author": "ishaan-jaff",
          "body": "I'm the maintainer of litellm - happy to make a PR to help with this ",
          "created_at": "2023-08-25T14:44:32Z"
        },
        {
          "author": "krrishdholakia",
          "body": "why use multiple providers? @abrichr ",
          "created_at": "2023-08-25T15:44:51Z"
        },
        {
          "author": "abrichr",
          "body": "Thanks @ishaan-jaff ! Currently we are implementing our own LLM abstraction in https://github.com/OpenAdaptAI/OpenAdapt/pull/379. What do you think about implementing a LiteCompletionProvider that implements the CompletionProvider API using litellm?\r\n\r\n@krrishdholakia because we don't know apriori w",
          "created_at": "2023-08-25T15:45:55Z"
        },
        {
          "author": "abrichr",
          "body": "@ishaan-jaff can you please share how you found this issue so quickly after I created it? 🙏 😄 ",
          "created_at": "2023-08-25T19:01:20Z"
        },
        {
          "author": "ishaan-jaff",
          "body": "just searched for LiteLLM on github @abrichr ",
          "created_at": "2023-09-03T05:33:52Z"
        }
      ]
    },
    {
      "issue_number": 779,
      "title": "[Bug]: openadapt.window:get_active_window_state:63 - exc=ElementNotFoundError({'active_only': True, 'backend': 'uia', 'visible_only': False})",
      "body": "### Describe the bug\n\nSee https://github.com/OpenAdaptAI/OpenAdapt/issues/762#issuecomment-2176620976\n\n### To Reproduce\n\nTODO",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-18T17:31:26Z",
      "updated_at": "2024-06-18T17:31:26Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/779/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/779",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/779",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:21.411436",
      "comments": []
    },
    {
      "issue_number": 762,
      "title": "[Bug]: visualize fails when no screenshots are present",
      "body": "### Describe the bug\n\nvia @Alphadev on Discord:\r\n```\r\n               {'id': 5714,\r\n                'mouse_pressed': False,\r\n                'timestamp': 1718573830.5520644}],\r\n  'mouse_button_name': 'left',\r\n  'mouse_x': 1498,\r\n  'mouse_y': 894,\r\n  'name': 'singleclick',\r\n  'reducer_names': {'mouse_click'},\r\n  'screenshot_timestamp': 1718573840.951178,\r\n  'timestamp': 1718573829.9590232,\r\n  'window_event_timestamp': 1718573830.6910732},\r\n {'canonical_text': '<shift>-h',\r\n  'children': [{'canonical_key_name': 'shift',\r\n                'id': 5715,\r\n                'key_name': 'shift',\r\n                'name': 'press',\r\n                'screenshot_timestamp': 1718573842.0284984,\r\n                'timestamp': 1718573841.993897},\r\n               {'canonical_key_char': 'h',\r\n                'id': 5716,\r\n                'key_char': 'H',\r\n                'key_vk': '72',\r\n                'name': 'press',\r\n                'screenshot_timestamp': 1718573842.1779761,\r\n                'timestamp': 1718573842.1290543},\r\n               {'canonical_key_name': 'shift',\r\n                'id': 5717,\r\n                'key_name': 'shift',\r\n                'name': 'release',\r\n                'screenshot_timestamp': 1718573842.1779761,\r\n                'timestamp': 1718573842.2468576}],\r\n  'name': 'type',\r\n  'reducer_names': {'keyboard'},\r\n  'screenshot_timestamp': 1718573842.0284984,\r\n  'text': '<shift>-H',\r\n  'timestamp': 1718573830.9612107,\r\n  'window_event_timestamp': 1718573841.8384597},\r\n {'canonical_text': 'i',\r\n  'children': [{'canonical_key_char': 'i',\r\n                'id': 5718,\r\n                'key_char': 'i',\r\n                'key_vk': '73',\r\n                'name': 'press',\r\n                'screenshot_timestamp': 1718573842.3075366,\r\n                'timestamp': 1718573842.2694087},\r\n               {'canonical_key_char': 'h',\r\n                'id': 5719,\r\n                'key_char': 'h',\r\n                'key_vk': '72',\r\n                'name': 'release',\r\n                'screenshot_timestamp': 1718573842.3075366,\r\n                'timestamp': 1718573842.3449655},\r\n               {'canonical_key_char': 'i',\r\n                'id': 5720,\r\n                'key_char': 'i',\r\n                'key_vk': '73',\r\n                'name': 'release',\r\n                'screenshot_timestamp': 1718573842.457266,\r\n                'timestamp': 1718573842.4092443}],\r\n  'name': 'type',\r\n  'reducer_names': {'keyboard'},\r\n  'screenshot_timestamp': 1718573842.3075366,\r\n  'text': 'i',\r\n  'timestamp': 1718573830.9837618,\r\n  'window_event_timestamp': 1718573841.8384597},\r\n {'canonical_text': '<32>',\r\n  'children': [{'id': 5721,\r\n                'name': 'press',\r\n                'screenshot_timestamp': 1718573842.457266,\r\n                'timestamp': 1718573842.5397298},\r\n               {'id': 5722,\r\n                'name': 'release',\r\n                'screenshot_timestamp': 1718573842.6377387,\r\n                'timestamp': 1718573842.6499221}],\r\n  'name': 'type',\r\n  'reducer_names': {'keyboard'},\r\n  'screenshot_timestamp': 1718573842.457266,\r\n  'text': '<space>',\r\n  'timestamp': 1718573831.1142473,\r\n  'window_event_timestamp': 1718573841.8384597},\r\n {'canonical_text': '<ctrl>-<ctrl>-<ctrl>-<ctrl>',\r\n  'children': [{'id': 5723,\r\n                'screenshot_timestamp': 1718573843.2517736,\r\n                'timestamp': 1718573843.2591236},\r\n               {'id': 5724,\r\n                'screenshot_timestamp': 1718573843.6208365,\r\n                'timestamp': 1718573843.7661896},\r\n               {'id': 5725,\r\n                'screenshot_timestamp': 1718573843.8337686,\r\n                'timestamp': 1718573843.792407},\r\n               {'id': 5726,\r\n                'screenshot_timestamp': 1718573843.8337686,\r\n                'timestamp': 1718573843.8249946}],\r\n  'name': 'type',\r\n  'reducer_names': {'keyboard'},\r\n  'screenshot_timestamp': 1718573843.2517736,\r\n  'text': '<ctrl_l>-<ctrl_l>-<ctrl_l>-<ctrl_l>',\r\n  'timestamp': 1718573831.7234488,\r\n  'window_event_timestamp': 1718573841.8384597}]\r\nPreparing HTML:   0%|                                                                                                       | 0/19 [00:00<?, ?event/s]2024-06-17 03:11:30.403 | INFO     | __main__:main:282 - len(action_events)=19\r\nPreparing HTML:   0%|                                                                                                       | 0/19 [00:00<?, ?event/s] \r\n2024-06-17 03:11:31.619 | ERROR    | fire.core:_CallAndUpdateTrace:681 - An error has been caught in function '_CallAndUpdateTrace', process 'MainProcess' (10428), thread 'MainThread' (24140):\r\nTraceback (most recent call last):\r\n\r\n  File \"C:\\Users\\akjha\\AppData\\Local\\Programs\\Python\\Python310\\lib\\runpy.py\", line 196, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n           |         |     -> {'__name__': '__main__', '__doc__': 'Implements visualization utilities for OpenAdapt.', '__package__': 'openadapt', '__loade...\r\n           |         -> <code object <module> at 0x000002C3981449D0, file \"D:\\test\\OpenAdapt\\openadapt\\visualize.py\", line 1>\r\n           -> <function _run_code at 0x000002C398082CB0>\r\n\r\n  File \"C:\\Users\\akjha\\AppData\\Local\\Programs\\Python\\Python310\\lib\\runpy.py\", line 86, in _run_code\r\n    exec(code, run_globals)\r\n         |     -> {'__name__': '__main__', '__doc__': 'Implements visualization utilities for OpenAdapt.', '__package__': 'openadapt', '__loade...     \r\n         -> <code object <module> at 0x000002C3981449D0, file \"D:\\test\\OpenAdapt\\openadapt\\visualize.py\", line 1>\r\n\r\n  File \"D:\\test\\OpenAdapt\\openadapt\\visualize.py\", line 416, in <module>\r\n    fire.Fire(main)\r\n    |    |    -> <function main at 0x000002C3D0ABD3F0>\r\n    |    -> <function Fire at 0x000002C3B38DEC20>\r\n    -> <module 'fire' from 'C:\\\\Users\\\\akjha\\\\AppData\\\\Local\\\\pypoetry\\\\Cache\\\\virtualenvs\\\\openadapt-PrTjJyzk-py3.10\\\\lib\\\\site-pac...\r\n\r\n  File \"C:\\Users\\akjha\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-PrTjJyzk-py3.10\\lib\\site-packages\\fire\\core.py\", line 141, in Fire\r\n    component_trace = _Fire(component, args, parsed_flag_args, context, name)\r\n                      |     |          |     |                 |        -> 'visualize.py'\r\n                      |     |          |     |                 -> {}\r\n                      |     |          |     -> Namespace(verbose=False, interactive=False, separator='-', completion=None, help=False, trace=False)   \r\n                      |     |          -> []\r\n                      |     -> <function main at 0x000002C3D0ABD3F0>\r\n                      -> <function _Fire at 0x000002C3B39893F0>\r\n\r\n  File \"C:\\Users\\akjha\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-PrTjJyzk-py3.10\\lib\\site-packages\\fire\\core.py\", line 466, in _Fire\r\n    component, remaining_args = _CallAndUpdateTrace(\r\n    |                           -> <function _CallAndUpdateTrace at 0x000002C3B3989510>\r\n    -> <function main at 0x000002C3D0ABD3F0>\r\n\r\n> File \"C:\\Users\\akjha\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-PrTjJyzk-py3.10\\lib\\site-packages\\fire\\core.py\", line 681, in _CallAndUpdateTrace\r\n    component = fn(*varargs, **kwargs)\r\n                |   |          -> {}\r\n                |   -> [None, None, False, True]\r\n                -> <function main at 0x000002C3D0ABD3F0>\r\n\r\n  File \"D:\\test\\OpenAdapt\\openadapt\\visualize.py\", line 310, in main\r\n    image = display_event(action_event)\r\n            |             -> ActionEvent(name='move', timestamp=1718573825.0334191, recording_timestamp=1718573822.7733512, screegit push --set-upstream origin fix/visualize-screenshot-nonenshot_timestamp=171857382...\r\n            -> <function display_event at 0x000002C3D0A96200>\r\n\r\n  File \"D:\\test\\OpenAdapt\\openadapt\\plotting.py\", line 254, in display_event\r\n    image = screenshot.image.convert(\"RGBA\")\r\n            -> None\r\n\r\nAttributeError: 'NoneType' object has no attribute 'image'\r\n```\n\n### To Reproduce\n\nTODO",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-16T22:17:48Z",
      "updated_at": "2024-06-18T17:30:10Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/762/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/762",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/762",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:21.411455",
      "comments": [
        {
          "author": "abrichr",
          "body": "On https://github.com/OpenAdaptAI/OpenAdapt/pull/763:\r\n```\r\n2024-06-18 22:04:07.076 | INFO     | openadapt.utils:wrapper_logging:675 -  -> Enter: read_window_events(<queue.Queue object at 0x000001DA0B514580>, <multiprocessing.synchronize.Event object at 0x000001DA0B5D5F30>, Recording(id=2, timestamp",
          "created_at": "2024-06-18T17:30:09Z"
        }
      ]
    },
    {
      "issue_number": 778,
      "title": "Document permissions on latest MacOS",
      "body": "### Feature request\n\nhttps://github.com/OpenAdaptAI/OpenAdapt/pull/771#discussion_r1644713686\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-18T16:26:41Z",
      "updated_at": "2024-06-18T16:26:42Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/778/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/778",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/778",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:21.592022",
      "comments": []
    },
    {
      "issue_number": 777,
      "title": "Deprecate `openadapt.start`",
      "body": "### Feature request\r\n\r\nWe would like to remove `openadapt/start.py` to `openadapt/deprecated/`.\r\n\r\nThis also involves updating any documentation pointing to it.\r\n\r\n### Motivation\r\n\r\nhttps://github.com/OpenAdaptAI/OpenAdapt/pull/776/files#r1644636259",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-18T15:15:03Z",
      "updated_at": "2024-06-18T15:15:24Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/777/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/777",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/777",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:21.592046",
      "comments": []
    },
    {
      "issue_number": 773,
      "title": "[Bug]: Local development record, replay and start fail",
      "body": "### Describe the bug\n\nSo the current local development setup is buggy due to recent code changes. The helper function definitions were changed but the usage was not updates.\r\nEx: functions for recording start, replay etc\n\n### To Reproduce\n\nAny record start will fail",
      "state": "open",
      "author": "shashank40",
      "author_type": "User",
      "created_at": "2024-06-18T14:21:30Z",
      "updated_at": "2024-06-18T14:52:52Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/773/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/773",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/773",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:21.592062",
      "comments": [
        {
          "author": "shashank40",
          "body": "@abrichr would you mind if i raise a PR on this?",
          "created_at": "2024-06-18T14:21:51Z"
        },
        {
          "author": "abrichr",
          "body": "@shashank40 thank you for reporting! Please try https://github.com/OpenAdaptAI/OpenAdapt/pull/774 and see if that fixes your issues.\r\n\r\nOtherwise please submit a PR 🙏 ",
          "created_at": "2024-06-18T14:46:36Z"
        },
        {
          "author": "shashank40",
          "body": "@abrichr it has a few more things to update.\r\n1) During instruction submissions on replay, it fails.\r\n2) During data fetch from DB, it fails as session was not passed.\r\n3) During start, the code fails as the function imported is not found in start.py\r\n\r\n\r\nI will raise a quick PR, i think this could ",
          "created_at": "2024-06-18T14:52:51Z"
        }
      ]
    },
    {
      "issue_number": 767,
      "title": "Upload recordings",
      "body": "### Feature request\n\nWe would like users to submit recordings via the Upload Recording functionality to be implemented in https://github.com/OpenAdaptAI/OpenAdapt/issues/724.\n\n### Motivation\n\nFinetuning on data",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-17T15:58:06Z",
      "updated_at": "2024-06-17T17:31:57Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/767/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "abrichr"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/767",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/767",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:21.767602",
      "comments": []
    },
    {
      "issue_number": 647,
      "title": "[Bug]: replay from system tray",
      "body": "### Describe the bug\r\n\r\nWhen attempting to replay a recording from the system tray:\r\n```\r\nProcess Process-1:5:\r\nTraceback (most recent call last):\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 1900, in _execute_context\r\n    self.dialect.do_execute(\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/default.py\", line 736, in do_execute\r\n    cursor.execute(statement, parameters)\r\nsqlite3.OperationalError: database is locked\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python@3.10/3.10.14/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/process.py\", line 314, in _bootstrap\r\n    self.run()\r\n  File \"/usr/local/Cellar/python@3.10/3.10.14/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/process.py\", line 108, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/record.py\", line 808, in memory_writer\r\n    crud.insert_memory_stat(\r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/db/crud.py\", line 177, in insert_memory_stat\r\n    _insert(memory_stat, MemoryStat, memory_stats)\r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/db/crud.py\", line 64, in _insert\r\n    result = db.execute(sa.insert(table), to_insert)\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/sqlalchemy/orm/session.py\", line 1714, in execute\r\n    result = conn._execute_20(statement, params or {}, execution_options)\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 1705, in _execute_20\r\n    return meth(self, args_10style, kwargs_10style, execution_options)\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/sqlalchemy/sql/elements.py\", line 333, in _execute_on_connection\r\n    return connection._execute_clauseelement(\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 1572, in _execute_clauseelement\r\n    ret = self._execute_context(\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 1943, in _execute_context\r\n    self._handle_dbapi_exception(\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 2124, in _handle_dbapi_exception\r\n    util.raise_(\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/sqlalchemy/util/compat.py\", line 208, in raise_\r\n    raise exception\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 1900, in _execute_context\r\n    self.dialect.do_execute(\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/default.py\", line 736, in do_execute\r\n    cursor.execute(statement, parameters)\r\nsqlalchemy.exc.OperationalError: (sqlite3.OperationalError) database is locked\r\n[SQL: INSERT INTO memory_stat (id, recording_timestamp, memory_usage_bytes, timestamp) VALUES (?, ?, ?, ?)]\r\n[parameters: (None, 1714591227.935582, 6175645696.0, 1714591286.0527885)]\r\n(Background on this error at: https://sqlalche.me/e/14/e3q8)\r\n\r\n```\r\n\r\n### To Reproduce\r\n\r\n1. run `python -m openadapt.app.tray`\r\n2. click system tray -> record\r\n3. wait for recording to start\r\n4. type some words on the keyboard\r\n5. ~~click system tray -> stop recording~~ type `oa.stop`\r\n6. click system tray -> replay -> latest recording\r\n7. observe system tray still shows \"Stop recording\", even though recording has stopped",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-05-01T19:23:59Z",
      "updated_at": "2024-06-17T17:28:55Z",
      "closed_at": "2024-06-17T17:28:55Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/647/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/647",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/647",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:21.767624",
      "comments": [
        {
          "author": "abrichr",
          "body": "Fixed",
          "created_at": "2024-06-17T17:28:55Z"
        }
      ]
    },
    {
      "issue_number": 724,
      "title": "Upload recordings from dashboard",
      "body": "### Feature request\r\n\r\nWe would like to give users the option to share their recording data with us.\r\n\r\nThis involves:\r\n- creating a script that configures an s3 bucket if it does not already exist\r\n- creating a button in the dashboard to upload a scrubbed recording to s3\r\n\r\nThe bucket should be configured so that users can temporarily write to it if they click on the upload button, but no one can read from it.\r\n\r\n### Motivation\r\n\r\nhttps://www.oreilly.com/radar/what-we-learned-from-a-year-of-building-with-llms-part-iii-strategy/\r\n\r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/d94a5352-1f4c-487f-a015-7a1ab9e4936f)\r\n",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-07T14:49:35Z",
      "updated_at": "2024-06-17T17:17:02Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/724/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/724",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/724",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:22.034852",
      "comments": [
        {
          "author": "abrichr",
          "body": "https://aws.amazon.com/blogs/compute/uploading-to-amazon-s3-directly-from-a-web-or-mobile-application/\r\n\r\nLooks like we can get away with a lambda function. I think this should be configured in the same script that configures the s3 bucket.\r\n\r\nFollow the pattern in https://github.com/microsoft/SoM/b",
          "created_at": "2024-06-17T17:15:12Z"
        }
      ]
    },
    {
      "issue_number": 715,
      "title": "Add Posthog to system tray",
      "body": "### Feature request\n\nWe would like to view system tray events in posthog\n\n### Motivation\n\nUnderstanding user activity",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-06T18:10:00Z",
      "updated_at": "2024-06-17T16:18:30Z",
      "closed_at": "2024-06-17T16:18:30Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/715/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/715",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/715",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:22.258721",
      "comments": [
        {
          "author": "abrichr",
          "body": "Via ChatGPT:\r\n```\r\nclass TrackingAction(QAction):\r\n    \"\"\" QAction subclass that automatically tracks its usage with PostHog. \"\"\"\r\n    \r\n    def __init__(self, title, parent=None):\r\n        super().__init__(title, parent)\r\n        self.triggered.connect(self.track_event)\r\n    \r\n    def track_event(s",
          "created_at": "2024-06-06T18:12:47Z"
        },
        {
          "author": "abrichr",
          "body": "In addition to this  it would be good to capture the following additional function calls (regardless of where they are called from):\r\n```\r\nopenadapt.record\r\nopenadapt.replay\r\nopenadapt.visualize\r\nopenadapt.events.get_events\r\n```",
          "created_at": "2024-06-06T18:17:28Z"
        }
      ]
    },
    {
      "issue_number": 761,
      "title": "Canvas: animate keyframe/parent actions",
      "body": "### Feature request\r\n\r\nWe would like to provide the user more context in the dashboard by animating the keyframe / parent action, e.g. with `requestAnimationFrame` and `canvas`.\r\n\r\n<img width=\"1509\" alt=\"image\" src=\"https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/4bf6b2a4-204e-4eec-8938-765acba9d4b9\">\r\n\r\nEach of the keyframe / parent screenshots should be animated on hover.\r\n\r\nRelated:\r\n- https://github.com/OpenAdaptAI/OpenAdapt/issues/73#issuecomment-1539241290\r\n\r\n### Motivation\r\n\r\nUX",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-16T21:27:00Z",
      "updated_at": "2024-06-16T21:34:02Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/761/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/761",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/761",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:22.444615",
      "comments": []
    },
    {
      "issue_number": 759,
      "title": "Add option to enable audio in system tray recording dialog",
      "body": "### Feature request\n\nWe would like to let users select whether audio should be recorded immediately before starting the recording\n\n### Motivation\n\nUX",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-16T12:50:34Z",
      "updated_at": "2024-06-16T12:50:45Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "good first issue",
        "help wanted"
      ],
      "label_count": 3,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/759/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/759",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/759",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:22.444636",
      "comments": []
    },
    {
      "issue_number": 756,
      "title": "[Bug]: model generated JSON snippet exceeds output context length",
      "body": "### Describe the bug\r\n\r\n\r\n```\r\n python -m openadapt.replay SegmentReplayStrategy \"replay verbatim\"\r\n```\r\n\r\nThis happens when there are too many segments due to a lack of filtering, e.g.\r\n```\r\n('```json\\n'                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      14:20:57 [36/95455]\r\n '{\\n'                                               \r\n '  \"descriptions\": [\\n'                                     \r\n '    [1, \"Calculator GUI\"],\\n'                              \r\n '    [2, \"Dark grey background area\"],\\n'                   \r\n '    [3, \"Dark grey background area with text\"],\\n' \r\n '    [4, \"Dark grey background area\"],\\n'           \r\n '    [5, \"Dark grey background area with text\"],\\n' \r\n '    [6, \"Button with \\'7\\'\"],\\n'                    \r\n '    [7, \"Round button\"],\\n'                                \r\n '    [8, \"Dark grey background area with text\"],\\n'         \r\n '    [9, \"Buttons with \\'2\\' and \\'3\\'\"],\\n'\r\n '    [10, \"Dark grey background area with text\"],\\n'\r\n '    [11, \"Dark grey background area with text\"],\\n'        \r\n '    [12, \"Dark grey background area with a line\"],\\n'\r\n '    [13, \"Dark grey background area with a line\"],\\n'                                                                                                                                                                                                   \r\n '    [14, \"Button with icon or text\"],\\n'           \r\n '    [15, \"Button with \\'8\\'\"],\\n'                  \r\n '    [16, \"Button with \\'-\\'\"],\\n'           \r\n '    [17, \"Dark grey background area\"],\\n'           \r\n '    [18, \"Dark grey background area with text\"],\\n'       \r\n '    [19, \"Dark grey background area\"],\\n'       \r\n '    [20, \"Dark grey background area\"],\\n'\r\n '    [21, \"Button with icon or text\"],\\n'           \r\n '    [22, \"Round button\"],\\n'             \r\n '    [23, \"Dark grey background area with text\"],\\n'\r\n '    [24, \"Dark grey background area with text\"],\\n'\r\n '    [25, \"Dark grey background area with text\"],\\n'\r\n '    [26, \"Round button\"],\\n'                      \r\n '    [27, \"Button with text\"],\\n'                   \r\n '    [28, \"Dark grey background area with text\"],\\n'\r\n '    [29, \"Button with \\'1\\'\"],\\n'                          \r\n '    [30, \"Dark grey background area\"],\\n'   \r\n '    [31, \"Button with text\"],\\n'         \r\n '    [32, \"Dark grey background area\"],\\n'          \r\n '    [33, \"Round button\"],\\n'                       \r\n '    [34, \"Dark grey background area with text\"],\\n'\r\n '    [35, \"Button with \\'C\\'\"],\\n'                  \r\n '    [36, \"Dark grey background area\"],\\n'                  \r\n '    [37, \"Dark grey background area with text\"],\\n'\r\n '    [38, \"Text or icon on a dark grey background\"],\\n'\r\n '    [39, \"Dark grey area with text\"],\\n'\r\n '    [40, \"Dark grey background area\"],\\n'                  \r\n '    [41, \"Column of buttons with icons\"],\\n'                                                                                                                                                                                                            \r\n '    [42, \"Dark grey background area with text\"],\\n'\r\n '    [43, \"Text or icon on a dark grey background\"],\\n'                                                                     \r\n '    [44, \"Dark grey background area\"],\\n'                                                                                  \r\n '    [45, \"Dark grey background area with text\"],\\n'                                                                        \r\n '    [46, \"Dark grey background area with text\"],\\n'                                                                        \r\n '    [47, \"Button with text or icon\"],\\n'                                                                                   \r\n '    [48, \"Button with \\'+\\'\"],\\n'                                                                                          \r\n '    [49, \"Dark grey background area with text\"],\\n'                                                                        \r\n '    [50, \"Dark grey background area with text\"],\\n'                                                                        \r\n '    [51, \"Dark grey background area with text\"],\\n'                                                                        \r\n '    [52, \"Dark grey background area text\"],\\n'                                                                                                                                                                                                          \r\n '    [53, \"Button with \\'7\\'\"],\\n'                                                                                          \r\n '    [54, \"Dark grey background area\"],\\n'                                                                                  \r\n '    [55, \"Dark grey background area with text or icon\"],\\n'                                                                \r\n '    [56, \"Dark grey background area with icons\"],\\n'                                                                       \r\n '    [57, \"Orange button with \\'÷\\'\"],\\n'                                                                                   \r\n '    [58, \"Text or icon\"],\\n'                                                                                               \r\n '    [59, \"Dark grey background area with text or icon\"],\\n'                                                                \r\n '    [60, \"Dark grey background area with text\"],\\n'                                                                        \r\n '    [61, \"Dark grey background area with icon or text\"],\\n'                                                                \r\n '    [62, \"Dark grey background area\"],\\n'                                                                                  \r\n '    [63, \"Dark grey background area with text\"],\\n'                                                                        \r\n '    [64, \"Column of buttons with icons\"],\\n'                                                                               \r\n '    [65, \"Dark grey background area with icons\"],\\n'                                                                       \r\n '    [66, \"Text or icon on a darker grey background\"],\\n'                                                                   \r\n '    [67, \"Dark grey area with text or icon\"],\\n'                                                                           \r\n '    [68, \"Dark grey background area\"],\\n'      \r\n```\r\n\r\n```\r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/utils.py\", line 601, in parse_code_snippet\r\n    rval = ast.literal_eval(json_string)\r\n           |   |            -> '{\\n  \"descriptions\": [\\n    [1, \"A plus sign icon on an orange background\"],\\n    [2, \"A blank gray square\"],\\n    [3, \"The ...\r\n           |   -> <function literal_eval at 0x104ba2ef0>\r\n           -> <module 'ast' from '/opt/homebrew/Cellar/python@3.10/3.10.14/Frameworks/Python.framework/Versions/3.10/lib/python3.10/ast.py'>\r\n\r\n  File \"/opt/homebrew/Cellar/python@3.10/3.10.14/Frameworks/Python.framework/Versions/3.10/lib/python3.10/ast.py\", line 64, in literal_eval\r\n    node_or_string = parse(node_or_string.lstrip(\" \\t\"), mode='eval')\r\n                     |     |              -> <method 'lstrip' of 'str' objects>\r\n                     |     -> '{\\n  \"descriptions\": [\\n    [1, \"A plus sign icon on an orange background\"],\\n    [2, \"A blank gray square\"],\\n    [3, \"The ...\r\n                     -> <function parse at 0x104ba2cb0>\r\n\r\n  File \"/opt/homebrew/Cellar/python@3.10/3.10.14/Frameworks/Python.framework/Versions/3.10/lib/python3.10/ast.py\", line 50, in parse\r\n    return compile(source, filename, mode, flags,\r\n                   |       |         |     -> 1024\r\n                   |       |         -> 'eval'\r\n                   |       -> '<unknown>'\r\n                   -> '{\\n  \"descriptions\": [\\n    [1, \"A plus sign icon on an orange background\"],\\n    [2, \"A blank gray square\"],\\n    [3, \"The ...\r\n\r\n  File \"<unknown>\", line 19\r\n    }\r\n    ^\r\n\r\nSyntaxError: closing parenthesis '}' does not match opening parenthesis '[' on line 2\r\n\r\n```\r\n\r\n### To Reproduce\r\n\r\n```\r\n python -m openadapt.replay SegmentReplayStrategy \"replay verbatim\"\r\n```",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-14T18:25:07Z",
      "updated_at": "2024-06-15T21:26:27Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/756/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/756",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/756",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:22.444644",
      "comments": [
        {
          "author": "abrichr",
          "body": "https://chatgpt.com/share/e92a6524-bb9a-4692-ac2e-9e10fe52aeff\r\n\r\nFor now we will focus on reducing the number of segments per prompt in upstream logic.",
          "created_at": "2024-06-14T19:10:39Z"
        },
        {
          "author": "abrichr",
          "body": "A regression was introduced in https://github.com/OpenAdaptAI/OpenAdapt/pull/679 in `openadapt/adapters/ultralytics.py`.\r\n\r\n\r\nBefore:\r\n```\r\n    conf: float = 0.4,\r\n    iou: float = 0.9,\r\n```\r\nAfter:\r\n```\r\n    # threshold below which boxes will be filtered out\r\n    conf: float = 0,\r\n    # discards al",
          "created_at": "2024-06-14T19:30:17Z"
        },
        {
          "author": "abrichr",
          "body": "The regression has been fixed in https://github.com/OpenAdaptAI/OpenAdapt/pull/758 but the issue will crop up again for lower NMS threshold values.",
          "created_at": "2024-06-15T15:49:59Z"
        }
      ]
    },
    {
      "issue_number": 752,
      "title": "[Bug]: TypeError: DistinctIDPosthog.capture() takes 1 positional argument but 3 were given",
      "body": "### Describe the bug\r\n\r\nentrypoint:\r\n\r\n```\r\n[1]   File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/fastapi/routing.py\", line 348, in app                                \r\n[1]     await dependant.call(**values)                                                                                                                                                     \r\n[1]   File \"/Users/abrichr/oa/OpenAdapt/openadapt/app/dashboard/api/recordings.py\", line 80, in get_recording_detail                                                                       \r\n[1]     action_events = get_events(session, recording)                                                                                                                                     \r\n[1]   File \"/Users/abrichr/oa/OpenAdapt/openadapt/events.py\", line 42, in get_events                                                                                                       \r\n[1]     posthog.capture(\"get_events.started\", {\"recording_id\": recording.id})                                                                                                              \r\n[1] TypeError: DistinctIDPosthog.capture() takes 1 positional argument but 3 were given\r\n```\r\n\r\nvisualize:\r\n\r\n```\r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/visualize.py\", line 407, in <module>\r\n    fire.Fire(main)\r\n    |    |    -> <function main at 0x29e66f490>\r\n    |    -> <function Fire at 0x12ba1d480>\r\n    -> <module 'fire' from '/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-package...\r\n\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/fire/core.py\", line 141, in Fire\r\n    component_trace = _Fire(component, args, parsed_flag_args, context, name)\r\n                      |     |          |     |                 |        -> 'visualize.py'\r\n                      |     |          |     |                 -> {}\r\n                      |     |          |     -> Namespace(verbose=False, interactive=False, separator='-', completion=None, help=False, trace=False)\r\n                      |     |          -> []\r\n                      |     -> <function main at 0x29e66f490>\r\n                      -> <function _Fire at 0x12bc89d80>\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/fire/core.py\", line 466, in _Fire\r\n    component, remaining_args = _CallAndUpdateTrace(\r\n    |                           -> <function _CallAndUpdateTrace at 0x12bc89ea0>\r\n    -> <function main at 0x29e66f490>\r\n> File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/fire/core.py\", line 681, in _CallAndUpdateTrace\r\n    component = fn(*varargs, **kwargs)\r\n                |   |          -> {}\r\n                |   -> [None, None, False, True]\r\n                -> <function main at 0x29e66f490>\r\n\r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/visualize.py\", line 177, in main\r\n    posthog.capture(\"visualize.started\", {\"recording_id\": recording_id})\r\n    |       |                                             -> None\r\n    |       -> <function DistinctIDPosthog.capture at 0x16a1aed40>\r\n    -> <openadapt.utils.DistinctIDPosthog object at 0x102a64100>\r\n\r\nTypeError: DistinctIDPosthog.capture() takes 1 positional argument but 3 were given\r\n```\r\n\r\n### To Reproduce\r\n\r\nA. dashboard\r\n```\r\npython -m openadapt.entrypoint\r\n```\r\nRight click tray icon -> click \"Launch Dashboard\" -> click on recording\r\n\r\nB. visualize\r\n```\r\npython -m openadapt.visualize\r\n```",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-13T23:57:40Z",
      "updated_at": "2024-06-14T13:23:19Z",
      "closed_at": "2024-06-14T13:23:19Z",
      "labels": [
        "bug",
        "main-broken"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/752/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/752",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/752",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:22.669315",
      "comments": [
        {
          "author": "abrichr",
          "body": "Please also add a test to prevent this from occurring again in the future 🙏 ",
          "created_at": "2024-06-14T02:18:18Z"
        }
      ]
    },
    {
      "issue_number": 674,
      "title": "Support LLava or other local vision models instead of using OpenAI GPT4-vision",
      "body": "### Feature request\n\nInstead of relying solely ton OpenAI's GPT4-vision for image processing, provide a locally hosted alternative, such as LLAVA.\n\n### Motivation\n\nOpenAI often gives this error when parsing images: \"Your input image may contain content that is not allowed by our safety system.\"\r\n",
      "state": "open",
      "author": "ai-agents-challenge",
      "author_type": "User",
      "created_at": "2024-05-15T19:14:22Z",
      "updated_at": "2024-06-13T23:53:26Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "good first issue",
        "help wanted",
        "$ bounty $"
      ],
      "label_count": 4,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/674/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/674",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/674",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:22.897088",
      "comments": [
        {
          "author": "abrichr",
          "body": "Related:\r\n- https://github.com/OpenAdaptAI/OpenAdapt/issues/637\r\n- https://github.com/OpenAdaptAI/OpenAdapt/issues/554\r\n- https://github.com/OpenAdaptAI/OpenAdapt/issues/500\r\n- https://github.com/OpenAdaptAI/OpenAdapt/issues/528",
          "created_at": "2024-05-15T20:11:57Z"
        },
        {
          "author": "abrichr",
          "body": "Related: https://community.openai.com/t/your-input-image-may-contain-content-that-is-not-allowed-by-our-safety-system-vision-api-response/653372/17\r\n\r\n> I expect that the AI is denying your request because it doesn’t know if you are trying to solve a CAPTCHA or attempting to use the AI for other pur",
          "created_at": "2024-06-11T01:30:51Z"
        }
      ]
    },
    {
      "issue_number": 751,
      "title": "Iterate over `openadapt.drivers` in `openadapt.adapters.prompt` until success",
      "body": "### Feature request\n\nThis involves refactoring `openadapt.adapters.[openai|anthropic|google]` into `openadapt.drivers`, and implementing a new `openadapt.adapters.prompt` to manage them.\n\n### Motivation\n\nhttps://github.com/OpenAdaptAI/OpenAdapt/issues/674:\r\n\r\n> OpenAI often gives this error when parsing images: \"Your input image may contain content that is not allowed by our safety system.\"\r\n\r\n--@ai-agents-challenge",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-13T23:43:46Z",
      "updated_at": "2024-06-13T23:53:12Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/751/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "abrichr"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/751",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/751",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:23.115551",
      "comments": []
    },
    {
      "issue_number": 659,
      "title": "Remove/transfer videos when removing/transferring recordings",
      "body": "### Feature request\r\n\r\nSince https://github.com/OpenAdaptAI/OpenAdapt/pull/650 was merged, images are no longer saved to Screenshots by default. This means that when removing/transferring recordings, we need to remove/transfer videos as well.\r\n\r\nhttps://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/share.py\r\n\r\n### Motivation\r\n\r\n_No response_",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-05-10T14:34:45Z",
      "updated_at": "2024-06-13T20:57:49Z",
      "closed_at": "2024-06-13T13:46:10Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/659/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/659",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/659",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:23.115573",
      "comments": [
        {
          "author": "abrichr",
          "body": "Implemented in https://github.com/OpenAdaptAI/OpenAdapt/pull/696",
          "created_at": "2024-06-13T20:57:48Z"
        }
      ]
    },
    {
      "issue_number": 69,
      "title": "Design: Fine-Tuning",
      "body": "### Feature request\r\n\r\nWe would like to implement fine-tuning.\r\n\r\nThis task involves considering the tradeoffs between various approaches to improving action completions and outcome evaluation via fine-tuning.\r\n\r\nMore generally, this also involves:\r\n\r\n1. Creating a training set\r\n2. Fine tuning on that training set\r\n3. Comparing the results\r\n\r\n### Motivation\r\n\r\nhttps://arxiv.org/abs/2406.03679\r\n\r\n> Autonomous agents that control computer interfaces to accomplish human tasks are emerging. Leveraging LLMs to power such agents has been of special interest, but unless fine-tuned on human-collected task demonstrations, performance is still relatively low.\r\n\r\n### Related\r\n\r\nhttps://github.com/MLDSAI/OpenAdapt/issues/70\r\nhttps://github.com/MLDSAI/OpenAdapt/issues/72\r\nhttps://github.com/OpenAdaptAI/OpenAdapt/issues/415\r\nhttps://github.com/OpenAdaptAI/OpenAdapt/issues/748\r\n\r\n### Bounty\r\n\r\nA paid bounty is available. Please suggest a price range 🙏 ",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-03T02:23:42Z",
      "updated_at": "2024-06-13T17:41:51Z",
      "closed_at": null,
      "labels": [
        "good first issue",
        "help wanted",
        "research",
        "$ bounty $"
      ],
      "label_count": 4,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/69/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/69",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/69",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:23.329113",
      "comments": [
        {
          "author": "FFFiend",
          "body": "Currently iterating on this issue through #327, by figuring out failure cases by testing various event sequences . To that end, current action items include: \r\n1) Researching fine tuning on LLMs in general\r\n2) writing a fine tuning pipeline for GPT-4 for Events.\r\n3) generalizing the pipeline to arbi",
          "created_at": "2023-07-06T00:12:33Z"
        },
        {
          "author": "FFFiend",
          "body": "https://medium.com/@jeremyarancio/fine-tune-an-llm-on-your-personal-data-create-a-the-lord-of-the-rings-storyteller-6826dd614fa9\r\n\r\nUseful article, goes over training and techniques like quantization and LoRA as well. Pretty educational to get an idea of what fine tuning an LLM looks like. \r\n\r\nSome ",
          "created_at": "2023-07-07T06:10:30Z"
        },
        {
          "author": "abrichr",
          "body": "I think we want something like:\r\n\r\n```\r\npython -m openadapt.finetune --recording_id <recording_id> --model <model_name>\r\n```",
          "created_at": "2023-07-07T15:18:40Z"
        },
        {
          "author": "FFFiend",
          "body": "https://platform.openai.com/docs/guides/fine-tuning if you scroll down a little you can see that neither GPT-4 nor GPT-3.5-turbo are available for fine tuning at the moment 😞 We could use the davinci base model, although I'm now curious as to what model Mind2Web do their fine tuning on 🤔 ",
          "created_at": "2023-07-08T06:20:10Z"
        },
        {
          "author": "abrichr",
          "body": "@bi-loop any interest? 🙏 ",
          "created_at": "2024-06-13T17:37:20Z"
        }
      ]
    },
    {
      "issue_number": 747,
      "title": "Recreate calculator demo with `VanillaReplayStrategy` + segment_descriptions",
      "body": "### Feature request\n\nWe would like to build on `VanillaReplayStrategy` to prompt with `segment_descriptions` like in `VisualReplayStrategy`.\n\n### Motivation\n\nReplay accuracy",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-13T14:01:28Z",
      "updated_at": "2024-06-13T14:01:33Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/747/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "abrichr"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/747",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/747",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:23.541014",
      "comments": []
    },
    {
      "issue_number": 642,
      "title": "Evaluate on OSWorld",
      "body": "### Feature request\r\n\r\nWe would like to test OpenAdapt's ability to perform the tasks in https://os-world.github.io/.\r\n\r\nThis may involve creating recordings of the tasks described in the benchmark, since (as per https://github.com/xlang-ai/OSWorld/tree/main/evaluation_examples) the data sample are formatted as:\r\n\r\n```\r\n{\r\n    \"id\": \"uid\", # unique id\r\n    \"snapshot\": \"snapshot_id\", # the snapshot id of the environment, with some data already there and apps already opened, or just desktop\r\n    \"instruction\": \"natural_language_instruction\", # the natural language instruction of the task, what we want the agent to do\r\n    \"source\": \"website_url\", # where we know this example, some forum, or some website, or some paper\r\n    \"config\": {xxx}, # the scripts to setup the donwload and open files actions, as the initial state of a task\r\n    \"trajectory\": \"trajectory_directory\", # the trajectory directory, which contains the action sequence file, the screenshots and the recording video\r\n    \"related_apps\": [\"app1\", \"app2\", ...], # the related apps, which are opened during the task\r\n    \"evaluator\": \"evaluation_dir\", # the directory of the evaluator, which contains the evaluation script for this example\r\n…\r\n}\r\n```\r\n\r\n> The `./trajectories` file contains the annotated trajectories for each data item in `./examples` for finishing the task.\r\n\r\nUnfortunately this file does not appear to be included in the repo. Therefore completing this evaluation may involve manually re-creating the trajectories via `openadapt.record`.\r\n\r\n### Motivation\r\n\r\nEvaluation",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-04-29T00:28:41Z",
      "updated_at": "2024-06-13T13:46:59Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "good first issue",
        "help wanted"
      ],
      "label_count": 3,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/642/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/642",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/642",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:23.541032",
      "comments": [
        {
          "author": "abrichr",
          "body": "Related: https://github.com/xlang-ai/OSWorld/issues/30",
          "created_at": "2024-06-13T13:46:58Z"
        }
      ]
    },
    {
      "issue_number": 579,
      "title": "windows capture broken",
      "body": "### Feature request\r\n\r\n```python -m openadapt.capture```\r\n\r\n```\r\n[2024-03-02 14:48:37.609] [recordLogger] [info] Created d3d11 device from 0\r\n[2024-03-02 14:48:37.610] [recordLogger] [info] found 1 displays\r\n[2024-03-02 14:48:37.700] [recordLogger] [error] Could not init InitializeSinkWriter\r\n[2024-03-02 14:48:37.703] [recordLogger] [error] MFEncoder is not null\r\n[2024-03-02 14:48:37.706] [recordLogger] [error] Could not init InitializeSinkWriter\r\n[2024-03-02 14:48:37.722] [recordLogger] [error] MFEncoder is not null\r\n[2024-03-02 14:48:37.723] [recordLogger] [error] Could not init InitializeSinkWriter\r\n[2024-03-02 14:48:37.736] [recordLogger] [error] MFEncoder is not null\r\n[2024-03-02 14:48:37.737] [recordLogger] [error] Could not init InitializeSinkWriter\r\n[2024-03-02 14:48:37.750] [recordLogger] [error] MFEncoder is not null\r\n[2024-03-02 14:48:37.751] [recordLogger] [error] Could not init InitializeSinkWriter\r\n[2024-03-02 14:48:37.765] [recordLogger] [error] MFEncoder is not null\r\n[2024-03-02 14:48:37.766] [recordLogger] [error] Could not init InitializeSinkWriter\r\n[2024-03-02 14:48:37.778] [recordLogger] [error] MFEncoder is not null\r\n[2024-03-02 14:48:37.779] [recordLogger] [error] Could not init InitializeSinkWriter\r\n[2024-03-02 14:48:37.792] [recordLogger] [error] MFEncoder is not null\r\n[2024-03-02 14:48:37.793] [recordLogger] [error] Could not init InitializeSinkWriter\r\n[2024-03-02 14:48:37.806] [recordLogger] [error] MFEncoder is not null\r\n[2024-03-02 14:48:37.807] [recordLogger] [error] Could not init InitializeSinkWriter\r\n[2024-03-02 14:48:37.820] [recordLogger] [error] MFEncoder is not null\r\n[2024-03-02 14:48:37.821] [recordLogger] [error] Could not init InitializeSinkWriter\r\n[2024-03-02 14:48:37.834] [recordLogger] [error] MFEncoder is not null\r\n[2024-03-02 14:48:37.838] [recordLogger] [error] Could not init InitializeSinkWriter\r\n[2024-03-02 14:48:37.848] [recordLogger] [error] MFEncoder is not null\r\n[2024-03-02 14:48:37.849] [recordLogger] [error] Could not init InitializeSinkWriter\r\n[2024-03-02 14:48:37.862] [recordLogger] [error] MFEncoder is not null\r\n[2024-03-02 14:48:37.863] [recordLogger] [error] Could not init InitializeSinkWriter\r\n[2024-03-02 14:48:37.877] [recordLogger] [error] MFEncoder is not null\r\n[2024-03-02 14:48:37.878] [recordLogger] [error] Could not init InitializeSinkWriter\r\n[2024-03-02 14:48:37.890] [recordLogger] [error] MFEncoder is not null\r\n[2024-03-02 14:48:37.891] [recordLogger] [error] Could not init InitializeSinkWriter\r\n[2024-03-02 14:48:37.905] [recordLogger] [error] MFEncoder is not null\r\n[2024-03-02 14:48:37.905] [recordLogger] [error] Could not init InitializeSinkWriter\r\n[2024-03-02 14:48:37.919] [recordLogger] [error] MFEncoder is not null\r\n[2024-03-02 14:48:37.920] [recordLogger] [error] Could not init InitializeSinkWriter\r\n[2024-03-02 14:48:37.933] [recordLogger] [error] MFEncoder is not null\r\n[2024-03-02 14:48:37.934] [recordLogger] [error] Could not init InitializeSinkWriter\r\n[2024-03-02 14:48:37.948] [recordLogger] [error] MFEncoder is not null\r\n[2024-03-02 14:48:37.949] [recordLogger] [error] Could not init InitializeSinkWriter\r\n[2024-03-02 14:48:37.962] [recordLogger] [error] MFEncoder is not null\r\n[2024-03-02 14:48:37.963] [recordLogger] [error] Could not init InitializeSinkWriter\r\n(openadapt-py3.10) PS C:\\openadapt>\r\n```\r\n\r\n### Motivation\r\n\r\nhttps://github.com/OpenAdaptAI/OpenAdapt/issues/570",
      "state": "closed",
      "author": "gawnecoding",
      "author_type": "User",
      "created_at": "2024-03-02T19:51:43Z",
      "updated_at": "2024-06-13T05:31:15Z",
      "closed_at": "2024-06-13T05:31:15Z",
      "labels": [
        "enhancement",
        "help wanted"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/579/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/579",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/579",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:23.777074",
      "comments": [
        {
          "author": "abrichr",
          "body": "Related: https://github.com/Andrey1994/screen_recorder_sdk/issues/3\r\n\r\nThe `.mov` file is being created in the captures directory, but it is empty.\r\n\r\n@0dm I'm getting this error as well. Any suggestions would be appreciated!",
          "created_at": "2024-04-18T16:34:22Z"
        },
        {
          "author": "abrichr",
          "body": "Fixed in https://github.com/OpenAdaptAI/OpenAdapt/pull/628",
          "created_at": "2024-06-13T05:31:15Z"
        }
      ]
    },
    {
      "issue_number": 582,
      "title": "Stability & Performance Improvements",
      "body": "### Feature request\r\n\r\nApplication should have no noticeable impact on users’ machine performance (CPU, memory, I/O, Network), including mouse flickering. Can passively capture activity with 99%+ uptime without any user input for at least a 1 week period.\r\n\r\n### Motivation\r\n\r\nApplication cannot impact day-to-day activities and productivity. We need to be a fly on the wall and let them go about their work. \r\n\r\nShifts are 8-12 hours long, 5-7 days per week and this needs to be running for 1-2 weeks. Ideally it's active any time the machine is running.\r\n\r\n",
      "state": "open",
      "author": "gawnecoding",
      "author_type": "User",
      "created_at": "2024-03-03T05:11:19Z",
      "updated_at": "2024-06-13T05:30:50Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/582/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/582",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/582",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:23.961085",
      "comments": [
        {
          "author": "abrichr",
          "body": "Related: https://github.com/OpenAdaptAI/OpenAdapt/issues/579",
          "created_at": "2024-04-18T13:47:44Z"
        },
        {
          "author": "abrichr",
          "body": "https://github.com/OpenAdaptAI/OpenAdapt/pull/628 and others have significantly imrpoved stability and performance. @gawnecoding can you please try again with the latest download at https://openadapt.ai ? 🙏 ",
          "created_at": "2024-06-13T05:30:48Z"
        }
      ]
    },
    {
      "issue_number": 584,
      "title": "Windows Installer for non-tech user",
      "body": "### Feature request\n\nSimple enough Windows installer that a very non-technical business user can have OpenAdapt running in 5 minutes. There should be no configuration options by default, only hidden under 'Advanced'. Includes skeleton terms of service. Easy to customize for white-labelling. \n\n### Motivation\n\nBusiness users have no time, skills, or inclination to deal with a setup process in a Terminal. They expect it to \"just work\".",
      "state": "closed",
      "author": "gawnecoding",
      "author_type": "User",
      "created_at": "2024-03-03T05:28:33Z",
      "updated_at": "2024-06-13T05:28:07Z",
      "closed_at": "2024-06-13T05:28:07Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/584/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/584",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/584",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:24.175476",
      "comments": [
        {
          "author": "abrichr",
          "body": "Related: https://github.com/OpenAdaptAI/OpenAdapt/issues/574",
          "created_at": "2024-03-03T20:44:34Z"
        },
        {
          "author": "abrichr",
          "body": "Implemented in https://github.com/OpenAdaptAI/OpenAdapt/pull/618",
          "created_at": "2024-06-13T05:27:33Z"
        }
      ]
    },
    {
      "issue_number": 565,
      "title": "Support Gemini 1.5 via `openadapt.adapter.gemini` + `LosslessReplayStrategy`",
      "body": "### Feature request\r\n\r\nFrom https://ateam-members.slack.com/archives/C050HTZ8HE0/p1708072362007929:\r\n\r\n> Google released Gemini 1.5 and tested it with 10 million tokens: https://blog.google/technology/ai/google-gemini-next-generation-model-february-2024/#sundar-note\r\n\r\nGemini v1 API documentation: https://cloud.google.com/vertex-ai/generative-ai/docs/model-reference/gemini#sample_requests\r\n\r\nPROBLEM STATEMENT:\r\n\r\nWe wish to implement an `openadapt.adapter` for Gemini 1.5, and parameterize/refactor `StatefulReplayStrategy`.\r\n\r\nCOMPLETION CRITERIA:\r\n\r\nThis Issue will be complete once there is:\r\n\r\n1. An `openadapt.adapter` that implements the Gemini API\r\n2. A refactored `StatefulReplayStrategy` that:\r\na. supports the larger context window size\r\nb. implements a more general prompt (e.g. implement screenshots in https://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/strategies/stateful.py#L126 and remove / simplify https://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/events.py#L719)\r\n\r\n\r\n\r\n### Motivation\r\n\r\nSupport the largest context window model available in order to include full resolution Set-of-Mark prompts (i.e. via https://github.com/OpenAdaptAI/OpenAdapt/issues/543 + https://github.com/microsoft/SoM/pull/19) across full recording.",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-02-28T01:05:42Z",
      "updated_at": "2024-06-13T05:21:56Z",
      "closed_at": "2024-06-13T05:21:07Z",
      "labels": [
        "enhancement",
        "help wanted"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/565/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/565",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/565",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:24.348922",
      "comments": [
        {
          "author": "abrichr",
          "body": "Gemini vision implemented in https://github.com/OpenAdaptAI/OpenAdapt/issues/551\r\nLosslessReplayStrategy replaced with VanillaReplayStrategy in https://github.com/OpenAdaptAI/OpenAdapt/issues/700",
          "created_at": "2024-06-13T05:21:07Z"
        }
      ]
    },
    {
      "issue_number": 574,
      "title": "Github Action to build via `openadapt.app.build`",
      "body": "### Feature request\n\nWe wish to build MacOS and Windows binaries and have them stored to https://github.com/OpenAdaptAI/OpenAdapt/releases.\n\n### Motivation\n\nWe want to add a \"Download App\" button to www.openadapt.ai",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-02-29T04:29:06Z",
      "updated_at": "2024-06-13T05:20:43Z",
      "closed_at": "2024-06-13T05:20:42Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/574/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "Mustaballer"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/574",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/574",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:24.527311",
      "comments": [
        {
          "author": "abrichr",
          "body": "@Mustaballer thoughts? 🙏 😄 ",
          "created_at": "2024-02-29T04:29:31Z"
        },
        {
          "author": "Mustaballer",
          "body": "@abrichr, I've explored existing GitHub Actions tailored for releasing binaries on both Windows and Mac but haven't come across any that support both platforms simultaneously. It seems we'll need to incorporate separate steps to compile the binary distributions for each—Mac and Windows—and then uplo",
          "created_at": "2024-03-04T01:11:36Z"
        },
        {
          "author": "abrichr",
          "body": "Thank you @Mustaballer !\r\n\r\nIf I understand correctly, this means we should add two separate Github actions, one for each platform. Is that right?",
          "created_at": "2024-03-18T23:16:49Z"
        },
        {
          "author": "Mustaballer",
          "body": "Yes, @abrichr we can set up two separate GitHub Actions workflows, one for each platform. Additionally, we can utilize parallel jobs within a single workflow to run both compilation processes simultaneously.",
          "created_at": "2024-03-18T23:20:00Z"
        },
        {
          "author": "abrichr",
          "body": "Implemented in https://github.com/OpenAdaptAI/OpenAdapt/pull/618",
          "created_at": "2024-06-13T05:20:42Z"
        }
      ]
    },
    {
      "issue_number": 745,
      "title": "Dashboard: Scrub windows by title",
      "body": "### Feature request\r\n\r\nWe would like to give users the ability to quickly remove all screenshots and window metadata for any window containing a given string in the title\r\n\r\n### Motivation\r\n\r\nPrivacy\r\nhttps://github.com/OpenAdaptAI/OpenAdapt/issues/580",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-13T03:42:04Z",
      "updated_at": "2024-06-13T05:19:34Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "good first issue",
        "help wanted"
      ],
      "label_count": 3,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/745/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/745",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/745",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:24.722677",
      "comments": []
    },
    {
      "issue_number": 607,
      "title": "[Bug]: Mouse flickers during capture on Windows devices",
      "body": "### Describe the bug\n\nWe expect the user's system to be relatively unaffected by the capture process. When capturing on a Windows device the mouse consistently flickers, even when resource utilization is low. There seems to be an issue with FFMpeg generally (try it in terminal). \r\n\r\nThere's a long-running FFMpeg issue on this topic: https://stackoverflow.com/questions/34023630/how-to-avoid-mouse-pointer-flicker-when-capture-a-window-by-ffmpeg . One area to explore is whether using -dshow instead of -gdigrab helps? \n\n### To Reproduce\n\nStart capture on a Windows device\r\nGo about using your system (eg. moving mouse)\r\nNote the continuous, distracting flickering of the mouse",
      "state": "closed",
      "author": "gawnecoding",
      "author_type": "User",
      "created_at": "2024-03-10T15:31:09Z",
      "updated_at": "2024-06-13T05:18:31Z",
      "closed_at": "2024-06-13T05:18:31Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/607/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/607",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/607",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:24.722699",
      "comments": [
        {
          "author": "abrichr",
          "body": "Fixed in https://github.com/OpenAdaptAI/OpenAdapt/pull/628",
          "created_at": "2024-06-13T05:18:31Z"
        }
      ]
    },
    {
      "issue_number": 722,
      "title": "Expandable stack trace in error message",
      "body": "### Feature request\r\n\r\n<img width=\"262\" alt=\"image\" src=\"https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/a822f3c7-d4e7-4a67-b86d-d575ff2c111b\">\r\n\r\nWhen an error occurs, it would be useful to see what the error was.\r\n\r\nIdeally we also have some way of automatically submitting a Github Issue.\r\n\r\n### Motivation\r\n\r\nFix bugs faster.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-06T21:48:57Z",
      "updated_at": "2024-06-13T05:11:26Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/722/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/722",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/722",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:24.937928",
      "comments": [
        {
          "author": "abrichr",
          "body": "<img width=\"1223\" alt=\"image\" src=\"https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/fc8f237c-2af3-4d87-9b38-c81487b5ca3f\">\r\n\r\n😅 ",
          "created_at": "2024-06-06T21:53:16Z"
        }
      ]
    },
    {
      "issue_number": 743,
      "title": "Implement ‘drivers.apple’",
      "body": "### Feature request\r\n\r\nWe want to Consume the developer specified SiriIntents.\r\n\r\nEventually, we will like to support automatic, intents-compatible app code \r\n\r\n### Motivation\r\n\r\nSupport more direct integration where possible.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-12T23:16:40Z",
      "updated_at": "2024-06-12T23:20:30Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "good first issue",
        "help wanted"
      ],
      "label_count": 3,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/743/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/743",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/743",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:25.227766",
      "comments": []
    },
    {
      "issue_number": 739,
      "title": "[Bug]: nvm : The term 'nvm' is not recognized as the name of a cmdlet, function, script file, or operable program. ",
      "body": "### Describe the bug\n\nBuild and release on Windows produces:\r\n\r\n```\r\nnvm : The term 'nvm' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the \r\nspelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt D:\\a\\OpenAdapt\\OpenAdapt\\openadapt\\app\\dashboard\\entrypoint.ps1:1 char:1\r\n+ nvm install 21\r\n+ ~~~\r\n    + CategoryInfo          : ObjectNotFound: (nvm:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException\r\n \r\nnvm : The term 'nvm' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the \r\nspelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt D:\\a\\OpenAdapt\\OpenAdapt\\openadapt\\app\\dashboard\\entrypoint.ps1:2 char:1\r\n+ nvm use 21\r\n+ ~~~\r\n    + CategoryInfo          : ObjectNotFound: (nvm:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException\r\n \r\nup to date, audited 459 packages in 1s\r\n173 packages are looking for funding\r\n  run `npm fund` for details\r\n4 vulnerabilities (3 moderate, 1 high)\r\nTo address issues that do not require attention, run:\r\n  npm audit fix\r\nTo address all issues, run:\r\n  npm audit fix --force\r\nRun `npm audit` for details.\r\n```\r\n\r\nThis does not seem to affect the rest of the build process.\n\n### To Reproduce\n\nTrigger a build, e.g. https://github.com/OpenAdaptAI/OpenAdapt/actions/runs/9484457521/job/26133996166",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-12T14:35:26Z",
      "updated_at": "2024-06-12T14:35:26Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/739/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/739",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/739",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:25.227787",
      "comments": []
    },
    {
      "issue_number": 734,
      "title": "Log everything to a file",
      "body": "### Feature request\n\nDue to stdout redirect, we would like to log everything to a file.\n\n### Motivation\n\nDebugging.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-10T16:47:12Z",
      "updated_at": "2024-06-10T16:47:12Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/734/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/734",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/734",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:25.227795",
      "comments": []
    },
    {
      "issue_number": 731,
      "title": "[Bug]: \"copying a recording\" appears to take a very long time when scrubbing from dashboard for the first time",
      "body": "### Describe the bug\n\nThis has been stuck like this for a few minutes:\r\n\r\n<img width=\"933\" alt=\"image\" src=\"https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/77660043-3481-436b-9c21-7bb5697cbca2\">\r\n\r\n```\r\n[1] 2024-06-09 00:34:54.289 | INFO     | openadapt.scrub:inner:158 - Scrubbing recording with id 47...\r\n[1] 2024-06-09 00:34:54.289 | DEBUG    | openadapt.utils:set_start_time:648 - _start_time=1717907694.2894368 _start_perf_counter=881127.921157125\r\n[1] 2024-06-09 00:35:02.332 | INFO     | openadapt.privacy.providers.presidio:<module>:26 - Downloading en_core_web_trf model...\r\n[1] Collecting en-core-web-trf==3.7.3\r\n\r\n[1]   WARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<pip._vendor.urllib3.connection.HTTPSConnection object at 0x105362a40>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /github-production-release-asset-2e65be/84940268/2b153889-5cf4-4337-98c9-f1510173ed63?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=releaseassetproduction%2F20240609%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20240609T043502Z&X-Amz-Expires=300&X-Amz-Signature=3dc54c83faec73ada7252ea77b39b213ac468dc87b25cacc6f25c108c67a3bf2&X-Amz-SignedHeaders=host&actor_id=0&key_id=0&repo_id=84940268&response-content-disposition=attachment%3B%20filename%3Den_core_web_trf-3.7.3-py3-none-any.whl&response-content-type=application%2Foctet-stream\r\n  WARNING: Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<pip._vendor.urllib3.connection.HTTPSConnection object at 0x105362ce0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /github-production-release-asset-2e65be/84940268/2b153889-5cf4-4337-98c9-f1510173ed63?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=releaseassetproduction%2F20240609%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20240609T043502Z&X-Amz-Expires=300&X-Amz-Signature=3dc54c83faec73ada7252ea77b39b213ac468dc87b25cacc6f25c108c67a3bf2&X-Amz-SignedHeaders=host&actor_id=0&key_id=0&repo_id=84940268&response-content-disposition=attachment%3B%20filename%3Den_core_web_trf-3.7.3-py3-none-any.whl&response-content-type=application%2Foctet-stream\r\n  WARNING: Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<pip._vendor.urllib3.connection.HTTPSConnection object at 0x105362e90>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /github-production-release-asset-2e65be/84940268/2b153889-5cf4-4337-98c9-f1510173ed63?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=releaseassetproduction%2F20240609%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20240609T043502Z&X-Amz-Expires=300&X-Amz-Signature=3dc54c83faec73ada7252ea77b39b213ac468dc87b25cacc6f25c108c67a3bf2&X-Amz-SignedHeaders=host&actor_id=0&key_id=0&repo_id=84940268&response-content-disposition=attachment%3B%20filename%3Den_core_web_trf-3.7.3-py3-none-any.whl&response-content-type=application%2Foctet-stream\r\n  WARNING: Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<pip._vendor.urllib3.connection.HTTPSConnection object at 0x105363040>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /github-production-release-asset-2e65be/84940268/2b153889-5cf4-4337-98c9-f1510173ed63?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=releaseassetproduction%2F20240609%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20240609T043502Z&X-Amz-Expires=300&X-Amz-Signature=3dc54c83faec73ada7252ea77b39b213ac468dc87b25cacc6f25c108c67a3bf2&X-Amz-SignedHeaders=host&actor_id=0&key_id=0&repo_id=84940268&response-content-disposition=attachment%3B%20filename%3Den_core_web_trf-3.7.3-py3-none-any.whl&response-content-type=application%2Foctet-stream\r\n  WARNING: Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<pip._vendor.urllib3.connection.HTTPSConnection object at 0x1053631f0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /github-production-release-asset-2e65be/84940268/2b153889-5cf4-4337-98c9-f1510173ed63?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=releaseassetproduction%2F20240609%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20240609T043502Z&X-Amz-Expires=300&X-Amz-Signature=3dc54c83faec73ada7252ea77b39b213ac468dc87b25cacc6f25c108c67a3bf2&X-Amz-SignedHeaders=host&actor_id=0&key_id=0&repo_id=84940268&response-content-disposition=attachment%3B%20filename%3Den_core_web_trf-3.7.3-py3-none-any.whl&response-content-type=application%2Foctet-stream\r\nERROR: Could not install packages due to an OSError: HTTPSConnectionPool(host='objects.githubusercontent.com', port=443): Max retries exceeded with url: /github-production-release-asset-2e65be/84940268/2b153889-5cf4-4337-98c9-f1510173ed63?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=releaseassetproduction%2F20240609%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20240609T043502Z&X-Amz-Expires=300&X-Amz-Signature=3dc54c83faec73ada7252ea77b39b213ac468dc87b25cacc6f25c108c67a3bf2&X-Amz-SignedHeaders=host&actor_id=0&key_id=0&repo_id=84940268&response-content-disposition=attachment%3B%20filename%3Den_core_web_trf-3.7.3-py3-none-any.whl&response-content-type=application%2Foctet-stream (Caused by NewConnectionError('<pip._vendor.urllib3.connection.HTTPSConnection object at 0x1053633a0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known'))\r\n[1] \r\n```\r\n\r\nWe should display something more informative to the user here.\r\n\r\nAt the very least, we should replace `Copying recording first...` with `Copying recording (this may take a while if Spacy dependencies need to be downloaded on the first run)...`\r\n\n\n### To Reproduce\n\nIn a fresh clone, first create a recording, then attempt to scrub it in the dashboard:\r\n```\r\npython -m openadapt.app.dashboard.run\r\n```",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-09T04:42:09Z",
      "updated_at": "2024-06-09T04:45:18Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/731/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/731",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/731",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:25.227803",
      "comments": [
        {
          "author": "abrichr",
          "body": "```\r\n\r\n[1]   WARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<pip._vendor.urllib3.connection.HTTPSConnection object at 0x105362a40>: Failed to establish a new connection: [Errno 8] nodename nor servname provided,",
          "created_at": "2024-06-09T04:43:34Z"
        },
        {
          "author": "abrichr",
          "body": "Also refreshing the page does not refresh its state:\r\n\r\n<img width=\"905\" alt=\"image\" src=\"https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/00858e69-2d87-4cb5-bea8-06550b78f611\">\r\n\r\n(Nothing is happening on the backend):\r\n```\r\n[1] \r\nINFO:     127.0.0.1:52685 - \"GET /api/recordings HTTP/1.1\" 200",
          "created_at": "2024-06-09T04:44:17Z"
        }
      ]
    },
    {
      "issue_number": 730,
      "title": "Test opening a recording in the dashboard",
      "body": "### Feature request\n\nWe would like to prevent regressions like the one in https://github.com/OpenAdaptAI/OpenAdapt/pull/729 wih an automated test.\r\n\r\nThis involves extending dashboard testing to open a recording.\n\n### Motivation\n\nPrevent broken builds",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-09T04:30:12Z",
      "updated_at": "2024-06-09T04:30:29Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/730/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/730",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/730",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:25.441578",
      "comments": []
    },
    {
      "issue_number": 718,
      "title": "[Bug]: `python -m openadapt.app.dashboard.run` broken",
      "body": "### Describe the bug\n\n```\r\n(openadapt-py3.10) abrichr@MacBook-Pro-5 OpenAdapt % poetry run install-dashboard\r\nN/A: version \"N/A -> N/A\" is not yet installed.\r\n\r\nYou need to run \"nvm install N/A\" to install it before using it.\r\nv21.7.3 is already installed.\r\nNow using node v21.7.3 (npm v10.5.0)\r\nFound '/Users/abrichr/oa/OpenAdapt/openadapt/app/dashboard/.nvmrc' with version <21>\r\nNow using node v21.7.3 (npm v10.5.0)\r\n\r\nadded 1 package, and audited 460 packages in 2s\r\n\r\n173 packages are looking for funding\r\n  run `npm fund` for details\r\n\r\n3 moderate severity vulnerabilities\r\n\r\nTo address issues that do not require attention, run:\r\n  npm audit fix\r\n\r\nTo address all issues, run:\r\n  npm audit fix --force\r\n\r\nRun `npm audit` for details.\r\nnpm notice \r\nnpm notice New minor version of npm available! 10.5.0 -> 10.8.1\r\nnpm notice Changelog: https://github.com/npm/cli/releases/tag/v10.8.1\r\nnpm notice Run npm install -g npm@10.8.1 to update!\r\nnpm notice \r\n(openadapt-py3.10) abrichr@MacBook-Pro-5 OpenAdapt % python -m openadapt.app.dashboard.run\r\nException in thread Thread-1 (run_client):\r\nTraceback (most recent call last):\r\n  File \"/opt/homebrew/Cellar/python@3.10/3.10.14/Frameworks/Python.framework/Versions/3.10/lib/python3.10/threading.py\", line 1016, in _bootstrap_inner\r\n    self.run()\r\n  File \"/opt/homebrew/Cellar/python@3.10/3.10.14/Frameworks/Python.framework/Versions/3.10/lib/python3.10/threading.py\", line 953, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/app/dashboard/run.py\", line 35, in run_client\r\n    dashboard_process = subprocess.Popen(\r\n  File \"/opt/homebrew/Cellar/python@3.10/3.10.14/Frameworks/Python.framework/Versions/3.10/lib/python3.10/subprocess.py\", line 971, in __init__\r\n    self._execute_child(args, executable, preexec_fn, close_fds,\r\n  File \"/opt/homebrew/Cellar/python@3.10/3.10.14/Frameworks/Python.framework/Versions/3.10/lib/python3.10/subprocess.py\", line 1863, in _execute_child\r\n    raise child_exception_type(errno_num, err_msg, err_filename)\r\nFileNotFoundError: [Errno 2] No such file or directory: 'node'\r\n^C2024-06-06 16:49:01.663 | DEBUG    | __main__:cleanup:59 - Terminating the dashboard client.\r\n2024-06-06 16:49:01.664 | DEBUG    | __main__:cleanup:64 - Dashboard client terminated.\r\n^C\r\n(openadapt-py3.10) abrichr@MacBook-Pro-5 OpenAdapt % \r\n\r\n```\n\n### To Reproduce\n\nSee above",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-06T20:50:54Z",
      "updated_at": "2024-06-09T04:22:52Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 6,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/718/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/718",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/718",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:25.441601",
      "comments": [
        {
          "author": "abrichr",
          "body": "As part of fixing this, please also add a test 🙏 ",
          "created_at": "2024-06-06T20:51:41Z"
        },
        {
          "author": "KIRA009",
          "body": "Hi @abrichr are you trying this on a new system? Could you check if running `node` in the same terminal raises any errors. As far as I understand, the node exectuable is not where it should be (in one of the `bin` directories added to `PATH`)",
          "created_at": "2024-06-07T06:26:22Z"
        },
        {
          "author": "abrichr",
          "body": "@KIRA009 \r\n```\r\n(openadapt-py3.10) abrichr@MacBook-Pro-5 OpenAdapt % python -m openadapt.app.dashboard.run\r\nException in thread Thread-1 (run_client):\r\nTraceback (most recent call last):\r\n  File \"/opt/homebrew/Cellar/python@3.10/3.10.14/Frameworks/Python.framework/Versions/3.10/lib/python3.10/thread",
          "created_at": "2024-06-09T03:44:09Z"
        },
        {
          "author": "abrichr",
          "body": "I tried manually running `nvm use 21` then `poetry install-dashboard`:\r\n\r\n```\r\n(openadapt-py3.10) abrichr@MacBook-Pro-5 OpenAdapt % poetry run install-dashboard                                                                                                                                     \r\nv21.7",
          "created_at": "2024-06-09T04:00:56Z"
        },
        {
          "author": "abrichr",
          "body": "ChatGPT:\r\n---\r\nIn the provided `run.py` script, the main problem is related to the subprocess not finding the `node` executable, as seen from the error message `FileNotFoundError: [Errno 2] No such file or directory: 'node'`. This is typically because the environment in which Python's `subprocess.Po",
          "created_at": "2024-06-09T04:11:39Z"
        }
      ]
    },
    {
      "issue_number": 728,
      "title": "[Bug]: embedded video recordings don't start at 0:00",
      "body": "### Describe the bug\n\nIn https://github.com/OpenAdaptAI/OpenAdapt/pull/726, setting `fix_moov=True` makes videos recorded with `video.py` embedded in github comments start at 0:00 as expected, but `video.extract_frames` fails.\r\n\r\nOne possible solution involves comparing `video_stream.time_base` before and after `move_moov_atom`, computing the difference, and adjusting timestamps as necessary.\n\n### To Reproduce\n\n1. Set `fix_moov=False` in `finalize_video_writer`\r\n2. Create a recording: `python -m openadapt.record foo`\r\n3. Try to visualize it: `python -m openadapt.visualize`",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-08T16:43:21Z",
      "updated_at": "2024-06-08T16:43:21Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/728/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/728",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/728",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:25.623332",
      "comments": []
    },
    {
      "issue_number": 723,
      "title": "Price out self hosting glitchtip",
      "body": "### Feature request\r\n\r\n<img width=\"785\" alt=\"image\" src=\"https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/e1abad89-e700-43e1-b9c7-d937a32d54f8\">\r\n\r\n### Motivation\r\n\r\nHow much would it cost, and how many events would we get (presumably infinite?), if we host on AWS?",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-06T21:55:43Z",
      "updated_at": "2024-06-06T21:56:36Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/723/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/723",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/723",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:25.623352",
      "comments": []
    },
    {
      "issue_number": 720,
      "title": "[Bug]: “OpenAdapt.app” cannot be opened because the developer cannot be verified.",
      "body": "### Describe the bug\n\n<img width=\"259\" alt=\"image\" src=\"https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/1c058ae6-a188-4deb-ac27-78e27332ef45\">\r\n\n\n### To Reproduce\n\nDownload and open from https://openadapt.ai/ on MacOS",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-06T21:34:59Z",
      "updated_at": "2024-06-06T21:38:52Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/720/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/720",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/720",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:25.623357",
      "comments": [
        {
          "author": "abrichr",
          "body": "# Workaround\r\n\r\nClick Apple Menu -> \"System Settings \"\r\n\r\n<img width=\"139\" alt=\"image\" src=\"https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/f8eb1554-695c-4c9f-8545-d15a90b09c4f\">\r\n\r\nSelect \"Privacy and Security\"\r\n\r\n<img width=\"217\" alt=\"image\" src=\"https://github.com/OpenAdaptAI/OpenAdapt/ass",
          "created_at": "2024-06-06T21:37:49Z"
        }
      ]
    },
    {
      "issue_number": 719,
      "title": "Simplify image description in `visual.py` and `segment.py`",
      "body": "### Feature request\r\n\r\nIn VisualReplayStrategy and SegmentReplayStrategy, segment description is currently formulated as:\r\n\r\nimage\r\n-> masks\r\n-> masked_images\r\n-> masked_image_descriptions = prompt(\"describe these images\")\r\n-> active_segment_description (for mouse events only)\r\n-> prompt(\"given <masked_image_descriptions>,<active_segment_description>, ...: generate the next action\")\r\n-> modified_active_segment_description\r\n-> modified_segment_coordinates\r\n\r\nA simpler version worth trying:\r\n\r\nimage\r\n-> masks\r\n-> masked_images\r\n-> masked_image_descriptions = prompt(\"describe these images\")\r\n-> active_segment_description (for mouse events only)\r\n-> prompt(\"given <masked_image_descriptions>,<active_segment_description>, **and their coordinates**,...: generate the next action\")\r\n\r\ni.e. have the model return coordinates, given segment descriptions\r\n\r\n### Motivation\r\n\r\nSimplify, leverage future model performance improvements",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-06T21:32:24Z",
      "updated_at": "2024-06-06T21:32:44Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/719/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/719",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/719",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:25.837484",
      "comments": []
    },
    {
      "issue_number": 716,
      "title": "[Bug]: Anthropic adapter logging issue",
      "body": "### Describe the bug\n\nWhen running the command `python -m openadapt.replay VisualReplayStrategy --instructions \"multiply 8x9\"`, I run into the following issue\r\n`--- Logging error in Loguru Handler #1 ---\r\nRecord was: None\r\nTraceback (most recent call last):\r\n  File \"/Users/.../miniconda3/envs/p1/lib/python3.10/site-packages/loguru/_handler.py\", line 272, in _queued_writer\r\n    message = queue.get()\r\n  File \"/Users/.../miniconda3/envs/p1/lib/python3.10/multiprocessing/queues.py\", line 367, in get\r\n    return _ForkingPickler.loads(res)\r\nTypeError: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'\r\n--- End of logging error ---`\r\n\r\nThe issue seems to be related to the serialization and de serialization of the record. Related post here https://github.com/Delgan/loguru/issues/329, though I'm not sure why this happens when running an anthropic adapter, and not an openai adapter\n\n### To Reproduce\n\nI use macOS\r\nSet the adapter to anthropic, and then follow the same procedure as this twitter demo: https://x.com/abrichr/status/1784307190062342237",
      "state": "open",
      "author": "Sukrit5",
      "author_type": "User",
      "created_at": "2024-06-06T19:42:27Z",
      "updated_at": "2024-06-06T19:42:27Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/716/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/716",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/716",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:25.837526",
      "comments": []
    },
    {
      "issue_number": 637,
      "title": "Implement MiniCPM-V-2",
      "body": "### Feature request\r\n\r\nhttps://github.com/OpenBMB/MiniCPM is the smallest multimodal model available. The latest version, https://huggingface.co/openbmb/MiniCPM-V-2, appears to be able to understand GUI images:\r\n\r\n> Describe the given image with as much detail as possible.\r\n\r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/8ff95c49-47d0-46d1-ab0f-cb6568d23df6)\r\n\r\n> The image features a calculator screen displaying the number 45. The interface includes various mathematical symbols and operators, such as plus (+), minus (-) signs with corresponding buttons for each operation: addition (\"=\"), subtraction ('÷'), multiplication (*\", division(\"/\"),\"and \"%) percentage sign(s)\"%\"...\r\nThere are also indicators of different types in green colors like 'O', indicating an operator or function button on one side while there're numbers from zero to nine represented by numerical keys elsewhere along this section within its boundary which suggests that it is designed primarily for performing arithmetic calculations rather than any complex math operations beyond simple algebra rules due to absence visible functions related directly connected through keyboard shortcuts via icons similar those seen at top left corner\r\n\r\nThis model has been integrated into https://github.com/vllm-project/vllm, which is likely how we want to implement it here.\r\n\r\nThis involves creating an `openadapt.adapters.vllm` with parameterizable model name.\r\n\r\n### Motivation\r\n\r\nFully offline support.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-04-25T18:12:24Z",
      "updated_at": "2024-06-06T16:35:50Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "good first issue",
        "help wanted"
      ],
      "label_count": 3,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/637/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/637",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/637",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:25.837539",
      "comments": [
        {
          "author": "abrichr",
          "body": "Related: https://huggingface.co/spaces/opencompass/open_vlm_leaderboard\r\n\r\nhttps://github.com/OpenGVLab/InternVL appears to surpass MiniCPM on the benchmark. However, testing suggests it does not perform as well on GUI elements. From https://internvl.opengvlab.com/ (same image as above):\r\n\r\n---\r\n\r\n>",
          "created_at": "2024-05-29T02:27:38Z"
        },
        {
          "author": "abrichr",
          "body": "Also worth considering: https://huggingface.co/microsoft/Phi-3-vision-128k-instruct",
          "created_at": "2024-05-29T18:50:19Z"
        },
        {
          "author": "abrichr",
          "body": "https://github.com/THUDM/GLM-4/blob/main/README_en.md\r\n\r\n> We have also launched the GLM-4-9B-Chat-1M model that supports 1M context length (about 2 million Chinese characters) and the multimodal model GLM-4V-9B based on GLM-4-9B. GLM-4V-9B possesses dialogue capabilities in both Chinese and English",
          "created_at": "2024-06-06T16:35:48Z"
        }
      ]
    },
    {
      "issue_number": 713,
      "title": "Model pipeline",
      "body": "### Feature request\n\n> Yeah we need to a pipeline for simultaneously testing out Gemini/OAI/Claude as easily swappable modules\r\n> APIs\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-06T05:57:12Z",
      "updated_at": "2024-06-06T05:58:47Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/713/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/713",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/713",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:26.047064",
      "comments": [
        {
          "author": "abrichr",
          "body": "```\r\npipeline = [adapters.openai, adapters.anthropic, adapters.google]\r\nfor adapter in pipeline:\r\n    evaluate(adapter)\r\n```",
          "created_at": "2024-06-06T05:58:46Z"
        }
      ]
    },
    {
      "issue_number": 535,
      "title": "[Bug]: New Installation Script - `Failed: Update database`",
      "body": "### Describe the bug\r\n\r\nHello - excited to get this running, but having a database/alembic issue on a fresh installation.\r\n\r\nDuring `alembic upgrade head` stage in both the scripted and manual install I get:\r\n```\r\n/bin/bash: line 29: 20315 Killed: 9               $1\r\n+ echo 'Failed: Update database'\r\nFailed: Update database\r\n```\r\n\r\nNote that this is a brand new computer so might not have some sqlite dependency I need? However, I'm able to create db's fine outside of script 🤷 \r\n\r\n![Screenshot 2023-12-09 at 3 56 32 AM](https://github.com/OpenAdaptAI/OpenAdapt/assets/2935387/f2c2a8f2-830c-490a-9611-944ce9bc87a4)\r\n\r\n```\r\n$ python --version          \r\nPython 3.10.11\r\n\r\n$ sqlite3 --version\r\n3.39.5 2022-10-14 20:58:05 554764a6e721fab307c63a4f98cd958c8428a5d9d8edfde951858d6fd02daapl\r\n```\r\n\r\n### To Reproduce\r\n\r\nPre-reqs\r\n*  _macOS Sonoma [14.1] - M3 36gb_\r\n* Had git installed\r\n* Also installed tesseract (but I don't think its related)\r\n\r\nFull stack trace\r\n* https://gist.github.com/SerKnight/f8f12d69b8dfbbded9b7966ea3d03c31\r\n\r\n```\r\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/OpenAdaptAI/OpenAdapt/HEAD/install/install_openadapt.sh)\"\r\n...\r\nSuccess: Clone git repo\r\nSuccess: Install Poetry\r\nSuccess: Install Python dependencies\r\n...\r\n+ RunAndCheck 'poetry run alembic upgrade head' 'Update database'\r\n+ poetry run alembic upgrade head\r\n\r\n2023-12-09 04:01:15.913 | INFO     | openadapt.config:<module>:233 - STOP_STRS=['oa.stop']\r\n2023-12-09 04:01:15.913 | INFO     | openadapt.config:<module>:233 - SPECIAL_CHAR_STOP_SEQUENCES=[['ctrl', 'ctrl', 'ctrl']]\r\n2023-12-09 04:01:15.913 | INFO     | openadapt.config:<module>:233 - STOP_SEQUENCES=[['o', 'a', '.', 's', 't', 'o', 'p'], ['ctrl', 'ctrl', 'ctrl']]\r\n2023-12-09 04:01:15.913 | INFO     | openadapt.config:<module>:233 - ENV_FILE_PATH=.env\r\n2023-12-09 04:01:15.913 | INFO     | openadapt.config:<module>:233 - CACHE_DIR_PATH=.cache\r\n2023-12-09 04:01:15.913 | INFO     | openadapt.config:<module>:233 - CACHE_ENABLED=True\r\n2023-12-09 04:01:15.913 | INFO     | openadapt.config:<module>:233 - CACHE_VERBOSITY=0\r\n2023-12-09 04:01:15.913 | INFO     | openadapt.config:<module>:233 - DB_ECHO=False\r\n2023-12-09 04:01:15.913 | INFO     | openadapt.config:<module>:233 - DB_FNAME=openadapt.db\r\n2023-12-09 04:01:15.913 | INFO     | openadapt.config:<module>:233 - ERROR_REPORTING_ENABLED=True\r\n2023-12-09 04:01:15.913 | INFO     | openadapt.config:<module>:233 - ERROR_REPORTING_DSN=https://dcf5d7889a3b4b47ae12a3af9ffcbeb7@app.glitchtip.com/3798\r\n2023-12-09 04:01:15.913 | INFO     | openadapt.config:<module>:233 - ERROR_REPORTING_BRANCH=main\r\n2023-12-09 04:01:15.913 | INFO     | openadapt.config:<module>:233 - OPENAI_API_KEY=<set your api key in .env>\r\n2023-12-09 04:01:15.913 | INFO     | openadapt.config:<module>:233 - OPENAI_MODEL_NAME=gpt-3.5-turbo\r\n2023-12-09 04:01:15.913 | INFO     | openadapt.config:<module>:233 - RECORD_READ_ACTIVE_ELEMENT_STATE=False\r\n2023-12-09 04:01:15.913 | INFO     | openadapt.config:<module>:233 - REPLAY_STRIP_ELEMENT_STATE=True\r\n2023-12-09 04:01:15.913 | INFO     | openadapt.config:<module>:233 - IGNORE_WARNINGS=False\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - MAX_NUM_WARNINGS_PER_SECOND=5\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - WARNING_SUPPRESSION_PERIOD=1\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - MESSAGES_TO_FILTER=['Cannot pickle Objective-C objects']\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - ACTION_TEXT_SEP=-\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - ACTION_TEXT_NAME_PREFIX=<\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - ACTION_TEXT_NAME_SUFFIX=>\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - PLOT_PERFORMANCE=True\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - CAPTURE_DIR_PATH=captures\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - APP_DARK_MODE=False\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - SCRUB_ENABLED=False\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - SCRUB_CHAR=*\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - SCRUB_LANGUAGE=en\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - SCRUB_FILL_COLOR=255\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - SCRUB_CONFIG_TRF={'nlp_engine_name': 'spacy', 'models': [{'lang_code': 'en', 'model_name': 'en_core_web_trf'}]}\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - SCRUB_PRESIDIO_IGNORE_ENTITIES=[]\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - SCRUB_KEYS_HTML=['text', 'canonical_text', 'title', 'state', 'task_description', 'key_char', 'canonical_key_char', 'key_vk', 'children']\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - VISUALIZE_DARK_MODE=False\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - VISUALIZE_RUN_NATIVELY=True\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - VISUALIZE_DENSE_TREES=True\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - VISUALIZE_ANIMATIONS=True\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - VISUALIZE_EXPAND_ALL=False\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - VISUALIZE_MAX_TABLE_CHILDREN=10\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - SAVE_SCREENSHOT_DIFF=False\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - SPACY_MODEL_NAME=en_core_web_trf\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - PRIVATE_AI_API_KEY=<set your api key in .env>\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - ROOT_DIRPATH=/Users/christopherknight/code/personal/OpenAdapt\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - DB_FPATH=/Users/christopherknight/code/personal/OpenAdapt/openadapt.db\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - DB_URL=sqlite:////Users/christopherknight/code/personal/OpenAdapt/openadapt.db\r\n2023-12-09 04:01:15.914 | INFO     | openadapt.config:<module>:233 - DIRNAME_PERFORMANCE_PLOTS=performance\r\n2023-12-09 04:01:15.916 | INFO     | openadapt.config:<module>:237 - active_branch_name='main'\r\n2023-12-09 04:01:15.916 | INFO     | openadapt.config:<module>:239 - is_reporting_branch=True\r\nDB_URL=sqlite:////Users/christopherknight/code/personal/OpenAdapt/openadapt.db\r\nINFO  [alembic.runtime.migration] Context impl SQLiteImpl.\r\nINFO  [alembic.runtime.migration] Will assume non-transactional DDL.\r\n/bin/bash: line 29: 21305 Killed: 9               $1\r\n+ echo 'Failed: Update database'\r\nFailed: Update database\r\n+ Cleanup\r\n+ '[' -d ../OpenAdapt ']'\r\n+ cd ..\r\n+ rm -rf OpenAdapt\r\n+ echo 'Deleted OpenAdapt directory'\r\nDeleted OpenAdapt directory\r\n+ exit 1\r\n```",
      "state": "open",
      "author": "SerKnight",
      "author_type": "User",
      "created_at": "2023-12-09T11:06:13Z",
      "updated_at": "2024-06-06T05:33:40Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/535/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/535",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/535",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:26.259256",
      "comments": [
        {
          "author": "debugaftercoffee",
          "body": "I'm experiencing the same issue. @SerKnight did you find a workaround?",
          "created_at": "2024-06-05T17:06:44Z"
        },
        {
          "author": "abrichr",
          "body": "@SerKnight thank you for your patience! Looks like this slipped through the cracks.\r\n\r\n@debugaftercoffee thank you for bringing it to my attention.\r\n\r\nDoes the manual installation work?",
          "created_at": "2024-06-05T18:20:25Z"
        },
        {
          "author": "debugaftercoffee",
          "body": "@abrichr I can reproduce the error using either the scripted or manual installation methods. I'm on MacOS with M1 processor. I set the log leves in `alembic.ini` to DEBUG and it looks like it is failing after the commit.\r\n\r\n```\r\n% poetry run alembic upgrade head\r\nDB_URL=sqlite:////Users/jd565c/repos",
          "created_at": "2024-06-05T18:26:22Z"
        },
        {
          "author": "abrichr",
          "body": "Unfortunately I am unable to reproduce.\r\n  \r\nMaybe try:\r\n  \r\n```\r\nDB_URL=sqlite:////Users/jd565c/repos/OpenAdapt/openadapt/data/openadapt.db poetry run alembic upgrade head --raiseerr\r\n```\r\n  \r\nFor troubleshooting, check the Console application on macOS or Event Viewer on Windows to see if there are",
          "created_at": "2024-06-05T18:32:41Z"
        }
      ]
    },
    {
      "issue_number": 712,
      "title": "Docker + sockets",
      "body": "### Feature request\r\n\r\nWe would like to move everything possible to run inside of Docker, and leave the minimum possible running on the host machine in order to read/write desktop/mouse/display.\r\n\r\nThis involves\r\n- creating a Dockerfile\r\n- running everything except `record.py` and `playback.py` inside of Docker\r\n- connecting the Docker host to the virtual machine via sockets\r\n\r\n### Motivation\r\n\r\nStability and portability:\r\n\r\nhttps://github.com/OpenAdaptAI/OpenAdapt/issues/535\r\n\r\nhttps://github.com/OpenAdaptAI/OpenAdapt/issues/629\r\n\r\nEventually this would also simplify running computation remotely:\r\n\r\nhttps://github.com/OpenAdaptAI/OpenAdapt/issues/543",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-05T21:53:58Z",
      "updated_at": "2024-06-05T21:57:07Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/712/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/712",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/712",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:26.532870",
      "comments": []
    },
    {
      "issue_number": 543,
      "title": "Implement SoM client/server functionality",
      "body": "### Feature request\r\n\r\nTo support https://github.com/openadaptai/SoM we need to implement a client.py with https://www.gradio.app/docs/client. See:\r\n\r\n- client.py: https://github.com/microsoft/SoM/pull/19/files#diff-1ebfaf6cb3592166b73835fa82333cb7109e7c624865c0039a7b22ff34aa27fa)\r\n- deploy.py: https://github.com/microsoft/SoM/pull/19/files#diff-5c9ed18af9a5f902219d12c3044ccb193c2c304a3748d02702889c2ca5703978\r\n\r\n### Motivation\r\n\r\nhttps://github.com/openadaptai/SoM is state-of-the-art for visual understanding, and only runs on Linux / CUDA\r\n\r\nRefer to system diagram:\r\n\r\n<img width=\"1504\" alt=\"image\" src=\"https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/1cbb4418-6c03-447d-b66a-6341043ffbcd\">\r\n\r\nInference (SoM/SAM) must be done remotely.\r\n\r\nWe wish to implement:\r\n- `openadapt/adapters/som/client.py`: modified version of client.py in https://github.com/microsoft/SoM/pull/19 to support getting marked screenshots during analysis (visualization) and replay\r\n- `openadapt/adapters/som/server`, which can be a git submodule containing https://github.com/OpenAdaptAI/SoM/",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-12-12T20:04:42Z",
      "updated_at": "2024-06-05T15:13:55Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "help wanted"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/543/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "FFFiend"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/543",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/543",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:26.532892",
      "comments": [
        {
          "author": "abrichr",
          "body": "@FFFiend thoughts? 🙏 😄 ",
          "created_at": "2024-02-29T03:23:36Z"
        },
        {
          "author": "FFFiend",
          "body": "I took a look at the ```client.py``` code as well as the docs so from my understanding:\r\n\r\nInstead of using a gradio app url or HuggingFace space, we would like to create an entry point to the EC2 SoM instance we have available and return a marked screenshot as the output of ```predict``` \r\n\r\nBit co",
          "created_at": "2024-02-29T04:15:03Z"
        },
        {
          "author": "abrichr",
          "body": "@FFFiend thanks for your quick response!\r\n\r\n> Instead of using a gradio app url or HuggingFace space, we would like to create an entry point to the EC2 SoM instance we have available and return a marked screenshot as the output of predict\r\n\r\nExactly right! We would need to integrate the `deploy.py` ",
          "created_at": "2024-03-02T23:31:48Z"
        },
        {
          "author": "FFFiend",
          "body": "awesome, so for client.py I'm envisioning client to work as follows:\r\n\r\n1. Use ```start``` and ```stop``` from the ```Deploy``` class for instantiating and then closing the instance.\r\n2. Use either paramiko https://www.paramiko.org/ or https://pexpect.readthedocs.io/en/stable/ to have a runner for f",
          "created_at": "2024-03-06T08:55:22Z"
        },
        {
          "author": "abrichr",
          "body": "@FFFiend thanks for your patience! Just saw this 😅 \r\n\r\n> 1. Use start and stop from the Deploy class for instantiating and then closing the instance.\r\n\r\nAgreed.\r\n\r\n> 2. Use either paramiko https://www.paramiko.org/ or https://pexpect.readthedocs.io/en/stable/ to have a runner for functions within th",
          "created_at": "2024-03-18T22:56:17Z"
        }
      ]
    },
    {
      "issue_number": 708,
      "title": "[Bug]: rename \"parent events\" to \"keyframe events\"",
      "body": "### Describe the bug\n\n\"keyframe\" is more descriptive than \"parent\".\n\n### To Reproduce\n\nN/A",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-05T03:43:35Z",
      "updated_at": "2024-06-05T03:43:36Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/708/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/708",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/708",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:26.740034",
      "comments": []
    },
    {
      "issue_number": 707,
      "title": "[Bug]: rename \"window_data\" to \"a11y_data\"",
      "body": "### Describe the bug\n\nwindow_data is poor terminology\n\n### To Reproduce\n\nN/A",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-05T02:56:58Z",
      "updated_at": "2024-06-05T02:56:58Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/707/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/707",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/707",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:26.740048",
      "comments": []
    },
    {
      "issue_number": 700,
      "title": "Implement vanilla baseline",
      "body": "### Feature request\n\n> And I’m guessing you’ve tried the vanilla baseline:\r\n> Send in a series of screenshots to GPT-4 and then ask GPT-4 to describe what happened.\r\n> Then give it the sequence of actions (in concrete coordinates and keyboard inputs), as well as your proposed modification in natural language.\r\n> Ask it to output the new action sequence\r\n--@LunjunZhang\r\n\n\n### Motivation\n\n> I’m just making sure that before we delve into improving segmentation and constructing graphs (those tasks can be deep rabbit holes), we have a baseline set up\r\n--@LunjunZhang",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-03T22:58:45Z",
      "updated_at": "2024-06-05T02:25:27Z",
      "closed_at": "2024-06-05T02:25:27Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/700/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/700",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/700",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:26.740053",
      "comments": [
        {
          "author": "abrichr",
          "body": "We can also use Gemini.\r\n\r\nEdit: We have not attempted this since before large video context were available.\r\n",
          "created_at": "2024-06-03T23:00:29Z"
        },
        {
          "author": "abrichr",
          "body": "> I feel that it’d be good to:\r\n> 1. have one baseline that’s almost all just about prompting multi-modal API to do the task. This might get 0% success rate, but having this script will allow us to evaluate any new model that comes out. (The point is that, if AGI or GPT6 happens, this script should ",
          "created_at": "2024-06-03T23:01:12Z"
        }
      ]
    },
    {
      "issue_number": 705,
      "title": "Audio recording instrumentation with `get_events`",
      "body": "### Feature request\n\nhttps://github.com/OpenAdaptAI/OpenAdapt/pull/673#issuecomment-2148566873\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-05T01:26:07Z",
      "updated_at": "2024-06-05T01:26:11Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/705/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/705",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/705",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:26.960135",
      "comments": []
    },
    {
      "issue_number": 703,
      "title": "Review One-Shot Imitation Learning",
      "body": "### Feature request\r\n\r\nThis task involves reading this paper in more detail and identifying additional tricks we may be able to use.\r\n\r\nhttps://arxiv.org/abs/1703.07326\r\n\r\n> One-Shot Imitation Learning\r\n\r\n> ...Specifically, we consider the setting where there is a very large (maybe infinite)\r\nset of tasks, and each task has many instantiations. For example, a task could be\r\nto stack all blocks on a table into a single tower, another task could be to place\r\nall blocks on a table into two-block towers, etc. In each case, different instances\r\nof the task would consist of different sets of blocks with different initial states.\r\nAt training time, our algorithm is presented with pairs of demonstrations for a\r\nsubset of all tasks. A neural net is trained such that when it takes as input the first\r\ndemonstration demonstration and a state sampled from the second demonstration,\r\nit should predict the action corresponding to the sampled state. At test time, a full\r\ndemonstration of a single instance of a new task is presented, and the neural net\r\nis expected to perform well on new instances of this new task. Our experiments\r\nshow that the use of soft attention allows the model to generalize to conditions and\r\ntasks unseen in the training data. We anticipate that by training this model on a\r\nmuch greater variety of tasks and settings, we will obtain a general system that can\r\nturn any demonstrations into robust policies that can accomplish an overwhelming\r\nvariety of tasks.\r\n\r\n### Motivation\r\n\r\nAt a high level this is effectively what is implemented by the VisualReplayStrategy.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-04T03:48:29Z",
      "updated_at": "2024-06-04T03:49:59Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/703/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "abrichr"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/703",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/703",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:26.960158",
      "comments": []
    },
    {
      "issue_number": 699,
      "title": "Implement sam.cpp",
      "body": "### Feature request\n\nWe would like to implement https://github.com/YavorGIvanov/sam.cpp as a segmentation adapter.\n\n### Motivation\n\nImproved performance (throughput and accuracy).",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-03T19:15:21Z",
      "updated_at": "2024-06-03T19:15:22Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/699/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/699",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/699",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:26.960164",
      "comments": []
    },
    {
      "issue_number": 698,
      "title": "Explore prompt automation",
      "body": "### Feature request\r\n\r\nThis task involves exploring the concepts related to the exchange here: https://chatgpt.com/share/d9cc7ec6-0d34-4023-92c9-c577311012b0\r\n\r\n---\r\n\r\nAutomated Prompt Engineering: The use of algorithms or models to generate or optimize prompts for interacting with language or multimodal models automatically.\r\n\r\nMeta-Learning or Learning to Learn: While not exclusively about prompt generation, this term is relevant for systems that improve their ability to generate prompts over time, based on feedback or performance metrics.\r\n\r\nSelf-Improving Models: Models that refine their prompt generation capabilities autonomously, improving their interactions with other models or data sources.\r\n\r\nChain-of-Thought Prompting: A strategy where prompts are designed to elicit step-by-step reasoning from the model, which can be automated for generating complex task prompts.\r\n\r\nZero-Shot and Few-Shot Learning: Techniques that involve generating prompts that enable a model to perform tasks without or with minimal task-specific training data, emphasizing the model's ability to generalize from limited examples.\r\n\r\nTask Formulation as Prompt Generation: A perspective on transforming traditional machine learning tasks into prompt-based tasks that can be addressed by large models, focusing on the automated creation of such prompts.\r\n\r\nProgrammatic Prompt Generation: The use of software or scripts to dynamically create prompts based on specific criteria or data inputs, often used in conjunction with large models for scalable applications.\r\n\r\n---\r\n\r\nRelated:\r\n\r\n- https://paperswithcode.com/task/prompt-engineering\r\n\r\n### Motivation\r\n\r\nImplement \"prompt automation\" in the system diagram.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-03T18:10:27Z",
      "updated_at": "2024-06-03T18:12:23Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/698/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/698",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/698",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:26.960170",
      "comments": []
    },
    {
      "issue_number": 586,
      "title": "Extract Process API from Process Graph",
      "body": "### Feature request\r\n\r\nWe wish to implement a Process API by prompting an LLM with the Process Graph and/or Screenshots/Actions, e.g. with Chain-of-Code\r\n\r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/0aeb0a96-92dc-46eb-89d1-ade108db318d)\r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/a08d7a72-5cfc-4a8c-93de-38ff351f1e1f)\r\n\r\n### Motivation\r\n\r\nLLMs are great with APIs.\r\n\r\n### Related\r\n\r\nhttps://github.com/OpenAdaptAI/OpenAdapt/issues/545",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-03-08T00:37:29Z",
      "updated_at": "2024-06-03T16:49:37Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/586/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/586",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/586",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:26.960175",
      "comments": [
        {
          "author": "abrichr",
          "body": "https://chain-of-code.github.io/\r\n\r\nhttps://colab.research.google.com/github/google-research/google-research/blob/master/code_as_policies/coc_demo.ipynb",
          "created_at": "2024-06-03T16:49:35Z"
        }
      ]
    },
    {
      "issue_number": 697,
      "title": "Custom prompts",
      "body": "### Feature request\n\nWe would like to provide the user with the ability to customize prompts used in replay strategies.\r\n\r\nCurrently these prompts live in j2 files: https://github.com/OpenAdaptAI/OpenAdapt/tree/main/openadapt/prompts\r\n\r\nThese should be treated as defaults and displayed to the user in the dashboard. The user should have the ability to modify these prompts. This should also include versioning.\r\n\r\nWe need:\r\n\r\n- prompt table\r\n  - default prompt template path\r\n  - name (optional)\r\n  - versions (see https://sqlalchemy-continuum.readthedocs.io/en/latest/)\r\n\r\nWhen selecting a replay strategy for replay:\r\n- option to specify the relevant prompt\r\n\r\n\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-03T16:36:00Z",
      "updated_at": "2024-06-03T16:36:14Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/697/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/697",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/697",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:28.967111",
      "comments": []
    },
    {
      "issue_number": 693,
      "title": "[Bug]: `poetry run install-dashboard` gives error on Windows",
      "body": "### Describe the bug\n\nI expected `poetry run install-dashboard` to unr successfully, but it gave an error as seen below:\r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/65433817/c44d50bd-1cca-46a1-88cb-452a09b24b4a)\r\n\n\n### To Reproduce\n\nFollow setup steps till the command, `poetry run install-dashboard`.",
      "state": "closed",
      "author": "KrishPatel13",
      "author_type": "User",
      "created_at": "2024-06-02T20:45:59Z",
      "updated_at": "2024-06-03T10:36:17Z",
      "closed_at": "2024-06-02T21:29:17Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/693/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/693",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/693",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:28.967133",
      "comments": [
        {
          "author": "KrishPatel13",
          "body": "I did some research for the causer of this error:\r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/65433817/9466776a-e84b-4737-ab45-9c70de97ccb3)\r\n\r\nI found that my pc did not have `nvm` installed. FYI: `nvm` = node version manager.\r\n\r\nFurther, I found out that:\r\nThe install script for wind",
          "created_at": "2024-06-02T20:56:49Z"
        },
        {
          "author": "KrishPatel13",
          "body": "Looks like, the code in the install script was correct, just that we had to mention about installing `nvm` in the manual setup.\r\n\r\nAs I followed the manual setup instructions and this was mentioned any where.",
          "created_at": "2024-06-02T21:14:40Z"
        },
        {
          "author": "KrishPatel13",
          "body": "Resolved here: https://github.com/OpenAdaptAI/OpenAdapt/pull/694",
          "created_at": "2024-06-02T21:29:17Z"
        },
        {
          "author": "abrichr",
          "body": "Possibly related: https://github.com/OpenAdaptAI/OpenAdapt/issues/682",
          "created_at": "2024-06-03T10:36:16Z"
        }
      ]
    },
    {
      "issue_number": 695,
      "title": "Implement Sliding Window and Non Maximum Suppression",
      "body": "### Feature request\n\nA single run of any segmentation model will not pick up every segment. Sliding Window + Non-Maximum Suppression is a possible solution (used in https://github.com/google-research/scenic/tree/main/scenic/projects/owl_vit).\n\n### Motivation\n\nRelated:\r\n\r\n- https://github.com/OpenAdaptAI/OpenAdapt/pull/679\r\n- https://github.com/OpenAdaptAI/OpenAdapt/issues/692",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-03T09:43:57Z",
      "updated_at": "2024-06-03T09:43:57Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/695/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/695",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/695",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:29.153937",
      "comments": []
    },
    {
      "issue_number": 692,
      "title": "Implement OWL-ViT: Open-World Object Detection with Vision Transformers",
      "body": "### Feature request\n\nWe wish to implement https://github.com/google-research/scenic/tree/main/scenic/projects/owl_vit\n\n### Motivation\n\ngoogle's version of SAM",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-02T05:02:25Z",
      "updated_at": "2024-06-02T15:44:15Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/692/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/692",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/692",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:29.153960",
      "comments": [
        {
          "author": "abrichr",
          "body": "https://colab.research.google.com/drive/1NVcfvtESDfHC-nXi7L-gTAM-MCpixrvs#scrollTo=99ilV_T2RyNT (copy of https://colab.research.google.com/github/google-research/scenic/blob/main/scenic/projects/owl_vit/notebooks/OWL_ViT_minimal_example.ipynb#scrollTo=99ilV_T2RyNT):\r\n\r\n<img width=\"677\" alt=\"image\" s",
          "created_at": "2024-06-02T15:44:14Z"
        }
      ]
    },
    {
      "issue_number": 691,
      "title": "Many-Shot Prompting",
      "body": "### Feature request\r\n\r\nWe wish to implement Many-Shot Prompting to generate synthetic actions:\r\n\r\nhttps://arxiv.org/abs/2404.11018\r\n\r\n### Motivation\r\n\r\n> synthetic actions might work with many-shot prompting: https://arxiv.org/abs/2404.11018\r\n\r\n--@lunjunzhang",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-06-02T04:03:58Z",
      "updated_at": "2024-06-02T04:04:48Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/691/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/691",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/691",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:29.384551",
      "comments": []
    },
    {
      "issue_number": 689,
      "title": "Implement offline audio transcription with pywhispercpp",
      "body": "### Feature request\n\nReplace whisper with https://github.com/abdeladim-s/pywhispercpp\n\n### Motivation\n\nFully offline mode",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-05-29T22:22:47Z",
      "updated_at": "2024-05-29T22:22:47Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/689/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/689",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/689",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:29.384577",
      "comments": []
    },
    {
      "issue_number": 687,
      "title": "Refactor error reporting",
      "body": "### Feature request\n\nWe would like to move error reporting out of `config.py`, as per https://github.com/OpenAdaptAI/OpenAdapt/pull/685#discussion_r1613228148\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-05-27T16:58:36Z",
      "updated_at": "2024-05-27T16:58:37Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/687/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/687",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/687",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:29.384585",
      "comments": []
    },
    {
      "issue_number": 683,
      "title": "[Bug]: installer broken",
      "body": "### Describe the bug\n\nWhen running the installer:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"openadapt\\entrypoint.py\", line 11, in <module>\r\n    from openadapt.app import tray\r\n  File \"PyInstaller\\loader\\pyimod02_importers.py\", line 419, in exec_module\r\n  File \"openadapt\\app\\tray.py\", line 46, in <module>\r\n    from openadapt.strategies.base import BaseReplayStrategy\r\n  File \"PyInstaller\\loader\\pyimod02_importers.py\", line 419, in exec_module\r\n  File \"openadapt\\strategies\\__init__.py\", line 13, in <module>\r\n    from openadapt.strategies.visual import VisualReplayStrategy\r\n  File \"PyInstaller\\loader\\pyimod02_importers.py\", line 419, in exec_module\r\n  File \"openadapt\\strategies\\visual.py\", line 53, in <module>\r\n    from openadapt import adapters, common, models, strategies, utils, vision\r\n  File \"PyInstaller\\loader\\pyimod02_importers.py\", line 419, in exec_module\r\n  File \"openadapt\\adapters\\__init__.py\", line 7, in <module>\r\n    from . import anthropic, google, openai, replicate, som, ultralytics\r\n  File \"PyInstaller\\loader\\pyimod02_importers.py\", line 419, in exec_module\r\n  File \"openadapt\\adapters\\replicate.py\", line 9, in <module>\r\n    import replicate\r\n  File \"PyInstaller\\loader\\pyimod02_importers.py\", line 419, in exec_module\r\n  File \"replicate\\__init__.py\", line 1, in <module>\r\n  File \"PyInstaller\\loader\\pyimod02_importers.py\", line 419, in exec_module\r\n  File \"replicate\\client.py\", line 22, in <module>\r\n  File \"PyInstaller\\loader\\pyimod02_importers.py\", line 419, in exec_module\r\n  File \"replicate\\__about__.py\", line 3, in <module>\r\n  File \"importlib\\metadata\\__init__.py\", line 996, in version\r\n  File \"importlib\\metadata\\__init__.py\", line 969, in distribution\r\n  File \"importlib\\metadata\\__init__.py\", line 548, in from_name\r\nimportlib.metadata.PackageNotFoundError: No package metadata was found for replicate\r\n```\r\n\r\nReported by user technologicalpixel on Discord.\r\n\r\n@KIRA009 reports the same behavior on MacOS.\r\n\r\n\n\n### To Reproduce\n\nDownload and run the installer.",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-05-22T18:00:06Z",
      "updated_at": "2024-05-22T19:57:02Z",
      "closed_at": "2024-05-22T19:57:02Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/683/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/683",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/683",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:29.384594",
      "comments": []
    },
    {
      "issue_number": 677,
      "title": "[Bug]: Unknown encoding cl100k_base",
      "body": "### Describe the bug\n\nReported by trapperjon1980 on Discord:\r\n\r\n```\r\nLast login: Fri May 17 06:10:40 on ttys001\r\ncd /private/var/folders/5m/0w_pgsmn70s6n6pkfrfknw2m0000gn/T/AppTranslocation/8C8BCD24-4DBD-45BC-B333-1B938FC59DB9/d/OpenAdapt-2.app/Contents/MacOS && ./OpenAdapt.app; exit;\r\n(base) jonathankotthoff@Jonathans-Laptop ~ % cd /private/var/folders/5m/0w_pgsmn70s6n6pkfrfknw2m0000gn/T/AppTranslocation/8C8BCD24-4DBD-45BC-B333-1B938FC59DB9/d/OpenAdapt-2.app/Contents/MacOS && ./OpenAdapt.app; exit;\r\nTraceback (most recent call last):\r\n  File \"openadapt/entrypoint.py\", line 11, in <module>\r\n    from openadapt.app import tray\r\n  File \"<frozen importlib._bootstrap>\", line 1027, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 688, in _load_unlocked\r\n  File \"PyInstaller/loader/pyimod02_importers.py\", line 419, in exec_module\r\n  File \"openadapt/app/tray.py\", line 46, in <module>\r\n    from openadapt.strategies.base import BaseReplayStrategy\r\n  File \"<frozen importlib._bootstrap>\", line 1027, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 688, in _load_unlocked\r\n  File \"PyInstaller/loader/pyimod02_importers.py\", line 419, in exec_module\r\n  File \"openadapt/strategies/__init__.py\", line 12, in <module>\r\n    from openadapt.strategies.stateful import StatefulReplayStrategy\r\n  File \"<frozen importlib._bootstrap>\", line 1027, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 688, in _load_unlocked\r\n  File \"PyInstaller/loader/pyimod02_importers.py\", line 419, in exec_module\r\n  File \"openadapt/strategies/stateful.py\", line 15, in <module>\r\n    from openadapt.strategies.mixins.openai import OpenAIReplayStrategyMixin\r\n  File \"<frozen importlib._bootstrap>\", line 1027, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 688, in _load_unlocked\r\n  File \"PyInstaller/loader/pyimod02_importers.py\", line 419, in exec_module\r\n  File \"openadapt/strategies/mixins/openai.py\", line 33, in <module>\r\n    encoding = tiktoken.get_encoding(\"cl100k_base\")\r\n  File \"tiktoken/registry.py\", line 60, in get_encoding\r\nValueError: Unknown encoding cl100k_base\r\n[52523] Failed to execute script 'entrypoint' due to unhandled exception: Unknown encoding cl100k_base\r\n[52523] Traceback:\r\nTraceback (most recent call last):\r\n  File \"openadapt/entrypoint.py\", line 11, in <module>\r\n    from openadapt.app import tray\r\n  File \"<frozen importlib._bootstrap>\", line 1027, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 688, in _load_unlocked\r\n  File \"PyInstaller/loader/pyimod02_importers.py\", line 419, in exec_module\r\n  File \"openadapt/app/tray.py\", line 46, in <module>\r\n    from openadapt.strategies.base import BaseReplayStrategy\r\n  File \"<frozen importlib._bootstrap>\", line 1027, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 688, in _load_unlocked\r\n  File \"PyInstaller/loader/pyimod02_importers.py\", line 419, in exec_module\r\n  File \"openadapt/strategies/__init__.py\", line 12, in <module>\r\n    from openadapt.strategies.stateful import StatefulReplayStrategy\r\n  File \"<frozen importlib._bootstrap>\", line 1027, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 688, in _load_unlocked\r\n  File \"PyInstaller/loader/pyimod02_importers.py\", line 419, in exec_module\r\n  File \"openadapt/strategies/stateful.py\", line 15, in <module>\r\n    from openadapt.strategies.mixins.openai import OpenAIReplayStrategyMixin\r\n  File \"<frozen importlib._bootstrap>\", line 1027, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 688, in _load_unlocked\r\n  File \"PyInstaller/loader/pyimod02_importers.py\", line 419, in exec_module\r\n  File \"openadapt/strategies/mixins/openai.py\", line 33, in <module>\r\n    encoding = tiktoken.get_encoding(\"cl100k_base\")\r\n  File \"tiktoken/registry.py\", line 60, in get_encoding\r\nValueError: Unknown encoding cl100k_base\r\n\r\n\r\nSaving session...\r\n...copying shared history...\r\n...saving history...truncating history files...\r\n...completed.\r\n\r\n[Process completed]\r\n\r\n```\n\n### To Reproduce\n\nSee description",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-05-17T16:00:56Z",
      "updated_at": "2024-05-19T18:25:59Z",
      "closed_at": "2024-05-19T18:25:58Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/677/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/677",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/677",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:29.384602",
      "comments": [
        {
          "author": "abrichr",
          "body": "Relevant: https://github.com/openai/tiktoken/issues/80#issuecomment-1484965176",
          "created_at": "2024-05-19T18:13:57Z"
        }
      ]
    },
    {
      "issue_number": 649,
      "title": "Refactor config",
      "body": "### Feature request\n\n- remove default values from config.py\r\n- remove config.json to config.defaults.json\r\n- remove config.local.json to config.json\r\n- document difference between the three files inside of config.py\n\n### Motivation\n\n_No response_",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-05-02T16:15:04Z",
      "updated_at": "2024-05-15T20:15:50Z",
      "closed_at": "2024-05-15T20:15:50Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/649/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/649",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/649",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:34.583560",
      "comments": [
        {
          "author": "abrichr",
          "body": "Implemented in https://github.com/OpenAdaptAI/OpenAdapt/pull/618",
          "created_at": "2024-05-15T20:15:50Z"
        }
      ]
    },
    {
      "issue_number": 657,
      "title": "[Bug]: dashboard fails to load when socket in use",
      "body": "### Describe the bug\n\nWhen loading the dashboard, if the dashboard previously did not exit cleanly, the dashboard fails to load:\r\n```\r\n[1] ERROR:    [Errno 48] Address already in use\r\n[1] npm run fastapi-dev exited with code 1\r\n[0]  ⚠ Specified \"rewrites\" will not automatically work with \"output: export\". See more info here: https://nextjs.org/docs/messages/export-no-custom-routes\r\n[0]  ⚠ Specified \"rewrites\" will not automatically work with \"output: export\". See more info here: https://nextjs.org/docs/messages/export-no-custom-routes\r\n[0]    ▲ Next.js 14.1.4\r\n[0]    - Local:        http://localhost:5173\r\n[0] \r\n[0]  ⚠ Specified \"rewrites\" will not automatically work with \"output: export\". See more info here: https://nextjs.org/docs/messages/export-no-custom-routes\r\n[0]  ⚠ Specified \"rewrites\" will not automatically work with \"output: export\". See more info here: https://nextjs.org/docs/messages/export-no-custom-routes\r\n[0]  ✓ Ready in 1165ms\r\n[0]  ○ Compiling /recordings ...\r\n[0]  ✓ Compiled /recordings in 2.3s (2310 modules)\r\n[0] Failed to proxy http://127.0.0.1:8080/api/recordings/status Error: socket hang up\r\n[0]     at Socket.socketCloseListener (node:_http_client:473:25)\r\n[0]     at Socket.emit (node:events:531:35)\r\n[0]     at TCP.<anonymous> (node:net:337:12)\r\n[0]     at TCP.callbackTrampoline (node:internal/async_hooks:130:17) {\r\n[0]   code: 'ECONNRESET'\r\n[0] }\r\n[0] Error: socket hang up\r\n[0]     at Socket.socketCloseListener (node:_http_client:473:25)\r\n[0]     at Socket.emit (node:events:531:35)\r\n[0]     at TCP.<anonymous> (node:net:337:12)\r\n[0]     at TCP.callbackTrampoline (node:internal/async_hooks:130:17) {\r\n[0]   code: 'ECONNRESET'\r\n[0] }\r\n[0] Failed to proxy http://127.0.0.1:8080/api/recordings Error: socket hang up\r\n[0]     at Socket.socketCloseListener (node:_http_client:473:25)\r\n[0]     at Socket.emit (node:events:531:35)\r\n[0]     at TCP.<anonymous> (node:net:337:12)\r\n[0]     at TCP.callbackTrampoline (node:internal/async_hooks:130:17) {\r\n[0]   code: 'ECONNRESET'\r\n[0] }\r\n[0] Error: socket hang up\r\n[0]     at Socket.socketCloseListener (node:_http_client:473:25)\r\n[0]     at Socket.emit (node:events:531:35)\r\n[0]     at TCP.<anonymous> (node:net:337:12)\r\n[0]     at TCP.callbackTrampoline (node:internal/async_hooks:130:17) {\r\n[0]   code: 'ECONNRESET'\r\n[0] }\r\n[0]  ○ Compiling /_error ...\r\n[0]  ✓ Compiled /_error in 1847ms (2496 modules)\r\n```\n\n### To Reproduce\n\n```\r\npython -m openadapt.app.dashboard.run\r\n```\r\n```\r\npkill -f openadapt\r\n```\r\n```\r\npython -m openadapt.app.dashboard.run\r\n```\r\n",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-05-09T20:52:10Z",
      "updated_at": "2024-05-09T20:52:19Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/657/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/657",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/657",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:34.739212",
      "comments": []
    },
    {
      "issue_number": 656,
      "title": "[Bug]: Dashboard fails silently",
      "body": "### Describe the bug\n\nThe dashboard should display an error message to the user when an exception occurs:\r\n\r\n```\r\n[1]   File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/starlette/_exception_handler.py\", line 64, in wrapped_app                     16:45:54 [219/3601]\r\n[1]     raise exc                                                                                                                                                                                                      \r\n[1]   File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/starlette/_exception_handler.py\", line 53, in wrapped_app                                        \r\n[1]     await app(scope, receive, sender)                                                                                                                                                                              \r\n[1]   File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/starlette/routing.py\", line 756, in __call__                                                     \r\n[1]     await self.middleware_stack(scope, receive, send)                                                                                                                                                              \r\n[1]   File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/starlette/routing.py\", line 776, in app                                                          \r\n[1]     await route.handle(scope, receive, send)                                                                                                                                                                       \r\n[1]   File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/starlette/routing.py\", line 373, in handle                                                       \r\n[1]     await self.app(scope, receive, send)                                                                                                                                                                           \r\n[1]   File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/starlette/routing.py\", line 96, in app                                                           \r\n[1]     await wrap_app_handling_exceptions(app, session)(scope, receive, send)                                                                                                             \r\n[1]   File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/starlette/_exception_handler.py\", line 64, in wrapped_app             \r\n[1]     raise exc                                                                                                                                                                           \r\n[1]   File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/starlette/_exception_handler.py\", line 53, in wrapped_app             \r\n[1]     await app(scope, receive, sender)                                                                                                                                                   \r\n[1]   File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/starlette/routing.py\", line 94, in app                                \r\n[1]     await func(session)                                                                                                                                                                 \r\n[1]   File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/fastapi/routing.py\", line 348, in app                                 \r\n[1]     await dependant.call(**values)                                                                                                                                                      \r\n[1]   File \"/Users/abrichr/oa/OpenAdapt/openadapt/app/dashboard/api/recordings.py\", line 69, in get_recording_detail                                                                        \r\n[1]     action_events = get_events(recording, session=session)                                                                                                                              \r\n[1]   File \"/Users/abrichr/oa/OpenAdapt/openadapt/events.py\", line 71, in get_events                                                                                                        \r\n[1]     models.update_related_objects(                                                                                                                                                      \r\n[1]   File \"/Users/abrichr/oa/OpenAdapt/openadapt/models.py\", line 563, in update_related_objects                                                                                           \r\n[1]     new_related_object = old_to_new_mapping[related_object]                                                                                                                             \r\n[1] KeyError: ActionEvent(id=6755, name='press', timestamp=1715287494.5631533, recording_timestamp=1715287490.299658, screenshot_timestamp=1715287494.5254707, window_event_timestamp=1715287490.4215562, key_name='ctr\r\nl', canonical_key_name='ctrl', key=<Key.ctrl: <59>>, text='<ctrl>', canonical_key=<Key.ctrl: <59>>, canonical_text='<ctrl>')                                                                \r\n[1] ERROR:    closing handshake failed               \r\n[1] Traceback (most recent call last):               \r\n[1]   File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/websockets/legacy/server.py\", line 248, in handler                                               \r\n[1]     await self.close()                           \r\n[1]   File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/websockets/legacy/protocol.py\", line 766, in close                                               \r\n[1]     await self.write_close_frame(Close(code, reason))                                                  \r\n[1]   File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/websockets/legacy/protocol.py\", line 1232, in write_close_frame                                  \r\n[1]     await self.write_frame(True, OP_CLOSE, data, _state=State.CLOSING)                                 \r\n[1]   File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/websockets/legacy/protocol.py\", line 1205, in write_frame                                        \r\n[1]     await self.drain()                           \r\n[1]   File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/websockets/legacy/protocol.py\", line 1194, in drain                                              \r\n[1]     await self.ensure_open()                     \r\n[1]   File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/websockets/legacy/protocol.py\", line 935, in ensure_open                                         \r\n[1]     raise self.connection_closed_exc()           \r\n[1] websockets.exceptions.ConnectionClosedError: sent 1000 (OK); no close frame received                   \r\n[1] INFO:     connection closed  \r\n```\n\n### To Reproduce\n\nI just created a simple recording and tried to run the dashboard with `python -m openadapt.app.dashboard.run`. There appears to be a bug elsewhere that caused this particular exception. For development purposes we can just manually raise an exception in `get_events.`",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-05-09T20:50:50Z",
      "updated_at": "2024-05-09T20:51:03Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/656/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/656",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/656",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:34.739235",
      "comments": []
    },
    {
      "issue_number": 654,
      "title": "[Bug]: invalid action produced by VisualReplayStrategy",
      "body": "### Describe the bug\r\n\r\n```\r\n2024-05-06 14:45:05.598 | INFO     | openadapt.adapters.openai:prompt:177 - result=                                                                                   \r\n('```json\\n'                                                                                                                                                          \r\n '{\\n'                                                                                                                                                                \r\n '  \"actions\": [\\n'                                                                                                                                                   \r\n '    {\"name\": \"type\", \"text\": \"<cmd>-<space>\", \"canonical_text\": '                                                                                                   \r\n '\"<cmd>-<49>\"},\\n'                                                                                                                                                   \r\n '    {\"name\": \"type\", \"text\": \"c-a-l-c-u-l-a-t-o-r\", \"canonical_text\": '                                                                                             \r\n '\"c-a-l-c-u-l-a-t-o-r\"},\\n'                                                                                                                                          \r\n '    {\"name\": \"type\", \"text\": \"<enter>\", \"canonical_text\": \"<36>\"},\\n'                                                                                               \r\n '    {\"name\": \"singleclick\", \"active_segment_description\": \"(None)\", '                                                                                               \r\n '\"mouse_button_name\": \"left\"},\\n'                                                                                                                                    \r\n '    {\"name\": \"singleclick\", \"active_segment_description\": \"Calculator number '                                                                                      \r\n '2 button\", \"mouse_button_name\": \"left\"},\\n'                                                                                                                         \r\n '    {\"name\": \"singleclick\", \"active_segment_description\": \"Calculator '                                                                                             \r\n 'multiplication button\", \"mouse_button_name\": \"left\"},\\n'                                                                                                            \r\n '    {\"name\": \"singleclick\", \"active_segment_description\": \"Calculator number '                                                                                      \r\n '3 button\", \"mouse_button_name\": \"left\"},\\n'                                                                                                                         \r\n '    {\"name\": \"singleclick\", \"active_segment_description\": \"Calculator '                                                                                             \r\n 'addition button\", \"mouse_button_name\": \"left\"},\\n'                                                                                                                  \r\n '    {\"name\": \"singleclick\", \"active_segment_description\": \"Calculator number '                                                                                      \r\n '4 button\", \"mouse_button_name\": \"left\"},\\n'                                                                                                                         \r\n '    {\"name\": \"singleclick\", \"active_segment_description\": \"Calculator '                                                                                             \r\n 'subtraction button\", \"mouse_button_name\": \"left\"},\\n'                                                                                                               \r\n '    {\"name\": \"singleclick\", \"active_segment_description\": \"Calculator number '                                                                                      \r\n '5 button\", \"mouse_button_name\": \"left\"},\\n'                                                                                                                         \r\n '    {\"name\": \"singleclick\", \"active_segment_description\": \"Calculator equals '                                                                                      \r\n 'button\", \"mouse_button_name\": \"left\"},\\n'                                                                                                                           \r\n '    {\"name\": \"singleclick\", \"active_segment_description\": \"Calculator screen '                                                                                       'with minimization, maximization, and closing buttons\", \"mouse_button_name\": '                                                                                       \r\n '\"left\"},\\n'                                                                                                                                                         \r\n '    {\"name\": \"type\", \"text\": \"<cmd>-<tab>\", \"canonical_text\": \"<cmd>-<48>\"}\\n'                                                                                      \r\n '  ]\\n'                                                                                                                                                              \r\n '}\\n'                                                                                                                                                                \r\n '```')\r\n...\r\n2024-05-06 14:45:16.264 | INFO     | openadapt.strategies.visual:find_similar_image_segmentation:434 - similarity_index=0.980340101109988                             \r\n2024-05-06 14:45:16.265 | WARNING  | openadapt.strategies.visual:get_next_action_event:275 - exc=ValueError(\"'(None)' is not in list\")                                2024-05-06 14:45:16.282 | INFO     | openadapt.strategies.visual:find_similar_image_segmentation:434 - similarity_index=0.980340101109988                             \r\n2024-05-06 14:45:16.283 | WARNING  | openadapt.strategies.visual:get_next_action_event:275 - exc=ValueError(\"'(None)' is not in list\")                                \r\n2024-05-06 14:45:16.301 | INFO     | openadapt.strategies.visual:find_similar_image_segmentation:434 - similarity_index=0.980340101109988                             \r\n2024-05-06 14:45:16.302 | WARNING  | openadapt.strategies.visual:get_next_action_event:275 - exc=ValueError(\"'(None)' is not in list\")                                \r\n2024-05-06 14:45:16.317 | INFO     | openadapt.strategies.visual:find_similar_image_segmentation:434 - similarity_index=0.980340101109988                             \r\n2024-05-06 14:45:16.317 | WARNING  | openadapt.strategies.visual:get_next_action_event:275 - exc=ValueError(\"'(None)' is not in list\") \r\n...\r\n```\r\n\r\n### To Reproduce\r\n\r\n```python -m openadapt.record \"using the calculator\"```\r\ncmd+space -> calculator -> enter -> 5 x 6 = -> cmd+w -> ctrl+c\r\n```python -m openadapt.replay VisualReplayStrategy --instructions \"\"calculate 2*3+4-5\"```",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-05-06T21:18:27Z",
      "updated_at": "2024-05-06T21:19:00Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/654/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/654",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/654",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:34.739242",
      "comments": []
    },
    {
      "issue_number": 651,
      "title": "[Bug]: database is locked when running dashboard",
      "body": "### Describe the bug\r\n\r\nWhen the dashboard is running, `openadapt.record` fails:\r\n\r\n```\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 1900, in _execute_context\r\n    self.dialect.do_execute(\r\n    |    |       -> <function DefaultDialect.do_execute at 0x1370d63b0>\r\n    |    -> <sqlalchemy.dialects.sqlite.pysqlite.SQLiteDialect_pysqlite object at 0x1373b4130>\r\n    -> <sqlalchemy.engine.base.Connection object at 0x1565ba0b0>\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/default.py\", line 736, in do_execute\r\n    cursor.execute(statement, parameters)\r\n    |      |       |          -> (1714746651.050399, 1512, 982, 0.5, 5.0, 'darwin', 'foo', None)\r\n    |      |       -> 'INSERT INTO recording (timestamp, monitor_width, monitor_height, double_click_interval_seconds, double_click_distance_pixels...\r\n    |      -> <method 'execute' of 'sqlite3.Cursor' objects>\r\n    -> <sqlite3.Cursor object at 0x1565879c0>\r\n\r\nsqlalchemy.exc.OperationalError: (sqlite3.OperationalError) database is locked\r\n[SQL: INSERT INTO recording (timestamp, monitor_width, monitor_height, double_click_interval_seconds, double_click_distance_pixels, platform, task_description, video_start_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?)]\r\n[parameters: (1714746651.050399, 1512, 982, 0.5, 5.0, 'darwin', 'foo', None)]\r\n(Background on this error at: https://sqlalche.me/e/14/e3q8)\r\n``` \r\n\r\nWe would like to be able to create recordings using the tray icon or the command line while the dashboard is running.\r\n\r\n### To Reproduce\r\n\r\n`python -m openadapt.app.dashboard.run`\r\n\r\nIn a separate shell:\r\n`python -m openadapt.record foo`",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-05-03T14:33:00Z",
      "updated_at": "2024-05-03T14:34:06Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/651/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/651",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/651",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:34.739250",
      "comments": []
    },
    {
      "issue_number": 645,
      "title": "Automatically lint dashboard",
      "body": "### Feature request\n\nhttps://github.com/OpenAdaptAI/OpenAdapt/pull/618/files#r1576993555\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-05-01T14:28:04Z",
      "updated_at": "2024-05-01T14:28:24Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/645/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/645",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/645",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:34.739258",
      "comments": []
    },
    {
      "issue_number": 644,
      "title": "Refactor RecordProc and related",
      "body": "### Feature request\n\nSee https://github.com/OpenAdaptAI/OpenAdapt/pull/618/files#r1576846013\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-05-01T14:26:48Z",
      "updated_at": "2024-05-01T14:26:55Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/644/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/644",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/644",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:34.739264",
      "comments": []
    },
    {
      "issue_number": 643,
      "title": "[Bug]: `poetry run install-dashboard` generates warning",
      "body": "### Describe the bug\n\n```\r\n(openadapt-py3.10) abrichr@MacBook-Pro-4 OpenAdapt % poetry run install-dashboard\r\nWarning: 'install-dashboard' is an entry point defined in pyproject.toml, but it's not installed as a script. You may get improper `sys.argv[0]`.\r\n\r\nThe support to run uninstalled scripts will be removed in a future release.\r\n\r\nRun `poetry install` to resolve and get rid of this message.\r\n```\n\n### To Reproduce\n\n`poetry run install-dashboard`",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-04-29T15:02:27Z",
      "updated_at": "2024-04-29T15:02:35Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/643/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/643",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/643",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:34.739271",
      "comments": []
    },
    {
      "issue_number": 509,
      "title": "Explore DSPy",
      "body": "### Feature request\n\nHow can we take advantage of https://github.com/stanfordnlp/dspy ?\n\n### Motivation\n\n> DSPy provides composable and declarative modules for instructing LMs in a familiar Pythonic syntax. It upgrades \"prompting techniques\" like chain-of-thought and self-reflection from hand-adapted string manipulation tricks into truly modular generalized operations that learn to adapt to your task.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-11-01T06:50:08Z",
      "updated_at": "2024-04-29T00:29:18Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "good first issue",
        "help wanted"
      ],
      "label_count": 3,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/509/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/509",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/509",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:34.739301",
      "comments": []
    },
    {
      "issue_number": 640,
      "title": "Trigger replay programmatically",
      "body": "### Feature request\n\nWe would like to offer an API to allow developers to trigger replay programmatically.\n\n### Motivation\n\nFlexibility",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-04-27T04:20:02Z",
      "updated_at": "2024-04-27T04:20:02Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/640/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/640",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/640",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:34.739309",
      "comments": []
    },
    {
      "issue_number": 638,
      "title": "[Bug]: fix notification icons",
      "body": "### Describe the bug\n\nNotification icons currently default to python logo. We would like to display the openadapt logo.\n\n### To Reproduce\n\n1. `python -m openadapt.record foo`\r\n2. Observe notification icon:\r\n<img width=\"342\" alt=\"image\" src=\"https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/f119576f-eed3-4d6f-bb96-acbfb868c6ad\">\r\n",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-04-26T14:07:50Z",
      "updated_at": "2024-04-26T14:08:11Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/638/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KIRA009"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/638",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/638",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:34.739316",
      "comments": []
    },
    {
      "issue_number": 630,
      "title": "please add python3.12 support",
      "body": "### Feature request\n\nplease add python3.12 support\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "hemangjoshi37a",
      "author_type": "User",
      "created_at": "2024-04-19T09:18:41Z",
      "updated_at": "2024-04-25T14:15:49Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/630/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/630",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/630",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:34.739322",
      "comments": [
        {
          "author": "abrichr",
          "body": "@hemangjoshi37a thank you for your interest! Can you please clarify the motivation behind this issue? e.g. is there something in particular that Python 3.12 supports that Python 3.10 does not that would be useful to have? Have you tried and failed to run OpenAdapt using Python 3.10?",
          "created_at": "2024-04-23T22:03:21Z"
        },
        {
          "author": "hemangjoshi37a",
          "body": "python 3.12 is just 2x faster than 3.10 .  as simple as that ",
          "created_at": "2024-04-25T14:15:47Z"
        }
      ]
    },
    {
      "issue_number": 636,
      "title": "Implement prettier for dashboard",
      "body": "### Feature request\n\nWe would like to automatically format typescript code.\n\n### Motivation\n\nLegibility, consistency.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-04-23T20:07:19Z",
      "updated_at": "2024-04-23T20:07:20Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/636/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/636",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/636",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:34.953473",
      "comments": []
    },
    {
      "issue_number": 632,
      "title": "[Bug]: from matplotlib._path import ( ImportError: DLL load failed while importing _path: The specified module could not be found.",
      "body": "### Describe the bug\n\nFix:\r\n\r\n`pip install msvc-runtime`\n\n### To Reproduce\n\nFollow manual installation instructions on Windows",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-04-20T16:58:29Z",
      "updated_at": "2024-04-20T16:58:29Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/632/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/632",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/632",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:34.953496",
      "comments": []
    },
    {
      "issue_number": 629,
      "title": "please make docker type installation for ease.",
      "body": "### Feature request\n\nplease make docker type installation for ease.\n\n### Motivation\n\nplease make docker type installation for ease.",
      "state": "closed",
      "author": "hemangjoshi37a",
      "author_type": "User",
      "created_at": "2024-04-19T09:15:17Z",
      "updated_at": "2024-04-19T17:34:27Z",
      "closed_at": "2024-04-19T13:33:45Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/629/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/629",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/629",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:34.953504",
      "comments": [
        {
          "author": "abrichr",
          "body": "Hi @hemangjoshi37a , thanks for submitting this issue!\r\n\r\nUnfortunately because Docker images run inside the Docker virtual machine, and OpenAdapt needs to access the host machine's mouse, keyboard, and monitor, it isn't possible for OpenAdapt to run inside of Docker.\r\n\r\nHowever, we are working on s",
          "created_at": "2024-04-19T13:33:45Z"
        },
        {
          "author": "hemangjoshi37a",
          "body": "Is it possible to have admin access and keyboard and mouse access to docker running container?",
          "created_at": "2024-04-19T17:34:26Z"
        }
      ]
    },
    {
      "issue_number": 624,
      "title": "Implement Autodistill",
      "body": "### Feature request\r\n\r\nWe would like to use https://github.com/autodistill/autodistill to train a more efficient object detector for each recording.\r\n\r\n### Motivation\r\n\r\nReduce segmentation latency",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-04-18T00:14:50Z",
      "updated_at": "2024-04-18T00:15:06Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/624/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/624",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/624",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:35.177227",
      "comments": []
    },
    {
      "issue_number": 622,
      "title": "Implement NanoLLM completion adapter",
      "body": "### Feature request\r\n\r\nWe would like to implement a local multimodal completion adapter via https://github.com/dusty-nv/NanoLLM\r\n\r\n### Motivation\r\n\r\nReduce latency, support offline mode",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-04-17T16:31:35Z",
      "updated_at": "2024-04-17T16:34:32Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/622/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/622",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/622",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:35.177248",
      "comments": []
    },
    {
      "issue_number": 623,
      "title": "Implement NanoLLaVA completion adapter",
      "body": "### Feature request\n\nWe would like to implement a local multimodal completion adapter via https://huggingface.co/qnguyen3/nanoLLaVA\r\n\r\nRelated:\r\n- https://github.com/OpenAdaptAI/OpenAdapt/issues/622\r\n- https://github.com/dusty-nv/NanoLLM/issues/2\r\n\n\n### Motivation\n\nReduce latency, support offline mode",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-04-17T16:34:15Z",
      "updated_at": "2024-04-17T16:34:15Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/623/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/623",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/623",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:35.177254",
      "comments": []
    },
    {
      "issue_number": 621,
      "title": "Implement Reka Core adapter",
      "body": "### Feature request\n\nhttps://www.reka.ai/news/reka-core-our-frontier-class-multimodal-language-model\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-04-16T20:02:51Z",
      "updated_at": "2024-04-16T20:02:51Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/621/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/621",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/621",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:35.177260",
      "comments": []
    },
    {
      "issue_number": 620,
      "title": "Anthropic image descriptions out of order",
      "body": "### Feature request\n\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/b310ed48-dfa0-4e38-8134-95f82b06bf96)\r\n\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-04-16T18:43:57Z",
      "updated_at": "2024-04-16T18:43:57Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/620/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/620",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/620",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:35.177266",
      "comments": []
    },
    {
      "issue_number": 551,
      "title": "Implement Gemini Vision",
      "body": "### Feature request\r\n\r\nWe would like to implement Gemini 1.5 and/or Gemini Vision in `openadapt.adapters.gemini`.\r\n\r\nRelated: https://github.com/OpenAdaptAI/OpenAdapt/issues/565\r\n\r\nGemini 1.5: https://blog.google/technology/ai/google-gemini-next-generation-model-february-2024/#sundar-note\r\n\r\nGemini Vision: ![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/84007dce-d6b5-4fd2-9c26-4803ac0b8801)\r\n\r\n### Motivation\r\n\r\nhttps://blog.google/technology/ai/google-gemini-next-generation-model-february-2024/#sundar-note\r\n\r\n> 1 million tokens\r\n\r\nhttps://www.linkedin.com/feed/update/urn:li:activity:7140972956314247168/\r\n\r\n> Gemini Pro Vision (multimodal) works good and is available to everyone! I did a quick test and the results I got were similar to GPT4-Vision. \r\n> Descriptions are accurate. Colors, and directions of objects are correct! Something Llava did not get right, unfortunately ...\r\n>⚡The good thing is you can use Gemini Pro already today, at 1 𝐫𝐞𝐪𝐮𝐞𝐬𝐭 𝐩𝐞𝐫 𝐬𝐞𝐜𝐨𝐧𝐝 compared to 100 requests per day for GPT-4 vision.\r\n> Google has enough GPUs to serve the world apparently 😏",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-12-18T22:02:26Z",
      "updated_at": "2024-04-16T17:41:30Z",
      "closed_at": "2024-04-16T17:41:29Z",
      "labels": [
        "enhancement",
        "good first issue",
        "help wanted"
      ],
      "label_count": 3,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/551/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/551",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/551",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:35.177273",
      "comments": [
        {
          "author": "abrichr",
          "body": "Implemented in https://github.com/OpenAdaptAI/OpenAdapt/pull/610",
          "created_at": "2024-04-16T17:41:29Z"
        }
      ]
    },
    {
      "issue_number": 615,
      "title": "Implement Instructor for structured LLM outputs",
      "body": "### Feature request\n\nhttps://github.com/jxnl/instructor\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-04-10T03:27:02Z",
      "updated_at": "2024-04-10T03:27:02Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/615/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/615",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/615",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:35.387524",
      "comments": []
    },
    {
      "issue_number": 561,
      "title": "Self-host GlitchTip",
      "body": "We are reaching our monthly event quota on GlitchTip, and it would be beneficial for us to host it ourselves.\r\n\r\n<img width=\"306\" alt=\"image\" src=\"https://github.com/OpenAdaptAI/OpenAdapt/assets/57018940/37b0ddd5-e00d-427f-9c50-73b857daf008\">\r\n",
      "state": "open",
      "author": "0dm",
      "author_type": "User",
      "created_at": "2024-02-06T17:00:27Z",
      "updated_at": "2024-03-25T15:07:24Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "good first issue",
        "help wanted"
      ],
      "label_count": 3,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/561/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/561",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/561",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:35.387546",
      "comments": [
        {
          "author": "eLRuLL",
          "body": "I would like to contribute working on this issue 👍 \r\n\r\nBasically GlitchTip offers multiple ways to host it yourself as specified here: https://glitchtip.com/documentation/install so it depends on the infrastructure that you guys have at the moment (do you guys have your own servers? are you using ku",
          "created_at": "2024-03-16T15:39:27Z"
        },
        {
          "author": "abrichr",
          "body": "@eLRuLL thank you!\r\n\r\nCurrently everything is locally hosted (except https://github.com/microsoft/SoM which will be deployed via `deploy.py` to EC2 (and eventually to ECS) as per https://github.com/OpenAdaptAI/OpenAdapt/issues/543.\r\n\r\nPerhaps this should probably be deployed via a similar mechanism.",
          "created_at": "2024-03-18T22:53:33Z"
        },
        {
          "author": "eLRuLL",
          "body": "I checked about SoM and the discussion in #543 and I don't think we need so much control for this service (and even for SoM).\r\n\r\nTo make GlitchTip work with the application, we only have to setup the `ERROR_REPORTING_DSN` env variable at the start of the commands, and the application is also already",
          "created_at": "2024-03-19T12:55:55Z"
        },
        {
          "author": "abrichr",
          "body": "Thanks @eLRuLL !\r\n\r\n> the main developers should be the only ones using this GlitchTip instance\r\n\r\nCan you please clarify? Our goal here is to prioritize bugs, which we can do most effectively if we are collecting errors from as many users as possible.\r\n\r\nI believe you are correct that most users wo",
          "created_at": "2024-03-22T19:28:02Z"
        },
        {
          "author": "eLRuLL",
          "body": "I totally agree, so here are my recommendations taking several things into account:\r\n\r\nFor transparency, privacy, and data protection regulations we should always inform users if we are somehow tracking actions on their commands. This is a pretty common pattern when dealing with command-line applica",
          "created_at": "2024-03-25T15:07:22Z"
        }
      ]
    },
    {
      "issue_number": 570,
      "title": "Consolidate video.py and capture.py for local hardware acceleration",
      "body": "### Feature request\r\n\r\n`capture/_macos.py` uses `AVFoundation`, `capture/_windows.py ` uses `screen_recorder_sdk` which uses `MediaFoundationAPI`. These are likely to be more performant than `mss` used in `record.py` and `video.py`, but currently `capture` does not support extracting time aligned screenshots (while `video` does):\r\n\r\n```\r\n(openadapt-py3.10) abrichr@MacBook-Pro-4 OpenAdapt % ffprobe captures/2024-02-19-10-43-33.mov  \r\nffprobe version 6.1.1 Copyright (c) 2007-2023 the FFmpeg developers\r\n  built with Apple clang version 15.0.0 (clang-1500.1.0.2.5)\r\n  configuration: --prefix=/usr/local/Cellar/ffmpeg/6.1.1_3 --enable-shared --enable-pthreads --enable-version3 --cc=clang --host-cflags= --host-ldflags='-Wl,-ld_classic' --enable-ffplay --enable-gnutls --enable-gpl --enable-libaom --enable-libaribb24 --enable-libbluray --enable-libdav1d --enable-libharfbuzz --enable-libjxl --enable-libmp3lame --enable-libopus --enable-librav1e --enable-librist --enable-librubberband --enable-libsnappy --enable-libsrt --enable-libssh --enable-libsvtav1 --enable-libtesseract --enable-libtheora --enable-libvidstab --enable-libvmaf --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx264 --enable-libx265 --enable-libxml2 --enable-libxvid --enable-lzma --enable-libfontconfig --enable-libfreetype --enable-frei0r --enable-libass --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libopenjpeg --enable-libopenvino --enable-libspeex --enable-libsoxr --enable-libzmq --enable-libzimg --disable-libjack --disable-indev=jack --enable-videotoolbox --enable-audiotoolbox\r\n  libavutil      58. 29.100 / 58. 29.100\r\n  libavcodec     60. 31.102 / 60. 31.102\r\n  libavformat    60. 16.100 / 60. 16.100\r\n  libavdevice    60.  3.100 / 60.  3.100\r\n  libavfilter     9. 12.100 /  9. 12.100\r\n  libswscale      7.  5.100 /  7.  5.100\r\n  libswresample   4. 12.100 /  4. 12.100\r\n  libpostproc    57.  3.100 / 57.  3.100\r\n[mov,mp4,m4a,3gp,3g2,mj2 @ 0x7fd88a704b40] moov atom not found\r\ncaptures/2024-02-19-10-43-33.mov: Invalid data found when processing input\r\n```\r\n\r\nThis issue will be complete once we have modified these files to support saving video files recorded via `openadapt.capture` from which time-aligned screenshots can be extracted. i.e. we need to modify `openadapt.capture._macos.Capture` and `openadapt.capture._windows.Capture` to supply screenshots in memory instead of file, e.g. `self.session.addOutput_(self.file_output)`.\r\n\r\n\r\n### Motivation\r\n\r\nLocal hardware acceleration -> maximum performance",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-02-29T01:18:05Z",
      "updated_at": "2024-03-23T20:22:12Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/570/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "0dm"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/570",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/570",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:35.567787",
      "comments": [
        {
          "author": "abrichr",
          "body": "Via ChatGPT:\r\n\r\nTo replace `self.session.addOutput_(self.file_output)` with a mechanism that calls a callback with a screenshot in your macOS capture implementation, you would typically use `AVCaptureVideoDataOutput` instead of `AVCaptureMovieFileOutput`. `AVCaptureVideoDataOutput` allows you to rec",
          "created_at": "2024-02-29T01:20:06Z"
        },
        {
          "author": "abrichr",
          "body": "@0dm thoughts? 🙏 😄 ",
          "created_at": "2024-02-29T03:16:15Z"
        },
        {
          "author": "0dm",
          "body": "> @0dm thoughts? 🙏 😄 \n\nThis could work. I will look into implementing this sometime this week.",
          "created_at": "2024-02-29T03:17:32Z"
        },
        {
          "author": "abrichr",
          "body": "Regarding this:\r\n\r\n> Performance Considerations: Processing video frames in real-time can be CPU-intensive. Ensure your callback and conversion logic is optimized for performance. Depending on your requirements, you might want to drop frames or reduce the resolution to maintain performance.\r\n\r\nSee `",
          "created_at": "2024-02-29T05:57:06Z"
        },
        {
          "author": "abrichr",
          "body": "@Cody-DV for a Windows approach see:\r\n\r\nhttps://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/capture/_windows.py \r\n\r\nhttps://github.com/Andrey1994/screen_recorder_sdk/blob/31417c8af136a7b8b44702e69fa0bb6ebb5c2b13/python/screen_recorder_sdk/screen_recorder.py\r\n\r\nhttps://chat.openai.com/share/",
          "created_at": "2024-03-23T20:22:12Z"
        }
      ]
    },
    {
      "issue_number": 611,
      "title": "Implement `openadapt.adapters.groq`",
      "body": "### Feature request\r\n\r\nWe wish to implement https://wow.groq.com/\r\n\r\nSee:\r\n- [`openadapt.adapters.openai`](https://github.com/OpenAdaptAI/OpenAdapt/pull/610/files#diff-8a5ff1c90e18e493d2077b9298882ab872052c285ba5b58bc1f40ea7983740af)\r\n- [`openadapt.adapters.anthropic`](https://github.com/OpenAdaptAI/OpenAdapt/pull/610/files#diff-9c007eedecc63488849c0f14040031db3e938e7b03a34c3b0adf0291163211e5)\r\n\r\n### Motivation\r\n\r\nFast inference (thanks @FFFiend!)",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-03-16T01:06:04Z",
      "updated_at": "2024-03-16T01:08:02Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/611/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/611",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/611",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:35.769066",
      "comments": []
    },
    {
      "issue_number": 608,
      "title": "Implement VISPROG",
      "body": "### Feature request\n\nhttps://arxiv.org/abs/2211.11559\r\n\r\n> We present VISPROG, a neuro-symbolic approach to solving complex and compositional visual tasks given natural language instructions. VISPROG avoids the need for any task-specific training. Instead, it uses the in-context learning ability of large language models to generate python-like modular programs, which are then executed to get both the solution and a comprehensive and interpretable rationale. Each line of the generated program may invoke one of several off-the-shelf computer vision models, image processing routines, or python functions to produce intermediate outputs that may be consumed by subsequent parts of the program. We demonstrate the flexibility of VISPROG on 4 diverse tasks - compositional visual question answering, zero-shot reasoning on image pairs, factual knowledge object tagging, and language-guided image editing. We believe neuro-symbolic approaches like VISPROG are an exciting avenue to easily and effectively expand the scope of AI systems to serve the long tail of complex tasks that people may wish to perform.\n\n### Motivation\n\nVisual understanding",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-03-11T13:11:27Z",
      "updated_at": "2024-03-11T13:11:27Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/608/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/608",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/608",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:35.769088",
      "comments": []
    },
    {
      "issue_number": 606,
      "title": "Deploy PromptFlow to AWS",
      "body": "### Feature request\n\nWe wish to automate the deployment of https://microsoft.github.io/promptflow/how-to-guides/tune-prompts-with-variants.html to AWS.\r\n\r\ne.g. under `openadapt/server/promptflow.py` (based on https://github.com/OpenAdaptAI/SoM/blob/main/deploy.py):\r\n```\r\nimport os\r\nimport subprocess\r\nimport boto3\r\nfrom loguru import logger\r\nfrom pydantic_settings import BaseSettings\r\nimport fire\r\n\r\nclass Config(BaseSettings):\r\n    AWS_ACCESS_KEY_ID: str\r\n    AWS_SECRET_ACCESS_KEY: str\r\n    AWS_REGION: str\r\n    DOCKER_IMAGE_NAME: str = \"web-classification-serve\"  # Example Docker image name\r\n    PROJECT_NAME: str\r\n    OPENAI_API_KEY: str | None = None\r\n    FLOW_SOURCE_DIR: str  # Path to your flow folder\r\n    FLOW_OUTPUT_DIR: str = \"./dist\"  # Output directory for Docker format\r\n\r\n    class Config:\r\n        env_file = \".env\"\r\n        env_file_encoding = 'utf-8'\r\n\r\nconfig = Config()\r\n\r\ndef build_flow_docker_format():\r\n    \"\"\"\r\n    Builds the flow as a Docker format using the PromptFlow CLI.\r\n    \"\"\"\r\n    try:\r\n        cmd = f\"pf flow build --source {config.FLOW_SOURCE_DIR} --output {config.FLOW_OUTPUT_DIR} --format docker\"\r\n        subprocess.run(cmd, check=True, shell=True)\r\n        logger.info(\"Flow built as Docker format successfully.\")\r\n    except subprocess.CalledProcessError as e:\r\n        logger.error(f\"Failed to build flow as Docker format: {e}\")\r\n\r\ndef build_docker_image():\r\n    \"\"\"\r\n    Builds the Docker image from the Dockerfile generated by the flow build process.\r\n    \"\"\"\r\n    try:\r\n        cmd = f\"docker build {config.FLOW_OUTPUT_DIR} -t {config.DOCKER_IMAGE_NAME}\"\r\n        subprocess.run(cmd, check=True, shell=True)\r\n        logger.info(\"Docker image built successfully.\")\r\n    except subprocess.CalledProcessError as e:\r\n        logger.error(f\"Failed to build Docker image: {e}\")\r\n\r\ndef deploy_docker_container():\r\n    \"\"\"\r\n    Deploys the Docker container to an AWS EC2 instance.\r\n    This method assumes an EC2 instance is already set up and configured to run Docker containers.\r\n    \"\"\"\r\n    # This example skips EC2 setup details. Refer to the previous script for EC2 management logic.\r\n    instance_ip = \"YOUR_EC2_INSTANCE_IP\"  # Placeholder for the instance IP\r\n    docker_run_cmd = (\r\n        f\"docker run -d -p 80:8080 \"\r\n        f\"-e OPEN_AI_CONNECTION_API_KEY='{config.OPENAI_API_KEY}' \"\r\n        f\"{config.DOCKER_IMAGE_NAME}\"\r\n    )\r\n\r\n    # SSH into the EC2 instance and run the docker container\r\n    # Skipping SSH setup and command execution. Use Paramiko or similar library as in the previous script.\r\n    logger.info(\"Docker container deployed successfully.\")\r\n\r\nclass Deploy:\r\n\r\n    @staticmethod\r\n    def start() -> None:\r\n        \"\"\"\r\n        Main method to orchestrate the build and deployment process.\r\n        \"\"\"\r\n        build_flow_docker_format()\r\n        build_docker_image()\r\n        deploy_docker_container()\r\n        logger.info(\"Flow deployment process completed.\")\r\n\r\nif __name__ == \"__main__\":\r\n    fire.Fire(Deploy)\r\n ```\n\n### Motivation\n\nTo support fine tuning:\r\n\r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/bfce2e37-9012-4701-aa8e-ea67dd63a463)\r\n",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-03-10T15:08:13Z",
      "updated_at": "2024-03-10T15:41:32Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "good first issue",
        "help wanted"
      ],
      "label_count": 3,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/606/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/606",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/606",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:35.769096",
      "comments": [
        {
          "author": "abrichr",
          "body": "Related, from https://repost.aws/questions/QUgLjWFHjxTIeHMFZMg-aLGg/managing-llm-prompt-flows:\r\n\r\n> I thought the combination of AWS StepFunctions and Amazon Bedrock might be similar to Promptflow.\r\nhttps://aws.amazon.com/jp/blogs/aws/build-generative-ai-apps-using-aws-step-functions-and-amazon-bedr",
          "created_at": "2024-03-10T15:09:32Z"
        },
        {
          "author": "abrichr",
          "body": "Related, from https://www.promptingguide.ai/techniques/ape:\r\n\r\n- Prompt-OIRL: https://arxiv.org/abs/2309.06553\r\n- OPRO: https://arxiv.org/abs/2309.03409 / https://github.com/google-deepmind/opro\r\n- AutoPrompt: https://arxiv.org/abs/2010.15980\r\n- Prefix Tuning: https://arxiv.org/abs/2101.00190\r\n- Pro",
          "created_at": "2024-03-10T15:36:52Z"
        },
        {
          "author": "abrichr",
          "body": "Related, from https://www.promptingguide.ai/techniques/tot:\r\n\r\nTree of thought: https://github.com/princeton-nlp/tree-of-thought-llm / https://github.com/jieyilong/tree-of-thought-puzzle-solver",
          "created_at": "2024-03-10T15:37:49Z"
        },
        {
          "author": "abrichr",
          "body": "From https://www.promptingguide.ai/techniques/activeprompt:\r\n\r\nActive Prompt: https://arxiv.org/abs/2302.12246 / https://github.com/shizhediao/active-prompt",
          "created_at": "2024-03-10T15:41:31Z"
        }
      ]
    },
    {
      "issue_number": 596,
      "title": "Implement `openadapt.api.to_powerautomate(recording)`",
      "body": "### Feature request\r\n\r\nWe wish to export a `recording: openadapt.models.Recording`' to PowerAutomate code.\r\n\r\nThis will likely use the Process Graph in https://github.com/OpenAdaptAI/OpenAdapt/pull/560 as input.\r\n\r\n### Motivation\r\n\r\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-03-08T16:23:48Z",
      "updated_at": "2024-03-08T16:24:36Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "good first issue",
        "help wanted"
      ],
      "label_count": 3,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/596/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/596",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/596",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:35.960689",
      "comments": []
    },
    {
      "issue_number": 580,
      "title": "Feature request: Application whitelisting",
      "body": "### Feature request\r\n\r\nPlease capture whitelisted business apps and websites only. Watch out for common ‘edge cases’ including:\r\n- Window focus changes\r\n- Task bar overlays (window preview of your bank website is a concern)\r\n- Moving/resizing windows\r\n\r\n\r\n### Motivation\r\nThe risk of accidentally capturing someone’s bank information means wholesale screen capture is a non-starter for many business applications. This also helps to alleviate users' fears that 'big brother' is watching them. If you monitor their SAP usage that's less of a concern than their Facebook.",
      "state": "open",
      "author": "gawnecoding",
      "author_type": "User",
      "created_at": "2024-03-02T19:53:17Z",
      "updated_at": "2024-03-03T05:22:04Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/580/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/580",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/580",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:37.846667",
      "comments": []
    },
    {
      "issue_number": 583,
      "title": "Windows environment testing",
      "body": "### Feature request\n\nTest OpenAdapt client on a few Windows environments with configurations as similar as possible to a typical office worker's machine:\r\n\r\n- Windows 10 or 11\r\n- 6+ CPU cores likely, 4 cores possible\r\n- 8Gb+ RAM likely, 4Gb possible\r\n- 256GB+ SSD likely, 500GB+ HDD possible\r\n- 2-3 monitors\r\n- Integrated graphics likely\r\n- 50Mb/s download and 10Mb/s upload internet likely\r\n- Machines are 3-5 years old, rarely 10 years old\r\n- Antivirus software likely (eg. Bitdefender)\r\n- Overloaded with applications running in parallel/background is possible\r\n\n\n### Motivation\n\nOpenAdapt is targeting business users, so we should test on the most common configuration for a 5 year old machine (the depreciation length for computers). ",
      "state": "open",
      "author": "gawnecoding",
      "author_type": "User",
      "created_at": "2024-03-03T05:20:25Z",
      "updated_at": "2024-03-03T05:20:25Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/583/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/583",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/583",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:37.846695",
      "comments": []
    },
    {
      "issue_number": 581,
      "title": "Manual setup instructions do not specify ExecutionPolicy on Windows",
      "body": "### Describe the bug\n\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/e129dea4-a643-4452-8958-2eeb9ab78526)\r\n\r\n> Apparently Powershell doesn't let unsigned scripts run. It's not enough to run the Terminal as Admin, you have to explicitly say the directory's signed with this command:\r\n> `Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy RemoteSigned`\r\n\r\n--Caleb\n\n### To Reproduce\n\nRun manual setup commands on Windows.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-03-03T00:53:35Z",
      "updated_at": "2024-03-03T01:03:12Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/581/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/581",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/581",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:37.846703",
      "comments": []
    },
    {
      "issue_number": 577,
      "title": "Add CogAgent via CogVLM",
      "body": "### Feature request\n\nWe would like to integrate https://github.com/THUDM/CogVLM/pull/395\n\n### Motivation\n\nOpen source Large Action Model (LAM)",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-03-02T09:35:12Z",
      "updated_at": "2024-03-02T09:35:12Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/577/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/577",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/577",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:37.846709",
      "comments": []
    },
    {
      "issue_number": 157,
      "title": "Industry: freight/logistics",
      "body": "How can we enable the freight industry to automate repetitive tasks?\r\n\r\nThis involves:\r\n\r\n1. Identifying specific use cases relevant to the power generation/transmission/distribution industry (i.e. job positions, associated tasks, and relevant software applications)\r\n2. Creating recordings involving one or more relevant applications, and implementing tests for corresponding completions:\r\n\r\n- [Magnus Technologies](http://magnustech.com/wp-content/uploads/2020/11/Ordering-Process.png)\r\n- others?\r\n\r\nRelevant links:\r\n\r\nhttps://www.freightquote.com/how-to-ship-freight/bill-of-lading/\r\n\r\n> Most obvious is order entry. Tens of thousands of people each day enter hundreds of thousands of bills of lading (eg. https://www.freightquote.com/how-to-ship-freight/bill-of-lading/ ) manually into their TMS system (eg. http://magnustech.com/wp-content/uploads/2020/11/Ordering-Process.png)\r\n\r\n> There's similar manual work entering carrier quote and invoice documents into their TMS.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-17T13:00:55Z",
      "updated_at": "2024-02-20T16:50:27Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/157/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/157",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/157",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:37.846716",
      "comments": [
        {
          "author": "gawnecoding",
          "body": "There are a few hundred thousand trucking companies with <10 trucks.  There is a very long tail of software providers in this space, but the most important piece of software is the (**Tr**ansportation **M**anagement **S**ystem). The most common is a spreadsheet, but here are some of the top vendors:",
          "created_at": "2023-05-27T21:07:12Z"
        }
      ]
    },
    {
      "issue_number": 132,
      "title": "Additional Ctrl input is often recorded",
      "body": "Using Ctrl+C to end a recording often leads to the final InputEvent of that recording being the Ctrl key. When replaying the recording, the Ctrl key is held down indefinitely after the replay is finished, until the user presses the Ctrl key again to release it.\r\n\r\nApproach 1:\r\n - Prevent final input from being stored in the recording\r\n\r\nApproach 2:\r\n - Prevent final input from being replayed",
      "state": "closed",
      "author": "AvidEslami",
      "author_type": "User",
      "created_at": "2023-05-10T14:38:36Z",
      "updated_at": "2024-02-07T22:24:05Z",
      "closed_at": "2024-02-07T22:24:05Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/132/reactions",
        "total_count": 3,
        "+1": 3,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "AvidEslami"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/132",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/132",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:38.060090",
      "comments": []
    },
    {
      "issue_number": 123,
      "title": "One-click download and install",
      "body": "The website says:\r\n\r\n> No programming required.\r\n\r\nBut we are scaring users off with:\r\n\r\n> [Download and install Git](https://git-scm.com/download/)\r\n> [Download and install Python](https://www.python.org/downloads/)\r\n...\r\n> Copy and paste the following command into the terminal, and press Enter:\r\n\r\nThis task involves reducing the onboarding to a single installer.\r\n\r\nhttps://pyinstaller.org/en/stable/ will come in handy.\r\n\r\n@apgorton the previous repo has (or had) instructions for building on Windows with pyinstaller.",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-09T00:42:09Z",
      "updated_at": "2024-02-07T22:21:51Z",
      "closed_at": "2024-02-07T22:21:51Z",
      "labels": [
        "help wanted"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/123/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "0dm"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/123",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/123",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:38.060115",
      "comments": [
        {
          "author": "0dm",
          "body": "@abrichr \r\nI think we should first create a GUI for OpenAdapt with buttons like \r\n- \"Record\"\r\n- \"Visualize\"\r\n- \"Playback\" - Can incorporate the different strategies via another window, or keep it simple with NaiveReplay for now\r\n- \"Clear cache\" - could just run something like `rm puterbot.db`, or `o",
          "created_at": "2023-05-09T06:09:46Z"
        },
        {
          "author": "apgorton",
          "body": "@abrichr The install script for Windows does those two steps and is all that is required. The MacOS install script still needs those to be added.",
          "created_at": "2023-05-09T16:54:16Z"
        },
        {
          "author": "abrichr",
          "body": "Related: https://github.com/MLDSAI/OpenAdapt/issues/149",
          "created_at": "2023-05-15T16:18:06Z"
        },
        {
          "author": "abrichr",
          "body": "Addressed in https://github.com/MLDSAI/OpenAdapt/pull/135",
          "created_at": "2023-05-23T15:41:47Z"
        },
        {
          "author": "abrichr",
          "body": "Related: https://github.com/OpenAdaptAI/OpenAdapt/issues/100 https://github.com/OpenAdaptAI/OpenAdapt/issues/350",
          "created_at": "2023-07-24T14:51:50Z"
        }
      ]
    },
    {
      "issue_number": 62,
      "title": "Explore Long Term Memory",
      "body": "This task involves undestanding whether long term memory is necessary, and if so, building a minimum viable implementation, e.g:\r\n\r\n`pg_vector`:\r\n\r\nhttps://github.com/pgvector/pgvector\r\nhttps://www.youtube.com/watch?v=aywZrzNaKjs&t=539s\r\nhttps://news.ycombinator.com/item?id=35311113\r\n\r\nSupabase? https://supabase.com/\r\n\r\nPinecone:\r\n\r\nhttps://python.langchain.com/en/latest/ecosystem/pinecone.html\r\n\r\nWeaviate",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-02T04:53:34Z",
      "updated_at": "2024-02-07T22:18:07Z",
      "closed_at": "2024-02-07T22:18:06Z",
      "labels": [
        "help wanted"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/62/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "AvidEslami"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/62",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/62",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:38.236886",
      "comments": [
        {
          "author": "nhooey",
          "body": "`pgvector` does look promising, based on this comment:\r\n\r\n[Vector database built for scalable similarity search: \t\r\nbayan1234](https://news.ycombinator.com/item?id=35311424)\r\n> If the vectors are in the same database as the tabular/structured data then text to sql applications of llm's are so much m",
          "created_at": "2023-05-03T13:18:50Z"
        },
        {
          "author": "abrichr",
          "body": "> Thank you for your recent interest in requesting support for pgvector. Thanks to your interest, Amazon RDS for PostgreSQL is pleased to announce support for pgvector.\r\n> \r\n> To learn more, please see the following:\r\n> \r\n> Announcement: https://aws.amazon.com/about-aws/whats-new/2023/05/amazon-rds-",
          "created_at": "2023-05-04T08:43:31Z"
        },
        {
          "author": "abrichr",
          "body": "Let's try https://github.com/asg017/sqlite-vss",
          "created_at": "2023-06-23T15:35:07Z"
        },
        {
          "author": "abrichr",
          "body": "Please check https://paperswithcode.com/ and https://scholar.google.com/ for review papers on embeddings functions, in particular for structured data.",
          "created_at": "2023-07-04T17:26:43Z"
        },
        {
          "author": "AvidEslami",
          "body": "Currently, it seems that in order for us to make use of Long Term Memory we would need a distance metric more suited for our specific tasks as opposed to the defaults provided by most VectorDB.",
          "created_at": "2023-07-31T17:14:53Z"
        }
      ]
    },
    {
      "issue_number": 70,
      "title": "Design: Prompting",
      "body": "What are some of the different ways we can structure our prompts and expected outputs? What is currently in place? What are the tradeoffs?",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-03T03:11:22Z",
      "updated_at": "2024-02-07T22:17:01Z",
      "closed_at": "2024-02-07T22:17:00Z",
      "labels": [
        "research"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/70/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/70",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/70",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:38.440873",
      "comments": [
        {
          "author": "jesicasusanto",
          "body": "Hi @abrichr ! Below is what I think about this issue which is related to #35   :\r\n1. Template-Based Prompts\r\nin my SegmentAnything pull request #35 I used a template-prompt with placeholders for the task goal, previously recorded input events, and the description of the screenshot that has been conv",
          "created_at": "2023-05-10T05:18:15Z"
        },
        {
          "author": "abrichr",
          "body": "Jinja2 templates are working for now.",
          "created_at": "2024-02-07T22:17:00Z"
        }
      ]
    },
    {
      "issue_number": 72,
      "title": "Design: Modelling",
      "body": "There is some core modelling work that needs proper attention.\r\n\r\nWe need folks who are knowledgeable/experienced/motivated to spend an hour or two thinking about a few ways to model this, and what an MVP technical implementation looks like.\r\n\r\nI suspect it may be https://github.com/MLDSAI/PuterBot/issues/12 and/or https://github.com/MLDSAI/PuterBot/issues/63, but there may be a more direct and simpler way.\r\n\r\nUltimately we would like to publish a paper on the results.\r\n\r\nUseful starting points:\r\n- how does https://www.adept.ai/blog/act-1 work exactly?\r\n- what are limitations of that approach?\r\n\r\nIn particular, we want to extend our models to include:\r\n- screen shots (vision)\r\n- structured window data\r\n- structured action data\r\n- natural language task descriptions\r\n- API documentation\r\n\r\nRelated: https://github.com/MLDSAI/OpenAdapt/issues/252",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-03T03:28:05Z",
      "updated_at": "2024-02-07T22:16:27Z",
      "closed_at": "2024-02-07T22:16:26Z",
      "labels": [
        "help wanted",
        "research"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 9,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/72/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/72",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/72",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:38.703695",
      "comments": [
        {
          "author": "angelala3252",
          "body": "Starting point:\r\nACT-1 is a Chrome extension that takes a user prompt for a task to perform and then carries out that task. Since it is not an open-source project, I don't know 100% how it works, but going off the blog post and what Richard has explained about it, it likely follows these steps:\r\n\r\n1",
          "created_at": "2023-05-10T23:39:53Z"
        },
        {
          "author": "0dm",
          "body": "the ultimate goal is to prompt behind the scenes rather than requiring the user to do it",
          "created_at": "2023-05-11T01:32:20Z"
        },
        {
          "author": "FFFiend",
          "body": "I don't think ACT-1 is a browser plugin, they simply hooked it up to a Chrome extension to teach it how it works and prompted it based on its training (as stated in the blog). \r\n\r\nThing is, the fact that they had to single out a specific application and train it individually, leads me to believe tha",
          "created_at": "2023-05-13T18:42:16Z"
        },
        {
          "author": "angelala3252",
          "body": "My bad, I didn't mean to say it was a Chrome extension 😅 I do agree that they probably aren't looking at the whole screen, as they mentioned that they are simply rendering the browser viewport which I interpreted as them rendering the HTML code to get the UI elements",
          "created_at": "2023-05-15T18:31:50Z"
        },
        {
          "author": "abrichr",
          "body": "Formalism (work in progress):\r\n\r\nR: Recording = { A_t, S_t, W_t }\r\nA_M(t_a): Action in Modality taken at time t_a\r\nM: Modality = { Keyboard, Mouse }\r\nF: [Fold](https://en.wikipedia.org/wiki/Fold_(higher-order_function)): [action aggregation function](https://github.com/MLDSAI/OpenAdapt/blob/main/ope",
          "created_at": "2023-06-19T12:54:03Z"
        }
      ]
    },
    {
      "issue_number": 73,
      "title": "Refactor visualize.py with NiceGUI",
      "body": "https://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/visualize.py should be rewritten, maybe with https://nicegui.io/ , maybe something else.\r\n\r\nWe would also like to display performance information (see https://github.com/MLDSAI/OpenAdapt/issues/85)",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-03T04:55:09Z",
      "updated_at": "2024-02-07T22:15:33Z",
      "closed_at": "2024-02-07T22:15:33Z",
      "labels": [
        "good first issue"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 9,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/73/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "dianzrong"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/73",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/73",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:38.925029",
      "comments": [
        {
          "author": "ahmetutku",
          "body": "For anyone trying to install NiceGUI, the installation process requires Rust and Cargo to compile extensions. You can download it from the link: https://rustup.rs/ or just by running \"curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\" in your terminal.",
          "created_at": "2023-05-08T14:56:15Z"
        },
        {
          "author": "ahmetutku",
          "body": "Here is a possible implementation I drew:\r\n![IMG_3275](https://user-images.githubusercontent.com/82727731/236963688-b1c2d40f-aa3a-44bf-99ad-3d7414cbf243.jpg)\r\n",
          "created_at": "2023-05-09T00:21:50Z"
        },
        {
          "author": "ahmetutku",
          "body": "\"I think a nice addition would be to modify it so that:\r\n1. each parent InputEvent is a video that plays through its children, and\r\n2. it displays performance information (as per the comment on github)\"\r\nWhat does plays \"through its children\" mean? Also, the second point, performance information, is",
          "created_at": "2023-05-09T00:28:21Z"
        },
        {
          "author": "abrichr",
          "body": "@ahmetutku ,\r\n\r\nThank you for putting this together! Please run `python -m puterbot.visualize`. An example of what this looks like is on the README. To the left of the screen are screenshots corresponding to parent events. To the right of the screen are InputEvents. The top level input event is the ",
          "created_at": "2023-05-09T00:36:34Z"
        },
        {
          "author": "ahmetutku",
          "body": "@abrichr Sounds good. As the videos are relatively short, should they repeat playing like a GIF? Also, another implementation would be to add the whole recording to the top to give an overview of everything that was recorded. What are your opinions on this?",
          "created_at": "2023-05-09T00:44:37Z"
        }
      ]
    },
    {
      "issue_number": 45,
      "title": "Bug: Long Recordings",
      "body": "```\r\n2023-04-30 18:57:43.832 | INFO     | __mp_main__:write_events:230 - event_type='screen' starting\r\n2023-04-30 18:57:43.832 | INFO     | __mp_main__:write_events:230 - event_type='window' starting\r\n2023-04-30 18:57:43.833 | INFO     | __mp_main__:write_events:230 - event_type='input' starting\r\n^C2023-04-30 19:00:57.042 | INFO     | __mp_main__:write_events:239 - event_type='window' done\r\n2023-04-30 19:00:57.042 | INFO     | __main__:record:679 - joining...\r\n2023-04-30 19:00:57.043 | INFO     | __main__:read_screen_events:367 - done\r\n2023-04-30 19:00:57.043 | INFO     | __mp_main__:write_events:239 - event_type='input' done\r\n2023-04-30 19:00:57.044 | INFO     | __main__:process_events:145 - done\r\n\r\n\r\n```\r\n\r\n<CTRL+C>:\r\n```\r\n2023-04-30 19:02:45.690 | INFO     | __mp_main__:write_events:239 - event_type='screen' done\r\n^CTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/runpy.py\", line 196, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/runpy.py\", line 86, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/Users/abrichr/MLDSAI/src/puterbot/puterbot/record.py\", line 695, in <module>\r\n    fire.Fire(record)\r\n  File \"/Users/abrichr/MLDSAI/src/puterbot/.venv/lib/python3.10/site-packages/fire/core.py\", line 141, in Fire\r\n    component_trace = _Fire(component, args, parsed_flag_args, context, name)\r\n  File \"/Users/abrichr/MLDSAI/src/puterbot/.venv/lib/python3.10/site-packages/fire/core.py\", line 466, in _Fire\r\n    component, remaining_args = _CallAndUpdateTrace(\r\n  File \"/Users/abrichr/MLDSAI/src/puterbot/.venv/lib/python3.10/site-packages/fire/core.py\", line 681, in _CallAndUpdateTrace\r\n    component = fn(*varargs, **kwargs)\r\n  File \"/Users/abrichr/MLDSAI/src/puterbot/puterbot/record.py\", line 685, in record\r\n    screen_event_writer.join()\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/process.py\", line 149, in join\r\n    res = self._popen.wait(timeout)\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/popen_fork.py\", line 43, in wait\r\n    return self.poll(os.WNOHANG if timeout == 0.0 else 0)\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/popen_fork.py\", line 27, in poll\r\n    pid, sts = os.waitpid(self.pid, flag)\r\nKeyboardInterrupt\r\n^CException ignored in atexit callback: <function _exit_function at 0x13479b6d0>\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/util.py\", line 357, in _exit_function\r\n    p.join()\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/process.py\", line 149, in join\r\n    res = self._popen.wait(timeout)\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/popen_fork.py\", line 43, in wait\r\n    return self.poll(os.WNOHANG if timeout == 0.0 else 0)\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/popen_fork.py\", line 27, in poll\r\n    pid, sts = os.waitpid(self.pid, flag)\r\nKeyboardInterrupt: \r\n```",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-01T01:40:38Z",
      "updated_at": "2024-02-07T22:10:59Z",
      "closed_at": "2024-02-07T22:10:59Z",
      "labels": [
        "bug",
        "help wanted"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/45/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/45",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/45",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:39.209642",
      "comments": [
        {
          "author": "dianzrong",
          "body": "I'm unable to replicate this output above as I get 8 lines before the \"write_events\" lines. See the output below:\r\n```\r\n2023-05-12 21:46:06.750 | INFO     | __main__:record:581 - task_description='testing out puterbot'\r\n2023-05-12 21:46:06.790 | INFO     | __main__:create_recording:518 - recording=R",
          "created_at": "2023-05-13T02:04:47Z"
        }
      ]
    },
    {
      "issue_number": 14,
      "title": "Explore SVG",
      "body": "We would like to convert Screenshots and InputEvents to a text representation (e.g. via [SVG](https://pypi.org/project/pypotrace/) and [OCR](https://github.com/PaddlePaddle/PaddleOCR)) and then feed this text representation into a Large Language Model (e.g. https://gpt4all.io) given a text description of the goal to be accomplished.\r\n\r\nhttps://github.com/flupke/pypotrace",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-04-17T14:34:28Z",
      "updated_at": "2024-02-07T22:09:41Z",
      "closed_at": "2024-02-07T22:09:41Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/14/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/14",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/14",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:39.401307",
      "comments": []
    },
    {
      "issue_number": 15,
      "title": "Explore SegmentAnything",
      "body": "We would like to convert Screenshots and InputEvents to a text representation (e.g. via [Segment Anything](https://github.com/facebookresearch/segment-anything) and [OCR](https://github.com/PaddlePaddle/PaddleOCR)) and then feed this text representation into a Large Language Model (e.g. https://gpt4all.io/) given a text description of the goal to be accomplished.",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-04-17T14:40:21Z",
      "updated_at": "2024-02-07T22:09:36Z",
      "closed_at": "2024-02-07T22:09:36Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/15/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/15",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/15",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:39.401322",
      "comments": []
    },
    {
      "issue_number": 24,
      "title": "Expand on DemoReplayStrategy",
      "body": "How can we modify the [DemoReplayStrategy](https://github.com/MLDSAI/puterbot/blob/main/puterbot/strategies/demo.py) that uses the available primitives (e.g. LLMs, OCR, SVG, etc) in a way that makes sense?",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-04-19T21:19:48Z",
      "updated_at": "2024-02-07T22:09:28Z",
      "closed_at": "2024-02-07T22:09:28Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/24/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/24",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/24",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:39.401326",
      "comments": [
        {
          "author": "dianzrong",
          "body": "Hi, \r\nI would love to work on this issue, however, I'm confused as to what this issue is asking for. Could I get some further clarification? \r\nThanks!",
          "created_at": "2023-04-28T21:22:57Z"
        },
        {
          "author": "abrichr",
          "body": "HI @dianzrong, thank you for your interest in this issue!\r\n\r\nFrom [demo.py](https://github.com/MLDSAI/puterbot/blob/main/puterbot/strategies/demo.py):\r\n\r\n```\r\n    def get_next_input_event(\r\n        self,\r\n        screenshot: Screenshot,\r\n    ):\r\n        ascii_text = self.get_ascii_text(screenshot)\r\n",
          "created_at": "2023-04-29T12:34:50Z"
        },
        {
          "author": "dianzrong",
          "body": "@abrichr, yes that does. Thank you so much!!",
          "created_at": "2023-04-29T22:12:37Z"
        }
      ]
    },
    {
      "issue_number": 27,
      "title": "Implement Gisting",
      "body": "How can we take advantage of [gisting](https://github.com/jayelm/gisting)?\r\n\r\n[Thread](https://twitter.com/jayelmnop/status/1648365743195684873)\r\n\r\n[Paper](https://arxiv.org/abs/2304.08467)",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-04-19T23:46:42Z",
      "updated_at": "2024-02-07T22:08:28Z",
      "closed_at": "2024-02-07T22:08:28Z",
      "labels": [
        "enhancement",
        "help wanted"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 11,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/27/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "FFFiend"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/27",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/27",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:39.600572",
      "comments": [
        {
          "author": "FFFiend",
          "body": "I've tried mapping the concept to fit Puterbot's case but I'm having trouble understanding what the paper is essentially proposing. Are we compressing prompts into \"gist tokens\" after initially feeding the LM the entire uncompressed prompt so that it saves on read and compute time later on? Or are w",
          "created_at": "2023-04-26T17:45:16Z"
        },
        {
          "author": "abrichr",
          "body": "Thank you for engaging on this issue @FFFiend !\r\n\r\n> Are we compressing prompts into \"gist tokens\" after initially feeding the LM the entire uncompressed prompt so that it saves on read and compute time later on?\r\n\r\nI believe that is correct. From https://arxiv.org/pdf/2304.08467.pdf:\r\n\r\n> we add a ",
          "created_at": "2023-04-27T16:49:02Z"
        },
        {
          "author": "FFFiend",
          "body": "Alright so I think I spent an unreasonable amount of time trying to understand how exactly the gist tokens themselves looked like from multiple reads on the paper, but I think the repo you linked above blackboxes it for us. \r\n\r\nWhat I think remains now is to take advantage of the above repo such tha",
          "created_at": "2023-05-07T04:38:04Z"
        },
        {
          "author": "abrichr",
          "body": "@FFFiend please join us on Slack if you haven't already: https://join.slack.com/t/mldsai/shared_invite/zt-1uf94nn7r-qcQnS~hinLPKftUapNzbuw (link at top of README)",
          "created_at": "2023-05-07T04:40:18Z"
        },
        {
          "author": "abrichr",
          "body": "> Alright so I think I spent an unreasonable amount of time trying to understand how exactly the gist tokens themselves looked like from multiple reads on the paper,\r\n\r\nThank you!\r\n\r\n> but I think the repo you linked above blackboxes it for us.\r\n\r\nUnfortunate, but not a deal breaker.\r\n\r\n>  I haven't",
          "created_at": "2023-05-07T04:46:13Z"
        }
      ]
    },
    {
      "issue_number": 12,
      "title": "Explore MiniGPT-4",
      "body": "We would like to show ScreenShots and InputEvents to MiniGPT-4 (https://minigpt-4.github.io/), and have it generate the next InputEvent, given a text description of the goal to be accomplished. [OCR](https://github.com/PaddlePaddle/PaddleOCR) will likely also be necessary here.",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-04-17T14:27:03Z",
      "updated_at": "2024-02-07T22:08:07Z",
      "closed_at": "2024-02-07T22:08:07Z",
      "labels": [
        "enhancement",
        "help wanted"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/12/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "angelala3252"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/12",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/12",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:39.823139",
      "comments": []
    },
    {
      "issue_number": 559,
      "title": "Update Docs",
      "body": "We'd like to update our GitBook documentation (/docs) to be more consistent with the README on the main branch. Adding a FAQ section would also be good. The docs have not been updated in quite some time, and changes can be made by making pull requests to the branch -- previews *should* be enabled by GitBook.",
      "state": "open",
      "author": "0dm",
      "author_type": "User",
      "created_at": "2024-01-16T15:44:06Z",
      "updated_at": "2024-01-16T21:58:14Z",
      "closed_at": null,
      "labels": [
        "documentation"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/559/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/559",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/559",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:39.823154",
      "comments": [
        {
          "author": "abrichr",
          "body": "@0dm thank you for adding this! Do you have bandwidth to take it on?",
          "created_at": "2024-01-16T21:54:47Z"
        },
        {
          "author": "0dm",
          "body": "> @0dm thank you for adding this! Do you have bandwidth to take it on?\n\nI'm currently swamped with assignments, so I probably won't get to it anytime soon.",
          "created_at": "2024-01-16T21:58:13Z"
        }
      ]
    },
    {
      "issue_number": 547,
      "title": "Implement Set-of-Mark (SOM) with ollama",
      "body": "### Feature request\n\nSet-of-Mark: https://github.com/OpenAdaptAI/OpenAdapt/issues/519\r\n\r\nollama: https://github.com/OpenAdaptAI/OpenAdapt/issues/546\n\n### Motivation\n\nOpen + offline state-of-the-art visual understanding",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-12-13T07:00:46Z",
      "updated_at": "2024-01-13T19:25:34Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "good first issue",
        "help wanted"
      ],
      "label_count": 3,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/547/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/547",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/547",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:40.036533",
      "comments": [
        {
          "author": "abrichr",
          "body": "Related:\r\n\r\nhttps://github.com/IDEA-Research/Grounded-Segment-Anything\r\nhttps://github.com/SkalskiP/SoM\r\nhttps://github.com/CASIA-IVA-Lab/FastSAM\r\n",
          "created_at": "2023-12-25T18:40:49Z"
        }
      ]
    },
    {
      "issue_number": 556,
      "title": "Implement Visual Search fallback",
      "body": "### Feature request\n\nWe would like to implement https://vstar-seal.github.io/ as a fallback for when the target object is not found by SAM. \r\n\r\n\"Visual Search\" refers to identifying the location of a target object in the image,\n\n### Motivation\n\nIncrease robustness",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2024-01-13T17:26:24Z",
      "updated_at": "2024-01-13T17:26:24Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/556/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/556",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/556",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:40.288152",
      "comments": []
    },
    {
      "issue_number": 555,
      "title": "Implement ReplayStateMachine",
      "body": "### Feature request\n\nIn order to implement the [OpenAdapt Architecture](https://github.com/OpenAdaptAI/OpenAdapt/wiki/OpenAdapt-Architecture-(draft)), we need to define states and transitions.\r\n\r\nRelated: https://github.com/robocorp/llmstatemachine/\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-12-25T20:56:26Z",
      "updated_at": "2023-12-25T20:56:45Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/555/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/555",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/555",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:40.288166",
      "comments": []
    },
    {
      "issue_number": 554,
      "title": "Explore G-LLaVA",
      "body": "### Feature request\n\nHow can we incorporate the concepts in https://github.com/pipilurj/G-LLaVA / https://arxiv.org/abs/2312.11370 ?\n\n### Motivation\n\n> Utilizing our constructed Geo170K dataset, we develop G-LLaVA, which demonstrates exceptional performance in solving geometric problems, significantly outperforming GPT-4-V on the MathVista benchmark with only 7B parameters.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-12-22T15:57:01Z",
      "updated_at": "2023-12-22T15:57:01Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/554/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/554",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/554",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:40.288170",
      "comments": []
    },
    {
      "issue_number": 550,
      "title": "Explore VideoPreTraining (VPT)",
      "body": "### Feature request\n\nHow can we incorporate the ideas in https://openai.com/research/vpt?\r\n\r\nSee also:\r\n\r\nhttps://github.com/openai/Video-Pre-Training\r\n\r\nhttps://scholar.google.ca/citations?view_op=view_citation&hl=en&user=5TZ7f5wAAAAJ&sortby=pubdate&citation_for_view=5TZ7f5wAAAAJ:BKYZGPsuSFYC\n\n### Motivation\n\n> We trained a neural network to play Minecraft by Video PreTraining (VPT) on a massive unlabeled video dataset of human Minecraft play, while using only a small amount of labeled contractor data. With fine-tuning, our model can learn to craft diamond tools, a task that usually takes proficient humans over 20 minutes (24,000 actions). Our model uses the native human interface of keypresses and mouse movements, making it quite general, and represents a step towards general computer-using agents.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-12-17T00:04:18Z",
      "updated_at": "2023-12-17T00:04:18Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/550/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/550",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/550",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:40.288175",
      "comments": []
    },
    {
      "issue_number": 549,
      "title": "Explore simpleaichat",
      "body": "### Feature request\n\nHow can we take advantage of https://github.com/minimaxir/simpleaichat ?\r\n\r\nRelated: https://github.com/OpenAdaptAI/OpenAdapt/issues/534\n\n### Motivation\n\n> This tool has many features optimized for working with ChatGPT as fast and as cheap as possible, but still much more capable of modern AI tricks than most implementations:\r\n> - Create and run chats with only a few lines of code!\r\n> - Optimized workflows which minimize the amount of tokens used, reducing costs and latency.\r\n> - Run multiple independent chats at once.\r\n> - Minimal codebase: no code dives to figure out what's going on under the hood needed!\r\n> - Chat streaming responses and the ability to use tools.\r\n> - Async support, including for streaming and tools.\r\n> - Ability to create more complex yet clear workflows if needed, such as Agents. (Demo soon!)\r\n> - Coming soon: more chat model support (PaLM, Claude)!",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-12-15T19:44:37Z",
      "updated_at": "2023-12-15T19:45:12Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/549/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/549",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/549",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:40.288179",
      "comments": [
        {
          "author": "abrichr",
          "body": "See also: https://news.ycombinator.com/item?id=38657841",
          "created_at": "2023-12-15T19:45:12Z"
        }
      ]
    },
    {
      "issue_number": 548,
      "title": "Explore State-Space-Model (SSM) / Mambachat ",
      "body": "### Feature request\n\nHow can we incorporate ideas in https://github.com/havenhq/mamba-chat / https://arxiv.org/abs/2311.18257?\n\n### Motivation\n\nTransformers are memory intensive.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-12-14T20:02:44Z",
      "updated_at": "2023-12-14T20:02:44Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/548/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/548",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/548",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:40.507403",
      "comments": []
    },
    {
      "issue_number": 529,
      "title": "Implement smart contract for model feedback signal",
      "body": "### Feature request\r\n\r\nThis task involves implementing a smart contract to represent the \"feedback\" of a \"human\" to an \"output\" of a \"model\" via an \"agent\", where \"feedback\" is the human feedback on the quality of an agent's behavior and/or the raw output of the model.\r\n\r\n### Motivation\r\n\r\nUltimately we want to improve the behavior of one or more `Agents`, currently implemented as `ReplayStrategies`.\r\n\r\nYoshua Bengio had a nice short paper on his old website about how intelligence can't exist in an individual, and a collective is necessary for intelligence nodes to interact with each other.\r\n\r\n(Sadly looks like it wasn't saved [ https://archive.is/http://iro.umontreal.ca/~bengioy/ ]; see https://arxiv.org/abs/1203.2990 for something possibly related) \r\n\r\nOne of the ideas was that language is obviously a pretty big component of AGI, and that language would not have been possible without having cooperation.\r\n\r\nTools are also clearly important (e.g. https://openai.com/research/emergent-tool-use; you are reading this through a tool).\r\n\r\nPerhaps human intelligence evolution can inform hierarchy :\r\n- tools (e.g. \"embodiment\" / \"agency\" -> \"a rock\" / \"a click\")\r\n- vision and language (i.e. LMMs)\r\n- cooperation (i.e. **reward**)\r\n\r\nCooperation between humans involves love, pain, capital. What does cooperation between humans and LLMs look like?\r\n\r\nFeedback welcome!\r\n\r\nRelated:\r\n\r\nhttps://github.com/OpenAdaptAI/OpenAdapt/issues/393\r\nhttps://github.com/OpenAdaptAI/OpenAdapt/issues/61",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-11-21T21:57:28Z",
      "updated_at": "2023-12-14T04:08:37Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/529/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/529",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/529",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:40.507418",
      "comments": [
        {
          "author": "abrichr",
          "body": "Since ChatGPT is down, here is Cohere.ai's response for the following prompt:\r\n\r\n> Implement solidity code that implements a smart contract to represent the \"feedback\" of a \"human\" to an \"output\" of a \"model\" via an \"agent\", where \"feedback\" is the human feedback on the quality of an agent's behavio",
          "created_at": "2023-11-21T22:56:17Z"
        },
        {
          "author": "abrichr",
          "body": "> Implement solidity code that implements a smart contract to represent the \"feedback\" of a \"human\" to an \"output\" of a \"model\" via an \"agent\", where \"feedback\" is the human feedback on the quality of an agent's behavior and/or the raw output of the model.\r\n\r\nChatGPT:\r\n\r\n---\r\n\r\nTo implement a Solidi",
          "created_at": "2023-12-14T04:05:13Z"
        },
        {
          "author": "abrichr",
          "body": "> So how can we integrate mor.org into https://github.com/OpenAdaptAI/OpenAdapt -- for example, to implement a smart contract to represent the \"feedback\" of a \"human\" to an \"output\" of a \"model\" via an \"agent\", where \"feedback\" is the human feedback on the quality of an agent's behavior and/or the r",
          "created_at": "2023-12-14T04:08:36Z"
        }
      ]
    },
    {
      "issue_number": 546,
      "title": "Implement ollama CompletionProvider",
      "body": "### Feature request\n\nWe want to support ollama, since they provide local multimodal inference: https://github.com/jmorganca/ollama/releases/tag/v0.1.15\n\n### Motivation\n\nVision is most general.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-12-13T06:39:01Z",
      "updated_at": "2023-12-13T06:39:15Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "good first issue"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/546/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/546",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/546",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:40.709091",
      "comments": []
    },
    {
      "issue_number": 441,
      "title": "[Bug]: AssertionError: No action events found. ",
      "body": "### Describe the bug\r\n\r\nIn https://github.com/OpenAdaptAI/OpenAdapt/pull/223 when you run \r\n`python -m openadapt.share visualize recording_4.db`\r\n\r\nthe output is\r\n```terminal\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/runpy.py\", line 86, in _run_code\r\n    exec(code, run_globals)\r\n         |     -> {'__name__': '__main__', '__doc__': 'Copy a recording from one computer to another.\\n\\nUsage:\\n    python -m openadapt.share ...\r\n         -> <code object <module> at 0x108d04df0, file \"/Users/abrichr/oa/OpenAdapt/openadapt/share.py\", line 1>\r\n\r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/share.py\", line 170, in <module>\r\n    fire.Fire(\r\n    |    -> <function Fire at 0x10ae5d240>\r\n    -> <module 'fire' from '/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-package...\r\n\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/fire/core.py\", line 141, in Fire\r\n    component_trace = _Fire(component, args, parsed_flag_args, context, name)\r\n                      |     |          |     |                 |        -> 'share.py'\r\n                      |     |          |     |                 -> {}\r\n                      |     |          |     -> Namespace(verbose=False, interactive=False, separator='-', completion=None, help=False, trace=False)\r\n                      |     |          -> ['visualize', 'recording_4.db']\r\n                      |     -> {'send': <function send_recording at 0x155963010>, 'receive': <function receive_recording at 0x1559630a0>, 'visualize': <func...\r\n                      -> <function _Fire at 0x10af5b490>\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/fire/core.py\", line 466, in _Fire\r\n    component, remaining_args = _CallAndUpdateTrace(\r\n    |                           -> <function _CallAndUpdateTrace at 0x10af5b5b0>\r\n    -> <function visualize_recording at 0x155963130>\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/fire/core.py\", line 681, in _CallAndUpdateTrace\r\n    component = fn(*varargs, **kwargs)\r\n                |   |          -> {}\r\n                |   -> ['recording_4.db']\r\n                -> <function visualize_recording at 0x155963130>\r\n\r\n> File \"/Users/abrichr/oa/OpenAdapt/openadapt/share.py\", line 163, in visualize_recording\r\n    visualize.main(recording)\r\n    |         |    -> Recording(id=4, timestamp=1689886182.306169, monitor_width=1920, monitor_height=1080, double_click_interval_seconds=0.5, doub...\r\n    |         -> <function main at 0x1558b31c0>\r\n    -> <module 'openadapt.visualize' from '/Users/abrichr/oa/OpenAdapt/openadapt/visualize.py'>\r\n\r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/visualize.py\", line 205, in main\r\n    action_events = get_events(recording, process=PROCESS_EVENTS, meta=meta)\r\n                    |          |                  |                    -> {}\r\n                    |          |                  -> True\r\n                    |          -> Recording(id=4, timestamp=1689886182.306169, monitor_width=1920, monitor_height=1080, double_click_interval_seconds=0.5, doub...\r\n                    -> <function get_events at 0x149fdee60>\r\n\r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/events.py\", line 48, in get_events\r\n    assert num_action_events > 0, \"No action events found.\"\r\n           -> 0\r\n\r\nAssertionError: No action events found.\r\n\r\n\r\n(openadapt-py3.10) abrichr@MacBook-Pro-3 OpenAdapt % python -m openadapt.share visualize recording_4.db\r\n(openadapt-py3.10) abrichr@MacBook-Pro-3 OpenAdapt % ls -alh data/recordings \r\ntotal 7064\r\n-rw-r--r--  1 abrichr  staff   3.4M 25 Jul 16:12 recording_4.db\r\ndrwxr-xr-x  4 abrichr  staff   128B 25 Jul 16:11 ..\r\ndrwxr-xr-x  3 abrichr  staff    96B 25 Jul 16:12 .\r\n```\r\n\r\n### To Reproduce\r\n\r\n1. checkout https://github.com/OpenAdaptAI/OpenAdapt/pull/223 and run 'poetry install'\r\n2. Run `python -m openadapt.share send --recording_id=1' \r\n    - ensure you have at least a single recording in your db file\r\n    - this command will output a wormhole code\r\n3. In a different computer run `python -m openadapt.share receive <wormhole_code>` (will also need to checkout PR and run poetry install)\r\n    - use wormhole code from step 2\r\n4. `python -m openadapt.share visualize <db_name>`\r\n     - db_name should be whatever the name of the db file in `data/recordings` folder that you want to visualize after receiving the recording in step 3",
      "state": "closed",
      "author": "Mustaballer",
      "author_type": "User",
      "created_at": "2023-07-28T15:37:56Z",
      "updated_at": "2023-12-12T21:48:26Z",
      "closed_at": "2023-12-12T21:48:26Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/441/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/441",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/441",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:40.709105",
      "comments": []
    },
    {
      "issue_number": 46,
      "title": "Implement Publishing",
      "body": "We would like to make it easy to publish `puterbot.db`:\r\n\r\n```\r\npython -m puterbot.publish  \"<task_description>\" [<puterbot.db>]\r\n```\r\n\r\nHow can we store this in a decentralized way? e.g.:\r\n\r\n- [IPFS](https://ipfs.tech/)\r\n- [Sia](https://sia.tech/)\r\n- [FileCoin](https://filecoin.io/)\r\n- [Arweave](https://www.arweave.org/)\r\n- others?",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-01T02:05:40Z",
      "updated_at": "2023-12-12T21:48:25Z",
      "closed_at": "2023-12-12T21:48:25Z",
      "labels": [
        "help wanted"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 6,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/46/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "Mustaballer"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/46",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/46",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:40.709110",
      "comments": [
        {
          "author": "abrichr",
          "body": "Goals:\r\n\r\n1. Make it easy for people with limited experience to get started quickly\r\n2. Minimize development effort so we can move quickly\r\n3. Avoid \"crypto hype\" \r\n\r\n### Option 1: IPFS + Ethereum Smart Contract\r\n\r\nDescription: Upload the `puterbot.db` file to IPFS and use an Ethereum smart contract",
          "created_at": "2023-05-02T03:39:35Z"
        },
        {
          "author": "abrichr",
          "body": "ChatGPT:\r\n \r\n> As of my knowledge cutoff date in September 2021, among the options discussed, using IPFS without blockchain or NFTs (Option 5) is likely to be the cheapest and can potentially be free. IPFS allows users to upload and share files in a decentralized manner without incurring transaction",
          "created_at": "2023-05-02T03:44:22Z"
        },
        {
          "author": "abrichr",
          "body": "Or just use S3 with e.g. https://github.com/aws/aws-sdk-pandas 😅 ",
          "created_at": "2023-05-02T03:47:43Z"
        },
        {
          "author": "abrichr",
          "body": "Or https://github.com/magic-wormhole/magic-wormhole:\r\n\r\n`puterbot/share.py`:\r\n```\r\n\"\"\"Copy a recording from one computer to another\r\n\r\nUsage:\r\n\r\n    python -m puterbot.share send --recording_id=1 --output_folder=output\r\n    python -m puterbot.share receive --output_folder=output\r\n\"\"\"\r\n\r\nimport os\r\ni",
          "created_at": "2023-05-02T04:16:41Z"
        },
        {
          "author": "Mustaballer",
          "body": "Hi @abrichr, it seems like the `export_recording_to_folder(recording_id, output_folder)` function is not defined in the share.py file. Can you please clarify where this function is imported from or provide the code that defines it? Thank you.",
          "created_at": "2023-05-02T17:42:14Z"
        }
      ]
    },
    {
      "issue_number": 539,
      "title": "[Bug]: suppress MacOS \"Notificator\" window on visualize",
      "body": "### Describe the bug\r\n\r\nWhen running `python -m openadapt.visualize`:\r\n\r\n<img width=\"480\" alt=\"image\" src=\"https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/e1b0758b-a710-483d-99ac-66907a2b4210\">\r\n\r\n\r\n### To Reproduce\r\n\r\nset `config.VISUALIZE_RUN_NATIVELY = False`, then:\r\n\r\n```\r\npoetry shell\r\npython -m openadapt.visualize\r\n```\r\n\r\nNote that eventually the visualization opens in the browser, even if nothing in the window is selected:\r\n\r\n<img width=\"1495\" alt=\"image\" src=\"https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/36283237-b042-491c-b617-a20675ac2a70\">\r\n",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-12-10T21:09:55Z",
      "updated_at": "2023-12-10T21:10:49Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/539/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/539",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/539",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:40.937917",
      "comments": []
    },
    {
      "issue_number": 534,
      "title": "Explore Outlines",
      "body": "### Feature request\n\nHow can we incorporate https://github.com/outlines-dev/outlines ?\r\n\r\nThis likely involves replacing the `CompletionProvider` API.\n\n### Motivation\n\nOutlines 〰 is a library for neural text generation. You can think of it as a more flexible replacement for the generate method in the [transformers](https://github.com/huggingface/transformers) library.\r\n\r\nOutlines 〰 helps developers guide text generation to build robust interfaces with external systems. Provides generation methods that guarantee that the output will match a regular expressions, or follow a JSON schema.\r\n\r\nOutlines 〰 provides robust prompting primitives that separate the prompting from the execution logic and lead to simple implementations of few-shot generations, ReAct, meta-prompting, agents, etc.\r\n\r\nOutlines 〰 is designed as a library that is meant to be compatible the broader ecosystem, not to replace it. We use as few abstractions as possible, and generation can be interleaved with control flow, conditionals, custom Python functions and calls to other libraries.\r\n\r\nOutlines 〰 is compatible with all models. It only interfaces with models via the next-token logits. It can be used with API-based models as well.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-12-08T19:41:43Z",
      "updated_at": "2023-12-08T19:41:43Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/534/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/534",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/534",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:40.937930",
      "comments": []
    },
    {
      "issue_number": 533,
      "title": "Explore MkDocs",
      "body": "### Feature request\n\nWe would like to migrate from Gitbook / Google Docs to MkDocs.\n\n### Motivation\n\nGitbook requires a subscription, while https://squidfunk.github.io/mkdocs-material/ is completely free.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-12-01T17:23:43Z",
      "updated_at": "2023-12-01T17:23:43Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/533/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/533",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/533",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:40.937934",
      "comments": []
    },
    {
      "issue_number": 532,
      "title": "Implement Instructor",
      "body": "### Feature request\n\nWe would like to implement Instructor (https://jxnl.github.io/instructor/) to automate the creation of objects from prompts\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-12-01T17:22:47Z",
      "updated_at": "2023-12-01T17:22:47Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/532/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/532",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/532",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:40.937938",
      "comments": []
    },
    {
      "issue_number": 531,
      "title": "Explore dynamic few-shot selection, self-generated chain of thought, and choice shuffle ensembling",
      "body": "### Feature request\n\nHow can we implement:\r\n\r\n> dynamic few-shot selection, self-generated chain of thought, and choice shuffle ensembling\r\n\r\nFrom https://arxiv.org/abs/2311.16452\r\n\r\nSee also https://twitter.com/erichorvitz/status/1729854235443884385\n\n### Motivation\n\n> We introduce Medprompt, based on a composition of several prompting strategies. With Medprompt, GPT-4 achieves state-of-the-art results on all nine of the benchmark datasets in the MultiMedQA suite. The method outperforms leading specialist models such as Med-PaLM 2 by a significant margin with an order of magnitude fewer calls to the model. Steering GPT-4 with Medprompt achieves a 27% reduction in error rate on the MedQA dataset over the best methods to date achieved with specialist models and surpasses a score of 90% for the first time. Beyond medical problems, we show the power of Medprompt to generalize to other domains and provide evidence for the broad applicability of the approach via studies of the strategy on exams in electrical engineering, machine learning, philosophy, accounting, law, nursing, and clinical psychology.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-12-01T17:20:31Z",
      "updated_at": "2023-12-01T17:20:43Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/531/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/531",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/531",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:40.937942",
      "comments": []
    },
    {
      "issue_number": 530,
      "title": "Use Case: Clinical Psychiatrist workflow",
      "body": "### Role\n\nClinical Psychiatrist\n\n### Task\n\nHow can we enable Clinical Psychiatrists to automate repetitive tasks?\r\n\r\nThis involves:\r\n\r\n- Identifying specific use cases relevant to clinical psychiatry (e.g. clinical documentation, what else?)\r\n- Creating recordings involving one or more relevant applications, and implementing tests for corresponding completions:\r\nEpic / Telus EHR?\r\nothers?\n\n### Context\n\nClinical Psychiatry\n\n### Workflow\n\nTODO",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-11-22T20:50:45Z",
      "updated_at": "2023-11-22T20:50:45Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/530/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/530",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/530",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:40.937945",
      "comments": []
    },
    {
      "issue_number": 528,
      "title": "Investigate Video-LLaVA",
      "body": "### Feature request\n\nHow can we incorporate ideas from https://github.com/PKU-YuanGroup/Video-LLaVA ?\n\n### Motivation\n\n> With the binding of unified visual representations to the language feature space, we enable an LLM to perform visual reasoning capabilities on both images and videos simultaneously.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-11-21T19:20:42Z",
      "updated_at": "2023-11-21T19:20:42Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/528/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/528",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/528",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:40.937949",
      "comments": []
    },
    {
      "issue_number": 99,
      "title": "Usecase: Loss Adjuster",
      "body": "How can we enable loss adjusters (and their managers) to automate repetitive tasks?\r\n\r\nThis task involves creating recordings involving one or more relevant applications, and implementing tests for corresponding completions:\r\n\r\n- Xactimate\r\n- ClaimCenter\r\n- others?",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-07T04:01:12Z",
      "updated_at": "2023-11-18T08:22:17Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/99/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/99",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/99",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:40.937953",
      "comments": [
        {
          "author": "Restorationadvisorsgroup",
          "body": "You would generate macros by the loss type through rule triggering based on the specific guideline per whichever carrier is using the software - I have a pretty in depth idea on how this would go but I was never able to piece it all together. Feel free to reach out happy to about it. ",
          "created_at": "2023-11-18T08:22:16Z"
        }
      ]
    },
    {
      "issue_number": 523,
      "title": "Investigate JARVIS-1",
      "body": "### Feature request\n\nHow can we incorporate the ideas in https://craftjarvis-jarvis1.github.io/ ? \n\n### Motivation\n\n> We introduce JARVIS-1, an open-world agent that can perceive multimodal input (visual observations and human instructions), generate sophisticated plans, and perform embodied control, all within the popular yet challenging open-world Minecraft universe. Specifically, we develop JARVIS-1 on top of pre-trained multimodal language models, which map visual observations and textual instructions to plans. The plans will be ultimately dispatched to the goal-conditioned controllers. We outfit JARVIS-1 with a multimodal memory, which facilitates planning using both pre-trained knowledge and its actual game survival experiences. In our experiments, JARVIS-1 exhibits nearly perfect performances across over 200 varying tasks from the Minecraft Universe Benchmark, ranging from entry to intermediate levels. JARVIS-1 has achieved a completion rate of 12.5% in the long-horizon diamond pickaxe task. This represents a significant increase up to 5 times compared to previous records. Furthermore, we show that JARVIS-1 is able to self-improve following a life-long learning paradigm thanks to multimodal memory, sparking a more general intelligence and improved autonomy.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-11-15T15:04:51Z",
      "updated_at": "2023-11-15T15:04:51Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/523/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/523",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/523",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:41.170153",
      "comments": []
    },
    {
      "issue_number": 500,
      "title": "Explore LLaVA",
      "body": "### Feature request\n\nHow can we take advantage of https://github.com/haotian-liu/LLaVA ?\r\n\r\nhttps://llava-vl.github.io/\n\n### Motivation\n\n> LLaVA represents a novel end-to-end trained large multimodal model that combines a vision encoder and Vicuna for general-purpose visual and language understanding, achieving impressive chat capabilities mimicking spirits of the multimodal GPT-4 and setting a new state-of-the-art accuracy on Science QA.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-10-04T15:32:21Z",
      "updated_at": "2023-11-12T22:57:39Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/500/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/500",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/500",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:41.170250",
      "comments": [
        {
          "author": "abrichr",
          "body": "https://huggingface.co/papers/2311.05437\r\n\r\n> LLaVA-Plus is a general-purpose multimodal assistant that expands the capabilities of large multimodal models. It maintains a skill repository of pre-trained vision and vision-language models and can activate relevant tools based on users' inputs to fulf",
          "created_at": "2023-11-11T20:39:47Z"
        },
        {
          "author": "abrichr",
          "body": "https://huggingface.co/SkunkworksAI/BakLLaVA-1\r\n\r\n> BakLLaVA 1 is a Mistral 7B base augmented with the LLaVA 1.5 architecture. In this first version, we showcase that a Mistral 7B base outperforms Llama 2 13B on several benchmarks.\r\n> BakLLaVA 2 is cooking with a significantly larger (commercially v",
          "created_at": "2023-11-12T22:57:39Z"
        }
      ]
    },
    {
      "issue_number": 391,
      "title": "Implement Nous-Hermes-13b",
      "body": "### Feature request\n\nWe want to get completions using https://huggingface.co/NousResearch/Nous-Hermes-13b\n\n### Motivation\n\n<img width=\"599\" alt=\"image\" src=\"https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/6141e953-eae7-4c9d-b752-8afeac0f8d59\">\r\nhttps://twitter.com/Yampeleg/status/1668337702440165376",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-18T01:38:14Z",
      "updated_at": "2023-11-11T20:24:23Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/391/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "FFFiend"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/391",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/391",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:41.461688",
      "comments": [
        {
          "author": "abrichr",
          "body": "According to https://lmsys.org/blog/2023-06-22-leaderboard/ , [Nous-Hermes-13B](https://huggingface.co/NousResearch/Nous-Hermes-13b) isn't even in the top 10.\r\n\r\n@ypeleg can you please clarify:\r\n\r\n> some people on reddit are already starting to say that on certain prompts it is \"at the level of GPT-",
          "created_at": "2023-07-18T22:21:07Z"
        },
        {
          "author": "FFFiend",
          "body": "> According to https://lmsys.org/blog/2023-06-22-leaderboard/ , [Nous-Hermes-13B](https://huggingface.co/NousResearch/Nous-Hermes-13b) isn't even in the top 10.\r\n> \r\n> @ypeleg can you please clarify:\r\n> \r\n> > some people on reddit are already starting to say that on certain prompts it is \"at the lev",
          "created_at": "2023-07-21T16:11:25Z"
        },
        {
          "author": "abrichr",
          "body": "https://huggingface.co/NousResearch/Yarn-Mistral-7b-128k\n\n> Nous-Yarn-Mistral-7b-128k is a state-of-the-art language model for long context, further pretrained on long context data for 1500 steps using the YaRN extension method. It is an extension of Mistral-7B-v0.1 and supports a 128k token context",
          "created_at": "2023-11-11T20:24:23Z"
        }
      ]
    },
    {
      "issue_number": 522,
      "title": "Investigate GLaMM",
      "body": "### Feature request\n\nHow can we incorporate https://mbzuai-oryx.github.io/groundingLMM/ ?\r\n\r\n\n\n### Motivation\n\n> Grounding Large Multimodal Model (GLaMM) is an end-to-end trained LMM which provides visual grounding capabilities with the flexibility to process both image and region inputs. This enables the new unified task of Grounded Conversation Generation that combines phrase grounding, referring expression segmentation and vision-language conversations. Equipped with the capability for detailed region understanding, pixel-level groundings, and conversational abilities, GLaMM offers a versatile capability to interact with visual inputs provided by the user at multiple granularity levels (objects, object parts, attributes, relationships and holistic scene understanding).\r\n",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-11-11T20:11:37Z",
      "updated_at": "2023-11-11T20:11:37Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/522/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/522",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/522",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:41.679857",
      "comments": []
    },
    {
      "issue_number": 473,
      "title": "[Bug]: Add Visual Studio C++ Redistributable Installation in Powershell Script",
      "body": "### Describe the bug\r\n\r\nI expected that the installation script (powershell) would work on a fresh installation of Windows,\r\n\r\nBut. it gave a `DLL Load Error`. This error is related to `VS C++ Redist` being not on the machine.\r\n\r\nSee: https://github.com/OpenAdaptAI/OpenAdapt/pull/449#issuecomment-1677044701 and https://github.com/OpenAdaptAI/OpenAdapt/pull/449#issuecomment-1669999300.\r\n\r\nHence, VS C++ Redist.'s installation should be added in the `install_powershell.ps1` script.\r\n\r\nSee the old script commit here for reference for  VS C++ Redist installation: https://github.com/KrishPatel13/install/blob/main/install_puterbot.ps1\r\n\r\n### To Reproduce\r\n\r\nI use Windows.\r\n\r\n1. On a Fresh Windows Installation, run the command in a powershell terminal.\r\n\r\nFor Command to test read https://github.com/OpenAdaptAI/OpenAdapt/pull/449#issuecomment-1669956212 ",
      "state": "closed",
      "author": "KrishPatel13",
      "author_type": "User",
      "created_at": "2023-08-20T03:08:16Z",
      "updated_at": "2023-11-11T17:28:46Z",
      "closed_at": "2023-11-11T17:28:46Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/473/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KrishPatel13"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/473",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/473",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:41.679872",
      "comments": []
    },
    {
      "issue_number": 521,
      "title": "Investigate ReAct",
      "body": "### Feature request\n\nHow can we incorporate the ideas in https://react-lm.github.io/ ?\n\n### Motivation\n\n> In this paper, we explore the use of LLMs to generate both reasoning traces and task-specific actions in an interleaved manner, allowing for greater synergy between the two: reasoning traces help the model induce, track, and update action plans as well as handle exceptions, while actions allow it to interface with external sources, such as knowledge bases or environments, to gather additional information. ",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-11-11T14:52:28Z",
      "updated_at": "2023-11-11T14:52:28Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/521/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/521",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/521",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:41.679876",
      "comments": []
    },
    {
      "issue_number": 520,
      "title": "Implement MiniGPT-v2",
      "body": "### Feature request\r\n\r\nWe would like to implement https://minigpt-v2.github.io/ as a `CompletionProvider`.\r\n\r\nSee also https://www.reddit.com/r/MachineLearning/comments/17b7iyy/r_minigptv2_large_language_model_as_a_unified/\r\n\r\n### Motivation\r\n\r\n> After our three-stage training, the experimental results show that MiniGPT-v2 achieves strong performance on many visual question answering and visual grounding benchmarks compared to other vision-language generalist models.\r\n\r\n> v2 is a developed version that can ground objects that it speaks about as it generates. text. From this aspect, it ground objects better than GPT4-V; you may see Jun Chen (my student)'s post https://twitter.com/garvinchen2/status/1714113425561784559",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-11-10T21:08:22Z",
      "updated_at": "2023-11-10T21:09:43Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/520/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/520",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/520",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:41.679879",
      "comments": []
    },
    {
      "issue_number": 519,
      "title": "Explore GPT-4V-Act / Set-of-Mark Prompting",
      "body": "### Feature request\r\n\r\nHow can we take incorporate the ideas in https://github.com/ddupont808/GPT-4V-Act, e.g.  Set-of-Mark prompting (https://arxiv.org/abs/2310.11441 / https://github.com/microsoft/SoM)?\r\n\r\nSee also https://www.reddit.com/r/MachineLearning/comments/17cy0j7/d_p_web_browsing_uibased_ai_agent_gpt4vact/\r\n\r\n### Motivation\r\n\r\n> GPT-4V-Act serves as an eloquent multimodal AI assistant that harmoniously combines GPT-4V(ision) with a web browser. It's designed to mirror the input and output of a human operator—primarily screen feedback and low-level mouse/keyboard interaction. The objective is to foster a smooth transition between human-computer operations, facilitating the creation of tools that considerably boost the accessibility of any user interface (UI), aid workflow automation, and enable automated UI testing.\r\n\r\n> GPT-4V-Act leverages both [GPT-4V(ision)](https://openai.com/research/gpt-4v-system-card) and [Set-of-Mark Prompting](https://arxiv.org/abs/2310.11441), together with a tailored auto-labeler. This auto-labeler assigns a unique numerical ID to each interactable UI element.\r\n\r\n> By incorporating a task and a screenshot as input, GPT-4V-Act can deduce the subsequent action required to accomplish a task. For mouse/keyboard output, it can refer to the numerical labels for exact pixel coordinates.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-11-10T21:02:05Z",
      "updated_at": "2023-11-10T21:06:50Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/519/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/519",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/519",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:41.679883",
      "comments": []
    },
    {
      "issue_number": 518,
      "title": "Explore Voyager",
      "body": "### Feature request\n\nHow can we take advantage of the ideas in https://arxiv.org/abs/2305.16291 / https://github.com/MineDojo/Voyager ?\n\n### Motivation\n\n>  Voyager consists of three key components: 1) an automatic curriculum that maximizes exploration, 2) an ever-growing skill library of executable code for storing and retrieving complex behaviors, and 3) a new iterative prompting mechanism that incorporates environment feedback, execution errors, and self-verification for program improvement.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-11-10T20:59:07Z",
      "updated_at": "2023-11-10T20:59:07Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/518/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/518",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/518",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:41.679887",
      "comments": []
    },
    {
      "issue_number": 508,
      "title": "Document pyenv",
      "body": "### Feature request\n\nIf the user doesn't have the required Python version already installed (e.g. Python 3.10 at time of writing), `poetry install` will fail.\r\n\r\nWe would like to document the steps required in this case.\r\n\r\nAccording to https://python-poetry.org/docs/managing-environments/ Poetry is compatible with `pyenv`:\r\n\r\nhttps://github.com/pyenv/pyenv#getting-pyenv\n\n### Motivation\n\nEase of use for users without the required Python version installed.\n\n\n<details open>\n<summary>Checklist</summary>\n\n- [X] Modify `README.md` ✓ https://github.com/OpenAdaptAI/OpenAdapt/commit/9385bce62d35c94126f88c7eb6776b6276d2dbb2\n- [X] Check `README.md` ✗\n- [X] Modify `README.md` ✓ https://github.com/OpenAdaptAI/OpenAdapt/commit/daed95e2c896debbb7f1df42b7089510e805e851\n- [X] Check `README.md` ✗\n- [X] Modify `README.md` ✓ https://github.com/OpenAdaptAI/OpenAdapt/commit/7e1b66ca5435ee8b3d525f382235109bf2dc3e4b\n- [X] Check `README.md` ✗\n- [X] Modify `README.md` ! No changes made\n- [X] Check `README.md` ✗\n- [X] Check `README.md` ✗\n- [X] Check `README.md` ✗\n\n![Flowchart](http://24.199.78.105:8082/public/7cfb0744f51ec0e2cf8c0cf17de8dc63a2dd3bf619e151bb44bca586ec8ca3e6_508_flowchart.svg)\n</details>\n",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-10-21T06:21:07Z",
      "updated_at": "2023-11-10T20:03:00Z",
      "closed_at": null,
      "labels": [
        "documentation",
        "enhancement",
        "sweep"
      ],
      "label_count": 3,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/508/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 1,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/508",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/508",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:41.679891",
      "comments": [
        {
          "author": "sweep-ai[bot]",
          "body": "## Here's the PR! [https://github.com/OpenAdaptAI/OpenAdapt/pull/517](https://github.com/OpenAdaptAI/OpenAdapt/pull/517).\n<div align='center'>⚡ <b>Sweep Basic Tier</b>: I'm using GPT-4. You have 5 GPT-4 tickets left for the month and 3 for the day.<br/><br/> For more GPT-4 tickets, visit <a href=htt",
          "created_at": "2023-11-10T19:40:02Z"
        }
      ]
    },
    {
      "issue_number": 475,
      "title": "System tray notification on CLI record.py",
      "body": "### Feature request\n\nSystem tray notification on CLI record.py\n\n### Motivation\n\n_No response_",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-08-21T17:14:47Z",
      "updated_at": "2023-11-10T19:32:03Z",
      "closed_at": "2023-11-10T19:32:03Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/475/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/475",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/475",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:41.894681",
      "comments": [
        {
          "author": "onejmi",
          "body": "Hi @abrichr ,\r\n\r\nI'd like to try to implement this feature. \r\n\r\nA few questions that I have are:\r\n\r\n- When should the system tray notification appear (I assume at the end of the recording process, maybe at the start as well after all event writers have started)?\r\n\r\n- Are there any particular piece(s",
          "created_at": "2023-09-02T17:19:07Z"
        },
        {
          "author": "abrichr",
          "body": "Thanks for your patience @onejmi ! It looks like @0dm went ahead and implemented this.\r\n\r\nMea culpa on the delayed response, I've been a bit preoccupied with other projects and family issues, but am now heads down on OpenAdapt.\r\n\r\nPlease feel free to pick another issue, and/or review https://github.",
          "created_at": "2023-11-10T19:17:54Z"
        }
      ]
    },
    {
      "issue_number": 513,
      "title": "Explore GPT4-V",
      "body": "### Feature request\n\nHow can we take advantage of https://platform.openai.com/docs/guides/vision ?\r\n\r\n> GPT-4 with Vision, sometimes referred to as [GPT-4V](https://openai.com/research/gpt-4v-system-card) or gpt-4-vision-preview in the API, allows the model to take in images and answer questions about them.\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-11-07T16:02:58Z",
      "updated_at": "2023-11-09T13:51:31Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "good first issue"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/513/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/513",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/513",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:42.164524",
      "comments": []
    },
    {
      "issue_number": 512,
      "title": "Explore Assistants API",
      "body": "### Feature request\n\nHow can we take advantage of https://platform.openai.com/docs/assistants/overview ?\r\n\r\n> An Assistant has instructions and can leverage models, tools, and knowledge to respond to user queries. The Assistants API currently supports three types of [tools](https://platform.openai.com/docs/assistants/tools): Code Interpreter, Retrieval, and Function calling.\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-11-07T16:02:26Z",
      "updated_at": "2023-11-07T16:02:26Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/512/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/512",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/512",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:42.164539",
      "comments": []
    },
    {
      "issue_number": 507,
      "title": "Implement CogVLM",
      "body": "### Feature request\n\nWe would like to implement https://github.com/THUDM/CogVLM as a `CompletionProvider`.\n\n### Motivation\n\n> CogVLM is a powerful open-source visual language model (VLM). CogVLM-17B has 10 billion vision parameters and 7 billion language parameters.\r\n\r\n> CogVLM-17B achieves state-of-the-art performance on 10 classic cross-modal benchmarks, including NoCaps, Flicker30k captioning, RefCOCO, RefCOCO+, RefCOCOg, Visual7W, GQA, ScienceQA, VizWiz VQA and TDIUC, and rank the 2nd on VQAv2, OKVQA, TextVQA, COCO captioning, etc., surpassing or matching PaLI-X 55B. CogVLM can also [chat with you](http://36.103.203.44:7861/) about images.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-10-20T01:32:01Z",
      "updated_at": "2023-11-07T16:00:56Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "good first issue"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/507/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/507",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/507",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:42.164543",
      "comments": []
    },
    {
      "issue_number": 438,
      "title": "Explore migrating to Discord",
      "body": "### Feature request\r\n\r\nWe would like to explore migrating to Discord, e.g.: https://www.wired.com/story/how-to-move-slack-archive-to-discord/#:~:text=To%20summarize%3A%20You%20need%20to,all%20posts%20from%20a%20channel.\r\n\r\nThis includes price forecast comparisons.\r\n\r\n### Motivation\r\n\r\nhttps://zapier.com/blog/slack-vs-discord/\r\n\r\n> Given these differences, which service should you use? Honestly, I think you should trust the branding (and this is coming from someone who does not, as a rule, trust branding). [Discord is ideal for online communities](https://zapier.com/blog/discord-welcome), while Slack is better for businesses. It's just what they're built for.",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-27T02:06:14Z",
      "updated_at": "2023-11-03T23:52:05Z",
      "closed_at": "2023-11-03T23:52:05Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/438/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/438",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/438",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:42.164547",
      "comments": []
    },
    {
      "issue_number": 506,
      "title": "Implement IDEFICS",
      "body": "### Feature request\r\n\r\nWe would like to implement https://huggingface.co/blog/idefics (https://huggingface.co/HuggingFaceM4/idefics-80b-instruct) as a `CompletionProvider`.\r\n\r\n### Motivation\r\n\r\n> IDEFICS is based on [Flamingo](https://huggingface.co/papers/2204.14198), a state-of-the-art visual language model initially developed by DeepMind, which has not been released publicly. Similarly to GPT-4, the model accepts arbitrary sequences of image and text inputs and produces text outputs. IDEFICS is built solely on publicly available data and models (LLaMA v1 and OpenCLIP) and comes in two variants—the base version and the instructed version.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-10-20T01:30:57Z",
      "updated_at": "2023-10-20T01:31:30Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "good first issue"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/506/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/506",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/506",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:44.046129",
      "comments": []
    },
    {
      "issue_number": 246,
      "title": "[Bug]: empty LICENSE",
      "body": "### Describe the bug\n\nLICENSE is empty\n\n### To Reproduce\n\nView LICENSE\n\n### Relevant log output\n\n_No response_\n\n### Upload Screenshot\n\n_No response_\n\n### What Operating System did you use?\n\nOther\n\n### Additional Context\n\nThe purpose of this issue is to host the discussion around licensing",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-13T23:07:47Z",
      "updated_at": "2023-10-19T06:46:41Z",
      "closed_at": "2023-10-19T06:46:41Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/246/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/246",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/246",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:44.046144",
      "comments": [
        {
          "author": "abrichr",
          "body": "Fixed in https://github.com/OpenAdaptAI/OpenAdapt/pull/505",
          "created_at": "2023-10-19T06:46:34Z"
        }
      ]
    },
    {
      "issue_number": 504,
      "title": "Implement Fuyu-8B",
      "body": "### Feature request\n\nWe would like to implement https://www.adept.ai/blog/fuyu-8b as a `CompletionProvider`.\n\n### Motivation\n\n> We’re releasing Fuyu-8B, a small version of the multimodal[1](https://www.adept.ai/blog/fuyu-8b#user-content-fn-mmdefinition) model that powers our product. The model is [available on HuggingFace](https://huggingface.co/adept/fuyu-8b). We think Fuyu-8B is exciting because:\r\n> 1. It has a much simpler architecture and training procedure than other multi-modal models, which makes it easier to understand, scale, and deploy.\r\n> 2. It’s designed from the ground up for digital agents, so it can support arbitrary image resolutions, answer questions about graphs and diagrams, answer UI-based questions, and do fine-grained localization on screen images.\r\n> 3. It’s fast - we can get responses for large images in less than 100 milliseconds.\r\n> 4. Despite being optimized for our use-case, it performs well at standard image understanding benchmarks such as visual question-answering and natural-image-captioning.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-10-19T04:06:08Z",
      "updated_at": "2023-10-19T04:06:16Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "good first issue"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/504/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/504",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/504",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:44.376201",
      "comments": []
    },
    {
      "issue_number": 503,
      "title": "Explore MemGPT",
      "body": "### Feature request\n\nHow can we take advantage of https://memgpt.ai/?\n\n### Motivation\n\n> Using this technique, we introduce MemGPT (Memory-GPT), a system that intelligently manages different memory tiers in order to effectively provide extended context within the LLM's limited context window, and utilizes interrupts to manage control flow between itself and the user. We evaluate our OS-inspired design in two domains where the limited context windows of modern LLMs severely handicaps their performance: document analysis, where MemGPT is able to analyze large documents that far exceed the underlying LLM's context window, and multi-session chat, where MemGPT can create conversational agents that remember, reflect, and evolve dynamically through long-term interactions with their users.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-10-16T11:30:30Z",
      "updated_at": "2023-10-16T11:30:30Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/503/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/503",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/503",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:44.376215",
      "comments": []
    },
    {
      "issue_number": 501,
      "title": "[Bug]: Issue when running install.sh (repo not found)",
      "body": "### Describe the bug\r\n\r\nWhen running the Installation Script \r\n\r\n` /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/OpenAdaptAI/OpenAdapt/HEAD/install/install_openadapt.sh)\"`\r\n\r\nI'm getting the following output:\r\n\r\n```\r\n+ pythonCmd=python3.10\r\n+ pythonVerStr='Python 3.10*'\r\n+ pythonInstallerLoc=https://www.python.org/ftp/python/3.10.11/python-3.10.11-macos11.pkg\r\n+ BRANCH=main\r\n+ REPO=https://github.com/MLDSAI/OpenAdapt.git\r\n+ REPO_URL=https://github.com/https://github.com/MLDSAI/OpenAdapt.git\r\n+ CheckCMDExists brew\r\n+ command=brew\r\n+ command -v brew\r\n+ return 0\r\n+ CheckCMDExists git\r\n+ command=git\r\n+ command -v git\r\n+ return 0\r\n+ CheckCMDExists tesseract\r\n+ command=tesseract\r\n+ command -v tesseract\r\n+ return 0\r\n+ CheckPythonExists\r\n+ CheckCMDExists python3.10\r\n+ command=python3.10\r\n+ command -v python3.10\r\n+ return 0\r\n+ return\r\n+ '[' -d OpenAdapt ']'\r\n+ RunAndCheck 'git clone https://github.com/https://github.com/MLDSAI/OpenAdapt.git' 'Clone git repo'\r\n+ git clone https://github.com/https://github.com/MLDSAI/OpenAdapt.git\r\nCloning into 'OpenAdapt'...\r\nremote: Not Found\r\nfatal: repository 'https://github.com/https://github.com/MLDSAI/OpenAdapt.git/' not found\r\n+ echo 'Failed: Clone git repo'\r\nFailed: Clone git repo\r\n+ Cleanup\r\n+ '[' -d ../OpenAdapt ']'\r\n+ exit 1\r\n```\r\n\r\nI think the url in the install.sh script needs to be updated. Additionally, the URL includes \"https://github.com\", so I think the $REPO variable needs to be truncated to just be \"OpenAdaptAI/OpenAdapt\". \r\n\r\n### To Reproduce\r\n\r\nSteps to reproduce:\r\n1. On MacOS, open new terminal an run ` /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/OpenAdaptAI/OpenAdapt/HEAD/install/install_openadapt.sh)\"`\r\n2. Observe output, should include `fatal: repository 'https://github.com/https://github.com/MLDSAI/OpenAdapt.git/' not found`\r\n",
      "state": "closed",
      "author": "abhi1345",
      "author_type": "User",
      "created_at": "2023-10-14T18:52:43Z",
      "updated_at": "2023-10-16T11:29:42Z",
      "closed_at": "2023-10-16T11:29:42Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/501/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/501",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/501",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:44.376219",
      "comments": [
        {
          "author": "abrichr",
          "body": "Thank you for reporting and fixing @abhi1345 !",
          "created_at": "2023-10-16T11:29:42Z"
        }
      ]
    },
    {
      "issue_number": 499,
      "title": "Implement streaming-llm",
      "body": "### Feature request\n\nhttps://github.com/mit-han-lab/streaming-llm\n\n### Motivation\n\n> We deploy LLMs for infinite-length inputs without sacrificing efficiency and performance.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-10-02T17:40:53Z",
      "updated_at": "2023-10-02T17:40:53Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/499/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/499",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/499",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:44.815558",
      "comments": []
    },
    {
      "issue_number": 437,
      "title": "Implement pydantic throughout",
      "body": "### Feature request\r\n\r\nWe would like to implement https://docs.pydantic.dev/latest/ everywhere it makes sense.\r\n\r\n### Motivation\r\n\r\nWe like types.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-27T00:15:59Z",
      "updated_at": "2023-09-24T16:28:55Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "good first issue"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 6,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/437/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/437",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/437",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:44.815572",
      "comments": [
        {
          "author": "ADV1K",
          "body": "Hey, I would like to work on it. I have worked previously with Pydantic.\r\n\r\nDo you happen to have any pointers on where we could start?\r\n\r\nConfig management is the perfect place to start using Pydantic.\r\nhttps://docs.pydantic.dev/latest/usage/pydantic_settings/\r\n",
          "created_at": "2023-07-27T06:05:39Z"
        },
        {
          "author": "abrichr",
          "body": "Thanks @ADV1K !\r\n\r\nCan you please share your thoughts on the value that Pydantic brings, and where it is typically appropriate?",
          "created_at": "2023-07-28T18:52:55Z"
        },
        {
          "author": "ADV1K",
          "body": "It is typically appropriate to use Pydantic when working with data that requires a specific structure or format.\r\nfor example, instead of passing Python dicts around functions, we can pass Pydantic models which are structured and can only perform type validation to ensure data being passed is in the",
          "created_at": "2023-07-28T22:58:42Z"
        },
        {
          "author": "abrichr",
          "body": "`config.py` and `models.py` sound like the right places to me!",
          "created_at": "2023-08-01T12:22:28Z"
        },
        {
          "author": "Jaid844",
          "body": "HEY, @ADV1K are you solving this issue?",
          "created_at": "2023-09-17T12:20:50Z"
        }
      ]
    },
    {
      "issue_number": 498,
      "title": "Explore diffusion_policy",
      "body": "### Feature request\n\nHow can we re-purpose https://github.com/real-stanford/diffusion_policy?\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-09-21T12:12:44Z",
      "updated_at": "2023-09-21T12:12:44Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/498/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/498",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/498",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:45.007302",
      "comments": []
    },
    {
      "issue_number": 497,
      "title": "Implement Xwin-LM",
      "body": "### Feature request\n\nWe want to implement https://github.com/Xwin-LM/Xwin-LM as a CompletionProvider\n\n### Motivation\n\n> Notably, Xwin-LM-70B-V0.1 has eclipsed GPT-4 for the first time, achieving an impressive win-rate of 95.57% to Text-Davinci-003 and 60.61% to GPT-4.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-09-20T18:11:34Z",
      "updated_at": "2023-09-20T18:11:34Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/497/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/497",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/497",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:45.007326",
      "comments": []
    },
    {
      "issue_number": 496,
      "title": "Investigate Nougat",
      "body": "### Feature request\n\nHow well does https://github.com/facebookresearch/nougat work on desktop screenshots?\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-09-14T14:14:47Z",
      "updated_at": "2023-09-14T14:14:47Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/496/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/496",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/496",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:45.007333",
      "comments": []
    },
    {
      "issue_number": 494,
      "title": "Implement Persimmon-8B",
      "body": "### Feature request\n\nWe would like to implement https://www.adept.ai/blog/persimmon-8b as a `CompletionProvider`.\r\n\r\n\n\n### Motivation\n\n> The model has 70k unused embeddings for multimodal extensions, and has sparse activations.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-09-10T12:18:36Z",
      "updated_at": "2023-09-10T12:18:36Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "help wanted"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/494/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/494",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/494",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:45.007342",
      "comments": []
    },
    {
      "issue_number": 492,
      "title": "Investigate YaRN",
      "body": "### Feature request\n\nShould we implement YaRN as a CompletionProvider?\r\n\r\nhttps://www.reddit.com/r/MachineLearning/comments/16a1hfe/r_yarn_efficient_context_window_extension_of/\r\n\r\nhttps://github.com/jquesnelle/yarn\r\n\r\nhttps://arxiv.org/pdf/2309.00071.pdf\r\n\r\nhttps://twitter.com/EnricoShippole/status/1697317625116742119?s=20\n\n### Motivation\n\n> 128k context windows",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-09-07T08:40:47Z",
      "updated_at": "2023-09-07T08:40:47Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/492/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/492",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/492",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:45.007350",
      "comments": []
    },
    {
      "issue_number": 491,
      "title": "Investigate Autocompressors",
      "body": "### Feature request\n\nHow can we take advantage of AutoCompressors to compress prompts?\r\n\r\nhttps://arxiv.org/pdf/2305.14788.pdf\r\n\r\nhttps://github.com/princeton-nlp/AutoCompressors\n\n### Motivation\n\nCompressing prompts (https://github.com/jayelm/gisting/issues/13)",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-09-06T09:52:16Z",
      "updated_at": "2023-09-06T09:52:16Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/491/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/491",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/491",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:45.007356",
      "comments": []
    },
    {
      "issue_number": 330,
      "title": "Investigate Other Redaction Libraries",
      "body": "### Feature request\r\n\r\nPresidio Image Redaction is not completely reliable right now.\r\nAs it not redacting all PII/PHI.\r\n\r\n\r\n### Motivation\r\n\r\nI am frustrated when I investigated https://github.com/MLDSAI/OpenAdapt/pull/328#issuecomment-1611909662  so this feature would Investigate different Image Redaction Libraries, testing on sample Images where Presidio Image Redaction Fails:\r\n\r\neg. https://github.com/MLDSAI/OpenAdapt/pull/328#issuecomment-1611909662",
      "state": "closed",
      "author": "KrishPatel13",
      "author_type": "User",
      "created_at": "2023-06-28T20:14:51Z",
      "updated_at": "2023-09-01T12:45:28Z",
      "closed_at": "2023-09-01T12:45:28Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 6,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/330/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KrishPatel13"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/330",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/330",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:45.007365",
      "comments": [
        {
          "author": "KrishPatel13",
          "body": "1. OpenRedact\r\n    - Github: https://github.com/openredact/anonymizer\r\n    - Article: https://medium.com/@openredact/anonymizer-a-framework-for-text-anonymization-499855f639d4\r\n   - Other: Related to #272           \r\n           - From Article: \r\n<img width=\"535\" alt=\"image\" src=\"https://github.com/M",
          "created_at": "2023-06-29T05:07:02Z"
        },
        {
          "author": "KrishPatel13",
          "body": "2. Open-Data-Anonymizer\r\n    - Github: https://github.com/ArtLabss/open-data-anonymizer\r\n    - Useful for Redaction of People Faces (personal images), PDF.\r\n    - See some nice usage examples:\r\n            - https://github.com/ArtLabss/open-data-anonymizer\r\n\r\nSome Demo Pictures:\r\nPDF Redaction: <img",
          "created_at": "2023-06-29T05:23:45Z"
        },
        {
          "author": "KrishPatel13",
          "body": "3. [BMW-Anonymization-API](https://github.com/BMW-InnovationLab/BMW-Anonymization-API)\r\n    - Github: https://github.com/BMW-InnovationLab/BMW-Anonymization-API\r\n    - Useful for Video Redaction (specifically, object anonymization like. People faces, identity. etc. )\r\n        - https://github.com/BM",
          "created_at": "2023-06-29T05:29:43Z"
        },
        {
          "author": "KrishPatel13",
          "body": "Cape-Privacy is good!\r\n\r\n- Website: https://docs.capeprivacy.com/getting-started\r\n\r\n- API Reference: https://api.capeprivacy.com/v1/redoc\r\n\r\n- \"The API exposes granular control of essential privacy tools including [de-identification](https://api.capeprivacy.com/v1/redoc#tag/Privacy/operation/Deident",
          "created_at": "2023-07-21T15:34:26Z"
        },
        {
          "author": "abrichr",
          "body": "https://github.com/OpenAdaptAI/OpenAdapt/pull/418",
          "created_at": "2023-07-21T18:26:31Z"
        }
      ]
    },
    {
      "issue_number": 446,
      "title": "Manage Recording DB",
      "body": "### Feature request\r\n\r\nI'd like a way to list all recordings and delete specific ones, from CLI. Currently, the #300 PR has methods for displaying all replays, but a way to do this through CLI would be beneficial.\r\n\r\nusage could be something like\r\n`python -m openadapt.db.list`\r\n```\r\n> [2] recording_2 : <timestamp> ...\r\n> [1] test: <timestamp> ...\r\n```\r\n`python -m openadapt.db.remove 2`\r\n```\r\n> are you sure you want to delete recording_2? (y/n)\r\n```\r\n`y`\r\n```\r\n> deleted recording_2\r\n```\r\n`python -m openadapt.db.list`\r\n```\r\n> [1] test: <timestamp> ...\r\n```\r\n\r\n**There should also be a way to remove the latest recording by default**\r\n\r\nIn the future, maybe we can have a `backup` and `add` command too, to add recordings similar to #223 \r\n### Motivation\r\n\r\nI have a *broken* recording, which makes my latest visualization fail, but the previous one works. I'd like to remove this recording while still preserving my working one. This may be useful for training later.\r\n\r\n",
      "state": "closed",
      "author": "0dm",
      "author_type": "User",
      "created_at": "2023-07-31T15:44:29Z",
      "updated_at": "2023-08-29T22:26:36Z",
      "closed_at": "2023-08-29T22:26:36Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/446/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 1,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/446",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/446",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:45.442616",
      "comments": []
    },
    {
      "issue_number": 487,
      "title": "Investigate langchain parsers",
      "body": "### Feature request\n\nHow can we use https://python.langchain.com/docs/modules/model_io/output_parsers/ ? How does this compare to https://github.com/OpenAdaptAI/OpenAdapt/issues/481 (jsonformer), https://github.com/OpenAdaptAI/OpenAdapt/issues/227 (LMQL), or similar?\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-08-29T19:57:20Z",
      "updated_at": "2023-08-29T19:57:20Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/487/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/487",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/487",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:45.442636",
      "comments": []
    },
    {
      "issue_number": 183,
      "title": "Error getting focused window (macOS)",
      "body": "I noticed that record & replay fail when in Google Meets, but this also extends to calls like Discord (with no video being sent)\r\n\r\nTo reproduce:  I just got into an empty discord voice channel and ran NaiveReplay. This still occurs if I am \"deafened\" (no microphone or audio being transmitted)\r\n\r\nAn example of the message, followed by a segfault:\r\n```bat\r\n2023-05-27 01:36:14.192 | ERROR    | openadapt.window._macos:get_active_window:69 - Error getting focused window\r\nzsh: segmentation fault  python3 -m openadapt.record \"testing\"\r\n```\r\nHowever, the recording still proceeds and stalls at this stage:\r\n ```bat\r\n 2023-05-27 01:36:15.198 | INFO     | __mp_main__:write_events:215 - event_type='window' starting\r\n2023-05-27 01:36:15.221 | INFO     | __mp_main__:write_events:215 - event_type='screen' starting\r\n2023-05-27 01:36:15.228 | INFO     | __mp_main__:write_events:215 - event_type='action' starting\r\n ```\r\n I noticed my fans started spinning more aggressively after failed recordings, and received this from `ps`\r\n ```bat\r\n   PID TTY           TIME CMD\r\n 2591 ttys000    0:00.13 -zsh\r\n 2651 ttys000    0:00.03 /opt/homebrew/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/Resources/Python.app/Contents/MacOS/Python -c from multiprocessing.resource_tracker import main;main(12)\r\n 2652 ttys000   12:16.87 /opt/homebrew/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/Resources/Python.app/Contents/MacOS/Python -c from multiprocessing.spawn import spawn_main; spawn_main(tra\r\n 2653 ttys000   12:21.22 /opt/homebrew/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/Resources/Python.app/Contents/MacOS/Python -c from multiprocessing.spawn import spawn_main; spawn_main(tra\r\n 2654 ttys000   12:21.63 /opt/homebrew/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/Resources/Python.app/Contents/MacOS/Python -c from multiprocessing.spawn import spawn_main; spawn_main(tra\r\n 2682 ttys000    0:00.03 /opt/homebrew/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/Resources/Python.app/Contents/MacOS/Python -c from multiprocessing.resource_tracker import main;main(9)\r\n 2683 ttys000   12:14.65 /opt/homebrew/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/Resources/Python.app/Contents/MacOS/Python -c from multiprocessing.spawn import spawn_main; spawn_main(tra\r\n 2684 ttys000   12:14.18 /opt/homebrew/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/Resources/Python.app/Contents/MacOS/Python -c from multiprocessing.spawn import spawn_main; spawn_main(tra\r\n 2685 ttys000   12:14.90 /opt/homebrew/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/Resources/Python.app/Contents/MacOS/Python -c from multiprocessing.spawn import spawn_main; spawn_main(tra\r\n 3279 ttys000    0:00.03 /opt/homebrew/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/Resources/Python.app/Contents/MacOS/Python -c from multiprocessing.resource_tracker import main;main(9)\r\n 3280 ttys000    1:40.91 /opt/homebrew/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/Resources/Python.app/Contents/MacOS/Python -c from multiprocessing.spawn import spawn_main; spawn_main(tra\r\n 3281 ttys000    1:40.87 /opt/homebrew/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/Resources/Python.app/Contents/MacOS/Python -c from multiprocessing.spawn import spawn_main; spawn_main(tra\r\n 3282 ttys000    1:36.87 /opt/homebrew/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/Resources/Python.app/Contents/MacOS/Python -c from multiprocessing.spawn import spawn_main; spawn_main(tra\r\n 3390 ttys000    0:00.03 /opt/homebrew/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/Resources/Python.app/Contents/MacOS/Python -c from multiprocessing.resource_tracker import main;main(9)\r\n 3391 ttys000    0:03.96 /opt/homebrew/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/Resources/Python.app/Contents/MacOS/Python -c from multiprocessing.spawn import spawn_main; spawn_main(tra\r\n 3392 ttys000    0:04.33 /opt/homebrew/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/Resources/Python.app/Contents/MacOS/Python -c from multiprocessing.spawn import spawn_main; spawn_main(tra\r\n 3393 ttys000    0:04.17 /opt/homebrew/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/Resources/Python.app/Contents/MacOS/Python -c from multiprocessing.spawn import spawn_main; spawn_main(tra\r\n ```\r\n Uh oh\r\n should  `pkill -f python`\r\nresult:\r\n\r\n```bat\r\n/opt/homebrew/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/resource_tracker.py:224: UserWarning: resource_tracker: There appear to be 17 leaked semaphore objects to clean up at shutdown\r\n  warnings.warn('resource_tracker: There appear to be %d '\r\n``` \r\n (x4),\r\n  but processes are all still killed.\r\n \r\n Workarounds:\r\n Just leaving the call instantly resolves all issues, but this isn't the best approach.\r\n \r\n Possible fixes:\r\n - Notify the user that something is wrong, and use a fall-back recording method without window states.\r\n - Kill the process via terminate() / SIGTERM if we failed to capture window state\r\n \r\n Best solution would be to get around this entirely, but I'm not entirely sure what is actually causing this, since other actions like streaming music on spotify has no effect on this.\r\n",
      "state": "closed",
      "author": "0dm",
      "author_type": "User",
      "created_at": "2023-05-27T06:10:41Z",
      "updated_at": "2023-08-29T07:26:25Z",
      "closed_at": "2023-08-29T07:26:25Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/183/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/183",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/183",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:45.442643",
      "comments": [
        {
          "author": "abrichr",
          "body": "Thanks @0dm ! I noticed similar behavior, my assumption is that it has something to do with conflicting requests to the accessibility API. Resolving this may require stepping through that to understand.\r\n\r\nI haven't seen a similar output from `ps` on my machine however. Google led me to this issue o",
          "created_at": "2023-05-27T17:38:28Z"
        },
        {
          "author": "0dm",
          "body": "No Pyinstaller or GUI",
          "created_at": "2023-05-27T19:12:47Z"
        },
        {
          "author": "abrichr",
          "body": "We likely need to request permissions:\r\n\r\nhttps://developer.apple.com/documentation/bundleresources/information_property_list/protected_resources/requesting_authorization_for_media_capture_on_macos\r\n\r\nPossibly related:\r\n\r\nhttps://stackoverflow.com/questions/70228524/macos-request-files-and-folders-a",
          "created_at": "2023-07-02T14:25:58Z"
        }
      ]
    },
    {
      "issue_number": 322,
      "title": "Fix pytest warnings",
      "body": "### Feature request\n\n@0dm to paste\n\n### Motivation\n\n_No response_",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-26T18:00:28Z",
      "updated_at": "2023-08-28T21:30:38Z",
      "closed_at": "2023-08-28T21:30:38Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/322/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/322",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/322",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:45.862032",
      "comments": [
        {
          "author": "0dm",
          "body": "# sample\r\n```bat\r\nopenadapt on  feature/record_pb [$!] is 📦 v0.1.0 via 🐍 v3.10.12 (openadapt-py3.10) took 31s \r\nλ pytest\r\n============================================================== test session starts ===============================================================\r\nplatform darwin -- Python 3.1",
          "created_at": "2023-06-26T18:01:17Z"
        },
        {
          "author": "FFFiend",
          "body": "https://github.com/matplotlib/matplotlib/issues/25244\r\nhttps://github.com/pypa/setuptools/issues/1111\r\nRelevant discussions, ```setuptools``` seems to be the culprit.",
          "created_at": "2023-06-26T19:29:03Z"
        },
        {
          "author": "KrishPatel13",
          "body": "Feel free to remove the following 2 lines of code (1: https://github.com/MLDSAI/OpenAdapt/blob/main/tests/openadapt/test_scrub.py#L5C11-L5C11, 2: https://github.com/MLDSAI/OpenAdapt/blob/main/tests/openadapt/test_scrub.py#L29C2-L29C2) from test_scrub.py, and that will give you 8 Warning now:\r\n\r\n```\r",
          "created_at": "2023-06-26T20:51:40Z"
        },
        {
          "author": "ayewo",
          "body": "Thanks for your inputs @FFFiend and @KrishPatel13 🙏!\r\nBased on your links, there are two ways to fix the issue in `pyproject.toml`:\r\n- [`requires [\"setuptools<67.3\"]`](https://github.com/cogment/cogment-verse/pull/157/files#diff-50c86b7ed8ac2cf95bd48334961bf0530cdc77b5a56f852c5c61b89d735fd711) or;\r\n",
          "created_at": "2023-08-03T20:52:10Z"
        }
      ]
    },
    {
      "issue_number": 484,
      "title": "[Bug]: Python quit unexpectedly (MacOS)",
      "body": "### Describe the bug\r\n\r\n```\r\n          collections.deque |         151 |     92.02 KB\r\n                       type |          52 |     65.77 KB\r\n                       code |         192 |     41.55 KB\r\n                        set |         173 |     39.24 KB\r\n      weakref.ReferenceType |         512 |     36.00 KB\r\n                  frozenset |          87 |     24.10 KB\r\n2023-08-28 17:18:57.888 | INFO     | __main__:record:965 - joining...\r\n2023-08-28 17:18:57.888 | INFO     | __mp_main__:performance_stats_writer:597 - Performance stats writer done\r\n2023-08-28 17:18:57.889 | INFO     | __mp_main__:wrapper_logging:126 -  <- Leave: performance_stats_writer(None)\r\n2023-08-28 17:18:57.893 | INFO     | __mp_main__:memory_writer:644 - Memory writer done\r\n2023-08-28 17:18:58.520 | INFO     | openadapt.utils:plot_performance:725 - fpath='performance/performance-1693257532.027453.png'\r\n2023-08-28 17:18:58.839 | INFO     | __main__:record:980 - Saved recording_timestamp=1693257532.027453\r\n2023-08-28 17:18:58.841 | INFO     | __main__:wrapper_logging:126 -  <- Leave: record(None)\r\n\r\n\r\n^CFatal Python error: PyEval_RestoreThread: the function must be called with the GIL held, but the GIL is released (the current Python thread state is NULL)\r\nPython runtime state: initialized\r\n\r\nThread 0x000000030ffd6000 (most recent call first):\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/connection.py\", line 368 in _send\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/connection.py\", line 405 in _send_bytes\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/connection.py\", line 200 in send_bytes\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/queues.py\", line 250 in _feed\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/threading.py\", line 953 in run\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-4aqHBuvC-py3.10/lib/python3.10/site-packages/sentry_sdk/integrations/threading.py\", line 70 in run\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/threading.py\", line 1016 in _bootstrap_inner\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/threading.py\", line 973 in _bootstrap\r\n\r\nThread 0x0000000306fbb000 (most recent call first):\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/connection.py\", line 379 in _recv\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/connection.py\", line 414 in _recv_bytes\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/connection.py\", line 216 in recv_bytes\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/queues.py\", line 365 in get\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-4aqHBuvC-py3.10/lib/python3.10/site-packages/loguru/_handler.py\", line 272 in _queued_writer\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/threading.py\", line 953 in run\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-4aqHBuvC-py3.10/lib/python3.10/site-packages/sentry_sdk/integrations/threading.py\", line 70 in run\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/threading.py\", line 1016 in _bootstrap_inner\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/threading.py\", line 973 in _bootstrap\r\n\r\nCurrent thread 0x00000002025662c0 (most recent call first):\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/threading.py\", line 1116 in _wait_for_tstate_lock\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/threading.py\", line 1096 in join\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/queues.py\", line 199 in _finalize_join\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/util.py\", line 224 in __call__\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/util.py\", line 300 in _run_finalizers\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/util.py\", line 360 in _exit_function\r\n\r\nExtension modules: _testcapi, numpy.core._multiarray_umath, numpy.core._multiarray_tests, numpy.linalg._umath_linalg, numpy.fft._pocketfft_internal, numpy.random._common, numpy.random.bit_generator, numpy.random._bounded_integers, numpy.random._mt19937, numpy.random.mtrand, numpy.random._philox, numpy.random._pcg64, numpy.random._sfc64, numpy.random._generator, objc._objc, CoreFoundation._inlines, CoreFoundation._CoreFoundation, Foundation._Foundation, Foundation._inlines, AppKit._inlines, AppKit._AppKit, Quartz.CoreGraphics._inlines, Quartz.CoreGraphics._callbacks, Quartz.CoreGraphics._doubleindirect, Quartz.CoreGraphics._sortandmap, Quartz.CoreGraphics._coregraphics, Quartz.ImageKit._imagekit, Quartz.CoreVideo._CVPixelBuffer, Quartz.QuartzCore._quartzcore, Quartz.PDFKit._PDFKit, Quartz.QuickLookUI._QuickLookUI, HIServices._HIServices, psutil._psutil_osx, psutil._psutil_posix, pydantic.typing, pydantic.errors, pydantic.version, pydantic.utils, pydantic.class_validators, pydantic.config, pydantic.color, pydantic.datetime_parse, pydantic.validators, pydantic.networks, pydantic.types, pydantic.json, pydantic.error_wrappers, pydantic.fields, pydantic.parse, pydantic.schema, pydantic.main, pydantic.dataclasses, pydantic.annotated_types, pydantic.decorator, pydantic.env_settings, pydantic.tools, pydantic, multidict._multidict, yarl._quoting_c, aiohttp._helpers, aiohttp._http_writer, aiohttp._http_parser, aiohttp._websocket, charset_normalizer.md, frozenlist._frozenlist, tornado.speedups, sqlalchemy.cimmutabledict, greenlet._greenlet, sqlalchemy.cprocessors, sqlalchemy.cresultproxy, markupsafe._speedups, PIL._imaging, CoreText._manual, objc._machsignals, PIL._imagingft, matplotlib._c_internal_utils, matplotlib._path, kiwisolver._cext, matplotlib._image, matplotlib.backends._tkagg, PIL._imagingtk (total: 81)\r\nzsh: abort      python -m openadapt.record \"foo\"\r\n```\r\n\r\n<img width=\"260\" alt=\"image\" src=\"https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/ee61abb9-b878-4c8f-bd5e-03e4b730cd05\">\r\n\r\n\r\n### To Reproduce\r\n\r\n```\r\npython -m openadapt.record \"foo\"\r\n# wait until a writer starts, then press ctrl+c, wait a few seconds until no more output in terminal, then press ctrl+c again\r\n```",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-08-28T21:20:36Z",
      "updated_at": "2023-08-28T21:22:26Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/484/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/484",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/484",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:46.135203",
      "comments": []
    },
    {
      "issue_number": 404,
      "title": "[Bug]: PyPi does not accept direct dependencies when publishing using twine",
      "body": "### Describe the bug\r\n\r\nI expected to publish openadapt to PyPi after a new release is created however PyPi does not allow direct dependencies to be uploaded to their indexes. See here for more discussion on this [here](https://github.com/python-poetry/poetry/issues/2828).\r\n\r\nTo resolve this we can publish our forked repos `atomacos` and `pynput` to pypi and add those published packages to `pyproject.toml`.\r\n\r\n### To Reproduce\r\n\r\nIf you're following PyPi's [documentation](https://packaging.python.org/en/latest/tutorials/packaging-projects/) of uploading with twine, once you do `twine upload <dist files>`, you will face the error. Seems to be a poetry specific error, I did not face this when using pip.",
      "state": "closed",
      "author": "Mustaballer",
      "author_type": "User",
      "created_at": "2023-07-18T19:40:59Z",
      "updated_at": "2023-08-28T18:03:36Z",
      "closed_at": "2023-08-28T18:03:36Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/404/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/404",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/404",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:46.135220",
      "comments": [
        {
          "author": "Mustaballer",
          "body": "After running `twine upload dist/* -u __token__ -p <hidden>`, I receive the following output.\r\n\r\n```terminal\r\nUploading distributions to https://upload.pypi.org/legacy/\r\nINFO     dist\\oa_atomacos-0.1.0-py3-none-any.whl (33.2 KB)\r\nINFO     username set by command options\r\nINFO     password set by com",
          "created_at": "2023-08-04T16:33:59Z"
        }
      ]
    },
    {
      "issue_number": 434,
      "title": "[Bug]: Recording playback too fast for web",
      "body": "### Describe the bug\n\nI expected my recording to play back using `python -m openadapt.replay NaiveReplayStrategy` to successfully follow the steps I took during the recording. What happened was when I initiated the reply, the playback was so fast that it didn't give the webpage(s) sufficient time to load. This caused the workflow to break (e.g. the playback continued to click and type, but the UI was not in sync so the subsequent activity wasn't completed successfully). \r\n\r\nLogs from recording: [recordingLogs.txt](https://github.com/OpenAdaptAI/OpenAdapt/files/12167821/recordingLogs.txt)\r\n\r\nLogs from replay: [replayLogs.txt](https://github.com/OpenAdaptAI/OpenAdapt/files/12167824/replayLogs.txt)\r\n\n\n### To Reproduce\n\nI use macOS Ventura 13.1, Apple M1, 8 GB memory. The recording was created in a new/empty shell. Steps to reproduce:\r\n\r\n1. Create a recording that interacts with web\r\n2. Type google.flights.com into the URL box\r\n3. Hit enter\r\n4. Click the destination box\r\n5. Type the destination code (i.e. MSP)\r\n6. Click explore button\r\n7. End the recording\r\n8. After the recording finishes processing, play it back using `python -m openadapt.replay NaiveReplayStrategy`\r\n9. **Bug**, the recording moves too fast and the page doesn't have sufficient time to load\r\n\r\nInternet speed: [Speedtest Results Export-2023_07_25.csv](https://github.com/OpenAdaptAI/OpenAdapt/files/12167796/Speedtest.Results.Export-2023_07_25.csv)\r\n",
      "state": "closed",
      "author": "flyguy712",
      "author_type": "User",
      "created_at": "2023-07-26T04:02:32Z",
      "updated_at": "2023-08-25T19:21:26Z",
      "closed_at": "2023-08-17T00:21:31Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 12,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/434/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/434",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/434",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:46.380700",
      "comments": [
        {
          "author": "abrichr",
          "body": "Thank you @flyguy712 !\r\n\r\nThis will be much easier to debug once https://github.com/OpenAdaptAI/OpenAdapt/pull/362 is merged, but for now I think we have to assume that the NaiveReplayStrategy won't work for this use case.\r\n\r\nCan you please try the StatefulReplayStrategy? Note that the playback will",
          "created_at": "2023-07-26T14:58:38Z"
        },
        {
          "author": "flyguy712",
          "body": "@abrichr it doesn't appear that is an option (it isn't an available strategy).\r\n\r\nThis is the command that I used: `python -m openadapt.replay StatefulReplayStrategy`\r\n\r\nThis is where I found the command: [‎openadapt/strategies/stateful.py](https://github.com/OpenAdaptAI/OpenAdapt/blob/8afb5c5a5da41",
          "created_at": "2023-07-29T18:12:58Z"
        },
        {
          "author": "abrichr",
          "body": "Can you please try running ‘git pull’ then try again?\r\n\r\nOn Sat, Jul 29, 2023 at 2:13 PM Taylor Horsager ***@***.***>\r\nwrote:\r\n\r\n> @abrichr <https://github.com/abrichr> it doesn't appear that is an option\r\n> (it isn't an available strategy).\r\n>\r\n> This is the command that I used: python -m openadapt",
          "created_at": "2023-07-29T18:16:34Z"
        },
        {
          "author": "flyguy712",
          "body": "Unfortunately I tried that just before doing this test...\r\n\r\n```\r\n(openadapt-py3.10) taylorhorsager@Taylors-MacBook-Air OpenAdapt % git pull\r\nAlready up to date.\r\n```",
          "created_at": "2023-07-29T18:23:01Z"
        },
        {
          "author": "flyguy712",
          "body": "Looks like there were some possibly relevant logs in the recording:\r\n\r\n```\r\n2023-07-29 12:24:08.551 | INFO     | __mp_main__:write_events:319 - event_type='window' starting\r\nProcess Process-1:\r\nTraceback (most recent call last):\r\n  File \"/Users/taylorhorsager/Library/Caches/pypoetry/virtualenvs/open",
          "created_at": "2023-07-29T18:25:36Z"
        }
      ]
    },
    {
      "issue_number": 452,
      "title": "[Bug]: Status check for `run_ci` github action is not running, \"Expected — Waiting for status to be reported\" ",
      "body": "### Describe the bug\n\nI expected that the status check would run on every commit for all open PRs. However none of them have been executed. Instead the response is \"\"Expected — Waiting for status to be reported\". As a result **status checks have been disabled for now**. \r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/43456930/ca688385-9698-45f3-8284-c55fb432fb70)\r\n\n\n### To Reproduce\n\nCreate a PR and make a commit once status checks are re-enabled and check to see if the github action was run.",
      "state": "closed",
      "author": "Mustaballer",
      "author_type": "User",
      "created_at": "2023-08-01T19:56:07Z",
      "updated_at": "2023-08-25T18:34:33Z",
      "closed_at": "2023-08-25T18:34:33Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/452/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/452",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/452",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:46.677487",
      "comments": [
        {
          "author": "Mustaballer",
          "body": "If you directly branch off the openadapt repo(not off your forked repo), the status checks do run, and you will notice either a ✅ or ❌ indicating whether the status check passed or not.\r\n\r\nSee below for an ex:\r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/43456930/501483f3-d7b4-45df-b923",
          "created_at": "2023-08-10T19:56:28Z"
        },
        {
          "author": "Mustaballer",
          "body": "There is another issue that has been persisted since https://github.com/OpenAdaptAI/OpenAdapt/pull/463 was merged. Currently, these actions are initiated after each commit push, but they exclusively target the main branch, disregarding the specific branch that is being pushed to. To resolve this mat",
          "created_at": "2023-08-25T16:23:30Z"
        }
      ]
    },
    {
      "issue_number": 481,
      "title": "Explore jsonformer",
      "body": "### Feature request\n\nHow does https://github.com/1rgs/jsonformer compare to LMQL? It seems to be a whole lot simpler.\n\n### Motivation\n\nWe would like to restrict the output of our models to valid actions, in a way that is simple and easy to extend.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-08-25T15:36:26Z",
      "updated_at": "2023-08-25T15:36:26Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/481/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/481",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/481",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:46.943611",
      "comments": []
    },
    {
      "issue_number": 478,
      "title": "Investigate ollama",
      "body": "### Feature request\n\nHow can we take advantage of https://github.com/jmorganca/ollama ?\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-08-25T00:07:01Z",
      "updated_at": "2023-08-25T00:07:01Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/478/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/478",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/478",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:46.943626",
      "comments": []
    },
    {
      "issue_number": 353,
      "title": "Implement LaVIN/BLIP2",
      "body": "### Feature request\r\n\r\nWe would like to implement https://github.com/luogen1996/LaVIN#demo and/or https://huggingface.co/docs/transformers/main/model_doc/blip-2as a ReplayStrategyMixin.\r\n\r\nIn particular we would like to understand how this compares to huggingface transformers.agent : https://github.com/OpenAdaptAI/OpenAdapt/pull/192\r\n\r\n### Motivation\r\n\r\nAnswering questions about screenshots",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-05T16:46:26Z",
      "updated_at": "2023-08-20T04:22:53Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "good first issue",
        "help wanted"
      ],
      "label_count": 3,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/353/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "angelala3252"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/353",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/353",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:46.943648",
      "comments": [
        {
          "author": "LaPetiteSouris",
          "body": "@abrichr is this still up for grab or already taken ? ",
          "created_at": "2023-07-23T14:50:38Z"
        },
        {
          "author": "angelala3252",
          "body": "@LaPetiteSouris I'm currently working on this ([PR #412](https://github.com/OpenAdaptAI/OpenAdapt/pull/412)) but if you want to collaborate I would be down!",
          "created_at": "2023-07-26T01:08:25Z"
        },
        {
          "author": "LaPetiteSouris",
          "body": "> @LaPetiteSouris I'm currently working on this ([PR #412](https://github.com/OpenAdaptAI/OpenAdapt/pull/412)) but if you want to collaborate I would be down!\r\n\r\nThanks @angelala3252 No I'm good on other topic. Just snicking around to see available topics. Please go ahead and thanks for the tips.",
          "created_at": "2023-07-26T07:08:52Z"
        },
        {
          "author": "rafikmatta",
          "body": "hi @angelala3252 I'll collab on this, seems interesting",
          "created_at": "2023-08-20T04:22:53Z"
        }
      ]
    },
    {
      "issue_number": 425,
      "title": "Implement llama2.c",
      "body": "### Feature request\n\nWe would like to implement https://github.com/karpathy/llama2.c as a model provider.\n\n### Motivation\n\nhttps://news.ycombinator.com/item?id=36838834",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-25T13:45:15Z",
      "updated_at": "2023-08-18T17:19:57Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/425/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/425",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/425",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:47.171028",
      "comments": []
    },
    {
      "issue_number": 433,
      "title": "Implement Privacy API (involves major refactoring in scrub module)",
      "body": "### Feature request\r\n\r\nWe would like to have a common interface for scrubbing functions such that we could easily switch the provider based upon  our requirement.\r\n\r\nCurrently we have Presidio and Cape in line.\r\n\r\n### Motivation\r\n\r\nI was frustrated to change the scrub_text function to test cape and then move back to presidio. Hence, we would like to make it abstract and use a common interface for security provider that openadapt is currently using and/or testing.",
      "state": "closed",
      "author": "KrishPatel13",
      "author_type": "User",
      "created_at": "2023-07-26T03:13:13Z",
      "updated_at": "2023-08-18T16:42:57Z",
      "closed_at": "2023-08-18T16:42:56Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/433/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KrishPatel13"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/433",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/433",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:47.171050",
      "comments": [
        {
          "author": "KrishPatel13",
          "body": "@abrichr I had prepared some high-level implementations: Please see Page 3 and 4 here: https://docs.google.com/document/d/1Z6g6wNSExyWEFh9c0kQtIHCUQCiM7vxBkPbnb5jIzrU/edit?usp=sharing\r\n\r\nPlease let me know WDYT and your inputs on how we want to proceed here :) ?",
          "created_at": "2023-07-26T03:14:03Z"
        },
        {
          "author": "abrichr",
          "body": "```\r\n# we want to use https://docs.pydantic.dev/latest/\r\n\r\nClass ScrubbingProvider:\r\n    Name: str\r\n    Capabilities: List[Modality]\r\n\r\n    Def scrub_text(...):\r\n        Raise NotImplemented()\r\n\r\nClass PresidioScrubbingProvider:\r\n    Def scrub_text(...):\r\n        Pass   # implemented\r\n\r\nClass Scrubb",
          "created_at": "2023-07-26T19:48:56Z"
        }
      ]
    },
    {
      "issue_number": 461,
      "title": "Install spacy weights at runtime",
      "body": "### Feature request\n\nPypi doesn't allow direct dependencies; see https://github.com/OpenAdaptAI/OpenAdapt/issues/457 .\r\n\r\nWe would like to automate the relevant step in the installation script at runtime within the scrubbing module (or wherever it is necessary), and remove the relevant step from installation.\r\n\r\n@KrishPatel13 \n\n### Motivation\n\nRight now after `pip install openadapt` the user must manually install spacy weights. This is suboptimal.",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-08-10T17:04:25Z",
      "updated_at": "2023-08-18T14:36:06Z",
      "closed_at": "2023-08-18T14:36:05Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/461/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KrishPatel13"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/461",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/461",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:47.403729",
      "comments": [
        {
          "author": "KrishPatel13",
          "body": "PR: https://github.com/OpenAdaptAI/OpenAdapt/pull/462",
          "created_at": "2023-08-10T17:41:00Z"
        },
        {
          "author": "KrishPatel13",
          "body": "Closing as completed in favour of https://github.com/OpenAdaptAI/OpenAdapt/pull/462",
          "created_at": "2023-08-18T14:36:05Z"
        }
      ]
    },
    {
      "issue_number": 470,
      "title": "Implement llmtune",
      "body": "### Feature request\n\nHow can we take advantage of https://github.com/kuleshov-group/llmtune ?\n\n### Motivation\n\nSpeed",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-08-17T18:17:33Z",
      "updated_at": "2023-08-17T21:10:40Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/470/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "FFFiend"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/470",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/470",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:47.715181",
      "comments": []
    },
    {
      "issue_number": 465,
      "title": "Investigate pykoi",
      "body": "### Feature request\n\nHow can we use https://github.com/CambioML/pykoi ?\n\n### Motivation\n\nSpeed",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-08-14T19:51:33Z",
      "updated_at": "2023-08-15T04:48:03Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/465/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "FFFiend"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/465",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/465",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:47.715207",
      "comments": []
    },
    {
      "issue_number": 467,
      "title": "Investigate ray.io",
      "body": "### Feature request\n\nHow can we use https://www.ray.io/ ?\n\n### Motivation\n\nSpeed",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-08-14T19:52:30Z",
      "updated_at": "2023-08-14T19:52:30Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/467/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/467",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/467",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:47.715215",
      "comments": []
    },
    {
      "issue_number": 466,
      "title": "Investigate mpire",
      "body": "### Feature request\n\nHow can we use https://github.com/sybrenjansen/mpire ?\n\n### Motivation\n\nPerformance",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-08-14T19:51:54Z",
      "updated_at": "2023-08-14T19:51:54Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/466/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/466",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/466",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:47.715223",
      "comments": []
    },
    {
      "issue_number": 104,
      "title": "Implement user guidance",
      "body": "When the replay strategy determines that the current Screenshot/WindowState is sufficiently different from the expected state in the recording, we would like to prompt the user to take over and demonstrate how to complete the task in that situation:\r\n\r\n1. compare the current state to the expected state in the current recording.\r\n2. if not found, compare the current state to states in other recordings with the same description.\r\n3. if not found, pause replay\r\n4. notify the user that they need to demonstrate how to continue\r\n5. start a new recording (with the same description as the one being recorded) as soon as the user starts generating InputEvents\r\n6. wait for the user to finish the demonstration (e.g. by clicking on the system tray icon)\r\n7. restart replay from where we left off",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-07T15:39:51Z",
      "updated_at": "2023-08-11T18:26:59Z",
      "closed_at": null,
      "labels": [
        "help wanted"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/104/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "Mustaballer"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/104",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/104",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:47.715232",
      "comments": [
        {
          "author": "Mustaballer",
          "body": "Here are some questions and thoughts I had to address for some of these steps:\r\n\r\n- We can compare the screenshot captured during the replay to the screenshot captured during the recording(and subsequent screenshots) using computer vision tool such as OpenCV. The issue is how can we determine if its",
          "created_at": "2023-05-10T20:40:31Z"
        },
        {
          "author": "abrichr",
          "body": "Also need to store this in the database, along with replays",
          "created_at": "2023-07-24T14:49:54Z"
        }
      ]
    },
    {
      "issue_number": 457,
      "title": "[Bug]: Error: Can't have direct dependency: 'en_core_web_trf @ https://github.com/explosion/spacy-models/releases/download/en_core_web_trf-3.5.0/en_core_web_trf-3.5.0.tar.gz'",
      "body": "### Describe the bug\n\nI expected poetry to successfully publish openadapt on pypi, however I encountered this error.\r\n```terminal\r\nError: Can't have direct dependency: 'en_core_web_trf @ https://github.com/explosion/spacy-models/releases/download/en_core_web_trf-3.5.0/en_core_web_trf-3.5.0.tar.gz'\r\n```\r\n\r\nPossible solution:\r\n- Remove this dependency from `pyproject.toml`\r\n```pyproject.toml\r\n[tool.poetry.dependencies.en_core_web_trf]\r\nurl = \"https://github.com/explosion/spacy-models/releases/download/en_core_web_trf-3.5.0/en_core_web_trf-3.5.0.tar.gz\"\r\n```\n\n### To Reproduce\n\nWhen a PR is merged to main the 'Semantic Release and PyPi Publish' github action will run. In the `publish` job this error will be thrown.",
      "state": "closed",
      "author": "Mustaballer",
      "author_type": "User",
      "created_at": "2023-08-09T17:11:02Z",
      "updated_at": "2023-08-10T16:35:15Z",
      "closed_at": "2023-08-10T16:35:15Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/457/reactions",
        "total_count": 2,
        "+1": 2,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KrishPatel13"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/457",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/457",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:47.915210",
      "comments": [
        {
          "author": "KrishPatel13",
          "body": "PR: Ready for merging: https://github.com/OpenAdaptAI/OpenAdapt/pull/459",
          "created_at": "2023-08-10T04:51:15Z"
        }
      ]
    },
    {
      "issue_number": 363,
      "title": "[Bug]: Unhandled Exception (TypeError) in record",
      "body": "### Describe the bug\r\n\r\nGot a TypeError when running record\r\n\r\nOutput:\r\n```\r\n2023-07-07 15:10:10.705 | INFO     | openadapt.config:<module>:110 - CACHE_DIR_PATH=.cache\r\n2023-07-07 15:10:10.705 | INFO     | openadapt.config:<module>:110 - CACHE_ENABLED=True\r\n2023-07-07 15:10:10.705 | INFO     | openadapt.config:<module>:110 - CACHE_VERBOSITY=0\r\n2023-07-07 15:10:10.705 | INFO     | openadapt.config:<module>:110 - DB_ECHO=False\r\n2023-07-07 15:10:10.705 | INFO     | openadapt.config:<module>:110 - DB_FNAME=openadapt.db\r\n2023-07-07 15:10:10.705 | INFO     | openadapt.config:<module>:110 - OPENAI_API_KEY=********************\r\n2023-07-07 15:10:10.705 | INFO     | openadapt.config:<module>:110 - OPENAI_MODEL_NAME=gpt-3.5-turbo\r\n2023-07-07 15:10:10.705 | INFO     | openadapt.config:<module>:110 - RECORD_READ_ACTIVE_ELEMENT_STATE=False\r\n2023-07-07 15:10:10.705 | INFO     | openadapt.config:<module>:110 - REPLAY_STRIP_ELEMENT_STATE=True\r\n2023-07-07 15:10:10.705 | INFO     | openadapt.config:<module>:110 - IGNORE_WARNINGS=False\r\n2023-07-07 15:10:10.705 | INFO     | openadapt.config:<module>:110 - ACTION_TEXT_SEP=-\r\n2023-07-07 15:10:10.705 | INFO     | openadapt.config:<module>:110 - ACTION_TEXT_NAME_PREFIX=<\r\n2023-07-07 15:10:10.705 | INFO     | openadapt.config:<module>:110 - ACTION_TEXT_NAME_SUFFIX=>\r\n2023-07-07 15:10:10.705 | INFO     | openadapt.config:<module>:110 - SCRUB_ENABLED=True\r\n2023-07-07 15:10:10.705 | INFO     | openadapt.config:<module>:110 - SCRUB_CHAR=*\r\n2023-07-07 15:10:10.706 | INFO     | openadapt.config:<module>:110 - SCRUB_LANGUAGE=en\r\n2023-07-07 15:10:10.706 | INFO     | openadapt.config:<module>:110 - SCRUB_FILL_COLOR=255\r\n2023-07-07 15:10:10.706 | INFO     | openadapt.config:<module>:110 - SCRUB_CONFIG_TRF={'nlp_engine_name': 'spacy', 'models': [{'lang_code': 'en', 'model_name': 'en_core_web_trf'}]}\r\n2023-07-07 15:10:10.706 | INFO     | openadapt.config:<module>:110 - SCRUB_IGNORE_ENTITIES=['DATE_TIME', 'URL']\r\n2023-07-07 15:10:10.706 | INFO     | openadapt.config:<module>:110 - SCRUB_KEYS_HTML=['text', 'canonical_text', 'title', 'state', 'task_description', 'key_char', 'canonical_key_char', 'key_vk', 'children']\r\n2023-07-07 15:10:10.706 | INFO     | openadapt.config:<module>:110 - ROOT_DIRPATH=/Users/d/OpenAdapt\r\n2023-07-07 15:10:10.706 | INFO     | openadapt.config:<module>:110 - DB_FPATH=/Users/d/OpenAdapt/openadapt.db\r\n2023-07-07 15:10:10.706 | INFO     | openadapt.config:<module>:110 - DB_URL=sqlite:////Users/d/OpenAdapt/openadapt.db\r\n2023-07-07 15:10:10.706 | INFO     | openadapt.config:<module>:110 - DIRNAME_PERFORMANCE_PLOTS=performance\r\n2023-07-07 15:10:11.627 | INFO     | __main__:record:518 - task_description='characters'\r\n2023-07-07 15:10:11.722 | INFO     | __main__:create_recording:460 - recording=Recording(id=13, timestamp=1688757011.627622, monitor_width=1440, monitor_height=900, double_click_interval_seconds=0.5, double_click_distance_pixels=5, platform='darwin', task_description='characters')\r\n2023-07-07 15:10:11.736 | INFO     | __main__:read_window_events:366 - starting\r\n2023-07-07 15:10:11.740 | INFO     | __main__:read_screen_events:340 - starting\r\n2023-07-07 15:10:11.747 | INFO     | __main__:process_events:72 - starting\r\n2023-07-07 15:10:11.887 | INFO     | __main__:read_window_events:384 - _window_data={'title': 'Code __init__.py — OpenAdapt', 'left': 508, 'top': 25, 'width': 932, 'height': 875, 'window_id': 94}\r\n2023-07-07 15:10:14.347 | INFO     | __mp_main__:write_events:211 - event_type='screen' starting\r\n2023-07-07 15:10:14.348 | INFO     | __mp_main__:write_events:211 - event_type='action' starting\r\n2023-07-07 15:10:14.348 | INFO     | __mp_main__:write_events:211 - event_type='window' starting\r\n2023-07-07 15:10:14.356 | INFO     | __mp_main__:performance_stats_writer:414 - performance stats writer starting\r\nUnhandled exception in listener callback\r\nTraceback (most recent call last):\r\n  File \"/Users/d/OpenAdapt/.venv/lib/python3.10/site-packages/pynput/_util/__init__.py\", line 230, in inner\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/d/OpenAdapt/.venv/lib/python3.10/site-packages/pynput/_util/darwin.py\", line 286, in _handler\r\n    self._handle(proxy, event_type, event, refcon, is_injected)\r\n  File \"/Users/d/OpenAdapt/.venv/lib/python3.10/site-packages/pynput/keyboard/_darwin.py\", line 291, in _handle\r\n    self.on_press(self._SPECIAL_KEYS[key])\r\n  File \"/Users/d/OpenAdapt/.venv/lib/python3.10/site-packages/pynput/_util/__init__.py\", line 146, in inner\r\n    if f(*args) is False:\r\nTypeError: read_keyboard_events.<locals>.on_press() missing 1 required positional argument: 'injected'\r\n2023-07-07 15:10:21.856 | WARNING  | openadapt.window._macos:get_active_window_state:42 - exc=TypeError('Cannot pickle Objective-C objects')\r\n2023-07-07 15:10:21.857 | INFO     | __main__:read_window_events:384 - _window_data={'title': 'Google Chrome Issues · OpenAdaptAI/OpenAdapt', 'left': 0, 'top': 25, 'width': 886, 'height': 875, 'window_id': 3042}\r\n2023-07-07 15:10:21.942 | INFO     | __main__:read_window_events:384 - _window_data={'title': 'Code __init__.py — OpenAdapt', 'left': 508, 'top': 25, 'width': 932, 'height': 875, 'window_id': 94}\r\n^C2023-07-07 15:10:23.655 | INFO     | __main__:record:627 - joining...\r\n2023-07-07 15:10:23.655 | INFO     | __mp_main__:write_events:221 - event_type='action' done\r\n2023-07-07 15:10:23.655 | INFO     | __mp_main__:write_events:221 - event_type='window' done\r\n2023-07-07 15:10:23.671 | INFO     | __main__:read_screen_events:347 - done\r\n2023-07-07 15:10:23.672 | INFO     | __main__:process_events:126 - done\r\n2023-07-07 15:10:38.356 | INFO     | __mp_main__:write_events:221 - event_type='screen' done\r\n2023-07-07 15:10:38.483 | INFO     | __mp_main__:performance_stats_writer:428 - performance stats writer done\r\n2023-07-07 15:10:38.483 | INFO     | __main__:record:642 - saved recording_timestamp=1688757011.627622\r\n```\r\n\r\n### To Reproduce\r\n\r\nI use MacOS\r\n1. python -m openadapt.record \"characters\"\r\n2. (after the 3 event writers have started) click the f8 key",
      "state": "open",
      "author": "dianzrong",
      "author_type": "User",
      "created_at": "2023-07-07T19:16:08Z",
      "updated_at": "2023-07-31T20:51:21Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 8,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/363/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/363",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/363",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:48.120237",
      "comments": [
        {
          "author": "dianzrong",
          "body": "Interestingly enough, the same error occurs for f10-12 but not f1-7 or f9",
          "created_at": "2023-07-07T19:21:20Z"
        },
        {
          "author": "abrichr",
          "body": "@dianzrong thank you for reporting! Can you please confirm that you are using the forked version of `pynput`?",
          "created_at": "2023-07-10T14:46:44Z"
        },
        {
          "author": "dianzrong",
          "body": "@abrichr I am using the forked version as specified in the pyproject.toml",
          "created_at": "2023-07-12T17:16:31Z"
        },
        {
          "author": "ayewo",
          "body": "@dianzrong Based on the output you shared, it seems that app window for VSCode was in focus when the bug occurred immediately after you hit the F8 key.\r\n\r\nWhen I tried now, I am unable to reproduce it with VSCode in focus. \r\n1. Can you still reproduce the bug with the latest code?\r\n2. If yes, please",
          "created_at": "2023-07-28T11:02:32Z"
        },
        {
          "author": "dianzrong",
          "body": "@ayewo \r\n\r\n1. Yes I am still able to reproduce the bug with the latest code \r\n```2023-07-28 13:06:05.885 | INFO     | openadapt.config:<module>:176 - STOP_STRS=['oa.stop']\r\n2023-07-28 13:06:05.886 | INFO     | openadapt.config:<module>:176 - SPECIAL_CHAR_STOP_SEQUENCES=[['ctrl', 'ctrl', 'ctrl']]\r\n20",
          "created_at": "2023-07-28T17:09:26Z"
        }
      ]
    },
    {
      "issue_number": 448,
      "title": "[Bug]: Windows install script is still flaky",
      "body": "### Describe the bug\n\nWanted to investigate the perf issues on Windows in [#388](https://github.com/OpenAdaptAI/OpenAdapt/issues/388) and [#401](https://github.com/OpenAdaptAI/OpenAdapt/issues/401) but had a bit of trouble getting the installer script to work on the Windows VM I used.\r\n\r\nOn the Windows Server 2019 VM I used for testing, the detection of a valid installation of python appeared to be a [bit flaky](https://github.com/OpenAdaptAI/OpenAdapt/issues/372).\r\nIn my testing:\r\n\r\n### Python\r\na. If you run the script for the first time, the check for a supported version of python will fail, even if a supported version was already installed.\r\nb. If you re-run the script a second time, within the same PowerShell console, the check will pass and proceed to the check for the next dependency (i.e. git.)\r\nc. If you open a fresh PowerShell console to re-run the script, it will fail to correctly detect that a supported version of python is installed (like in #a above).\r\n\r\n### Git\r\nThe detection of a valid installation of git was causing the install script to fail so I made some changes to make it a bit more robust. \r\n\r\nThe git install command somehow doesn't update the `%PATH%` to include the binaries for `git` and `bash` which is why the presence check always failed, even after the script downloaded & installed git. \r\nTo fix the issue: I refactored the code to explicitly add the path to those binaries to the USER and SYSTEM PATH.\r\n\r\n### OpenAdapt\r\nI also made a few tentative changes (as per my proposal in https://github.com/OpenAdaptAI/OpenAdapt/issues/447):\r\n* I  moved the installation folder for OpenAdapt from the root drive at `C:\\OpenAdaptSetup\\OpenAdapt` to the user's home directory (at `C:\\Users\\$USER\\OpenAdapt`) and added a check to delete it if it already exists. Right now when the script is re-run it will fail if the `C:\\OpenAdaptSetup\\OpenAdapt` folder exists and is non-empty. \r\n* I also renamed a handful of variables to make them a bit clearer.\n\n### To Reproduce\n\nSee above.",
      "state": "open",
      "author": "ayewo",
      "author_type": "User",
      "created_at": "2023-07-31T16:06:27Z",
      "updated_at": "2023-07-31T16:06:27Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/448/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 1,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/448",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/448",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:48.350149",
      "comments": []
    },
    {
      "issue_number": 447,
      "title": "Windows Installer: Update Some Install Paths",
      "body": "### Feature request\n\n## Installer Design for Windows\r\nBefore the installer script installs OpenAdapt, it first runs checks for 3 dependencies in the following order:\r\n- Tesseract\r\n- Python\r\n- Git\r\n\r\n| Program | Current Path | Proposed Path | Remark |\r\n|---------|--------------|--------------|--------------|\r\n| Tesseract | `C:\\Program Files\\Tesseract-OCR` | `C:\\Program Files\\Tesseract-OCR` | No change |\r\n| Python[^1]  | `C:\\Users\\<user>\\AppData\\Local\\Programs\\Python\\Python310` | `C:\\Users\\<user>\\AppData\\Local\\Programs\\Python\\Python310` |  |\r\n| Git  | `C:\\Program Files\\Git\\` | `C:\\Program Files\\Git\\` | No change |\r\n| OpenAdapt | `C:\\OpenAdaptSetup\\OpenAdapt` | `C:\\Users\\<user>\\OpenAdapt` | **Changed** |\r\n\r\n\r\nThe installer script already expects to be executed with Admin privileges but the `'InstallAllUsers=0'` option used to install Python will put it under `C:\\Users\\$user\\%LocalAppData%` for the logged in user, unlike the other dependencies where the install path is global -- for all users. \r\n\r\nI experimented with the option to install Python for all users to `C:\\Program Files\\Python310` by setting `'InstallAllUsers=1'` and everything worked fine until it got to the `poetry install` step where the script failed with a path-related error so I changed it back to `'InstallAllUsers=0'`.\r\n\r\nThoughts?\r\n\r\n[^1]: The default path is `C:\\Users\\<user>\\%LocalAppData%` which usually expands to `C:\\Users\\<user>\\AppData\\Local\\Programs\\Python\\Python310`\n\n### Motivation\n\nThis will hopefully make it easier to write an `uninstall.ps1` script that will leave the system in the state it was prior to the execution of `installer.ps1`.",
      "state": "open",
      "author": "ayewo",
      "author_type": "User",
      "created_at": "2023-07-31T16:05:37Z",
      "updated_at": "2023-07-31T16:05:37Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/447/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 1,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/447",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/447",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:48.350345",
      "comments": []
    },
    {
      "issue_number": 427,
      "title": "Explore client/server architectures: LMTP, LlamaIndex, etc.",
      "body": "### Feature request\r\n\r\nWe want to understand how serving models might be useful in the context of OpenAdapt.\r\n\r\ne.g. serve llama.cpp via LMTP with https://github.com/eth-sri/lmql/tree/main/src/lmql/models/lmtp\r\n\r\ne.g. https://gpt-index.readthedocs.io/en/latest/\r\n\r\n### Motivation\r\n\r\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-25T16:57:34Z",
      "updated_at": "2023-07-31T15:10:27Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/427/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "dianzrong"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/427",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/427",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:48.350357",
      "comments": [
        {
          "author": "dianzrong",
          "body": "Thoughts [here](https://docs.google.com/document/d/1I7biMkSCDUaOC0KilwrPmO27Wh6t_4bRAdXBxZ8LiI4/edit?usp=sharing) ",
          "created_at": "2023-07-31T15:10:27Z"
        }
      ]
    },
    {
      "issue_number": 445,
      "title": "[Bug]: Recording Events are Sometimes Received in an Incorrect Order",
      "body": "### Describe the bug\r\n\r\n```\r\nException in thread Thread-8 (process_events):\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\avide\\AppData\\Local\\Programs\\Python\\Python310\\lib\\threading.py\", line 1009, in _bootstrap_inner\r\n    self.run()\r\n  File \"C:\\Users\\avide\\AppData\\Local\\Programs\\Python\\Python310\\lib\\threading.py\", line 946, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"C:\\Users\\avide\\OneDrive\\Desktop\\Coding Proj\\MLDSAI\\NewFork\\OpenAdapt\\openadapt\\record.py\", line 128, in wrapper_logging\r\n    result = func(*args, **kwargs)\r\n  File \"C:\\Users\\avide\\OneDrive\\Desktop\\Coding Proj\\MLDSAI\\NewFork\\OpenAdapt\\openadapt\\record.py\", line 201, in process_events\r\n    assert event.timestamp > prev_event.timestamp, (\r\nAssertionError: (Event(timestamp=1691419957.6369324, type='screen', data=<ScreenShot pos=0,0 size=1920x1080>), Event(timestamp=1691419957.6373177, type='file', data={}))\r\n```\r\n```\r\n        if prev_event is not None:\r\n            assert event.timestamp > prev_event.timestamp, (event, prev_event)\r\n```\r\nThe assertion above sometimes fails due to a race condition where events are received in the incorrect order, this seems to occur more often when the computational load on the device is high\r\n - Solution most likely involves sorting the incoming events by timestamp\r\n\r\n### To Reproduce\r\n\r\n```\r\npython .\\openadapt\\record.py TestReplay\r\n```\r\nI'm not aware of any ways to guarantee this bug, but having the computer busy with other tasks could help",
      "state": "open",
      "author": "AvidEslami",
      "author_type": "User",
      "created_at": "2023-07-31T13:31:12Z",
      "updated_at": "2023-07-31T13:31:57Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/445/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "AvidEslami"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/445",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/445",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:48.602120",
      "comments": []
    },
    {
      "issue_number": 443,
      "title": "[Bug]: pytest will fail if Tesseract is installed to a non-standard path ",
      "body": "### Describe the bug\r\nWhen I followed the [manual setup](https://github.com/OpenAdaptAI/OpenAdapt/tree/main#manual-setup):\r\n\r\n```bash\r\ngit clone https://github.com/OpenAdaptAI/OpenAdapt.git\r\ncd OpenAdapt\r\npip3 install poetry\r\npoetry install\r\npoetry shell\r\nalembic upgrade head\r\npytest\r\n```\r\nthe last command that invokes `pytest` fails:\r\n\r\n```bash\r\n======================================================================================================== test session starts =========================================================================================================\r\nplatform darwin -- Python 3.10.9, pytest-7.1.3, pluggy-1.2.0\r\nrootdir: /Users/mac/OpenAdapt\r\nplugins: anyio-3.7.1\r\ncollected 25 items\r\n\r\ntests/openadapt/test_crop.py .                                                                                                                                                                                                 [  4%]\r\ntests/openadapt/test_events.py .......                                                                                                                                                                                         [ 32%]\r\ntests/openadapt/test_scrub.py F..............                                                                                                                                                                                  [ 92%]\r\ntests/openadapt/test_summary.py ..                                                                                                                                                                                             [100%]\r\n\r\n============================================================================================================== FAILURES ==============================================================================================================\r\n__________________________________________________________________________________________________________ test_scrub_image __________________________________________________________________________________________________________\r\n\r\n    def test_scrub_image() -> None:\r\n        \"\"\"Test that the scrubbed image data is different.\"\"\"\r\n        warnings.filterwarnings(\"ignore\", category=DeprecationWarning)\r\n\r\n        # Read test image data from file\r\n        test_image_path = \"assets/test_scrub_image.png\"\r\n        with open(test_image_path, \"rb\") as file:\r\n            test_image_data = file.read()\r\n\r\n        # Convert image data to PIL Image object\r\n        test_image = Image.open(BytesIO(test_image_data))\r\n\r\n        # Scrub the image\r\n>       scrubbed_image = scrub.scrub_image(test_image)\r\n\r\ntests/openadapt/test_scrub.py:41:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\nopenadapt/scrub.py:97: in scrub_image\r\n    redacted_image = IMAGE_REDACTOR.redact(\r\n../../../Library/Caches/pypoetry/virtualenvs/openadapt-spsJ_wEb-py3.10/lib/python3.10/site-packages/presidio_image_redactor/image_redactor_engine.py:45: in redact\r\n    bboxes = self.image_analyzer_engine.analyze(\r\n../../../Library/Caches/pypoetry/virtualenvs/openadapt-spsJ_wEb-py3.10/lib/python3.10/site-packages/presidio_image_redactor/image_analyzer_engine.py:44: in analyze\r\n    ocr_result = self.ocr.perform_ocr(image, **perform_ocr_kwargs)\r\n../../../Library/Caches/pypoetry/virtualenvs/openadapt-spsJ_wEb-py3.10/lib/python3.10/site-packages/presidio_image_redactor/tesseract_ocr.py:18: in perform_ocr\r\n    return pytesseract.image_to_data(image, output_type=output_type, **kwargs)\r\n../../../Library/Caches/pypoetry/virtualenvs/openadapt-spsJ_wEb-py3.10/lib/python3.10/site-packages/pytesseract/pytesseract.py:513: in image_to_data\r\n    return {\r\n../../../Library/Caches/pypoetry/virtualenvs/openadapt-spsJ_wEb-py3.10/lib/python3.10/site-packages/pytesseract/pytesseract.py:519: in <lambda>\r\n    Output.DICT: lambda: file_to_dict(run_and_get_output(*args), '\\t', -1),\r\n../../../Library/Caches/pypoetry/virtualenvs/openadapt-spsJ_wEb-py3.10/lib/python3.10/site-packages/pytesseract/pytesseract.py:287: in run_and_get_output\r\n    run_tesseract(**kwargs)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\ninput_filename = '/var/folders/z1/5vl6696x23q46vjh7lmq2t3c0000gn/T/tess_k9gy6ra6.PNG', output_filename_base = '/var/folders/z1/5vl6696x23q46vjh7lmq2t3c0000gn/T/tess_k9gy6ra6', extension = 'tsv', lang = None\r\nconfig = '-c tessedit_create_tsv=1 ', nice = 0, timeout = 0\r\n\r\n    def run_tesseract(\r\n        input_filename,\r\n        output_filename_base,\r\n        extension,\r\n        lang,\r\n        config='',\r\n        nice=0,\r\n        timeout=0,\r\n    ):\r\n        cmd_args = []\r\n\r\n        if not sys.platform.startswith('win32') and nice != 0:\r\n            cmd_args += ('nice', '-n', str(nice))\r\n\r\n        cmd_args += (tesseract_cmd, input_filename, output_filename_base)\r\n\r\n        if lang is not None:\r\n            cmd_args += ('-l', lang)\r\n\r\n        if config:\r\n            cmd_args += shlex.split(config)\r\n\r\n        if extension and extension not in {'box', 'osd', 'tsv', 'xml'}:\r\n            cmd_args.append(extension)\r\n\r\n        try:\r\n            proc = subprocess.Popen(cmd_args, **subprocess_args())\r\n        except OSError as e:\r\n            if e.errno != ENOENT:\r\n                raise e\r\n            raise TesseractNotFoundError()\r\n\r\n        with timeout_manager(proc, timeout) as error_string:\r\n            if proc.returncode:\r\n>               raise TesseractError(proc.returncode, get_errors(error_string))\r\nE               pytesseract.pytesseract.TesseractError: (1, 'Error opening data file /usr/local/share/tessdata/eng.traineddata Please make sure the TESSDATA_PREFIX environment variable is set to your \"tessdata\" directory. Failed loading language \\'eng\\' Tesseract couldn\\'t load any languages! Could not initialize tesseract.')\r\n\r\n../../../Library/Caches/pypoetry/virtualenvs/openadapt-spsJ_wEb-py3.10/lib/python3.10/site-packages/pytesseract/pytesseract.py:263: TesseractError\r\n========================================================================================================== warnings summary ==========================================================================================================\r\n../../../Library/Caches/pypoetry/virtualenvs/openadapt-spsJ_wEb-py3.10/lib/python3.10/site-packages/onnxruntime/capi/_pybind_state.py:28\r\n  /Users/mac/Library/Caches/pypoetry/virtualenvs/openadapt-spsJ_wEb-py3.10/lib/python3.10/site-packages/onnxruntime/capi/_pybind_state.py:28: DeprecationWarning: invalid escape sequence '\\S'\r\n    \"(other than %SystemRoot%\\System32), \"\r\n\r\n../../../Library/Caches/pypoetry/virtualenvs/openadapt-spsJ_wEb-py3.10/lib/python3.10/site-packages/pycountry/__init__.py:10\r\n  /Users/mac/Library/Caches/pypoetry/virtualenvs/openadapt-spsJ_wEb-py3.10/lib/python3.10/site-packages/pycountry/__init__.py:10: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html\r\n    import pkg_resources\r\n\r\n../../../Library/Caches/pypoetry/virtualenvs/openadapt-spsJ_wEb-py3.10/lib/python3.10/site-packages/pkg_resources/__init__.py:2871\r\n  /Users/mac/Library/Caches/pypoetry/virtualenvs/openadapt-spsJ_wEb-py3.10/lib/python3.10/site-packages/pkg_resources/__init__.py:2871: DeprecationWarning: Deprecated call to `pkg_resources.declare_namespace('mpl_toolkits')`.\r\n  Implementing implicit namespace packages (as specified in PEP 420) is preferred to `pkg_resources.declare_namespace`. See https://setuptools.pypa.io/en/latest/references/keywords.html#keyword-namespace-packages\r\n    declare_namespace(pkg)\r\n\r\n../../../Library/Caches/pypoetry/virtualenvs/openadapt-spsJ_wEb-py3.10/lib/python3.10/site-packages/pkg_resources/__init__.py:2871\r\n../../../Library/Caches/pypoetry/virtualenvs/openadapt-spsJ_wEb-py3.10/lib/python3.10/site-packages/pkg_resources/__init__.py:2871\r\n../../../Library/Caches/pypoetry/virtualenvs/openadapt-spsJ_wEb-py3.10/lib/python3.10/site-packages/pkg_resources/__init__.py:2871\r\n../../../Library/Caches/pypoetry/virtualenvs/openadapt-spsJ_wEb-py3.10/lib/python3.10/site-packages/pkg_resources/__init__.py:2871\r\n  /Users/mac/Library/Caches/pypoetry/virtualenvs/openadapt-spsJ_wEb-py3.10/lib/python3.10/site-packages/pkg_resources/__init__.py:2871: DeprecationWarning: Deprecated call to `pkg_resources.declare_namespace('sphinxcontrib')`.\r\n  Implementing implicit namespace packages (as specified in PEP 420) is preferred to `pkg_resources.declare_namespace`. See https://setuptools.pypa.io/en/latest/references/keywords.html#keyword-namespace-packages\r\n    declare_namespace(pkg)\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\r\n====================================================================================================== short test summary info =======================================================================================================\r\nFAILED tests/openadapt/test_scrub.py::test_scrub_image - pytesseract.pytesseract.TesseractError: (1, 'Error opening data file /usr/local/share/tessdata/eng.traineddata Please make sure the TESSDATA_PREFIX environment variable i...\r\n============================================================================================= 1 failed, 24 passed, 7 warnings in 41.56s ========================================================\r\n```\r\n\r\n\r\n### To Reproduce\r\nThis isn't really a bug per se, more of an environment issue because Homebrew is installed to a non-standard path on my machine at `/Users/<user>/homebrew`. This means packages like Tesseract will not be available in the default location used by Homebrew under:\r\n- `/usr/local` for macOS on Intel or;\r\n- `/opt/homebrew` for macOS on Apple Silicon/ARM.\r\n\r\nThe fix is to explicitly set `TESSDATA_PREFIX` just before running `pytest`:\r\n\r\n```sh\r\nexport TESSDATA_PREFIX=$(brew --prefix)/Cellar/tesseract/5.3.0_1/share/tessdata\r\n\r\npytest\r\n```",
      "state": "open",
      "author": "ayewo",
      "author_type": "User",
      "created_at": "2023-07-28T22:21:13Z",
      "updated_at": "2023-07-29T09:04:20Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/443/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/443",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/443",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:48.602134",
      "comments": []
    },
    {
      "issue_number": 410,
      "title": "[Bug]: local variable 'merged_event' referenced before assignment",
      "body": "### Describe the bug\n\nI wanted to play around with OpenAdeptAI for the first time. After visualize the error came up:\r\n\r\n```\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - STOP_STRS=['oa.stop']\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - SPECIAL_CHAR_STOP_SEQUENCES=[['ctrl', 'ctrl', 'ctrl']]\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - STOP_SEQUENCES=[['o', 'a', '.', 's', 't', 'o', 'p'], ['ctrl', 'ctrl', 'ctrl']]\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - CACHE_DIR_PATH=.cache\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - CACHE_ENABLED=True\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - CACHE_VERBOSITY=0\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - DB_ECHO=False\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - DB_FNAME=openadapt.db\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - OPENAI_API_KEY=<set your api key in .env>\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - OPENAI_MODEL_NAME=gpt-3.5-turbo\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - RECORD_READ_ACTIVE_ELEMENT_STATE=False\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - REPLAY_STRIP_ELEMENT_STATE=True\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - IGNORE_WARNINGS=False\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - ACTION_TEXT_SEP=-\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - ACTION_TEXT_NAME_PREFIX=<\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - ACTION_TEXT_NAME_SUFFIX=>\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - SCRUB_ENABLED=False\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - SCRUB_CHAR=*\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - SCRUB_LANGUAGE=en\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - SCRUB_FILL_COLOR=255\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - SCRUB_CONFIG_TRF={'nlp_engine_name': 'spacy', 'models': [{'lang_code': 'en', 'model_name': 'en_core_web_trf'}]}\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - SCRUB_IGNORE_ENTITIES=['DATE_TIME', 'URL']\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - SCRUB_KEYS_HTML=['text', 'canonical_text', 'title', 'state', 'task_description', 'key_char', 'canonical_key_char', 'key_vk', 'children']\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - PLOT_PERFORMANCE=True\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - ROOT_DIRPATH=/Users/seyedmortezahosseini/Codes/OpenAdapt\r\n2023-07-19 17:27:41.523 | INFO     | openadapt.config:<module>:146 - DB_FPATH=/Users/seyedmortezahosseini/Codes/OpenAdapt/openadapt.db\r\n2023-07-19 17:27:41.524 | INFO     | openadapt.config:<module>:146 - DB_URL=sqlite:////Users/seyedmortezahosseini/Codes/OpenAdapt/openadapt.db\r\n2023-07-19 17:27:41.524 | INFO     | openadapt.config:<module>:146 - DIRNAME_PERFORMANCE_PLOTS=performance\r\n\u001b[32m2023-07-19 17:27:47.970\u001b[0m | \u001b[1mINFO    \u001b[0m | \u001b[36mopenadapt.events\u001b[0m:\u001b[36mget_events\u001b[0m:\u001b[36m40\u001b[0m - \u001b[1mnum_process_iters=0 num_action_events=1260 num_window_events=17 num_screenshots=306\u001b[0m\r\n\u001b[32m2023-07-19 17:27:47.970\u001b[0m | \u001b[1mINFO    \u001b[0m | \u001b[36mopenadapt.events\u001b[0m:\u001b[36mprocess_events\u001b[0m:\u001b[36m601\u001b[0m - \u001b[1mbefore num_action_events=1260 num_window_events=17 num_screenshots=306 num_total=1583\u001b[0m\r\n\u001b[32m2023-07-19 17:27:47.985\u001b[0m | \u001b[1mINFO    \u001b[0m | \u001b[36mopenadapt.events\u001b[0m:\u001b[36mget_group_idx_tups\u001b[0m:\u001b[36m433\u001b[0m - \u001b[1mlen(to_merge)=10 group_idx_tups=[(0, 4), (4, 8), (8, 10)]\u001b[0m\r\n\u001b[32m2023-07-19 17:27:48.003\u001b[0m | \u001b[33m\u001b[1mWARNING \u001b[0m | \u001b[36mopenadapt.events\u001b[0m:\u001b[36mget_group_idx_tups\u001b[0m:\u001b[36m411\u001b[0m - \u001b[33m\u001b[1mKey.cmd not in pressed_keys=set()\u001b[0m\r\n\u001b[32m2023-07-19 17:27:48.003\u001b[0m | \u001b[1mINFO    \u001b[0m | \u001b[36mopenadapt.events\u001b[0m:\u001b[36mget_group_idx_tups\u001b[0m:\u001b[36m433\u001b[0m - \u001b[1mlen(to_merge)=1 group_idx_tups=[]\u001b[0m\r\n\u001b[32m2023-07-19 17:27:48.004\u001b[0m | \u001b[33m\u001b[1mWARNING \u001b[0m | \u001b[36mopenadapt.events\u001b[0m:\u001b[36mget_group_idx_tups\u001b[0m:\u001b[36m411\u001b[0m - \u001b[33m\u001b[1mKey.tab not in pressed_keys=set()\u001b[0m\r\n\u001b[32m2023-07-19 17:27:48.004\u001b[0m | \u001b[1mINFO    \u001b[0m | \u001b[36mopenadapt.events\u001b[0m:\u001b[36mget_group_idx_tups\u001b[0m:\u001b[36m433\u001b[0m - \u001b[1mlen(to_merge)=1 group_idx_tups=[]\u001b[0m\r\n\u001b[32m2023-07-19 17:27:48.006\u001b[0m | \u001b[1mINFO    \u001b[0m | \u001b[36mopenadapt.events\u001b[0m:\u001b[36mget_group_idx_tups\u001b[0m:\u001b[36m433\u001b[0m - \u001b[1mlen(to_merge)=4 group_idx_tups=[(0, 4)]\u001b[0m\r\n\u001b[32m2023-07-19 17:27:48.028\u001b[0m | \u001b[1mINFO    \u001b[0m | \u001b[36mopenadapt.events\u001b[0m:\u001b[36mget_group_idx_tups\u001b[0m:\u001b[36m433\u001b[0m - \u001b[1mlen(to_merge)=4 group_idx_tups=[(0, 4)]\u001b[0m\r\n\u001b[32m2023-07-19 17:27:48.044\u001b[0m | \u001b[1mINFO    \u001b[0m | \u001b[36mopenadapt.events\u001b[0m:\u001b[36mget_group_idx_tups\u001b[0m:\u001b[36m433\u001b[0m - \u001b[1mlen(to_merge)=1 group_idx_tups=[]\u001b[0m\r\n\u001b[32m2023-07-19 17:27:48.045\u001b[0m | \u001b[1mINFO    \u001b[0m | \u001b[36mopenadapt.events\u001b[0m:\u001b[36mget_group_idx_tups\u001b[0m:\u001b[36m433\u001b[0m - \u001b[1mlen(to_merge)=1 group_idx_tups=[]\u001b[0m\r\n\u001b[32m2023-07-19 17:27:48.046\u001b[0m | \u001b[33m\u001b[1mWARNING \u001b[0m | \u001b[36mopenadapt.events\u001b[0m:\u001b[36mget_group_idx_tups\u001b[0m:\u001b[36m411\u001b[0m - \u001b[33m\u001b[1mKey.cmd not in pressed_keys=set()\u001b[0m\r\n\u001b[32m2023-07-19 17:27:48.046\u001b[0m | \u001b[1mINFO    \u001b[0m | \u001b[36mopenadapt.events\u001b[0m:\u001b[36mget_group_idx_tups\u001b[0m:\u001b[36m433\u001b[0m - \u001b[1mlen(to_merge)=1 group_idx_tups=[]\u001b[0m\r\n\u001b[32m2023-07-19 17:27:48.048\u001b[0m | \u001b[33m\u001b[1mWARNING \u001b[0m | \u001b[36mopenadapt.events\u001b[0m:\u001b[36mget_group_idx_tups\u001b[0m:\u001b[36m411\u001b[0m - \u001b[33m\u001b[1mKey.tab not in pressed_keys=set()\u001b[0m\r\n\u001b[32m2023-07-19 17:27:48.048\u001b[0m | \u001b[1mINFO    \u001b[0m | \u001b[36mopenadapt.events\u001b[0m:\u001b[36mget_group_idx_tups\u001b[0m:\u001b[36m433\u001b[0m - \u001b[1mlen(to_merge)=23 group_idx_tups=[(0, 1), (1, 5), (5, 9), (9, 11), (11, 13), (13, 15), (15, 21), (21, 23)]\u001b[0m\r\n\u001b[32m2023-07-19 17:27:48.048\u001b[0m | \u001b[31m\u001b[1mERROR   \u001b[0m | \u001b[36m__main__\u001b[0m:\u001b[36m<module>\u001b[0m:\u001b[36m294\u001b[0m - \u001b[31m\u001b[1mAn error has been caught in function '<module>', process 'MainProcess' (94781), thread 'MainThread' (8176901632):\u001b[0m\r\n\u001b[33m\u001b[1mTraceback (most recent call last):\u001b[0m\r\n\r\n  File \"\u001b[32m/opt/homebrew/Cellar/python@3.10/3.10.10_1/Frameworks/Python.framework/Versions/3.10/lib/python3.10/\u001b[0m\u001b[32m\u001b[1mrunpy.py\u001b[0m\", line \u001b[33m196\u001b[0m, in \u001b[35m_run_module_as_main\u001b[0m\r\n    \u001b[35m\u001b[1mreturn\u001b[0m \u001b[1m_run_code\u001b[0m\u001b[1m(\u001b[0m\u001b[1mcode\u001b[0m\u001b[1m,\u001b[0m \u001b[1mmain_globals\u001b[0m\u001b[1m,\u001b[0m \u001b[36m\u001b[1mNone\u001b[0m\u001b[1m,\u001b[0m\r\n    \u001b[36m       |         |     -> \u001b[0m\u001b[36m\u001b[1m{'__name__': '__main__', '__doc__': None, '__package__': 'openadapt', '__loader__': <_frozen_importlib_external.SourceFileLoa...\u001b[0m\r\n    \u001b[36m       |         -> \u001b[0m\u001b[36m\u001b[1m<code object <module> at 0x104fad420, file \"/Users/seyedmortezahosseini/Codes/OpenAdapt/openadapt/visualize.py\", line 1>\u001b[0m\r\n    \u001b[36m       -> \u001b[0m\u001b[36m\u001b[1m<function _run_code at 0x104ed2320>\u001b[0m\r\n\r\n  File \"\u001b[32m/opt/homebrew/Cellar/python@3.10/3.10.10_1/Frameworks/Python.framework/Versions/3.10/lib/python3.10/\u001b[0m\u001b[32m\u001b[1mrunpy.py\u001b[0m\", line \u001b[33m86\u001b[0m, in \u001b[35m_run_code\u001b[0m\r\n    \u001b[1mexec\u001b[0m\u001b[1m(\u001b[0m\u001b[1mcode\u001b[0m\u001b[1m,\u001b[0m \u001b[1mrun_globals\u001b[0m\u001b[1m)\u001b[0m\r\n    \u001b[36m     |     -> \u001b[0m\u001b[36m\u001b[1m{'__name__': '__main__', '__doc__': None, '__package__': 'openadapt', '__loader__': <_frozen_importlib_external.SourceFileLoa...\u001b[0m\r\n    \u001b[36m     -> \u001b[0m\u001b[36m\u001b[1m<code object <module> at 0x104fad420, file \"/Users/seyedmortezahosseini/Codes/OpenAdapt/openadapt/visualize.py\", line 1>\u001b[0m\r\n\r\n> File \"\u001b[32m/Users/seyedmortezahosseini/Codes/OpenAdapt/openadapt/\u001b[0m\u001b[32m\u001b[1mvisualize.py\u001b[0m\", line \u001b[33m294\u001b[0m, in \u001b[35m<module>\u001b[0m\r\n    \u001b[1mmain\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\r\n    \u001b[36m-> \u001b[0m\u001b[36m\u001b[1m<function main at 0x15219e7a0>\u001b[0m\r\n\r\n  File \"\u001b[32m/Users/seyedmortezahosseini/Codes/OpenAdapt/openadapt/\u001b[0m\u001b[32m\u001b[1mvisualize.py\u001b[0m\", line \u001b[33m162\u001b[0m, in \u001b[35mmain\u001b[0m\r\n    \u001b[1maction_events\u001b[0m \u001b[35m\u001b[1m=\u001b[0m \u001b[1mget_events\u001b[0m\u001b[1m(\u001b[0m\u001b[1mrecording\u001b[0m\u001b[1m,\u001b[0m \u001b[1mprocess\u001b[0m\u001b[35m\u001b[1m=\u001b[0m\u001b[1mPROCESS_EVENTS\u001b[0m\u001b[1m,\u001b[0m \u001b[1mmeta\u001b[0m\u001b[35m\u001b[1m=\u001b[0m\u001b[1mmeta\u001b[0m\u001b[1m)\u001b[0m\r\n    \u001b[36m                |          |                  |                    -> \u001b[0m\u001b[36m\u001b[1m{}\u001b[0m\r\n    \u001b[36m                |          |                  -> \u001b[0m\u001b[36m\u001b[1mTrue\u001b[0m\r\n    \u001b[36m                |          -> \u001b[0m\u001b[36m\u001b[1mRecording(id=6, timestamp=1689807883.972529, monitor_width=3432, monitor_height=1080, double_click_interval_seconds=0.5, doub...\u001b[0m\r\n    \u001b[36m                -> \u001b[0m\u001b[36m\u001b[1m<function get_events at 0x137a1a560>\u001b[0m\r\n\r\n  File \"\u001b[32m/Users/seyedmortezahosseini/Codes/OpenAdapt/openadapt/\u001b[0m\u001b[32m\u001b[1mevents.py\u001b[0m\", line \u001b[33m46\u001b[0m, in \u001b[35mget_events\u001b[0m\r\n    \u001b[1maction_events\u001b[0m\u001b[1m,\u001b[0m \u001b[1mwindow_events\u001b[0m\u001b[1m,\u001b[0m \u001b[1mscreenshots\u001b[0m \u001b[35m\u001b[1m=\u001b[0m \u001b[1mprocess_events\u001b[0m\u001b[1m(\u001b[0m\r\n    \u001b[36m|              |                            -> \u001b[0m\u001b[36m\u001b[1m<function process_events at 0x15219e4d0>\u001b[0m\r\n    \u001b[36m|              -> \u001b[0m\u001b[36m\u001b[1m[WindowEvent(id=7, recording_timestamp=1689807883.972529, timestamp=1691843038.5645435, state={'title': 'iTerm2 python -m ope...\u001b[0m\r\n    \u001b[36m-> \u001b[0m\u001b[36m\u001b[1m[ActionEvent(id=1109, name='move', timestamp=1691843039.3894079, recording_timestamp=1689807883.972529, screenshot_timestamp=...\u001b[0m\r\n\r\n  File \"\u001b[32m/Users/seyedmortezahosseini/Codes/OpenAdapt/openadapt/\u001b[0m\u001b[32m\u001b[1mevents.py\u001b[0m\", line \u001b[33m613\u001b[0m, in \u001b[35mprocess_events\u001b[0m\r\n    \u001b[1maction_events\u001b[0m \u001b[35m\u001b[1m=\u001b[0m \u001b[1mprocess_fn\u001b[0m\u001b[1m(\u001b[0m\u001b[1maction_events\u001b[0m\u001b[1m)\u001b[0m\r\n    \u001b[36m                |          -> \u001b[0m\u001b[36m\u001b[1m[ActionEvent(id=1109, name='move', timestamp=1691843039.3894079, recording_timestamp=1689807883.972529, screenshot_timestamp=...\u001b[0m\r\n    \u001b[36m                -> \u001b[0m\u001b[36m\u001b[1m<function merge_consecutive_keyboard_events at 0x15219ce50>\u001b[0m\r\n\r\n  File \"\u001b[32m/Users/seyedmortezahosseini/Codes/OpenAdapt/openadapt/\u001b[0m\u001b[32m\u001b[1mevents.py\u001b[0m\", line \u001b[33m465\u001b[0m, in \u001b[35mmerge_consecutive_keyboard_events\u001b[0m\r\n    \u001b[35m\u001b[1mreturn\u001b[0m \u001b[1mmerge_consecutive_action_events\u001b[0m\u001b[1m(\u001b[0m\r\n    \u001b[36m       -> \u001b[0m\u001b[36m\u001b[1m<function merge_consecutive_action_events at 0x15219e3b0>\u001b[0m\r\n\r\n  File \"\u001b[32m/Users/seyedmortezahosseini/Codes/OpenAdapt/openadapt/\u001b[0m\u001b[32m\u001b[1mevents.py\u001b[0m\", line \u001b[33m556\u001b[0m, in \u001b[35mmerge_consecutive_action_events\u001b[0m\r\n    \u001b[1minclude_merged_events\u001b[0m\u001b[1m(\u001b[0m\u001b[1mto_merge\u001b[0m\u001b[1m)\u001b[0m\r\n    \u001b[36m|                     -> \u001b[0m\u001b[36m\u001b[1m[ActionEvent(id=1735, name='release', timestamp=1691843058.0992439, recording_timestamp=1689807883.972529, screenshot_timesta...\u001b[0m\r\n    \u001b[36m-> \u001b[0m\u001b[36m\u001b[1m<function merge_consecutive_action_events.<locals>.include_merged_events at 0x1688209d0>\u001b[0m\r\n\r\n  File \"\u001b[32m/Users/seyedmortezahosseini/Codes/OpenAdapt/openadapt/\u001b[0m\u001b[32m\u001b[1mevents.py\u001b[0m\", line \u001b[33m545\u001b[0m, in \u001b[35minclude_merged_events\u001b[0m\r\n    \u001b[1mmerged_events\u001b[0m \u001b[35m\u001b[1m=\u001b[0m \u001b[1mget_merged_events\u001b[0m\u001b[1m(\u001b[0m\u001b[1mto_merge\u001b[0m\u001b[1m,\u001b[0m \u001b[1mstate\u001b[0m\u001b[1m)\u001b[0m\r\n    \u001b[36m                |                 |         -> \u001b[0m\u001b[36m\u001b[1m{'dt': 0.9007699489593506}\u001b[0m\r\n    \u001b[36m                |                 -> \u001b[0m\u001b[36m\u001b[1m[ActionEvent(id=1735, name='release', timestamp=1691843058.0992439, recording_timestamp=1689807883.972529, screenshot_timesta...\u001b[0m\r\n    \u001b[36m                -> \u001b[0m\u001b[36m\u001b[1m<function merge_consecutive_keyboard_events.<locals>.get_merged_events at 0x1348ad090>\u001b[0m\r\n\r\n  File \"\u001b[32m/Users/seyedmortezahosseini/Codes/OpenAdapt/openadapt/\u001b[0m\u001b[32m\u001b[1mevents.py\u001b[0m\", line \u001b[33m462\u001b[0m, in \u001b[35mget_merged_events\u001b[0m\r\n    \u001b[1mmerged_events\u001b[0m\u001b[35m\u001b[1m.\u001b[0m\u001b[1mappend\u001b[0m\u001b[1m(\u001b[0m\u001b[1mmerged_event\u001b[0m\u001b[1m)\u001b[0m\r\n    \u001b[36m|             -> \u001b[0m\u001b[36m\u001b[1m<method 'append' of 'list' objects>\u001b[0m\r\n    \u001b[36m-> \u001b[0m\u001b[36m\u001b[1m[]\u001b[0m\r\n\r\n\u001b[31m\u001b[1mUnboundLocalError\u001b[0m:\u001b[1m local variable 'merged_event' referenced before assignment\u001b[0m\r\n```\n\n### To Reproduce\n\nI use macOS.\r\nI followed installation instructions. Recorded a session with a few operations. Then I tried to visualize the recorded session.",
      "state": "closed",
      "author": "mory91",
      "author_type": "User",
      "created_at": "2023-07-19T23:34:01Z",
      "updated_at": "2023-07-29T06:55:57Z",
      "closed_at": "2023-07-29T06:55:57Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/410/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/410",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/410",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:48.602138",
      "comments": [
        {
          "author": "abrichr",
          "body": "Thank you @mory91 !\r\n\r\nI've personally never seen this before, will post to our Slack (link in README) to see if anyone else has. Please feel free to join and/or implement a fix!\r\n\r\nEdit: @mory91 can you please clarify your system specs? e.g. Intel or Apple silicon? M1 or M2?",
          "created_at": "2023-07-20T19:08:53Z"
        },
        {
          "author": "mory91",
          "body": "I have an M1 Pro.\r\nForgot to mention that I made a quick fix that at least worked on my machine. #411 ",
          "created_at": "2023-07-20T19:28:39Z"
        },
        {
          "author": "abrichr",
          "body": "Fixed in https://github.com/OpenAdaptAI/OpenAdapt/pull/411, thank you @mory91 !! 🙏 \r\n\r\nWould love to learn more about your interests, please feel free to grab some time on my calendar: https://www.getclockwise.com/c/richard-abrich/quick-meeting",
          "created_at": "2023-07-20T21:01:53Z"
        }
      ]
    },
    {
      "issue_number": 442,
      "title": "Exploring Minimizing Window State Content while Retaining Maximum Info",
      "body": "### Feature request\r\n\r\nPossible extension: #242 \r\n\r\nA bare bones WindowEvent template already exists here: #327 and some testing has been done using GPT-3.5/4 (slash because the results of the inference are the same), though the ```meta``` and ```state``` dicts are just empty. (We are losing out on information stored in these keys with this approach)\r\n\r\nPotential improvement areas: Context length limitations. \r\n\r\nCurrent idea: finetune a model to summarize the Accessibility API Output (AXValue and etc), replace this key with the summary inside the recording and subsequently finetune on this modified recording, while maintaining the original lookup value of the key for later.\r\n\r\nCurrent problem: How exactly do we evaluate AXValue (and other relevant keys) for information that's useful?",
      "state": "open",
      "author": "FFFiend",
      "author_type": "User",
      "created_at": "2023-07-28T19:03:01Z",
      "updated_at": "2023-07-28T20:17:17Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/442/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/442",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/442",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:48.790656",
      "comments": [
        {
          "author": "FFFiend",
          "body": "Might be an enhancement to #430 ",
          "created_at": "2023-07-28T19:33:00Z"
        },
        {
          "author": "FFFiend",
          "body": "A question to ask is: Is evaluating AXValue to extract useful condensed  info about the recording even necessary?\r\nWhat I mean is, the ```task_description``` for each recording is unused as it is, and as such it's the responsibility of the user to make sure that the recording matches its description",
          "created_at": "2023-07-28T20:13:35Z"
        }
      ]
    },
    {
      "issue_number": 154,
      "title": "Usecase: aerospace and aviation",
      "body": "How can we enable the aerospace and aviation industry to automate repetitive tasks?\r\n\r\nThis involves:\r\n\r\n1. Identifying specific use cases relevant to the aerospace and aviation industry (i.e. job positions, associated tasks, and relevant software applications)\r\n2. Creating recordings involving one or more relevant applications, and implementing tests for corresponding completions:\r\n\r\n- Autodesk AutoCAD\r\n- HoneyWell Forge\r\n- others?",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-17T12:51:47Z",
      "updated_at": "2023-07-28T16:02:47Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/154/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/154",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/154",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:49.023299",
      "comments": [
        {
          "author": "KrishPatel13",
          "body": "To enable the aerospace and aviation industry to automate repetitive tasks, here are some examples that involves repitative tasks:\r\n\r\n  1. Use Case: Aircraft Design and Engineering\r\n      Job Positions: Aerospace Engineers, Designers\r\n      Tasks: Creating 2D and 3D models, drafting blueprints, perf",
          "created_at": "2023-05-17T18:54:34Z"
        },
        {
          "author": "KrishPatel13",
          "body": "To implement the Step 1, we can break down the process into 2 sub-steps:\r\n\r\n1. Create screen recordings or demonstrations showcasing the relevant software applications and how they automate or assist in performing the tasks.\r\n2. Implement tests for corresponding completions by providing sample input",
          "created_at": "2023-05-17T18:56:17Z"
        },
        {
          "author": "KrishPatel13",
          "body": "I have downloaded AutoCAD software and I am exploring for 3D -> 2D Orthographic views modelling as this is a common task as illustrated in https://github.com/MLDSAI/OpenAdapt/issues/154#issuecomment-1551899852\r\n\r\nCurrently I am not able to record https://github.com/MLDSAI/OpenAdapt/issues/148, I am ",
          "created_at": "2023-05-17T18:59:09Z"
        },
        {
          "author": "KrishPatel13",
          "body": "We would need a 3D model that is generally being used in the industry as a starting point for the 2D modelling\r\n\r\nOn researching online, there are almost no free 3D aircraft-related models (DVG) available. Those which look good at a glance are paid.\r\n\r\nMoreover, we would need a specific format of th",
          "created_at": "2023-06-02T04:36:20Z"
        },
        {
          "author": "KrishPatel13",
          "body": "> I have downloaded AutoCAD software and I am exploring for 3D -> 2D Orthographic views modelling as this is a common task as illustrated in [#154 (comment)](https://github.com/MLDSAI/OpenAdapt/issues/154#issuecomment-1551899852)\r\n> \r\n> Currently I am not able to record #148, I am trying my best to ",
          "created_at": "2023-06-02T04:40:11Z"
        }
      ]
    },
    {
      "issue_number": 440,
      "title": "Prevent Overwriting Recordings from Different Hosts with Same Name",
      "body": "### Feature request\n\nRecordings received from different hosts in https://github.com/OpenAdaptAI/OpenAdapt/pull/223 with the same name don't conflict with each other. We don't want to overwrite existing recordings. To achieve this, we can use a hash to make the filenames unique. An ideal approach would be hashing the host name and current timestamp together, ensuring uniqueness and traceability.\r\n\n\n### Motivation\n\n- The current system faces conflicts when receiving recordings from different hosts with the same name, leading to data loss and confusion.\r\n- We want to prevent overwriting existing recordings and ensure each recording is uniquely identifiable.\r\n- By hashing the host name and timestamp, we can create a robust and traceable system for managing recordings.\r\n\r\n",
      "state": "open",
      "author": "Mustaballer",
      "author_type": "User",
      "created_at": "2023-07-28T15:16:20Z",
      "updated_at": "2023-07-28T15:17:00Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/440/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/440",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/440",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:49.199111",
      "comments": [
        {
          "author": "Mustaballer",
          "body": "Implementation can look like: \r\n- Create a hash function to combine the host name and current time to generate a unique filename.\r\n- Ensure that the new system handles conflicts gracefully without overwriting existing data.\r\n- Utilize the [onetimesecret.com](https://onetimesecret.com/docs/api) API t",
          "created_at": "2023-07-28T15:17:00Z"
        }
      ]
    },
    {
      "issue_number": 436,
      "title": "[Bug]: fastavro does not support PEP 517 builds",
      "body": "### Describe the bug\r\n\r\nafter poetry add griptape :\r\n```\r\nUsing version ^0.14.7 for griptape\r\n\r\nUpdating dependencies\r\nResolving dependencies... (69.5s)\r\n\r\nPackage operations: 18 installs, 0 updates, 0 removals\r\n\r\n  • Installing fastavro (1.7.4): Failed\r\n\r\n  ChefBuildError\r\n\r\n  Backend subprocess exited when trying to invoke build_wheel\r\n  \r\n  running bdist_wheel\r\n  running build\r\n  running build_py\r\n  creating build\r\n  creating build/lib.macosx-10.9-universal2-cpython-310\r\n  creating build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n  copying fastavro/_schema_common.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n  copying fastavro/_schema_py.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n  copying fastavro/_logical_writers_py.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n  copying fastavro/json_read.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n  copying fastavro/write.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n  copying fastavro/_write_common.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n  copying fastavro/_write_py.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n  copying fastavro/__init__.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n  copying fastavro/_read_py.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n  copying fastavro/types.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n  copying fastavro/json_write.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n  copying fastavro/_read_common.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n  copying fastavro/_validate_common.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n  copying fastavro/_logical_readers_py.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n  copying fastavro/utils.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n  copying fastavro/logical_writers.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n  copying fastavro/_validation_py.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n  copying fastavro/__main__.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n  copying fastavro/logical_readers.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n  copying fastavro/const.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n  copying fastavro/schema.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n  copying fastavro/read.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n  copying fastavro/validation.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n  creating build/lib.macosx-10.9-universal2-cpython-310/fastavro/io\r\n  copying fastavro/io/binary_decoder.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro/io\r\n  copying fastavro/io/__init__.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro/io\r\n  copying fastavro/io/binary_encoder.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro/io\r\n  copying fastavro/io/parser.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro/io\r\n  copying fastavro/io/symbols.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro/io\r\n  copying fastavro/io/json_encoder.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro/io\r\n  copying fastavro/io/json_decoder.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro/io\r\n  creating build/lib.macosx-10.9-universal2-cpython-310/fastavro/repository\r\n  copying fastavro/repository/__init__.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro/repository\r\n  copying fastavro/repository/flat_dict.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro/repository\r\n  copying fastavro/repository/base.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro/repository\r\n  copying fastavro/py.typed -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n  running build_ext\r\n  \r\n  Error compiling Cython file:\r\n  ------------------------------------------------------------\r\n  ...\r\n              writer_schema, named_schemas, offset, size, return_record_name, return_record_name_override\r\n          )\r\n  \r\n  \r\n  class Block:\r\n      def __init__(\r\n      ^\r\n  ------------------------------------------------------------\r\n  \r\n  fastavro/_read.pyx:976:4: Compiler crash in AnalyseDeclarationsTransform\r\n  \r\n  File 'ModuleNode.py', line 203, in analyse_declarations: ModuleNode(_read.pyx:1:0,\r\n      doc = 'Python code for reading AVRO files',\r\n      full_module_name = 'fastavro._read')\r\n  File 'Nodes.py', line 393, in analyse_declarations: StatListNode(_read.pyx:10:0)\r\n  File 'Nodes.py', line 393, in analyse_declarations: StatListNode(_read.pyx:975:0)\r\n  File 'Nodes.py', line 5121, in analyse_declarations: PyClassDefNode(_read.pyx:975:0,\r\n      name = 'Block')\r\n  File 'Nodes.py', line 393, in analyse_declarations: StatListNode(_read.pyx:976:4)\r\n  File 'Nodes.py', line 2710, in analyse_declarations: CFuncDefNode(_read.pyx:976:4,\r\n      args = [...]/11,\r\n      modifiers = [...]/0,\r\n      outer_attrs = [...]/2,\r\n      overridable = True,\r\n      visibility = 'private')\r\n  File 'Nodes.py', line 2721, in declare_cpdef_wrapper: CFuncDefNode(_read.pyx:976:4,\r\n      args = [...]/11,\r\n      modifiers = [...]/0,\r\n      outer_attrs = [...]/2,\r\n      overridable = True,\r\n      visibility = 'private')\r\n  File 'Nodes.py', line 2787, in call_self_node: CFuncDefNode(_read.pyx:976:4,\r\n      args = [...]/11,\r\n      modifiers = [...]/0,\r\n      outer_attrs = [...]/2,\r\n      overridable = True,\r\n      visibility = 'private')\r\n  \r\n  Compiler crash traceback from this point on:\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/Cython/Compiler/Nodes.py\", line 2787, in call_self_node\r\n      type_entry = self.type.args[0].type.entry\r\n  AttributeError: 'PyObjectType' object has no attribute 'entry'\r\n  Compiling fastavro/_read.pyx because it changed.\r\n  [1/1] Cythonizing fastavro/_read.pyx\r\n  Traceback (most recent call last):\r\n    File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pyproject_hooks/_in_process/_in_process.py\", line 353, in <module>\r\n      main()\r\n    File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pyproject_hooks/_in_process/_in_process.py\", line 335, in main\r\n      json_out['return_val'] = hook(**hook_input['kwargs'])\r\n    File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pyproject_hooks/_in_process/_in_process.py\", line 251, in build_wheel\r\n      return _build_backend().build_wheel(wheel_directory, config_settings,\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/setuptools/build_meta.py\", line 416, in build_wheel\r\n      return self._build_with_temp_dir(['bdist_wheel'], '.whl',\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/setuptools/build_meta.py\", line 401, in _build_with_temp_dir\r\n      self.run_setup()\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/setuptools/build_meta.py\", line 338, in run_setup\r\n      exec(code, locals())\r\n    File \"<string>\", line 37, in <module>\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/setuptools/__init__.py\", line 107, in setup\r\n      return distutils.core.setup(**attrs)\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/setuptools/_distutils/core.py\", line 185, in setup\r\n      return run_commands(dist)\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/setuptools/_distutils/core.py\", line 201, in run_commands\r\n      dist.run_commands()\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/setuptools/_distutils/dist.py\", line 969, in run_commands\r\n      self.run_command(cmd)\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/setuptools/dist.py\", line 1234, in run_command\r\n      super().run_command(command)\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/setuptools/_distutils/dist.py\", line 988, in run_command\r\n      cmd_obj.run()\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/wheel/bdist_wheel.py\", line 346, in run\r\n      self.run_command(\"build\")\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/setuptools/_distutils/cmd.py\", line 318, in run_command\r\n      self.distribution.run_command(command)\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/setuptools/dist.py\", line 1234, in run_command\r\n      super().run_command(command)\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/setuptools/_distutils/dist.py\", line 988, in run_command\r\n      cmd_obj.run()\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/setuptools/_distutils/command/build.py\", line 131, in run\r\n      self.run_command(cmd_name)\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/setuptools/_distutils/cmd.py\", line 318, in run_command\r\n      self.distribution.run_command(command)\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/setuptools/dist.py\", line 1234, in run_command\r\n      super().run_command(command)\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/setuptools/_distutils/dist.py\", line 988, in run_command\r\n      cmd_obj.run()\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/setuptools/command/build_ext.py\", line 84, in run\r\n      _build_ext.run(self)\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/setuptools/_distutils/command/build_ext.py\", line 345, in run\r\n      self.build_extensions()\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/setuptools/_distutils/command/build_ext.py\", line 467, in build_extensions\r\n      self._build_extensions_serial()\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/setuptools/_distutils/command/build_ext.py\", line 493, in _build_extensions_serial\r\n      self.build_extension(ext)\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/setuptools/command/build_ext.py\", line 246, in build_extension\r\n      _build_ext.build_extension(self, ext)\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/Cython/Distutils/build_ext.py\", line 122, in build_extension\r\n      new_ext = cythonize(\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/Cython/Build/Dependencies.py\", line 1134, in cythonize\r\n      cythonize_one(*args)\r\n    File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/tmp9jgzii4x/.venv/lib/python3.10/site-packages/Cython/Build/Dependencies.py\", line 1301, in cythonize_one\r\n      raise CompileError(None, pyx_file)\r\n  Cython.Compiler.Errors.CompileError: fastavro/_read.pyx\r\n  \r\n\r\n  at /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/poetry/installation/chef.py:147 in _prepare\r\n      143│ \r\n      144│                 error = ChefBuildError(\"\\n\\n\".join(message_parts))\r\n      145│ \r\n      146│             if error is not None:\r\n    → 147│                 raise error from None\r\n      148│ \r\n      149│             return path\r\n      150│ \r\n      151│     def _prepare_sdist(self, archive: Path, destination: Path | None = None) -> Path:\r\n\r\nNote: This error originates from the build backend, and is likely not a problem with poetry but with fastavro (1.7.4) not supporting PEP 517 builds. You can verify this by running 'pip wheel --use-pep517 \"fastavro (==1.7.4)\"'.\r\n```\r\nafter running pip wheel --use-pep517 \"fastavro (==1.7.4)\r\n```\r\nCollecting fastavro==1.7.4\r\n  Using cached fastavro-1.7.4.tar.gz (791 kB)\r\n  Installing build dependencies ... done\r\n  Getting requirements to build wheel ... done\r\n  Preparing metadata (pyproject.toml) ... done\r\nBuilding wheels for collected packages: fastavro\r\n  Building wheel for fastavro (pyproject.toml) ... error\r\n  error: subprocess-exited-with-error\r\n  \r\n  × Building wheel for fastavro (pyproject.toml) did not run successfully.\r\n  │ exit code: 1\r\n  ╰─> [150 lines of output]\r\n      running bdist_wheel\r\n      running build\r\n      running build_py\r\n      creating build\r\n      creating build/lib.macosx-10.9-universal2-cpython-310\r\n      creating build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n      copying fastavro/_schema_common.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n      copying fastavro/_schema_py.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n      copying fastavro/_logical_writers_py.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n      copying fastavro/json_read.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n      copying fastavro/write.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n      copying fastavro/_write_common.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n      copying fastavro/_write_py.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n      copying fastavro/__init__.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n      copying fastavro/_read_py.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n      copying fastavro/types.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n      copying fastavro/json_write.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n      copying fastavro/_read_common.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n      copying fastavro/_validate_common.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n      copying fastavro/_logical_readers_py.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n      copying fastavro/utils.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n      copying fastavro/logical_writers.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n      copying fastavro/_validation_py.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n      copying fastavro/__main__.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n      copying fastavro/logical_readers.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n      copying fastavro/const.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n      copying fastavro/schema.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n      copying fastavro/read.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n      copying fastavro/validation.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n      creating build/lib.macosx-10.9-universal2-cpython-310/fastavro/io\r\n      copying fastavro/io/binary_decoder.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro/io\r\n      copying fastavro/io/__init__.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro/io\r\n      copying fastavro/io/binary_encoder.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro/io\r\n      copying fastavro/io/parser.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro/io\r\n      copying fastavro/io/symbols.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro/io\r\n      copying fastavro/io/json_encoder.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro/io\r\n      copying fastavro/io/json_decoder.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro/io\r\n      creating build/lib.macosx-10.9-universal2-cpython-310/fastavro/repository\r\n      copying fastavro/repository/__init__.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro/repository\r\n      copying fastavro/repository/flat_dict.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro/repository\r\n      copying fastavro/repository/base.py -> build/lib.macosx-10.9-universal2-cpython-310/fastavro/repository\r\n      copying fastavro/py.typed -> build/lib.macosx-10.9-universal2-cpython-310/fastavro\r\n      running build_ext\r\n      \r\n      Error compiling Cython file:\r\n      ------------------------------------------------------------\r\n      ...\r\n                  writer_schema, named_schemas, offset, size, return_record_name, return_record_name_override\r\n              )\r\n      \r\n      \r\n      class Block:\r\n          def __init__(\r\n          ^\r\n      ------------------------------------------------------------\r\n      \r\n      fastavro/_read.pyx:976:4: Compiler crash in AnalyseDeclarationsTransform\r\n      \r\n      File 'ModuleNode.py', line 203, in analyse_declarations: ModuleNode(_read.pyx:1:0,\r\n          doc = 'Python code for reading AVRO files',\r\n          full_module_name = 'fastavro._read')\r\n      File 'Nodes.py', line 393, in analyse_declarations: StatListNode(_read.pyx:10:0)\r\n      File 'Nodes.py', line 393, in analyse_declarations: StatListNode(_read.pyx:975:0)\r\n      File 'Nodes.py', line 5121, in analyse_declarations: PyClassDefNode(_read.pyx:975:0,\r\n          name = 'Block')\r\n      File 'Nodes.py', line 393, in analyse_declarations: StatListNode(_read.pyx:976:4)\r\n      File 'Nodes.py', line 2710, in analyse_declarations: CFuncDefNode(_read.pyx:976:4,\r\n          args = [...]/11,\r\n          modifiers = [...]/0,\r\n          outer_attrs = [...]/2,\r\n          overridable = True,\r\n          visibility = 'private')\r\n      File 'Nodes.py', line 2721, in declare_cpdef_wrapper: CFuncDefNode(_read.pyx:976:4,\r\n          args = [...]/11,\r\n          modifiers = [...]/0,\r\n          outer_attrs = [...]/2,\r\n          overridable = True,\r\n          visibility = 'private')\r\n      File 'Nodes.py', line 2787, in call_self_node: CFuncDefNode(_read.pyx:976:4,\r\n          args = [...]/11,\r\n          modifiers = [...]/0,\r\n          outer_attrs = [...]/2,\r\n          overridable = True,\r\n          visibility = 'private')\r\n      \r\n      Compiler crash traceback from this point on:\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/Cython/Compiler/Nodes.py\", line 2787, in call_self_node\r\n          type_entry = self.type.args[0].type.entry\r\n      AttributeError: 'PyObjectType' object has no attribute 'entry'\r\n      Compiling fastavro/_read.pyx because it changed.\r\n      [1/1] Cythonizing fastavro/_read.pyx\r\n      Traceback (most recent call last):\r\n        File \"/Users/jesicasusanto/Library/Caches/pypoetry/virtualenvs/openadapt-g-n4HnhN-py3.10/lib/python3.10/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py\", line 353, in <module>\r\n          main()\r\n        File \"/Users/jesicasusanto/Library/Caches/pypoetry/virtualenvs/openadapt-g-n4HnhN-py3.10/lib/python3.10/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py\", line 335, in main\r\n          json_out['return_val'] = hook(**hook_input['kwargs'])\r\n        File \"/Users/jesicasusanto/Library/Caches/pypoetry/virtualenvs/openadapt-g-n4HnhN-py3.10/lib/python3.10/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py\", line 251, in build_wheel\r\n          return _build_backend().build_wheel(wheel_directory, config_settings,\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/setuptools/build_meta.py\", line 416, in build_wheel\r\n          return self._build_with_temp_dir(['bdist_wheel'], '.whl',\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/setuptools/build_meta.py\", line 401, in _build_with_temp_dir\r\n          self.run_setup()\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/setuptools/build_meta.py\", line 338, in run_setup\r\n          exec(code, locals())\r\n        File \"<string>\", line 37, in <module>\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/setuptools/__init__.py\", line 107, in setup\r\n          return distutils.core.setup(**attrs)\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/setuptools/_distutils/core.py\", line 185, in setup\r\n          return run_commands(dist)\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/setuptools/_distutils/core.py\", line 201, in run_commands\r\n          dist.run_commands()\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/setuptools/_distutils/dist.py\", line 969, in run_commands\r\n          self.run_command(cmd)\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/setuptools/dist.py\", line 1234, in run_command\r\n          super().run_command(command)\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/setuptools/_distutils/dist.py\", line 988, in run_command\r\n          cmd_obj.run()\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/wheel/bdist_wheel.py\", line 346, in run\r\n          self.run_command(\"build\")\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/setuptools/_distutils/cmd.py\", line 318, in run_command\r\n          self.distribution.run_command(command)\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/setuptools/dist.py\", line 1234, in run_command\r\n          super().run_command(command)\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/setuptools/_distutils/dist.py\", line 988, in run_command\r\n          cmd_obj.run()\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/setuptools/_distutils/command/build.py\", line 131, in run\r\n          self.run_command(cmd_name)\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/setuptools/_distutils/cmd.py\", line 318, in run_command\r\n          self.distribution.run_command(command)\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/setuptools/dist.py\", line 1234, in run_command\r\n          super().run_command(command)\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/setuptools/_distutils/dist.py\", line 988, in run_command\r\n          cmd_obj.run()\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/setuptools/command/build_ext.py\", line 84, in run\r\n          _build_ext.run(self)\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/setuptools/_distutils/command/build_ext.py\", line 345, in run\r\n          self.build_extensions()\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/setuptools/_distutils/command/build_ext.py\", line 467, in build_extensions\r\n          self._build_extensions_serial()\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/setuptools/_distutils/command/build_ext.py\", line 493, in _build_extensions_serial\r\n          self.build_extension(ext)\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/setuptools/command/build_ext.py\", line 246, in build_extension\r\n          _build_ext.build_extension(self, ext)\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/Cython/Distutils/build_ext.py\", line 122, in build_extension\r\n          new_ext = cythonize(\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/Cython/Build/Dependencies.py\", line 1134, in cythonize\r\n          cythonize_one(*args)\r\n        File \"/private/var/folders/s3/4rk3zm6x3x114pw4d1ph5mdw0000gn/T/pip-build-env-fpdmpade/overlay/lib/python3.10/site-packages/Cython/Build/Dependencies.py\", line 1301, in cythonize_one\r\n          raise CompileError(None, pyx_file)\r\n      Cython.Compiler.Errors.CompileError: fastavro/_read.pyx\r\n      [end of output]\r\n  \r\n  note: This error originates from a subprocess, and is likely not a problem with pip.\r\n  ERROR: Failed building wheel for fastavro\r\nFailed to build fastavro\r\nERROR: Failed to build one or more wheels\r\n```\r\n\r\n### To Reproduce\r\n\r\nI use macOS and  followed the poetry installation steps in the readme.",
      "state": "open",
      "author": "jesicasusanto",
      "author_type": "User",
      "created_at": "2023-07-26T20:25:02Z",
      "updated_at": "2023-07-28T15:02:41Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/436/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/436",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/436",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:49.442661",
      "comments": [
        {
          "author": "abrichr",
          "body": "Thanks @jesicasusanto ! Is this on `main`? Can you please try installing again into a separate location? Please try both approaches (manual and scripted).",
          "created_at": "2023-07-28T13:42:00Z"
        },
        {
          "author": "jesicasusanto",
          "body": "after running in the `main` branch with scripted installation, then poetry add griptape:\r\n`Using version ^0.14.7 for griptape\r\n\r\nUpdating dependencies\r\nResolving dependencies... (68.4s)\r\n\r\nPackage operations: 48 installs, 1 update, 0 removals\r\n\r\n  • Installing pycparser (2.21)\r\n  • Installing cffi (",
          "created_at": "2023-07-28T14:46:29Z"
        },
        {
          "author": "jesicasusanto",
          "body": "but looks like this issue is fixed in fastavro >=1.8.1. check this https://github.com/fastavro/fastavro/issues/701 @abrichr ",
          "created_at": "2023-07-28T14:47:34Z"
        },
        {
          "author": "jesicasusanto",
          "body": "doing this should solve the issue @abrichr :\r\nafter poetry add \"fastavro^1.8.1\"\r\n```\r\nUpdating dependencies\r\nResolving dependencies... (5.9s)\r\n\r\nPackage operations: 1 install, 3 updates, 0 removals\r\n\r\n  • Updating urllib3 (1.26.16 -> 2.0.4)\r\n  • Updating tomlkit (0.12.1 -> 0.11.8)\r\n  • Updating pyli",
          "created_at": "2023-07-28T15:02:07Z"
        }
      ]
    },
    {
      "issue_number": 417,
      "title": "Implement LLama-2 ",
      "body": "### Feature request\n\nWe would like to request access to LLama-2 and implement it as a provided ML model, i.e ```openadapt.provider.LLAMA2``` or similar.\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "FFFiend",
      "author_type": "User",
      "created_at": "2023-07-20T22:00:43Z",
      "updated_at": "2023-07-28T05:33:43Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/417/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/417",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/417",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T01:25:49.648893",
      "comments": [
        {
          "author": "FFFiend",
          "body": "I've already requested access just now, waiting on Meta's reply 😄  (ETA: 1-2 days)'\r\n\r\nEdit: got access 😄 I encourage everyone to head over to any LLama-2 HF model page, such as https://huggingface.co/meta-llama/Llama-2-7b and follow the instructions at the top of the model card. Submitting the form",
          "created_at": "2023-07-20T22:01:08Z"
        },
        {
          "author": "FFFiend",
          "body": "Nouse-Hermes-Llama2-13b: https://huggingface.co/NousResearch/Nous-Hermes-Llama2-13b?text=My+name+is+Lewis+and+I+like+to\r\nLLama-2 GGML model: https://huggingface.co/TheBloke/Llama-2-7B-GGML,\r\nLLama-2-Chat GGML model: https://huggingface.co/TheBloke/Llama-2-7B-Chat-GGML\r\n\r\nSeems like The Bloke wastes ",
          "created_at": "2023-07-23T05:10:03Z"
        },
        {
          "author": "abrichr",
          "body": "@FFFiend as discussed, we would like to implement a high level API that the rest of the system uses, and have models implement that API as necessary.",
          "created_at": "2023-07-24T15:22:32Z"
        },
        {
          "author": "FFFiend",
          "body": "https://huggingface.co/chat/\r\n\r\nLLAMA2-70b chat model hosted by huggingface.\r\n\r\nIssue with LLama-2 specifically is that you have to sign in to your huggingface account through the CLI since only accounts that are granted access can download the model..so that is currently a blocker with Modal.\r\n\r\nTO",
          "created_at": "2023-07-28T05:33:43Z"
        }
      ]
    },
    {
      "issue_number": 252,
      "title": "Define Model API",
      "body": "### Feature request\n\nWe want to define a prompt-based API for interacting with language models.\r\n\r\nThis task involves defining the high level APIs that connect ReplayStrategies to Large Language Models.\n\n### Motivation\n\nRelated: https://github.com/MLDSAI/OpenAdapt/issues/242\n\n### Other\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-14T00:26:03Z",
      "updated_at": "2023-07-26T21:44:40Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/252/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "FFFiend"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/252",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/252",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:20.525576",
      "comments": [
        {
          "author": "FFFiend",
          "body": "For the current Replay Strats using LLM's, don't the ```get_completion``` methods serve as a kind of API to the model anyways? So perhaps we unify it into one class, with a dict of available models and paths, prompt and max input size?\r\n\r\nSomething like (sorry for the horrible indenting I wrote this",
          "created_at": "2023-06-22T04:40:37Z"
        },
        {
          "author": "abrichr",
          "body": "See also: https://docs.google.com/document/d/15kEsWSvT3TPcudONFQnNo1f6nhArBq6Bg1k-X6ZtnKk/edit#heading=h.wlbqvhj3qiu",
          "created_at": "2023-07-26T21:44:39Z"
        }
      ]
    },
    {
      "issue_number": 419,
      "title": "Compare out of the box completions of Action Events on GGML MPT7B, LLAMA-2, GPT-3.5-Davinci, etc",
      "body": "### Feature request\r\n\r\nWe basically want to see what model performs the best out of the box on generating action events given reference window state, ref actions and active window state, because we don't know what models we would like to add to ```openadapt.ml_models.provider``` other than GPT-3.5/4 for fine tuning\r\n\r\n\r\nRefer to #327 for a bare bones, simpler example of testing completions purely on GPT-3.5/4, and ```stateful.py``` for how event dicts are currently sanitized before being passed into the prompt.\r\n\r\nAlso serves as a good exercise for using different ML API's (HuggingFace and OpenAI) and understanding how completions are made. \r\n\r\n\r\n### Motivation\r\n\r\nHelpful for #379 ",
      "state": "open",
      "author": "FFFiend",
      "author_type": "User",
      "created_at": "2023-07-21T17:18:46Z",
      "updated_at": "2023-07-26T17:27:13Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "good first issue"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/419/reactions",
        "total_count": 2,
        "+1": 2,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/419",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/419",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:20.720696",
      "comments": [
        {
          "author": "FFFiend",
          "body": "Latest comment here has some LLAMA-2 models that run on CPU: #417 ",
          "created_at": "2023-07-23T05:21:43Z"
        },
        {
          "author": "FFFiend",
          "body": "@KrishPatel13 I can get some work done on this if work with your other PRs is getting in the way, just let me know 👍 ",
          "created_at": "2023-07-25T02:51:55Z"
        },
        {
          "author": "KrishPatel13",
          "body": "@FFFiend Sure no worries! I can work on something else 😊.",
          "created_at": "2023-07-25T13:55:34Z"
        },
        {
          "author": "FFFiend",
          "body": "https://huggingface.co/conceptofmind/LLongMA-2-13b-16k\r\n\r\nhttps://huggingface.co/conceptofmind/LLongMA-2-13b \r\n\r\nLLONGMA models",
          "created_at": "2023-07-25T17:27:28Z"
        },
        {
          "author": "FFFiend",
          "body": "https://github.com/facebookresearch/llama/issues/555 cant get LLama-2 to work inside a pipeline, not sure why.",
          "created_at": "2023-07-26T17:27:13Z"
        }
      ]
    },
    {
      "issue_number": 435,
      "title": "[Bug]: pynput not installing properly ",
      "body": "### Describe the bug\r\n\r\nfrom poetry.lock :\r\n```\r\n[[package]]\r\nname = \"pynput\"\r\nversion = \"1.7.6\"\r\ndescription = \"Monitor and control user input devices\"\r\noptional = false\r\npython-versions = \"*\"\r\nfiles = []\r\ndevelop = false\r\n\r\n[package.dependencies]\r\nevdev = {version = \">=1.3\", markers = \"sys_platform in \\\"linux\\\"\"}\r\npyobjc-framework-ApplicationServices = {version = \">=8.0\", markers = \"sys_platform == \\\"darwin\\\"\"}\r\npyobjc-framework-Quartz = {version = \">=8.0\", markers = \"sys_platform == \\\"darwin\\\"\"}\r\npython-xlib = {version = \">=0.17\", markers = \"sys_platform in \\\"linux\\\"\"}\r\nsix = \"*\"\r\n\r\n[package.source]\r\ntype = \"git\"\r\nurl = \"https://github.com/abrichr/pynput.git\"\r\nreference = \"HEAD\"\r\nresolved_reference = \"5d7256761b3cf6f01758c2d7d6a877d8facf79bb\"\r\n```\r\nterminal:\r\n```\r\n(openadapt-py3.10) [~/Library/Caches/pypoetry/virtualenvs/openadapt-g-n4HnhN-py3.10/lib/python3.10/site-packages/pynput/keyboard]$ cat \r\n_darwin.py | grep injected\r\n(openadapt-py3.10) [~/Library/Caches/pypoetry/virtualenvs/openadapt-g-n4HnhN-py3.10/lib/python3.10/site-packages/pynput/keyboard]$\r\n```\r\n```\r\n(openadapt-py3.10) *[feat/jinja2-prompt-template][~/Desktop/MLDSAI/PAT]$ poetry install\r\n\r\nb'HEAD'\r\n(openadapt-py3.10) *[feat/jinja2-prompt-template][~/Desktop/MLDSAI/PAT]$ \r\n```\r\nafter poetry env remove, then poetry install:\r\n```\r\n• Installing pynput (1.7.6 5d72567): Failed\r\n\r\n  SSLCertVerificationError\r\n\r\n  [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1007)\r\n\r\n  at /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/ssl.py:1342 in do_handshake\r\n      1338│         timeout = self.gettimeout()\r\n      1339│         try:\r\n      1340│             if timeout == 0.0 and block:\r\n      1341│                 self.settimeout(None)\r\n    → 1342│             self._sslobj.do_handshake()\r\n      1343│         finally:\r\n      1344│             self.settimeout(timeout)\r\n      1345│ \r\n      1346│     def _real_connect(self, addr, connect_ex):\r\n\r\nThe following error occurred when trying to handle this error:\r\n\r\n\r\n  MaxRetryError\r\n\r\n  HTTPSConnectionPool(host='github.com', port=443): Max retries exceeded with url: /abrichr/pynput.git/info/refs?service=git-upload-pack (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1007)')))\r\n\r\n  at /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/urllib3/util/retry.py:592 in increment\r\n      588│             history=history,\r\n      589│         )\r\n      590│ \r\n      591│         if new_retry.is_exhausted():\r\n    → 592│             raise MaxRetryError(_pool, url, error or ResponseError(cause))\r\n      593│ \r\n      594│         log.debug(\"Incremented Retry for (url='%s'): %r\", url, new_retry)\r\n      595│ \r\n      596│         return new_retry\r\n```\r\n### To Reproduce\r\n\r\nfollow the poetry installation instructions in macOS ",
      "state": "open",
      "author": "jesicasusanto",
      "author_type": "User",
      "created_at": "2023-07-26T15:47:28Z",
      "updated_at": "2023-07-26T15:55:54Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/435/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/435",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/435",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:20.923629",
      "comments": [
        {
          "author": "abrichr",
          "body": "Please try this: https://github.com/python-poetry/poetry/issues/449#issuecomment-1254133330",
          "created_at": "2023-07-26T15:55:54Z"
        }
      ]
    },
    {
      "issue_number": 430,
      "title": "Recording summarization",
      "body": "### Feature request\r\n\r\nWe want to implement summaries of previously seen actions as per https://github.com/OpenAdaptAI/OpenAdapt/pull/379\r\n\r\nWe may use https://github.com/OpenAdaptAI/OpenAdapt/pull/67 or use an LLM approach.\r\n\r\n\r\n### Motivation\r\n\r\nFit long term dependencies inside context window. This is a short term solution; ultimately we want to embed the long term dependencies within the model latent space.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-25T21:13:55Z",
      "updated_at": "2023-07-25T21:21:46Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/430/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/430",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/430",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:21.197420",
      "comments": []
    },
    {
      "issue_number": 426,
      "title": "Implement FreeWilly",
      "body": "### Feature request\n\nWe would like to implement https://stability.ai/blog/freewilly-large-instruction-fine-tuned-models as a model provider.\n\n### Motivation\n\nRank 1 on the Open LLM leaderboard (as of time of writing): https://huggingface.co/spaces/HuggingFaceH4/open_llm_leaderboard",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-25T13:53:07Z",
      "updated_at": "2023-07-25T21:10:16Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/426/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "Mustaballer"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/426",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/426",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:21.197448",
      "comments": []
    },
    {
      "issue_number": 335,
      "title": "Make release depend on linting",
      "body": "### Feature request\n\nWe want to release only when linting succeeds\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-30T15:49:17Z",
      "updated_at": "2023-07-25T19:06:47Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 8,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/335/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "Mustaballer"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/335",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/335",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:21.197460",
      "comments": [
        {
          "author": "Mustaballer",
          "body": "Releases only trigger when PRs are merged to main. To tackle this, we can enforce that for successful PR merges it needs to successfully pass the linter github action, in the repo settings itself",
          "created_at": "2023-07-05T19:51:28Z"
        },
        {
          "author": "abrichr",
          "body": "From https://github.com/OpenAdaptAI/OpenAdapt/pull/289#issuecomment-1644531948:\r\n\r\nOnce this merged we can resolve https://github.com/OpenAdaptAI/OpenAdapt/issues/335 by enforcing PRs to pass the new lint/test github action before they can be merged. This will ensure it will not fail after its merge",
          "created_at": "2023-07-25T02:17:08Z"
        },
        {
          "author": "abrichr",
          "body": "@Mustaballer thank you for the instructions!\r\n\r\nUnfortunately I'm not able to find `Python CI`:\r\n\r\n<img width=\"844\" alt=\"image\" src=\"https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/10d5bdbc-c7a2-4e29-8b37-cac69aec9002\">\r\n\r\n\r\nAny suggestions? What do you need in order to be able to do this on ",
          "created_at": "2023-07-25T02:18:03Z"
        },
        {
          "author": "Mustaballer",
          "body": "@abrichr I need '[write permissions](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks#:~:text=Anyone%20with%20write%20permissions%20to,repository's%20list%20of%20pull%20requests.)' to add the status",
          "created_at": "2023-07-25T04:24:35Z"
        },
        {
          "author": "Mustaballer",
          "body": "@abrichr can you try searching for ```run-ci``` in the search bar above?",
          "created_at": "2023-07-25T04:27:36Z"
        }
      ]
    },
    {
      "issue_number": 262,
      "title": "Contrib: logo generator",
      "body": "### Feature request\n\nInput: text description of logo components\r\n\r\nSteps:\r\n1. Use named entity recognition to extract entities from text description (e.g. Spacy)\r\n2. Download SVGs from https://thenounproject.com/\r\n3. Ask large language model to arrange\r\n4. Generate combined SVG\r\n5. Run through e.g. Stable Diffusion and/or ask large language model to generate animation code\r\n\r\nOutput: stylized logo image and/or animation code\n\n### Motivation\n\nhttps://github.com/OpenAdaptAI/web/issues/17\n\n### Other\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-14T22:48:42Z",
      "updated_at": "2023-07-25T18:57:28Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/262/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "Jonathan-Sendsen"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/262",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/262",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:21.377089",
      "comments": [
        {
          "author": "abrichr",
          "body": "@jonathansendsen please feel free to assign yourself",
          "created_at": "2023-06-15T12:52:59Z"
        },
        {
          "author": "abrichr",
          "body": "Related: https://arxiv.org/abs/2306.03601",
          "created_at": "2023-07-25T18:57:28Z"
        }
      ]
    },
    {
      "issue_number": 422,
      "title": "Validate Softmax One and Quiet Attention",
      "body": "### Feature request\r\n\r\nhttps://www.evanmiller.org/attention-is-off-by-one.html\r\n\r\n> I think a test could be hacked together fairly quickly: if you prefix every input context with a zero vector, and ensure that your neural network of choice doesn’t add any bias (including with the positional encoding), then the zero should pass through unaltered and will have the effect of adding unity to every subsequent softmax denominator; that way you won’t lose your mind mucking with gradient code. I think this could be done with a LLaMA model that uses fixed embeddings and a special prefix token, but I’d very much like to get back to my non-existent hobbies, and I’ve already spent more time on this problem than my therapist needs to know about.\r\n\r\n> You’d still have to re-train the model, so don’t try this on an RPi just yet. But do let me know how those weight kurtoses and activation infinity norms are looking after a few runs. I’m thinking those numbers will make for a handsome table in a soon-to-be influential arXiV paper, either when those Qualcomm AI researchers step off the plane from Italy, or someone in an LLM hacker channel figures out biblatex, whichever happens first.\r\n\r\n\r\n\r\n### Motivation\r\n\r\nComputational efficiency, impact\r\n\r\n(maybe not, see https://news.ycombinator.com/item?id=36854065)",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-25T03:42:37Z",
      "updated_at": "2023-07-25T18:20:35Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/422/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/422",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/422",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:21.608164",
      "comments": []
    },
    {
      "issue_number": 372,
      "title": "[Bug]: windows install script is brittle",
      "body": "### Describe the bug\n\nI experienced a few issues running the windows installation script:\r\n\r\n1. Any version of git should work\r\n\r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/44f7a0b1-0a80-4927-8df5-3a8c363d950d)\r\n\r\n2. When the user declines to update git, the installation should continue:\r\n\r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/39b5af23-0de7-4506-9b94-ddbc8f137f1d)\r\n\r\n\r\n3. When the script exits, ideally there should be some sort of message:\r\n\r\n```\r\nWindows PowerShell\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nInstall the latest PowerShell for new features and improvements! https://aka.ms/PSWindows\r\n\r\nPS C:\\Users\\erika> Start-Process powershell -Verb RunAs -ArgumentList '-NoExit', '-ExecutionPolicy', 'Bypass', '-Command', \"iwr -UseBasicParsing -Uri 'https://raw.githubusercontent.com/MLDSAI/OpenAdapt/main/install/install_openadapt.ps1' | Invoke-Expression\"\r\nPS C:\\Users\\erika>   \r\n```\r\n\r\n4. Ideally we should support any version of python greater or equal to 3.10\r\n\r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/26c12498-2360-4205-97b7-0f521e529448)\r\n\r\n5. Running `poetry shell` sometimes fails with this message:\r\n\r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/3992e5d6-63c2-42da-8a29-11243956340d)\r\n\r\n6. Trying to activate it fails, even though it hasn't been activated:\r\n\r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/25d70376-37a4-468f-b1f0-05d0cd0cdb77)\r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/aa499cb6-9956-4784-9d50-7f12b0ea144e)\r\n\n\n### To Reproduce\n\nSee above",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-10T15:00:26Z",
      "updated_at": "2023-07-25T14:07:28Z",
      "closed_at": "2023-07-25T14:07:28Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/372/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KrishPatel13"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/372",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/372",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:21.608190",
      "comments": [
        {
          "author": "KrishPatel13",
          "body": "made a PR here: https://github.com/OpenAdaptAI/OpenAdapt/pull/409",
          "created_at": "2023-07-19T20:22:20Z"
        }
      ]
    },
    {
      "issue_number": 421,
      "title": "Pipeline to evaluate models autoregressively",
      "body": "### Feature request\n\nTo build a generic script/pipeline which takes input as : \r\n- Model name\r\n- One or multiple recording\r\n\r\nThen the pipeline should:\r\n\r\n- Build prompts from events from recording.\r\n- Load model from generic source (OpenAPI, HuggingFace ...etc) in an automatic manner\r\n- Perform completion using model auto-regressively on the training dataset.\r\n- Score the completion using a simple scoring algorithm.\r\n\r\nThis pipeline should gives a baseline reference to an LLM model on how good it is. \n\n### Motivation\n\nTo help solving https://github.com/OpenAdaptAI/OpenAdapt/issues/393 and also facilitates the work of https://github.com/OpenAdaptAI/OpenAdapt/issues/419\r\n\r\nOnly with a good pipeline, then we can easily evaluate existing models, as well es evaluating foundation model after fine-tuned/reinforced learning improvement.",
      "state": "open",
      "author": "LaPetiteSouris",
      "author_type": "User",
      "created_at": "2023-07-24T16:28:35Z",
      "updated_at": "2023-07-25T07:41:48Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/421/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/421",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/421",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:21.791207",
      "comments": [
        {
          "author": "FFFiend",
          "body": "There has been some development to respond to this issue already, see #379, with a current basic API defined along with a file structure. ",
          "created_at": "2023-07-25T02:06:34Z"
        },
        {
          "author": "LaPetiteSouris",
          "body": "Thanks @FFFiend \r\n\r\nI'll try to incorporate as much as possible the guidelines from #379. Looks like in the end, many tasks can be shared between modules, notably tasks related to model evaluation/tuning.\r\n\r\nThere is a slight difference is that the scope of this ticket is strictly limited to provide",
          "created_at": "2023-07-25T07:41:48Z"
        }
      ]
    },
    {
      "issue_number": 414,
      "title": "Reward modelling",
      "body": "### Feature request\r\n\r\nReward modelling:\r\n\r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/73e3d782-8bd5-4fcd-b770-862d87087f5d)\r\n\r\n\r\n### Motivation\r\n\r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/0f37862f-9331-4fac-8609-7777722e030c)\r\n\r\nSource: https://www.youtube.com/watch?v=DxInMGIvkp0\r\n\r\nRefer also to https://github.com/OpenAdaptAI/OpenAdapt/issues/393#issuecomment-1643936501\r\n\r\n\r\n",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-20T17:56:11Z",
      "updated_at": "2023-07-24T14:32:21Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/414/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 1,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "jesicasusanto"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/414",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/414",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:22.022574",
      "comments": [
        {
          "author": "abrichr",
          "body": "Possibly related: https://github.com/OpenAdaptAI/OpenAdapt/pull/234",
          "created_at": "2023-07-24T14:32:21Z"
        }
      ]
    },
    {
      "issue_number": 293,
      "title": "Create benchmark dataset for desktop GUI component identification",
      "body": "### Feature request\r\n\r\nTODO\r\n\r\n### Motivation\r\n\r\nRelated: https://github.com/MLDSAI/OpenAdapt/issues/172",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-19T17:36:29Z",
      "updated_at": "2023-07-24T14:30:07Z",
      "closed_at": "2023-07-24T14:28:46Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/293/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/293",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/293",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:22.248164",
      "comments": [
        {
          "author": "abrichr",
          "body": "Moved to https://github.com/OpenAdaptAI/OpenAdapt/issues/415",
          "created_at": "2023-07-24T14:28:46Z"
        }
      ]
    },
    {
      "issue_number": 393,
      "title": "Implement Reinforcement Learning with Inhuman Feedback",
      "body": "### Feature request\r\n\r\nhttps://github.com/CarperAI/trlx\r\n\r\n### Motivation\r\n\r\nhttps://twitter.com/i/web/status/1668337702440165376\r\n\r\n![image](https://github.com/OpenAdaptAI/OpenAdapt/assets/774615/d04a4f61-8e3b-4a95-a6be-0aa8150deb87)\r\n\r\nhttps://www.youtube.com/watch?v=DxInMGIvkp0",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-18T01:42:46Z",
      "updated_at": "2023-07-24T01:00:30Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "help wanted"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 7,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/393/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "LaPetiteSouris"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/393",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/393",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:22.447240",
      "comments": [
        {
          "author": "LaPetiteSouris",
          "body": "**Step 1** : Build sample dataset\r\n- From several sample of recording in the database, build a sample dataset including `reference_window_dict`, `reference_action_dicts`, `active_window_dict` for each event in the recording.\r\n(if we have a standard test dataset for this, we can reuse, otherwise we h",
          "created_at": "2023-07-20T05:36:32Z"
        },
        {
          "author": "abrichr",
          "body": "Thank you @LaPetiteSouris ! Sounds like we're on the right track.\r\n\r\n> Step 1 : Build sample dataset\r\n\r\nI think we can implement everything before worrying about building the dataset per se. What we need is code that converts one or more recordings into a trainable dataset, e.g. in `openadapt.ml.dat",
          "created_at": "2023-07-20T13:33:35Z"
        },
        {
          "author": "LaPetiteSouris",
          "body": "**Step 1** All good. If we are OK with using localized/miniature recording as dataset, I am all fine. This limits the scope of the task, which is in general a good things to make it happen.\r\n\r\n**Step 2**\r\n\r\nI guess what you describe would be done directly in step 1 (or some short), to prepare a pre-",
          "created_at": "2023-07-20T14:45:40Z"
        },
        {
          "author": "abrichr",
          "body": "> separating the records to sections of 70-15-15 (training set-validation set-test set)\r\n\r\nThis is typical of supervised learning tasks. Since this is semi-supervised / autoregressive, I believe we will train on the full set. If you disagree can you please point me to some documentation or literatur",
          "created_at": "2023-07-20T16:31:44Z"
        },
        {
          "author": "abrichr",
          "body": "Rlaif: https://www.anthropic.com/index/constitutional-ai-harmlessness-from-ai-feedback",
          "created_at": "2023-07-20T22:21:21Z"
        }
      ]
    },
    {
      "issue_number": 415,
      "title": "Implement vision fine tuning dataset",
      "body": "### Feature request\r\n\r\ngoal : e.g. create openadapt.ml.data.synthesize that creates dataset of screenshots and corresponding desired completions, ie.. window states (with superfluous information removed)\r\nWe want to use this to fine tune\r\n\r\n\r\n### Motivation\r\n\r\nhttps://docs.google.com/spreadsheets/d/1etgr3LnM_NrAMwMmFLUttmXmBrJ4Uia9-notBzyXk6c/edit#gid=0\r\n\r\nhttps://github.com/OpenAdaptAI/OpenAdapt/issues/69",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-20T20:39:35Z",
      "updated_at": "2023-07-21T18:22:00Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/415/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "angelala3252"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/415",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/415",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:22.674993",
      "comments": []
    },
    {
      "issue_number": 403,
      "title": "[Bug]:  ChefBuildError during poetry installl",
      "body": "### Describe the bug\r\n\r\n```\r\n  ChefBuildError\r\n\r\n  Backend 'setuptools.build_meta:__legacy__' is not available.\r\n\r\n  at ~\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\poetry\\installation\\chef.py:147 in _prepare\r\n      143│\r\n      144│                 error = ChefBuildError(\"\\n\\n\".join(message_parts))\r\n      145│\r\n      146│             if error is not None:\r\n    → 147│                 raise error from None\r\n      148│\r\n      149│             return path\r\n      150│\r\n      151│     def _prepare_sdist(self, archive: Path, destination: Path | None = None) -> Path:\r\n\r\nNote: This error originates from the build backend, and is likely not a problem with poetry but with proxy-tools (0.1.0) not supporting PEP 517 builds. You can verify this by running 'pip wheel --use-pep517 \"proxy-tools (==0.1.0)\"'.\r\n```\r\n\r\n### To Reproduce\r\n\r\nI use Windows, occurred during poetry install on a fresh clone",
      "state": "closed",
      "author": "AvidEslami",
      "author_type": "User",
      "created_at": "2023-07-18T16:30:35Z",
      "updated_at": "2023-07-21T13:17:50Z",
      "closed_at": "2023-07-21T13:17:49Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/403/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/403",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/403",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:22.675019",
      "comments": [
        {
          "author": "AvidEslami",
          "body": "Seems to have resolved by clearing up more drive space",
          "created_at": "2023-07-21T13:17:49Z"
        }
      ]
    },
    {
      "issue_number": 396,
      "title": "Explore OpenELM",
      "body": "### Feature request\n\nHow can we take advantage of https://github.com/CarperAI/OpenELM/blob/paper/OpenELM_Paper.pdf ?\n\n### Motivation\n\nTBD",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-18T05:17:54Z",
      "updated_at": "2023-07-21T00:46:15Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/396/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "dianzrong"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/396",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/396",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:22.903460",
      "comments": [
        {
          "author": "dianzrong",
          "body": "Overall: OpenELM combines evolutionary search with LLMs to generate better code and text than just LLMs alone\r\n\r\nHow we could use it:\r\n- to improve a model's output, for example, getting a davinci model to predict more accurate ActionEvents\r\n\r\nNOTE: OpenELM is still in its early stages; the 1.0 rele",
          "created_at": "2023-07-21T00:46:15Z"
        }
      ]
    },
    {
      "issue_number": 416,
      "title": "Implement \"clips\": select-to-export to gif/webp/mp4 and share",
      "body": "### Feature request\r\n\r\nClick and drag in visualize.py to select a clip in time and space and export.\r\n\r\nThis should support:\r\n\r\n- creating a page that we host, e.g. at http://media.openadapt.ai\r\n- eventually we should have separate repo that implements this that folks can one-click to deploy and host themselves\r\n- that page contains links to share to various platforms, e.g.: Instagram, LinkedIn, Facebook, TikTok...\r\n\r\n### Motivation\r\n\r\nWe want to reduce friction to creating and sharing animated examples of recordings\r\n\r\n> the goal ultimately to use it to export images we add to the readme demonstrating features, e.g. system tray, visualize, replay...\r\n\r\nRelated: https://github.com/OpenAdaptAI/OpenAdapt/pull/406",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-20T21:35:06Z",
      "updated_at": "2023-07-20T21:41:30Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/416/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "0dm"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/416",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/416",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:23.142253",
      "comments": [
        {
          "author": "abrichr",
          "body": "@0dm to clarify, I think this will have to be hosted in order to integrate with social APIs, but if it's easier to get it working offline locally first in a way that supports this as a next step, let's do that first, whatever is faster / easier 🙏 ",
          "created_at": "2023-07-20T21:41:30Z"
        }
      ]
    },
    {
      "issue_number": 413,
      "title": "Jinja2 prompt template",
      "body": "### Feature request\r\n\r\nWe want to store prompts files like in https://github.com/griptape-ai/griptape/tree/main/griptape/templates/prompts, e.g. https://github.com/griptape-ai/griptape/blob/main/griptape/templates/prompts/tool.j2\r\n\r\nWe want to replace our prompts (e.g. https://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/strategies/stateful.py#L102) with this pattern.\r\n\r\nLet's try to use https://github.com/griptape-ai/griptape/blob/main/griptape/utils/j2.py by either importing as dependency, or copy (include attribution at the top) if necessary\r\n\r\n### Motivation\r\n\r\nhttps://github.com/OpenAdaptAI/OpenAdapt/issues/365",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-20T17:40:39Z",
      "updated_at": "2023-07-20T18:39:19Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/413/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "jesicasusanto"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/413",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/413",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:23.362832",
      "comments": []
    },
    {
      "issue_number": 394,
      "title": "Use Case: minimally interactive p2p tech support ",
      "body": "### Role\n\nUs, helping our Parents\n\n### Task\n\nHow can we help our parents through eg ChatGPT? How can we resolve their technical challenges?\r\n\r\nThis task involves building a ‘contrib.support’ module that implements this.\n\n### Context\n\nThe idea is to create a easy to use tech support app. Not a standard use case. I just want to use openadapt to see what my dad sees on his desktop, and help him through e.g. signing up for swimming lessons, using chatGPT, etc.\n\n### Workflow\n\nTODO",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-18T02:52:46Z",
      "updated_at": "2023-07-20T14:04:33Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/394/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/394",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/394",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:23.362903",
      "comments": [
        {
          "author": "abrichr",
          "body": "@0dm you may want to keep this in mind when designing the new visualize.py",
          "created_at": "2023-07-20T14:04:33Z"
        }
      ]
    },
    {
      "issue_number": 370,
      "title": "Investigate Python 3.11",
      "body": "### Describe the bug\n\n```\r\n(openadapt-py3.11) C:\\Users\\erika\\OpenAdapt>python -m openadapt.visualize\r\n2023-07-08 18:52:36.862 | INFO     | openadapt.config:<module>:160 - STOP_STRS=['oa.stop']\r\n2023-07-08 18:52:36.862 | INFO     | openadapt.config:<module>:160 - SPECIAL_CHAR_STOP_SEQUENCES=[['ctrl', 'ctrl', 'ctrl']]\r\n2023-07-08 18:52:36.862 | INFO     | openadapt.config:<module>:160 - STOP_SEQUENCES=[['o', 'a', '.', 's', 't', 'o', 'p'], ['ctrl', 'ctrl', 'ctrl']]\r\n2023-07-08 18:52:36.876 | INFO     | openadapt.config:<module>:160 - CACHE_DIR_PATH=.cache\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - CACHE_ENABLED=True\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - CACHE_VERBOSITY=0\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - DB_ECHO=False\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - DB_FNAME=openadapt.db\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - OPENAI_API_KEY=<set your api key in .env>\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - OPENAI_MODEL_NAME=gpt-3.5-turbo\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - RECORD_READ_ACTIVE_ELEMENT_STATE=False\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - REPLAY_STRIP_ELEMENT_STATE=True\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - IGNORE_WARNINGS=False\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - ACTION_TEXT_SEP=-\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - ACTION_TEXT_NAME_PREFIX=<\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - ACTION_TEXT_NAME_SUFFIX=>\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - SCRUB_ENABLED=True\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - SCRUB_CHAR=*\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - SCRUB_LANGUAGE=en\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - SCRUB_FILL_COLOR=255\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - SCRUB_CONFIG_TRF={'nlp_engine_name': 'spacy', 'models': [{'lang_code': 'en', 'model_name': 'en_core_web_trf'}]}\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - SCRUB_IGNORE_ENTITIES=['DATE_TIME', 'URL']\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - SCRUB_KEYS_HTML=['text', 'canonical_text', 'title', 'state', 'task_description', 'key_char', 'canonical_key_char', 'key_vk', 'children']\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - PLOT_PERFORMANCE=True\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - ROOT_DIRPATH=C:\\Users\\erika\\OpenAdapt\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - DB_FPATH=C:\\Users\\erika\\OpenAdapt\\openadapt.db\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - DB_URL=sqlite:///C:\\Users\\erika\\OpenAdapt\\openadapt.db\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - DT_FMT=%Y-%m-%d_%H-%M-%S\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - DIRNAME_PERFORMANCE_PLOTS=performance\r\n2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - ZIPPED_RECORDING_FOLDER_PATH=C:\\Users\\erika\\OpenAdapt\\data\\zipped2023-07-08 18:52:36.878 | INFO     | openadapt.config:<module>:160 - ENV_FILE_PATH=C:\\Users\\erika\\OpenAdapt\\.env\r\nTraceback (most recent call last):\r\n  File \"<frozen runpy>\", line 198, in _run_module_as_main\r\n  File \"<frozen runpy>\", line 88, in _run_code\r\n  File \"C:\\Users\\erika\\OpenAdapt\\openadapt\\visualize.py\", line 33, in <module>\r\n    from openadapt import scrub\r\n  File \"C:\\Users\\erika\\OpenAdapt\\openadapt\\scrub.py\", line 14, in <module>\r\n    from presidio_analyzer import AnalyzerEngine\r\n  File \"C:\\Users\\erika\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-CpCf7oPf-py3.11\\Lib\\site-packages\\presidio_analyzer\\__init__.py\", line 9, in <module>\r\n    from presidio_analyzer.entity_recognizer import EntityRecognizer\r\n  File \"C:\\Users\\erika\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-CpCf7oPf-py3.11\\Lib\\site-packages\\presidio_analyzer\\entity_recognizer.py\", line 6, in <module>\r\n    from presidio_analyzer.nlp_engine import NlpArtifacts\r\n  File \"C:\\Users\\erika\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-CpCf7oPf-py3.11\\Lib\\site-packages\\presidio_analyzer\\nlp_engine\\__init__.py\", line 3, in <module>\r\n    from .nlp_artifacts import NlpArtifacts\r\n  File \"C:\\Users\\erika\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-CpCf7oPf-py3.11\\Lib\\site-packages\\presidio_analyzer\\nlp_engine\\nlp_artifacts.py\", line 4, in <module>\r\n    from spacy.tokens import Doc, Span\r\n  File \"C:\\Users\\erika\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-CpCf7oPf-py3.11\\Lib\\site-packages\\spacy\\__init__.py\", line 14, in <module>\r\n    from . import pipeline  # noqa: F401\r\n    ^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\erika\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-CpCf7oPf-py3.11\\Lib\\site-packages\\spacy\\pipeline\\__init__.py\", line 1, in <module>\r\n    from .attributeruler import AttributeRuler\r\n  File \"C:\\Users\\erika\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-CpCf7oPf-py3.11\\Lib\\site-packages\\spacy\\pipeline\\attributeruler.py\", line 6, in <module>\r\n    from .pipe import Pipe\r\n  File \"spacy\\pipeline\\pipe.pyx\", line 1, in init spacy.pipeline.pipe\r\n  File \"spacy\\vocab.pyx\", line 1, in init spacy.vocab\r\n  File \"C:\\Users\\erika\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-CpCf7oPf-py3.11\\Lib\\site-packages\\spacy\\tokens\\__init__.py\", line 1, in <module>\r\n    from .doc import Doc\r\n  File \"spacy\\tokens\\doc.pyx\", line 36, in init spacy.tokens.doc\r\n  File \"C:\\Users\\erika\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-CpCf7oPf-py3.11\\Lib\\site-packages\\spacy\\schemas.py\", line 158, in <module>\r\n    class TokenPatternString(BaseModel):\r\n  File \"C:\\Users\\erika\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-CpCf7oPf-py3.11\\Lib\\site-packages\\pydantic\\main.py\", line 326, in __new__\r\n    cls.__signature__ = ClassAttribute('__signature__', generate_model_signature(cls.__init__, fields, config))\r\n                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\erika\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-CpCf7oPf-py3.11\\Lib\\site-packages\\pydantic\\utils.py\", line 225, in generate_model_signature\r\n    merged_params[param_name] = Parameter(\r\n                                ^^^^^^^^^^\r\n  File \"C:\\Users\\erika\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\inspect.py\", line 2722, in __init__\r\n    raise ValueError('{!r} is not a valid parameter name'.format(name))\r\nValueError: 'in' is not a valid parameter name\r\n```\n\n### To Reproduce\n\nPython 3.11 Windows:\r\n\r\n```\r\npython -m openadapt.visualize\r\n```",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-10T14:59:02Z",
      "updated_at": "2023-07-20T13:45:49Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/370/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/370",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/370",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:23.536312",
      "comments": [
        {
          "author": "KrishPatel13",
          "body": "Presidio support 3.7 >= python version. So we do not think so it is related to that!\r\n\r\nhttps://microsoft.github.io/presidio/installation/\r\n\r\nNeed to investigate more!",
          "created_at": "2023-07-10T15:00:52Z"
        },
        {
          "author": "KrishPatel13",
          "body": "Some related discussion: https://github.com/tiangolo/fastapi/issues/5048",
          "created_at": "2023-07-19T19:37:11Z"
        },
        {
          "author": "KrishPatel13",
          "body": "We could also rename this Issue to Investigate 3.11 and then list down the conflicting libraries that do not work with 3.11 and hence making OpenAdapt fail\r\n\r\nThis includes lists like:\r\n\r\nFixable on our end:\r\n\r\n- [ ] XYZ (Make a new issue and Link to the Issue in OpenAdapt Github)\r\n- [ ] ...\r\n\r\nNot-",
          "created_at": "2023-07-19T19:38:29Z"
        }
      ]
    },
    {
      "issue_number": 314,
      "title": "Implement test fixtures",
      "body": "### Feature request\n\nWe would like to add a file at `assets/fixtures.sql` that seeds the database with some minimal recording data for running tests.\r\n\r\nThis task involves:\r\n- creating the sql file (either export a manually created recording, or generate one programmatically)\r\n- adding a `conftest.py` that creates a new database and seeds it with fixtures before tests run, and tears it down after tests complete (whether or not they pass)\n\n### Motivation\n\nSome tests fail if no recording is present",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-25T14:28:33Z",
      "updated_at": "2023-07-18T19:29:00Z",
      "closed_at": "2023-07-18T19:29:00Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/314/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "Mustaballer"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/314",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/314",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:23.780264",
      "comments": []
    },
    {
      "issue_number": 400,
      "title": "[Bug]: visualize.py TypeError: expected string",
      "body": "### Describe the bug\r\n```\r\n2023-07-18 12:16:42.117 | INFO     | __main__:main:191 - len(action_events)=8\r\nPreparing HTML:  75%|████████████████████████████████████████████████████████████████████████████▌                         | 6/8 [00:02<00:00,  2.83event/s] \r\n2023-07-18 12:16:44.372 | ERROR    | __main__:<module>:294 - An error has been caught in function '<module>', process 'MainProcess' (16944), thread 'MainThread' (12428):\r\nTraceback (most recent call last):\r\n\r\n> File \"C:\\Users\\avide\\OneDrive\\Desktop\\Coding Proj\\MLDSAI\\puterbot\\openadapt\\visualize.py\", line 294, in <module>\r\n    main()\r\n    -> <function main at 0x00000221F5AEAA70>\r\n\r\n  File \"C:\\Users\\avide\\OneDrive\\Desktop\\Coding Proj\\MLDSAI\\puterbot\\openadapt\\visualize.py\", line 208, in main\r\n    image = display_event(action_event)\r\n            |             -> ActionEvent(id=1047, name='type', timestamp=1689765713.4416907, recording_timestamp=1689696951.3192976, screenshot_timestamp=...\r\n            -> <function display_event at 0x00000221DE435480>\r\n\r\n  File \"c:\\users\\avide\\onedrive\\desktop\\coding proj\\mldsai\\puterbot\\openadapt\\utils.py\", line 372, in display_event\r\n    image = draw_text(x, y, text, image, outline=True)\r\n            |         |  |  |     -> <PIL.Image.Image image mode=RGBA size=1920x1080 at 0x221F6CA38B0>\r\n            |         |  |  -> None\r\n            |         |  -> 540.0\r\n            |         -> 960.0\r\n            -> <function draw_text at 0x00000221DE4352D0>\r\n\r\n  File \"c:\\users\\avide\\onedrive\\desktop\\coding proj\\mldsai\\puterbot\\openadapt\\utils.py\", line 248, in draw_text\r\n    text_bbox = font.getbbox(text)\r\n                |    |       -> None\r\n                |    -> <function FreeTypeFont.getbbox at 0x00000221DD6CBF40>\r\n                -> <PIL.ImageFont.FreeTypeFont object at 0x00000221F6CA2CB0>\r\n\r\n  File \"C:\\Users\\avide\\OneDrive\\Desktop\\Coding Proj\\MLDSAI\\puterbot\\.venv10\\lib\\site-packages\\PIL\\ImageFont.py\", line 408, in getbbox\r\n    size, offset = self.font.getsize(\r\n                   |    |    -> <method 'getsize' of 'Font' objects>\r\n                   |    -> <Font object at 0x00000221F6D18030>\r\n                   -> <PIL.ImageFont.FreeTypeFont object at 0x00000221F6CA2CB0>\r\n\r\nTypeError: expected string\r\n```\r\n### To Reproduce\r\n\r\nI use Windows, the following command gave this error:\r\n```\r\npy .\\openadapt\\visualize.py\r\n```\r\n",
      "state": "closed",
      "author": "AvidEslami",
      "author_type": "User",
      "created_at": "2023-07-18T16:18:38Z",
      "updated_at": "2023-07-18T16:42:15Z",
      "closed_at": "2023-07-18T16:42:15Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/400/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/400",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/400",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:23.780291",
      "comments": [
        {
          "author": "KrishPatel13",
          "body": "I had experienced the same error initiated here: https://github.com/OpenAdaptAI/OpenAdapt/issues/210",
          "created_at": "2023-07-18T16:27:00Z"
        },
        {
          "author": "AvidEslami",
          "body": "Closed since duplicate of #210 ",
          "created_at": "2023-07-18T16:42:15Z"
        }
      ]
    },
    {
      "issue_number": 210,
      "title": "[Bug]: Visualization sometimes gives TypeError! (see attached .db file)",
      "body": "I successfully recorded (exit code 0) the following database file. (it has 37 Action event with a mix of typing char, move, click etc.):\r\n\r\n**PREREQUISITES:** \r\nPlease download it from here and replace it with your current openadapt.db file: [https://mldsai.slack.com/files/U056HTNBQ5S/F05A88X02H4/openadapt.db](https://mldsai.slack.com/files/U056HTNBQ5S/F05A88X02H4/openadapt.db)\r\n\r\n\r\n\r\n**WAY TO REPRODUCE THE ERROR:**\r\n1. Download and replace the openadapt.db file from [https://mldsai.slack.com/files/U056HTNBQ5S/F05A88X02H4/openadapt.db](https://mldsai.slack.com/files/U056HTNBQ5S/F05A88X02H4/openadapt.db).\r\n2. Run python openadapt.visualize in terminal.\r\n\r\nOn running the visualize command it gives the following error at Line 219(`text_bbox = font.getbbox(text)`) in utils.py:\r\n```\r\nException has occurred: TypeError\r\nexpected string\r\n  File \"P:\\OpenAdapt\\openadapt\\utils.py\", line 219, in draw_text\r\n    text_bbox = font.getbbox(text)\r\n  File \"P:\\OpenAdapt\\openadapt\\utils.py\", line 333, in display_event\r\n    image = draw_text(x, y, text, image, outline=True)\r\n  File \"P:\\OpenAdapt\\openadapt\\visualize.py\", line 169, in main\r\n    image = display_event(action_event)\r\n  File \"P:\\OpenAdapt\\openadapt\\visualize.py\", line 240, in <module>\r\n    main()\r\nTypeError: expected string\r\n```\r\n\r\n\r\n\r\n**My Debugging Session Transcript:**\r\n<img width=\"1441\" alt=\"image\" src=\"https://github.com/MLDSAI/OpenAdapt/assets/65433817/afb6f2ea-2b85-4e43-8ec7-a6508eac566d\">\r\n\r\nThis is because it is fetching the attribute of action_event called \"text\" whose value is `None` but the `getbbox(text: str)`. Hence the TypeError.\r\n\r\n\r\n\r\n**Possible ways to Fix:**\r\n> Have a check for action events",
      "state": "open",
      "author": "KrishPatel13",
      "author_type": "User",
      "created_at": "2023-06-01T05:47:28Z",
      "updated_at": "2023-07-18T16:36:17Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/210/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/210",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/210",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:24.009696",
      "comments": [
        {
          "author": "abrichr",
          "body": "Hi @KrishPatel13 , you have not provided steps to reproduce.\r\n\r\nIn general, it is not expected that text will always not be None.",
          "created_at": "2023-06-01T15:20:04Z"
        },
        {
          "author": "KrishPatel13",
          "body": "Thank you @abrichr ,\r\n\r\nI have edited to add more detailed steps for producing the error:\r\n\r\n> I successfully recorded (exit code 0) the following database file. (it has 37 Action event with a mix of typing char, move, click etc.):\r\n> \r\n> **PREREQUISITES:** Please download it from here and replace i",
          "created_at": "2023-06-01T15:33:39Z"
        },
        {
          "author": "KrishPatel13",
          "body": "> Hi @KrishPatel13 , you have not provided steps to reproduce.\r\n> \r\n> In general, it is not expected that text will always not be None.\r\n\r\nIf that is the case, then should we pass \"\" (empty string ε) when the text is  None ?",
          "created_at": "2023-06-01T15:36:52Z"
        }
      ]
    },
    {
      "issue_number": 401,
      "title": "[Bug]: Windows recording can fail when action event is received before window event",
      "body": "### Describe the bug\n\nOn Windows, if an action event is generated before the first window event, no window event may ever fire.\n\n### To Reproduce\n\nWindows:\r\n\r\n1. `python -m openadapt.record foo`\r\n2. Move the mouse immediately\r\n3. Wait a few seconds for console output to stop\r\n4. Move the mouse again\r\n5. Observe warning messages\r\n\r\nCTRL+C a few times, make sure all python processes are stopped, then repeat the above except for step 2 to observe a successful recording.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-18T16:19:19Z",
      "updated_at": "2023-07-18T16:19:19Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/401/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/401",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/401",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:24.223524",
      "comments": []
    },
    {
      "issue_number": 388,
      "title": "[Bug]: windows get_active_window performance issue",
      "body": "### Describe the bug\r\n\r\nGetting the active window sometimes takes a long time on Windows.\r\n\r\n### To Reproduce\r\n\r\n`python -m openadapt.record foo` on Windows. Observe system slowdown.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-17T14:58:46Z",
      "updated_at": "2023-07-18T16:03:57Z",
      "closed_at": null,
      "labels": [
        "bug",
        "help wanted"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/388/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/388",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/388",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:24.223544",
      "comments": []
    },
    {
      "issue_number": 102,
      "title": "Bug: process_events not being called in strategies",
      "body": "This requires implementing `Recording.get_events()` that calls [`events.process_events()`](https://github.com/MLDSAI/puterbot/blob/main/puterbot/events.py#L596), and modifying the api defined in [BaseReplayStrategy.__init__](https://github.com/MLDSAI/puterbot/blob/main/puterbot/strategies/base.py#L24) to pass in a generator of processed events, not the raw recording.\r\n\r\nOr we can just show an example of how to process the events in the DemoReplayStrategy, like here: https://github.com/MLDSAI/puterbot/pull/89/files#diff-52c538d9ebf27c0554cc004d13550fa0b3d8f83a0d0a48866595aef1870f1268R39",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-07T05:52:23Z",
      "updated_at": "2023-07-18T14:08:10Z",
      "closed_at": "2023-07-18T14:08:10Z",
      "labels": [
        "help wanted"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/102/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/102",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/102",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:24.223553",
      "comments": [
        {
          "author": "angelala3252",
          "body": "Changes needed:\r\n\r\n- ```Recording.get_events()``` should do something similar to ```events.get_events()``` by calling ```events.process_events()``` but use yield or a list comprehension so that it serves as a generator function\r\n- then make an generator object out of this function\r\n- BaseReplayStrat",
          "created_at": "2023-05-11T03:17:03Z"
        },
        {
          "author": "abrichr",
          "body": "Addressed in https://github.com/MLDSAI/OpenAdapt/pull/151",
          "created_at": "2023-05-23T15:44:58Z"
        }
      ]
    },
    {
      "issue_number": 392,
      "title": "Implement 4bit quantization",
      "body": "### Feature request\r\n\r\nhttps://colab.research.google.com/drive/1VoYNfYDKcKRQRor98Zbf2-9VQTtGJ24k\r\n\r\n### Motivation\r\n\r\nhttps://www.youtube.com/watch?v=DxInMGIvkp0",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-18T01:39:31Z",
      "updated_at": "2023-07-18T01:48:01Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/392/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/392",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/392",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:24.470570",
      "comments": []
    },
    {
      "issue_number": 383,
      "title": "Suppress identical warnings",
      "body": "### Feature request\n\nWe would like to be able to specify the maximum number of times an identical warning is logged before it is suppressed.\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-13T19:01:58Z",
      "updated_at": "2023-07-17T22:25:52Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/383/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "Mustaballer",
        "0dm"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/383",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/383",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:24.470591",
      "comments": []
    },
    {
      "issue_number": 339,
      "title": "[Bug]: logger produces duplicates on MacOS",
      "body": "### Describe the bug\n\nDuring recording:\r\n\r\n```\r\n2023-07-02 11:33:00.922 | INFO     | __main__:read_screen_events:402 - starting                                                                                                                                        \r\n2023-07-02 11:33:00.931 | INFO     | __main__:read_window_events:429 - starting                                                                                                                                        \r\n2023-07-02 11:33:00.948 | INFO     | __main__:process_events:132 - starting                                                                                                                                            \r\n2023-07-02 11:33:00.948 | INFO     | __main__:process_events:132 - starting                                \r\n2023-07-02 11:33:01.147 | INFO     | __main__:read_window_events:448 - _window_data={'title': 'Terminal OpenAdapt — tmux — 215×51', 'left': -3, 'top': 38, 'width': 1515, 'height': 930, 'window_id': 204051}          \r\n2023-07-02 11:33:01.147 | INFO     | __main__:read_window_events:448 - _window_data={'title': 'Terminal OpenAdapt — tmux — 215×51', 'left': -3, 'top': 38, 'width': 1515, 'height': 930, 'window_id': 204051}          \r\n2023-07-02 11:33:02.789 | INFO     | __mp_main__:write_events:273 - event_type='screen' starting                                                                                                                       \r\n2023-07-02 11:33:02.808 | INFO     | __mp_main__:write_events:273 - event_type='window' starting   \r\n```\r\n\r\nThis does not occur if `utils.configure_logging` is modified to `return` immediately.\n\n### To Reproduce\n\n`python -m openadapt.record foo`",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-02T15:36:23Z",
      "updated_at": "2023-07-17T18:45:46Z",
      "closed_at": "2023-07-17T18:45:46Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/339/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/339",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/339",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:24.470603",
      "comments": [
        {
          "author": "angelala3252",
          "body": "This bug occurs on Windows too",
          "created_at": "2023-07-04T17:50:10Z"
        }
      ]
    },
    {
      "issue_number": 387,
      "title": "Refactor tracing code into trace.py",
      "body": "### Feature request\n\nhttps://github.com/OpenAdaptAI/OpenAdapt/blob/3f328830380468e95932e1fab9c2c390112069a3/openadapt/record.py#L82C5-L82C10 and related should be moved into `trace.py`.\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-14T19:15:09Z",
      "updated_at": "2023-07-17T14:36:27Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/387/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "dianzrong"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/387",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/387",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:24.680797",
      "comments": []
    },
    {
      "issue_number": 369,
      "title": "Implement .env.example and automatically copy to .env in config.py",
      "body": "### Feature request\n\nAs titled\n\n### Motivation\n\n_No response_",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-10T14:55:58Z",
      "updated_at": "2023-07-17T14:35:50Z",
      "closed_at": "2023-07-17T14:35:50Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/369/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/369",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/369",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:24.680823",
      "comments": []
    },
    {
      "issue_number": 371,
      "title": "[Bug]: exception when using stop sequence on python3.11",
      "body": "### Describe the bug\n\n```\r\n2023-07-08 18:56:50.138 | INFO     | __mp_main__:performance_stats_writer:518 - performance stats writer starting\r\n2023-07-08 18:56:52.262 | INFO     | __main__:read_window_events:487 - _window_data={'title': '314474203/19600', 'left': -9, 'top': -9, 'width': 1938, 'height': 1038, 'window_id': 0}\r\n2023-07-08 18:57:03.823 | WARNING  | openadapt.window._windows:get_active_window_state:31 - No Windows of that application are active\r\n2023-07-08 18:57:09.351 | WARNING  | openadapt.window._windows:get_active_window_state:31 - No Windows of that application are active\r\n2023-07-08 18:57:20.691 | INFO     | __main__:on_press:646 - Stop sequence entered! Stopping recording now.\r\nUnhandled exception in listener callback\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\erika\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-CpCf7oPf-py3.11\\Lib\\site-packages\\pynput\\_util\\__init__.py\", line 230, in inner\r\n    return f(self, *args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\erika\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-CpCf7oPf-py3.11\\Lib\\site-packages\\pynput\\keyboard\\_win32.py\", line 299, in _process\r\n    self.on_press(key, injected)\r\n  File \"C:\\Users\\erika\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-CpCf7oPf-py3.11\\Lib\\site-packages\\pynput\\_util\\__init__.py\", line 146, in inner\r\n    if f(*args) is False:\r\n       ^^^^^^^^\r\n  File \"C:\\Users\\erika\\OpenAdapt\\openadapt\\record.py\", line 630, in on_press\r\n    keyboard.KeyCode.from_char(stop_sequence[stop_sequence_indices[i]])\r\n                               ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nIndexError: list index out of range\r\n2023-07-08 18:57:20.832 | INFO     | __mp_main__:write_events:319 - event_type='window' done\r\n2023-07-08 18:57:20.832 | INFO     | __mp_main__:wrapper_logging:99 -  <- Leave: write_events(None)\r\n2023-07-08 18:57:20.853 | INFO     | __mp_main__:write_events:319 - event_type='action' done\r\n2023-07-08 18:57:20.858 | INFO     | __mp_main__:wrapper_logging:99 -  <- Leave: write_events(None)\r\n2023-07-08 18:57:20.791 | INFO     | __main__:read_screen_events:448 - done\r\n2023-07-08 18:57:20.799 | INFO     | __main__:process_events:194 - done\r\n```\n\n### To Reproduce\n\n```\r\npython -m openadapt.record foo\r\n```",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-10T15:00:07Z",
      "updated_at": "2023-07-16T00:40:07Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/371/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "angelala3252"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/371",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/371",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:24.680832",
      "comments": [
        {
          "author": "angelala3252",
          "body": "@abrichr I'm unable to recreate this bug. What are the exact steps taken after starting the recording?",
          "created_at": "2023-07-11T19:33:00Z"
        },
        {
          "author": "ulysseskan",
          "body": "I wasn't able to repro this either, but from the error, it looks like there's a problem with `stop_sequence_indices[i]` exceeding the length of the `STOP_SEQUENCES` list.  \r\n\r\nOne way to handle this might be to update the loop on line 624 of record.py as follows:\r\n\r\n```\r\n        if stop_sequence_ind",
          "created_at": "2023-07-16T00:40:06Z"
        }
      ]
    },
    {
      "issue_number": 385,
      "title": "Update CONTRIBUTING with code conventions",
      "body": "### Feature request\n\nType annotations\r\nConstant naming\r\nConstant classes\r\nNaming things\r\n\r\nwhat else?\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-14T18:33:21Z",
      "updated_at": "2023-07-14T18:33:21Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/385/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/385",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/385",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:24.861671",
      "comments": []
    },
    {
      "issue_number": 365,
      "title": "Explore https://github.com/griptape-ai/griptape",
      "body": "### Feature request\n\nHow can we take advantage of https://github.com/griptape-ai/griptape ?\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-08T16:58:03Z",
      "updated_at": "2023-07-10T14:47:28Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/365/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "AvidEslami"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/365",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/365",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:24.861719",
      "comments": []
    },
    {
      "issue_number": 331,
      "title": "[Bug]: windows.get_active_window returns None and logs error",
      "body": "### Describe the bug\n\nIn https://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/window/_windows.py#L31 :\r\n\r\n```\r\nNo windows of that application are active\r\n```\n\n### To Reproduce\n\nCreate a new recording on windows, switch to a different application",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-29T17:38:37Z",
      "updated_at": "2023-07-10T14:44:57Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 8,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/331/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/331",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/331",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:24.861732",
      "comments": [
        {
          "author": "angelala3252",
          "body": "I tried checking out older versions of my [productivity PR](https://github.com/MLDSAI/OpenAdapt/pull/234), and everything works until I check out [this commit](https://github.com/OpenAdaptAI/OpenAdapt/pull/234/commits/9d059363b34523642aa95965b314ab763233307d) where I pulled from main.",
          "created_at": "2023-06-29T19:30:23Z"
        },
        {
          "author": "abrichr",
          "body": "@angelala3252 can you please create a new branch off of your productivity PR, merge in https://github.com/OpenAdaptAI/OpenAdapt/pull/333, and see if that resolves the error?",
          "created_at": "2023-07-04T00:55:20Z"
        },
        {
          "author": "angelala3252",
          "body": "@abrichr It seems to work for every application other than Chrome. When I switch to Chrome, I get this error:\r\n```\r\n2023-07-04 15:01:09.501 | WARNING  | openadapt.window:get_active_window_state:43 - exc=IndexError('list index out of range')\r\n2023-07-04 15:01:15.225 | WARNING  | openadapt.window:get_",
          "created_at": "2023-07-04T19:03:11Z"
        },
        {
          "author": "jesicasusanto",
          "body": "Hi @angelala3252, thank you for reporting this. I handled the error here https://github.com/OpenAdaptAI/OpenAdapt/pull/333/commits/a40bdb8bb5cf35e3c122ac32a3e40d79f458b760.",
          "created_at": "2023-07-05T16:04:09Z"
        },
        {
          "author": "jesicasusanto",
          "body": "The error you encountered is raised by the pywinauto library and indicates that the GetSelection() method used in the pywinauto controls UIA implementation is not implemented or supported for the specific element you are working with.\r\n\r\n`  File \"C:\\Users\\jesic\\AppData\\Local\\pypoetry\\Cache\\virtualen",
          "created_at": "2023-07-05T16:08:56Z"
        }
      ]
    },
    {
      "issue_number": 368,
      "title": "Define model tiers",
      "body": "### Feature request\r\n\r\nWe would like to organize our models according to:\r\n\r\n- self hosted CPU (e.g. MPT7B)\r\n- self hosted GPU (e.g. Landmark Attention)\r\n- hosted API (e.g. OpenAI)\r\n\r\nThis involves creating some constants and/or interfaces defining this.\r\n\r\ne.g. ml_models.py:\r\n\r\n```\r\nMODEL_PRIORITY = [\"GPU\", \"CPU\", \"hosted\"]\r\n...\r\n```\r\n\r\n### Motivation\r\n\r\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-10T14:37:39Z",
      "updated_at": "2023-07-10T14:39:25Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/368/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "FFFiend"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/368",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/368",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:25.059575",
      "comments": []
    },
    {
      "issue_number": 301,
      "title": "Explore mind2web",
      "body": "### Feature request\n\nHow can we take advantage of https://osu-nlp-group.github.io/Mind2Web/ (dataset at https://huggingface.co/datasets/osunlp/Mind2Web) ?\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-21T14:40:58Z",
      "updated_at": "2023-07-07T15:38:10Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/301/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "angelala3252"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/301",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/301",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:25.059600",
      "comments": [
        {
          "author": "angelala3252",
          "body": "Mind2Web data structure:\r\n- Task description, which outlines the high-level goal of the task\r\n\r\n- Action sequence that accomplishes the task description, where each action has (Target Element, Operation). The operations available: Click, Hover, Type (with the full string rather than just one charact",
          "created_at": "2023-06-30T15:24:54Z"
        },
        {
          "author": "FFFiend",
          "body": "https://github.com/OSU-NLP-Group/Mind2Web they just dropped the code for their paper :)\r\n\r\nAccording to the README, they haven't released their code for fine tuning just yet, but at a high level, they're giving the LLM a multiple-choice prompt and asking it to select the right one, given the current",
          "created_at": "2023-07-03T19:13:53Z"
        },
        {
          "author": "abrichr",
          "body": "Let's figure out how we can train the mind2web model on openadapt window states. What are the steps involved?",
          "created_at": "2023-07-04T17:35:20Z"
        },
        {
          "author": "abrichr",
          "body": "Model code hasn't been released yet",
          "created_at": "2023-07-07T15:38:10Z"
        }
      ]
    },
    {
      "issue_number": 276,
      "title": "Explore HuggingFace PRO spaces (https://huggingface.co/spaces) or Inference Endpoints (https://huggingface.co/inference-endpoints).",
      "body": "### Feature request\n\nWe want to know what are the trade-offs of the two hosted solutions offered by HuggingFace.\n\n### Motivation\n\nWe want to run models in HuggingFace when we can't run them offline due to computational constraints.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-16T18:41:47Z",
      "updated_at": "2023-07-07T03:48:32Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/276/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "FFFiend"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/276",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/276",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:25.241308",
      "comments": [
        {
          "author": "FFFiend",
          "body": "https://huggingface.co/blog/inference-update Explores both inference endpoints and spaces. \r\n\r\nThe two factors that I think are the most crucial are: Hardware Availability and Pricing. Here's the inference endpoint pricing:\r\n<img width=\"1346\" alt=\"Screen Shot 2023-06-20 at 12 27 13 AM\" src=\"https://",
          "created_at": "2023-06-20T04:28:14Z"
        },
        {
          "author": "FFFiend",
          "body": "To be honest, HF Spaces are more web demo oriented, the way I see us using Spaces for a model that we computationally cannot afford to run locally is: opening up a new tab with the model link, prompting with whatever UI options we have for it and generating the output (in this case, Action Events) a",
          "created_at": "2023-06-20T04:47:23Z"
        },
        {
          "author": "FFFiend",
          "body": "https://huggingface.co/blog/inference-endpoints-llm useful tutorial for when we're working on integrating large models that can't be run on CPU.",
          "created_at": "2023-07-07T03:47:45Z"
        }
      ]
    },
    {
      "issue_number": 355,
      "title": "[Bug]: NoPatternInterfaceError() raised by pywinauto when trying to get the properties of a window element",
      "body": "### Describe the bug\n\nPywinauto raises NoPatternInterfaceError() when getting the properties of a window element. As reference, https://github.com/pywinauto/pywinauto/issues/463\n\n### To Reproduce\n\npython -m openadap.record \"test\"\r\nUsually happens on chrome tabs",
      "state": "open",
      "author": "jesicasusanto",
      "author_type": "User",
      "created_at": "2023-07-06T14:55:58Z",
      "updated_at": "2023-07-06T14:55:58Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/355/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/355",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/355",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:25.422427",
      "comments": []
    },
    {
      "issue_number": 354,
      "title": "Automatically split long lines",
      "body": "### Feature request\n\nWe would like to automatically split long lines in documentation and code, e.g. as a pre-commit hook\n\n### Motivation\n\nhttps://github.com/OpenAdaptAI/OpenAdapt/pull/319#discussion_r1252293810",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-06T14:03:26Z",
      "updated_at": "2023-07-06T14:03:26Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/354/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/354",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/354",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:25.422452",
      "comments": []
    },
    {
      "issue_number": 320,
      "title": "Workflow/use case template",
      "body": "### Feature request\n\nWe would to introduce some structure to the definitions of use cases. We can define this as an issue template in https://github.com/MLDSAI/OpenAdapt/tree/main/.github/ISSUE_TEMPLATE\r\n\r\nGood example:\r\n\r\nhttps://github.com/MLDSAI/OpenAdapt/issues/202\r\n\r\nRelated:\r\n\r\nhttps://github.com/MLDSAI/OpenAdapt/issues/72\n\n### Motivation\n\n_No response_",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-26T16:41:14Z",
      "updated_at": "2023-07-06T14:00:54Z",
      "closed_at": "2023-07-06T14:00:54Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/320/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "dianzrong"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/320",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/320",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:25.422461",
      "comments": []
    },
    {
      "issue_number": 342,
      "title": "[Bug]: README.md installation does not include tesseract and other dependencies",
      "body": "### Describe the bug\r\n\r\nFollowing instructions in https://github.com/OpenAdaptAI/OpenAdapt#install does not succeed if tesseract is not installed.\r\n\r\n### To Reproduce\r\n\r\nFollow https://github.com/OpenAdaptAI/OpenAdapt#install on a machine without tesseract.",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-03T18:24:07Z",
      "updated_at": "2023-07-06T13:53:11Z",
      "closed_at": "2023-07-06T13:53:11Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/342/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KrishPatel13"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/342",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/342",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:25.422487",
      "comments": [
        {
          "author": "KrishPatel13",
          "body": "Thank you @abrichr pointing this out.\r\n\r\n1 more question before I get started on this. The installation scripts do NOT mention about installation of Python version 3.10 and Git as well. \r\n\r\nShould I add them as well ?",
          "created_at": "2023-07-03T18:31:55Z"
        },
        {
          "author": "abrichr",
          "body": "@KrishPatel13 to clarify, I believe https://github.com/OpenAdaptAI/OpenAdapt/blob/main/install/install_openadapt.ps1 installs Python and Git, but https://github.com/OpenAdaptAI/OpenAdapt/blob/main/install/install_openadapt.sh does not.\r\n\r\n(I believe this is addressed in https://github.com/OpenAdaptA",
          "created_at": "2023-07-03T19:53:46Z"
        },
        {
          "author": "KrishPatel13",
          "body": "I have updated the README.md and it now includes the as Prerequisites.\r\n\r\nSee: https://github.com/OpenAdaptAI/OpenAdapt/blob/743be48f8fda1237756e520bf2bd2ff098f234a2/README.md#install",
          "created_at": "2023-07-04T14:22:14Z"
        }
      ]
    },
    {
      "issue_number": 278,
      "title": "Remove requirements.txt",
      "body": "### Feature request\n\nOnce it's no longer useful\n\n### Motivation\n\n_No response_",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-16T19:00:27Z",
      "updated_at": "2023-07-06T13:53:11Z",
      "closed_at": "2023-07-06T13:53:10Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/278/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KrishPatel13"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/278",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/278",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:25.628702",
      "comments": [
        {
          "author": "KrishPatel13",
          "body": "This will be addressed in : https://github.com/OpenAdaptAI/OpenAdapt/pull/344",
          "created_at": "2023-07-04T17:31:08Z"
        }
      ]
    },
    {
      "issue_number": 352,
      "title": "[Bug]: TypeErrors when replaying recording",
      "body": "### Describe the bug\r\n\r\nI expected the recording to fully playback, but what actually happened is that it only partially played back and then several 'TypeError' expressions appeared in the Terminal logs. \r\n\r\nNote that my recording should have encompassed a workflow that extended beyond typing \"flights.google.com\" into the search bar and pressing \"Enter\".\r\n\r\nScreen recording of the replay: https://github.com/OpenAdaptAI/OpenAdapt/assets/84868895/077443b3-447b-4d87-911c-ed8b687c7a31\r\n\r\nNote that the logs below have been truncated to fit in the description for this issue...\r\n\r\n**Here are the logs from when I tried to replay the recording:**\r\n```\r\n(openadapt-py3.10) taylorhorsager@Taylors-MacBook-Air OpenAdapt % python -m openadapt.replay NaiveReplayStrategy\r\n2023-07-04 17:20:03.224 | INFO     | openadapt.config:<module>:146 - STOP_STRS=['oa.stop']\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - SPECIAL_CHAR_STOP_SEQUENCES=[['ctrl', 'ctrl', 'ctrl']]\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - STOP_SEQUENCES=[['o', 'a', '.', 's', 't', 'o', 'p'], ['ctrl', 'ctrl', 'ctrl']]\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - CACHE_DIR_PATH=.cache\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - CACHE_ENABLED=True\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - CACHE_VERBOSITY=0\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - DB_ECHO=False\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - DB_FNAME=openadapt.db\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - OPENAI_API_KEY=<set your api key in .env>\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - OPENAI_MODEL_NAME=gpt-3.5-turbo\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - RECORD_READ_ACTIVE_ELEMENT_STATE=False\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - REPLAY_STRIP_ELEMENT_STATE=True\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - IGNORE_WARNINGS=False\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - ACTION_TEXT_SEP=-\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - ACTION_TEXT_NAME_PREFIX=<\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - ACTION_TEXT_NAME_SUFFIX=>\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - SCRUB_ENABLED=True\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - SCRUB_CHAR=*\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - SCRUB_LANGUAGE=en\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - SCRUB_FILL_COLOR=255\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - SCRUB_CONFIG_TRF={'nlp_engine_name': 'spacy', 'models': [{'lang_code': 'en', 'model_name': 'en_core_web_trf'}]}\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - SCRUB_IGNORE_ENTITIES=['DATE_TIME', 'URL']\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - SCRUB_KEYS_HTML=['text', 'canonical_text', 'title', 'state', 'task_description', 'key_char', 'canonical_key_char', 'key_vk', 'children']\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - PLOT_PERFORMANCE=True\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - ROOT_DIRPATH=/Users/taylorhorsager/OpenAdapt\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - DB_FPATH=/Users/taylorhorsager/OpenAdapt/openadapt.db\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<\r\nmodule>:146 - DB_URL=sqlite:////Users/taylorhorsager/OpenAdapt/openadapt.db\r\n2023-07-04 17:20:03.225 | INFO     | openadapt.config:<module>:146 - DIRNAME_PERFORMANCE_PLOTS=performance\r\n2023-07-04 17:20:03.817 | INFO     | __main__:replay:27 - strategy_name='NaiveReplayStrategy'\r\n2023-07-04 17:20:05.460 | INFO     | __main__:replay:40 - strategy_class=<class 'openadapt.strategies.naive.NaiveReplayStrategy'>\r\n2023-07-04 17:20:05.460 | INFO     | __main__:replay:43 - strategy=<openadapt.strategies.naive.NaiveReplayStrategy object at 0x12b530a30>\r\n2023-07-04 17:20:11.297 | INFO     | openadapt.events:get_events:39 - num_process_iters=0 num_action_events=700 num_window_events=9 num_screenshots=238\r\n2023-07-04 17:20:11.297 | INFO     | openadapt.events:process_events:600 - before num_action_events=700 num_window_events=9 num_screenshots=238 num_total=947\r\n2023-07-04 17:20:11.308 | INFO     | openadapt.events:get_group_idx_tups:432 - len(to_merge)=38 group_idx_tups=[(0, 36), (36, 38)]\r\n2023-07-04 17:20:11.396 | INFO     | openadapt.events:get_group_idx_tups:432 - len(to_merge)=6 group_idx_tups=[(0, 6)]\r\n2023-07-04 17:20:11.432 | INFO     | openadapt.events:merge_consecutive_action_events:564 - name='keyboard' num_events_removed=41\r\n2023-07-04 17:20:11.432 | INFO     | openadapt.events:discard_unused_events:586 - referred_timestamp_key='window_event_timestamp' num_referred_events_removed=0\r\n2023-07-04 17:20:11.433 | INFO     | openadapt.events:discard_unused_events:586 - referred_timestamp_key='screenshot_timestamp' num_referred_events_removed=39\r\n2023-07-04 17:20:11.523 | INFO     | openadapt.events:merge_consecutive_action_events:564 - name='mouse_move' num_events_removed=623\r\n2023-07-04 17:20:11.523 | INFO     | openadapt.events:discard_unused_events:586 - referred_timestamp_key='window_event_timestamp' num_referred_events_removed=0\r\n2023-07-04 17:20:11.523 | INFO     | openadapt.events:discard_unused_events:586 - referred_timestamp_key='screenshot_timestamp' num_referred_events_removed=163\r\n2023-07-04 17:20:11.523 | INFO     | openadapt.events:merge_consecutive_action_events:564 - name='mouse_scroll' num_events_removed=0\r\n2023-07-04 17:20:11.523 | INFO     | openadapt.events:discard_unused_events:586 - referred_timestamp_key='window_event_timestamp' num_referred_events_removed=0\r\n2023-07-04 17:20:11.523 | INFO     | openadapt.events:discard_unused_events:586 - referred_timestamp_key='screenshot_timestamp' num_referred_events_removed=0\r\n2023-07-04 17:20:11.524 | INFO     | openadapt.events:merge_consecutive_action_events:564 - name='redundant_mouse_move' num_events_removed=11\r\n2023-07-04 17:20:11.524 | INFO     | openadapt.events:discard_unused_events:586 - referred_timestamp_key='window_event_timestamp' num_referred_events_removed=2\r\n2023-07-04 17:20:11.524 | INFO     | openadapt.events:discard_unused_events:586 - referred_timestamp_key='screenshot_timestamp' num_referred_events_removed=11\r\n2023-07-04 17:20:11.528 | INFO     | openadapt.events:get_timestamp_mappings:282 - double_click_distance=5\r\n2023-07-04 17:20:11.528 | INFO     | openadapt.events:get_timestamp_mappings:288 - double_click_interval=0.5\r\n2023-07-04 17:20:11.547 | INFO     | openadapt.events:get_timestamp_mappings:282 - double_click_distance=5\r\n2023-07-04 17:20:11.547 | INFO     | openadapt.events:get_timestamp_mappings:288 - double_click_interval=0.5\r\n2023-07-04 17:20:11.553 | INFO     | openadapt.events:get_timestamp_mappings:282 - double_click_distance=5\r\n2023-07-04 17:20:11.553 | INFO     | openadapt.events:get_timestamp_mappings:288 - double_click_interval=0.5\r\n2023-07-04 17:20:11.583 | INFO     | openadapt.events:merge_consecutive_action_events:564 - name='mouse_click' num_events_removed=11\r\n2023-07-04 17:20:11.583 | INFO     | openadapt.events:discard_unused_events:586 - referred_timestamp_key='window_event_timestamp' num_referred_events_removed=0\r\n2023-07-04 17:20:11.583 | INFO     | openadapt.events:discard_unused_events:586 - referred_timestamp_key='screenshot_timestamp' num_referred_events_removed=11\r\n2023-07-04 17:20:11.583 | INFO     | openadapt.events:process_events:636 - after num_action_events_=14 num_window_events_=7 num_screenshots_=14 num_total=947\r\n2023-07-04 17:20:11.583 | INFO     | openadapt.events:process_events:640 - pct_action_events=0.02 pct_window_events=0.7777777777777778 pct_screenshots=0.058823529411764705 pct_total=0.03695881731784583\r\n2023-07-04 17:20:11.583 | INFO     | openadapt.events:get_events:83 - duration=5.993409633636475\r\n2023-07-04 17:20:11.584 | INFO     | openadapt.strategies.naive:get_next_action_event:58 - self.action_event_idx=0 of num_action_events=14: action_event=ActionEvent(id=3282, name='singleclick', timestamp=1689829367.3202674, recording_timestamp=1688512445.664324, screenshot_timestamp=1689829369.403077, window_event_timestamp=1689829354.8723857, mouse_x=1360.8984375, mouse_y=221.7421875, mouse_button_name='left')\r\n2023-07-04 17:20:11.600 | INFO     | openadapt.strategies.base:run:67 - action_event=\r\n\r\n[TRUNCATED SECTION]\r\n\r\n 'recording_timestamp': 1688512445.664324,\r\n 'screenshot_timestamp': 1689829369.403077,\r\n 'timestamp': 1689829367.3202674,\r\n 'window_event_timestamp': 1689829354.8723857}\r\n2023-07-04 17:20:12.197 | WARNING  | openadapt.window._macos:get_active_window_state:42 - exc=TypeError('Cannot pickle Objective-C objects')\r\n2023-07-04 17:20:12.197 | INFO     | openadapt.strategies.naive:get_next_action_event:58 - self.action_event_idx=1 of num_action_events=14: action_event=ActionEvent(id=3283, name='singleclick', timestamp=1689829367.4435203, recording_timestamp=1688512445.664324, screenshot_timestamp=1689829374.6669717, window_event_timestamp=1689829373.4887724, mouse_x=1158.29296875, mouse_y=254.28515625, mouse_button_name='left')\r\n2023-07-04 17:20:12.201 | INFO     | openadapt.strategies.base:run:67 - action_event=\r\n\r\n[TRUNCATED SECTION]\r\n\r\n 'recording_timestamp': 1688512445.664324,\r\n 'screenshot_timestamp': 1689829374.6669717,\r\n 'timestamp': 1689829367.4435203,\r\n 'window_event_timestamp': 1689829373.4887724}\r\n2023-07-04 17:20:12.678 | WARNING  | openadapt.window._macos:get_active_window_state:42 - exc=TypeError('Cannot pickle Objective-C objects')\r\n2023-07-04 17:20:12.679 | INFO     | openadapt.strategies.naive:get_next_action_event:58 - self.action_event_idx=2 of num_action_events=14: action_event=ActionEvent(id=3268, name='type', timestamp=1689829369.2004812, recording_timestamp=1688512445.664324, screenshot_timestamp=1689829376.5902064, window_event_timestamp=1689829373.4887724, text='f-l-i-g-h-t-s-.-g-o-o-g-l-e-.-c-o-m', canonical_text='f-l-i-g-h-t-s-.-g-o-o-g-l-e-.-c-o-m')\r\n2023-07-04 17:20:12.681 | INFO     | openadapt.strategies.base:log_fps:88 - fps=1.83\r\n2023-07-04 17:20:12.684 | INFO     | openadapt.strategies.base:run:67 - action_event=\r\n{'canonical_text': 'f-l-i-g-h-t-s-.-g-o-o-g-l-e-.-c-o-m',\r\n 'children': [{'canonical_key_char': 'f',\r\n               'id': 2703,\r\n               'key_char': 'f',\r\n               'key_vk': '3',\r\n               'name': 'press',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829376.5902064,\r\n               'timestamp': 1689829376.6233482,\r\n               'window_event_timestamp': 1689829373.4887724},\r\n              {'canonical_key_char': 'f',\r\n               'id': 2704,\r\n               'key_char': 'f',\r\n               'key_vk': '3',\r\n               'name': 'release',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829376.6639483,\r\n               'timestamp': 1689829376.7030604,\r\n               'window_event_timestamp': 1689829373.4887724},\r\n              {'canonical_key_char': 'l',\r\n               'id': 2705,\r\n               'key_char': 'l',\r\n               'key_vk': '37',\r\n               'name': 'press',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829377.3813183,\r\n               'timestamp': 1689829377.3993464,\r\n               'window_event_timestamp': 1689829373.4887724},\r\n              {'canonical_key_char': 'l',\r\n               'id': 2706,\r\n               'key_char': 'l',\r\n               'key_vk': '37',\r\n               'name': 'release',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829377.460672,\r\n               'timestamp': 1689829377.4658744,\r\n               'window_event_timestamp': 1689829373.4887724},\r\n              {'canonical_key_char': 'i',\r\n               'id': 2707,\r\n               'key_char': 'i',\r\n               'key_vk': '34',\r\n               'name': 'press',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829377.814631,\r\n               'timestamp': 1689829377.8271708,\r\n               'window_event_timestamp': 1689829373.4887724},\r\n              {'canonical_key_char': 'i',\r\n               'id': 2708,\r\n               'key_char': 'i',\r\n               'key_vk': '34',\r\n               'name': 'release',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829377.9361246,\r\n               'timestamp': 1689829377.9385128,\r\n               'window_event_timestamp': 1689829373.4887724},\r\n              {'canonical_key_char': 'g',\r\n               'id': 2709,\r\n               'key_char': 'g',\r\n               'key_vk': '5',\r\n               'name': 'press',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829378.1630144,\r\n               'timestamp': 1689829378.1677318,\r\n               'window_event_timestamp': 1689829373.4887724},\r\n              {'canonical_key_char': 'g',\r\n               'id': 2710,\r\n               'key_char': 'g',\r\n               'key_vk': '5',\r\n               'name': 'release',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829378.2362535,\r\n               'timestamp': 1689829378.254168,\r\n               'window_event_timestamp': 1689829373.4887724},\r\n              {'canonical_key_char': 'h',\r\n               'id': 2711,\r\n               'key_char': 'h',\r\n               'key_vk': '4',\r\n               'name': 'press',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829378.2362535,\r\n               'timestamp': 1689829378.2817876,\r\n               'window_event_timestamp': 1689829373.4887724},\r\n              {'canonical_key_char': 't',\r\n               'id': 2712,\r\n               'key_char': 't',\r\n               'key_vk': '17',\r\n               'name': 'press',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829378.370367,\r\n               'timestamp': 1689829378.3898249,\r\n               'window_event_timestamp': 1689829373.4887724},\r\n              {'canonical_key_char': 'h',\r\n               'id': 2713,\r\n               'key_char': 'h',\r\n               'key_vk': '4',\r\n               'name': 'release',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829378.370367,\r\n               'timestamp': 1689829378.3904893,\r\n               'window_event_timestamp': 1689829373.4887724},\r\n              {'canonical_key_char': 't',\r\n               'id': 2714,\r\n               'key_char': 't',\r\n               'key_vk': '17',\r\n               'name': 'release',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829378.4493673,\r\n               'timestamp': 1689829378.482988,\r\n               'window_event_timestamp': 1689829373.4887724},\r\n              {'canonical_key_char': 's',\r\n               'id': 2715,\r\n               'key_char': 's',\r\n               'key_vk': '1',\r\n               'name': 'press',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829378.5164297,\r\n               'timestamp': 1689829378.5516894,\r\n               'window_event_timestamp': 1689829373.4887724},\r\n              {'canonical_key_char': 's',\r\n               'id': 2716,\r\n               'key_char': 's',\r\n               'key_vk': '1',\r\n               'name': 'release',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829378.6257262,\r\n               'timestamp': 1689829378.639836,\r\n               'window_event_timestamp': 1689829373.4887724},\r\n              {'canonical_key_char': '.',\r\n               'id': 2717,\r\n               'key_char': '.',\r\n               'key_vk': '47',\r\n               'name': 'press',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829379.2210717,\r\n               'timestamp': 1689829379.2436266,\r\n               'window_event_timestamp': 1689829373.4887724},\r\n              {'canonical_key_char': '.',\r\n               'id': 2718,\r\n               'key_char': '.',\r\n               'key_vk': '47',\r\n               'name': 'release',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829379.3192923,\r\n               'timestamp': 1689829379.363737,\r\n               'window_event_timestamp': 1689829373.4887724},\r\n              {'canonical_key_char': 'g',\r\n               'id': 2719,\r\n               'key_char': 'g',\r\n               'key_vk': '5',\r\n               'name': 'press',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829380.0573847,\r\n               'timestamp': 1689829380.0770197,\r\n               'window_event_timestamp': 1689829379.9025235},\r\n              {'canonical_key_char': 'g',\r\n               'id': 2720,\r\n               'key_char': 'g',\r\n               'key_vk': '5',\r\n               'name': 'release',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829380.1340878,\r\n               'timestamp': 1689829380.1665602,\r\n               'window_event_timestamp': 1689829379.9025235},\r\n              {'canonical_key_char': 'o',\r\n               'id': 2721,\r\n               'key_char': 'o',\r\n               'key_vk': '31',\r\n               'name': 'press',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829380.394582,\r\n               'timestamp': 1689829380.414233,\r\n               'window_event_timestamp': 1689829379.9025235},\r\n              {'canonical_key_char': 'o',\r\n               'id': 2722,\r\n               'key_char': 'o',\r\n               'key_vk': '31',\r\n               'name': 'release',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829380.4677682,\r\n               'timestamp': 1689829380.4823544,\r\n               'window_event_timestamp': 1689829379.9025235},\r\n              {'canonical_key_char': 'o',\r\n               'id': 2723,\r\n               'key_char': 'o',\r\n               'key_vk': '31',\r\n               'name': 'press',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829380.556412,\r\n               'timestamp': 1689829380.5714889,\r\n               'window_event_timestamp': 1689829379.9025235},\r\n              {'canonical_key_char': 'o',\r\n               'id': 2724,\r\n               'key_char': 'o',\r\n               'key_vk': '31',\r\n               'name': 'release',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829380.7045507,\r\n               'timestamp': 1689829380.737289,\r\n               'window_event_timestamp': 1689829379.9025235},\r\n              {'canonical_key_char': 'g',\r\n               'id': 2725,\r\n               'key_char': 'g',\r\n               'key_vk': '5',\r\n               'name': 'press',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829380.7391899,\r\n               'timestamp': 1689829380.751954,\r\n               'window_event_timestamp': 1689829379.9025235},\r\n              {'canonical_key_char': 'g',\r\n               'id': 2726,\r\n               'key_char': 'g',\r\n               'key_vk': '5',\r\n               'name': 'release',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829380.826117,\r\n               'timestamp': 1689829380.841954,\r\n               'window_event_timestamp': 1689829379.9025235},\r\n              {'canonical_key_char': 'l',\r\n               'id': 2727,\r\n               'key_char': 'l',\r\n               'key_vk': '37',\r\n               'name': 'press',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829380.8965106,\r\n               'timestamp': 1689829380.9361498,\r\n               'window_event_timestamp': 1689829379.9025235},\r\n              {'canonical_key_char': 'l',\r\n               'id': 2728,\r\n               'key_char': 'l',\r\n               'key_vk': '37',\r\n               'name': 'release',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829381.0113325,\r\n               'timestamp': 1689829381.0221906,\r\n               'window_event_timestamp': 1689829379.9025235},\r\n              {'canonical_key_char': 'e',\r\n               'id': 2729,\r\n               'key_char': 'e',\r\n               'key_vk': '14',\r\n               'name': 'press',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829381.0113325,\r\n               'timestamp': 1689829381.0451894,\r\n               'window_event_timestamp': 1689829379.9025235},\r\n              {'canonical_key_char': 'e',\r\n               'id': 2730,\r\n               'key_char': 'e',\r\n               'key_vk': '14',\r\n               'name': 'release',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829381.0933523,\r\n               'timestamp': 1689829381.112281,\r\n               'window_event_timestamp': 1689829379.9025235},\r\n              {'canonical_key_char': '.',\r\n               'id': 2731,\r\n               'key_char': '.',\r\n               'key_vk': '47',\r\n               'name': 'press',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829381.1699114,\r\n               'timestamp': 1689829381.2019842,\r\n               'window_event_timestamp': 1689829379.9025235},\r\n              {'canonical_key_char': '.',\r\n               'id': 2732,\r\n               'key_char': '.',\r\n               'key_vk': '47',\r\n               'name': 'release',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829381.2844787,\r\n               'timestamp': 1689829381.3204713,\r\n               'window_event_timestamp': 1689829379.9025235},\r\n              {'canonical_key_char': 'c',\r\n               'id': 2733,\r\n               'key_char': 'c',\r\n               'key_vk': '8',\r\n               'name': 'press',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829381.4728346,\r\n               'timestamp': 1689829381.4963942,\r\n               'window_event_timestamp': 1689829379.9025235},\r\n              {'canonical_key_char': 'c',\r\n               'id': 2734,\r\n               'key_char': 'c',\r\n               'key_vk': '8',\r\n               'name': 'release',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829381.559251,\r\n               'timestamp': 1689829381.630717,\r\n               'window_event_timestamp': 1689829379.9025235},\r\n              {'canonical_key_char': 'o',\r\n               'id': 2735,\r\n               'key_char': 'o',\r\n               'key_vk': '31',\r\n               'name': 'press',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829381.6674414,\r\n               'timestamp': 1689829381.6770205,\r\n               'window_event_timestamp': 1689829379.9025235},\r\n              {'canonical_key_char': 'o',\r\n               'id': 2736,\r\n               'key_char': 'o',\r\n               'key_vk': '31',\r\n               'name': 'release',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829381.7536216,\r\n               'timestamp': 1689829381.7965622,\r\n               'window_event_timestamp': 1689829379.9025235},\r\n              {'canonical_key_char': 'm',\r\n               'id': 2737,\r\n               'key_char': 'm',\r\n               'key_vk': '46',\r\n               'name': 'press',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829381.8346872,\r\n               'timestamp': 1689829381.8534756,\r\n               'window_event_timestamp': 1689829379.9025235},\r\n              {'canonical_key_char': 'm',\r\n               'id': 2738,\r\n               'key_char': 'm',\r\n               'key_vk': '46',\r\n               'name': 'release',\r\n               'parent_id': 3268,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829381.9144,\r\n               'timestamp': 1689829381.9237363,\r\n               'window_event_timestamp': 1689829379.9025235}],\r\n 'id': 3268,\r\n 'name': 'type',\r\n 'recording_timestamp': 1688512445.664324,\r\n 'screenshot_timestamp': 1689829376.5902064,\r\n 'text': 'f-l-i-g-h-t-s-.-g-o-o-g-l-e-.-c-o-m',\r\n 'timestamp': 1689829369.2004812,\r\n 'window_event_timestamp': 1689829373.4887724}\r\n2023-07-04 17:20:13.452 | WARNING  | openadapt.window._macos:get_active_window_state:42 - exc=TypeError('Cannot pickle Objective-C objects')\r\n2023-07-04 17:20:13.453 | INFO     | openadapt.strategies.naive:get_next_action_event:58 - self.action_event_idx=3 of num_action_events=14: action_event=ActionEvent(id=3269, name='type', timestamp=1689829369.5841374, recording_timestamp=1688512445.664324, screenshot_timestamp=1689829382.2931798, window_event_timestamp=1689829379.9025235, text='<enter>', canonical_text='<36>')\r\n2023-07-04 17:20:13.453 | INFO     | openadapt.strategies.base:log_fps:88 - fps=1.61\r\n2023-07-04 17:20:13.453 | INFO     | openadapt.strategies.base:run:67 - action_event=\r\n{'canonical_text': '<36>',\r\n 'children': [{'canonical_key_vk': '36',\r\n               'id': 2739,\r\n               'key_name': 'enter',\r\n               'name': 'press',\r\n               'parent_id': 3269,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829382.2931798,\r\n               'timestamp': 1689829382.3073926,\r\n               'window_event_timestamp': 1689829379.9025235},\r\n              {'canonical_key_vk': '36',\r\n               'id': 2740,\r\n               'key_name': 'enter',\r\n               'name': 'release',\r\n               'parent_id': 3269,\r\n               'recording_timestamp': 1688512445.664324,\r\n               'screenshot_timestamp': 1689829382.3493192,\r\n               'timestamp': 1689829382.4334404,\r\n               'window_event_timestamp': 1689829379.9025235}],\r\n 'id': 3269,\r\n 'name': 'type',\r\n 'recording_timestamp': 1688512445.664324,\r\n 'screenshot_timestamp': 1689829382.2931798,\r\n 'text': '<enter>',\r\n 'timestamp': 1689829369.5841374,\r\n 'window_event_timestamp': 1689829379.9025235}\r\n2023-07-04 17:20:13.997 | WARNING  | openadapt.window:get_active_window_state:43 - exc=TypeError(\"'NoneType' object is not callable\")\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/runpy.py\", line 196, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/runpy.py\", line 86, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/Users/taylorhorsager/OpenAdapt/openadapt/replay.py\", line 54, in <module>\r\n    fire.Fire(replay)\r\n  File \"/Users/taylorhorsager/Library/Caches/pypoetry/virtualenvs/openadapt-IciE2gK5-py3.10/lib/python3.10/site-packages/fire/core.py\", line 141, in Fire\r\n    component_trace = _Fire(component, args, parsed_flag_args, context, name)\r\n  File \"/Users/taylorhorsager/Library/Caches/pypoetry/virtualenvs/openadapt-IciE2gK5-py3.10/lib/python3.10/site-packages/fire/core.py\", line 466, in _Fire\r\n    component, remaining_args = _CallAndUpdateTrace(\r\n  File \"/Users/taylorhorsager/Library/Caches/pypoetry/virtualenvs/openadapt-IciE2gK5-py3.10/lib/python3.10/site-packages/fire/core.py\", line 681, in _CallAndUpdateTrace\r\n    component = fn(*varargs, **kwargs)\r\n  File \"/Users/taylorhorsager/OpenAdapt/openadapt/replay.py\", line 45, in replay\r\n    strategy.run()\r\n  File \"/Users/taylorhorsager/OpenAdapt/openadapt/strategies/base.py\", line 47, in run\r\n    window_event = models.WindowEvent.get_active_window_event()\r\n  File \"/Users/taylorhorsager/OpenAdapt/openadapt/models.py\", line 305, in get_active_window_event\r\n    return WindowEvent(**window.get_active_window_data())\r\nTypeError: openadapt.models.WindowEvent() argument after ** must be a mapping, not NoneType\r\n```\r\n\r\n**Here are the logs from making the recording:**\r\n```\r\n(openadapt-py3.10) taylorhorsager@Taylors-MacBook-Air OpenAdapt % python -m openadapt.record \"testing out openadapt\"\r\n2023-07-04 17:14:04.631 | INFO     | openadapt.config:<module>:146 - STOP_STRS=['oa.stop']\r\n2023-07-04 17:14:04.631 | INFO     | openadapt.config:<module>:146 - SPECIAL_CHAR_STOP_SEQUENCES=[['ctrl', 'ctrl', 'ctrl']]\r\n2023-07-04 17:14:04.631 | INFO     | openadapt.config:<module>:146 - STOP_SEQUENCES=[['o', 'a', '.', 's', 't', 'o', 'p'], ['ctrl', 'ctrl', 'ctrl']]\r\n2023-07-04 17:14:04.631 | INFO     | openadapt.config:<module>:146 - CACHE_DIR_PATH=.cache\r\n2023-07-04 17:14:04.632 | INFO     | openadapt.config:<module>:146 - CACHE_ENABLED=True\r\n2023-07-04 17:14:04.632 | INFO     | openadapt.config:<module>:146 - CACHE_VERBOSITY=0\r\n2023-07-04 17:14:04.632 | INFO     | openadapt.config:<module>:146 - DB_ECHO=False\r\n2023-07-04 17:14:04.632 | INFO     | openadapt.config:<module>:146 - DB_FNAME=openadapt.db\r\n2023-07-04 17:14:04.632 | INFO     | openadapt.config:<module>:146 - OPENAI_API_KEY=<set your api key in .env>\r\n2023-07-04 17:14:04.632 | INFO     | openadapt.config:<module>:146 - OPENAI_MODEL_NAME=gpt-3.5-turbo\r\n2023-07-04 17:14:04.632 | INFO     | openadapt.config:<module>:146 - RECORD_READ_ACTIVE_ELEMENT_STATE=False\r\n2023-07-04 17:14:04.632 | INFO     | openadapt.config:<module>:146 - REPLAY_STRIP_ELEMENT_STATE=True\r\n2023-07-04 17:14:04.632 | INFO     | openadapt.config:<module>:146 - IGNORE_WARNINGS=False\r\n2023-07-04 17:14:04.632 | INFO     | openadapt.config:<module>:146 - ACTION_TEXT_SEP=-\r\n2023-07-04 17:14:04.632 | INFO     | openadapt.config:<module>:146 - ACTION_TEXT_NAME_PREFIX=<\r\n2023-07-04 17:14:04.632 | INFO     | openadapt.config:<module>:146 - ACTION_TEXT_NAME_SUFFIX=>\r\n2023-07-04 17:14:04.632 | INFO     | openadapt.config:<module>:146 - SCRUB_ENABLED=True\r\n2023-07-04 17:14:04.632 | INFO     | openadapt.config:<module>:146 - SCRUB_CHAR=*\r\n2023-07-04 17:14:04.632 | INFO     | openadapt.config:<module>:146 - SCRUB_LANGUAGE=en\r\n2023-07-04 17:14:04.632 | INFO     | openadapt.config:<module>:146 - SCRUB_FILL_COLOR=255\r\n2023-07-04 17:14:04.632 | INFO     | openadapt.config:<module>:146 - SCRUB_CONFIG_TRF={'nlp_engine_name': 'spacy', 'models': [{'lang_code': 'en', 'model_name': 'en_core_web_trf'}]}\r\n2023-07-04 17:14:04.632 | INFO     | openadapt.config:<module>:146 - SCRUB_IGNORE_ENTITIES=['DATE_TIME', 'URL']\r\n2023-07-04 17:14:04.632 | INFO     | openadapt.config:<module>:146 - SCRUB_KEYS_HTML=['text', 'canonical_text', 'title', 'state', 'task_description', 'key_char', 'canonical_key_char', 'key_vk', 'children']\r\n2023-07-04 17:14:04.632 | INFO     | openadapt.config:<module>:146 - PLOT_PERFORMANCE=True\r\n2023-07-04 17:14:04.632 | INFO     | openadapt.config:<module>:146 - ROOT_DIRPATH=/Users/taylorhorsager/OpenAdapt\r\n2023-07-04 17:14:04.632 | INFO     | openadapt.config:<module>:146 - DB_FPATH=/Users/taylorhorsager/OpenAdapt/openadapt.db\r\n2023-07-04 17:14:04.632 | INFO     | openadapt.config:<module>:146 - DB_URL=sqlite:////Users/taylorhorsager/OpenAdapt/openadapt.db\r\n2023-07-04 17:14:04.632 | INFO     | openadapt.config:<module>:146 - DIRNAME_PERFORMANCE_PLOTS=performance\r\n2023-07-04 17:14:05.659 | INFO     | __main__:wrapper_logging:91 -  -> Enter: record(testing out openadapt)\r\n2023-07-04 17:14:05.663 | INFO     | __main__:record:657 - task_description='testing out openadapt'\r\n2023-07-04 17:14:05.664 | INFO     | __main__:wrapper_logging:91 -  -> Enter: create_recording(testing out openadapt)\r\n2023-07-04 17:14:05.710 | INFO     | __main__:create_recording:564 - recording=Recording(id=7, timestamp=1688512445.664324, monitor_width=2560, monitor_height=1440, double_click_interval_seconds=0.5, double_click_distance_pixels=5, platform='darwin', task_description='testing out openadapt')\r\n2023-07-04 17:14:05.711 | INFO     | __main__:wrapper_logging:95 -  <- Leave: create_recording(Recording(id=7, timestamp=1688512445.664324, monitor_width=2560, monitor_height=1440, double_click_interval_seconds=0.5, double_click_distance_pixels=5, platform='darwin', task_description='testing out openadapt'))\r\n2023-07-04 17:14:05.712 | INFO     | __main__:wrapper_logging:91 -  -> Enter: read_window_events(<queue.Queue object at 0x1463427d0>, <multiprocessing.synchronize.Event object at 0x1463aa4a0>, 1688512445.664324)\r\n2023-07-04 17:14:05.718 | INFO     | __main__:read_window_events:432 - starting\r\n2023-07-04 17:14:05.723 | INFO     | __main__:read_screen_events:405 - starting\r\n2023-07-04 17:14:05.723 | INFO     | __main__:read_screen_events:405 - starting\r\n2023-07-04 17:14:05.738 | INFO     | __main__:process_events:135 - starting\r\n2023-07-04 17:14:05.982 | INFO     | __main__:read_window_events:451 - _window_data={'title': 'Terminal OpenAdapt — poetry shell ▸ Python — 80×77', 'left': 163, 'top': 79, 'width': 585, 'height': 1113, 'window_id': 65996}\r\n2023-07-04 17:14:07.972 | INFO     | __mp_main__:wrapper_logging:91 -  -> Enter: write_events(window, <function write_window_event at 0x15e27b490>, <multiprocessing.queues.Queue object at 0x10310a4d0>, <multiprocessing.queues.Queue object at 0x15e262e30>, 1688512445.664324, <multiprocessing.synchronize.Event object at 0x15e263160>)\r\n2023-07-04 17:14:07.977 | INFO     | __mp_main__:write_events:276 - event_type='window' starting\r\n2023-07-04 17:14:07.997 | INFO     | __mp_main__:wrapper_logging:91 -  -> Enter: performance_stats_writer(<multiprocessing.queues.Queue object at 0x1035024d0>, 1688512445.664324, <multiprocessing.synchronize.Event object at 0x15de3ae30>)\r\n2023-07-04 17:14:08.000 | INFO     | __mp_main__:wrapper_logging:91 -  -> Enter: write_events(screen, <function write_screen_event at 0x167c07400>, <multiprocessing.queues.Queue object at 0x104cc64d0>, <multiprocessing.queues.Queue object at 0x167beee30>, 1688512445.664324, <multiprocessing.synchronize.Event object at 0x167bef160>)\r\n2023-07-04 17:14:08.003 | INFO     | __mp_main__:performance_stats_writer:482 - performance stats writer starting\r\n2023-07-04 17:14:08.006 | INFO     | __mp_main__:write_events:276 - event_type='screen' starting\r\n2023-07-04 17:14:08.022 | INFO     | __mp_main__:memory_writer:504 - Memory writer starting\r\n2023-07-04 17:14:08.034 | INFO     | __mp_main__:wrapper_logging:91 -  -> Enter: write_events(action, <function write_action_event at 0x163927250>, <multiprocessing.queues.Queue object at 0x1009864d0>, <multiprocessing.queues.Queue object at 0x16390ee30>, 1688512445.664324, <multiprocessing.synchronize.Event object at 0x16390f160>)\r\n2023-07-04 17:14:08.039 | INFO     | __mp_main__:write_events:276 - event_type='action' starting\r\n2023-07-04 17:14:24.747 | WARNING  | openadapt.window._macos:get_active_window_state:42 - exc=TypeError('Cannot pickle Objective-C objects')\r\n2023-07-04 17:14:24.748 | INFO     | __main__:read_window_events:451 - _window_data={'title': 'Google Chrome New Tab', 'left': 937, 'top': 194, 'width': 1351, 'height': 794, 'window_id': 65998}\r\n2023-07-04 17:14:26.715 | WARNING  | openadapt.window._macos:get_active_window_state:42 - exc=TypeError('Cannot pickle Objective-C objects')\r\n2023-07-04 17:14:29.868 | WARNING  | openadapt.window._macos:get_active_window_state:42 - exc=TypeError('Cannot pickle Objective-C objects')\r\n2023-07-04 17:14:33.127 | WARNING  | openadapt.window._macos:get_active_window_state:42 - exc=TypeError('Cannot pickle Objective-C objects')\r\n2023-07-04 17:14:33.130 | INFO     | __main__:read_window_events:451 - _window_data={'title': 'Google Chrome', 'left': 1055, 'top': 221, 'width': 1115, 'height': 408, 'window_id': 66001}\r\n2023-07-04 17:14:36.521 | WARNING  | openadapt.window:get_active_window_state:43 - exc=TypeError(\"'NoneType' object is not callable\")\r\n2023-07-04 17:14:38.834 | WARNING  | openadapt.window._macos:get_active_window_state:42 - exc=TypeError('Cannot pickle Objective-C objects')\r\n2023-07-04 17:14:38.836 | INFO     | __main__:read_window_events:451 - _window_data={'title': 'Google Chrome Google Flights - Find Cheap Flight Options & Track Prices', 'left': 937, 'top': 194, 'width': 1351, 'height': 794, 'window_id': 65998}\r\n2023-07-04 17:14:41.050 | WARNING  | openadapt.window._macos:get_active_window_state:42 - exc=TypeError('Cannot pickle Objective-C objects')\r\n2023-07-04 17:14:43.415 | WARNING  | openadapt.window._macos:get_active_window_state:42 - exc=TypeError('Cannot pickle Objective-C objects')\r\n2023-07-04 17:14:45.669 | WARNING  | openadapt.window._macos:get_active_window_state:42 - exc=TypeError('Cannot pickle Objective-C objects')\r\n2023-07-04 17:14:48.023 | WARNING  | openadapt.window._macos:get_active_window_state:42 - exc=TypeError('Cannot pickle Objective-C objects')\r\n2023-07-04 17:14:50.377 | WARNING  | openadapt.window._macos:get_active_window_state:42 - exc=TypeError('Cannot pickle Objective-C objects')\r\n2023-07-04 17:14:50.379 | INFO     | __main__:read_window_events:451 - _window_data={'title': 'Google Chrome Salt Lake City to Minneapolis | Google Flights', 'left': 937, 'top': 194, 'width': 1351, 'height': 794, 'window_id': 65998}\r\n2023-07-04 17:14:52.802 | WARNING  | openadapt.window._macos:get_active_window_state:42 - exc=TypeError('Cannot pickle Objective-C objects')\r\n2023-07-04 17:14:55.086 | WARNING  | openadapt.window._macos:get_active_window_state:42 - exc=TypeError('Cannot pickle Objective-C objects')\r\n2023-07-04 17:14:57.610 | WARNING  | openadapt.window._macos:get_active_window_state:42 - exc=TypeError('Cannot pickle Objective-C objects')\r\n2023-07-04 17:14:59.919 | WARNING  | openadapt.window._macos:get_active_window_state:42 - exc=TypeError('Cannot pickle Objective-C objects')\r\n2023-07-04 17:15:02.108 | WARNING  | openadapt.window._macos:get_active_window_state:42 - exc=TypeError('Cannot pickle Objective-C objects')\r\n2023-07-04 17:15:04.450 | WARNING  | openadapt.window._macos:get_active_window_state:42 - exc=TypeError('Cannot pickle Objective-C objects')\r\n2023-07-04 17:15:04.452 | INFO     | __main__:read_window_events:451 - _window_data={'title': 'Google Chrome Minneapolis to Salt Lake City | Google Flights', 'left': 937, 'top': 194, 'width': 1351, 'height': 794, 'window_id': 65998}\r\n2023-07-04 17:15:06.666 | WARNING  | openadapt.window._macos:get_active_window_state:42 - exc=TypeError('Cannot pickle Objective-C objects')\r\n2023-07-04 17:15:06.667 | INFO     | __main__:read_window_events:451 - _window_data={'title': 'Google Chrome Round trip to Minneapolis | Google Flights', 'left': 937, 'top': 194, 'width': 1351, 'height': 794, 'window_id': 65998}\r\n^C2023-07-04 17:15:07.533 | INFO     | __mp_main__:write_events:286 - event_type='action' done\r\n2023-07-04 17:15:07.534 | INFO     | __mp_main__:wrapper_logging:95 -  <- Leave: write_events(None)\r\n2023-07-04 17:15:07.533 | INFO     | __mp_main__:write_events:286 - event_type='window' done\r\n2023-07-04 17:15:07.534 | INFO     | __mp_main__:wrapper_logging:95 -  <- Leave: write_events(None)\r\n2023-07-04 17:15:07.734 | INFO     | __main__:process_events:190 - done\r\n2023-07-04 17:15:07.734 | INFO     | __main__:wrapper_logging:95 -  <- Leave: process_events(None)\r\n2023-07-04 17:15:07.735 | INFO     | __main__:read_screen_events:412 - done\r\n2023-07-04 17:15:08.147 | INFO     | __main__:log_memory_usage:65 - source='File \"/Users/taylorhorsager/Library/Caches/pypoetry/virtualenvs/openadapt-IciE2gK5-py3.10/lib/python3.10/site-packages/mss/darwin.py\", line 226'\r\n2023-07-04 17:15:08.148 | INFO     | __main__:log_memory_usage:66 - \tnew_KiB=11289610.91015625 total_KiB=11289610.91015625 new_blocks=392 total_blocks=392\r\n2023-07-04 17:15:08.149 | INFO     | __main__:log_memory_usage:65 - source='File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/reduction.py\", line 51'\r\n2023-07-04 17:15:08.149 | INFO     | __main__:log_memory_usage:66 - \tnew_KiB=64802.060546875 total_KiB=64802.6240234375 new_blocks=5 total_blocks=16\r\n2023-07-04 17:15:08.150 | INFO     | __main__:log_memory_usage:65 - source='File \"/Users/taylorhorsager/Library/Caches/pypoetry/virtualenvs/openadapt-IciE2gK5-py3.10/lib/python3.10/site-packages/atomacos/_converter.py\", line 32'\r\n2023-07-04 17:15:08.151 | INFO     | __main__:log_memory_usage:66 - \tnew_KiB=5833.7001953125 total_KiB=5833.7001953125 new_blocks=21307 total_blocks=21307\r\n2023-07-04 17:15:17.168 | INFO     | __main__:log_memory_usage:69 - trace_str=\r\n                                      types |   # objects |   total size\r\n=========================================== | =========== | ============\r\n                                  bytearray |         197 |     10.82 GB\r\n                                _io.BytesIO |           3 |     63.28 MB\r\n                                      tuple |      314180 |     21.51 MB\r\n                                        str |       34321 |      8.94 MB\r\n                                       list |       21078 |      4.45 MB\r\n                        objc.pyobjc_unicode |       43558 |      3.84 MB\r\n                                       dict |       10617 |      3.23 MB\r\n  <objective-c class NSTaggedPointerString> |       19695 |      1.05 MB\r\n           <objective-c class __NSCFString> |       19266 |      1.03 MB\r\n                                      float |       41849 |    980.84 KB\r\n   <objective-c class __NSCFConstantString> |        8287 |    453.20 KB\r\n                 atomacos._converter.CGRect |        5718 |    402.05 KB\r\n                atomacos._converter.CGPoint |        5156 |    281.97 KB\r\n                                        int |        8838 |    242.36 KB\r\n                 atomacos._converter.CGSize |        4227 |    231.16 KB\r\n2023-07-04 17:15:17.169 | INFO     | __main__:record:782 - joining...\r\n2023-07-04 17:15:17.627 | WARNING  | openadapt.window._macos:get_active_window_state:42 - exc=TypeError('Cannot pickle Objective-C objects')\r\n2023-07-04 17:15:17.628 | INFO     | __main__:wrapper_logging:95 -  <- Leave: read_window_events(None)\r\n2023-07-04 17:17:52.388 | INFO     | __mp_main__:write_events:286 - event_type='screen' done\r\n2023-07-04 17:17:52.390 | INFO     | __mp_main__:wrapper_logging:95 -  <- Leave: write_events(None)\r\n2023-07-04 17:17:52.502 | INFO     | __mp_main__:performance_stats_writer:496 - performance stats writer done\r\n2023-07-04 17:17:52.503 | INFO     | __mp_main__:wrapper_logging:95 -  <- Leave: performance_stats_writer(None)\r\n2023-07-04 17:17:52.506 | INFO     | __mp_main__:memory_writer:531 - Memory writer done\r\nDeallocating objective-C class __NSCFConstantString2023-07-04 17:17:53.861 | INFO     | openadapt.utils:plot_performance:494 - fpath='performance/performance-1688512445.664324.png'\r\n2023-07-04 17:17:54.381 | INFO     | __main__:record:798 - saved recording_timestamp=1688512445.664324\r\n2023-07-04 17:17:54.383 | INFO     | __main__:wrapper_logging:95 -  <- Leave: record(None)\r\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/resource_tracker.py:224: UserWarning: resource_tracker: There appear to be 40 leaked semaphore objects to clean up at shutdown\r\n  warnings.warn('resource_tracker: There appear to be %d '\r\n```\r\n\r\n### To Reproduce\r\n\r\nI use macOS Ventura 13.1, Apple M1, 8 GB memory. The recording was created in a new/empty shell. Steps to reproduce: \r\n\r\n1. Open Terminal and input 'cd OpenAdapt' followed by 'poetry shell' followed by 'python -m openadapt.record \"testing out openadapt\"'\r\n2. Click on the search bar in Google Chrome (which should already be open on the desktop) and type 'flights.google.com' followed by 'Enter'\r\n3. Click on the destination for the flight and type 'MSP'\r\n4. Click the 'Search' button\r\n5. Click on the 'Airlines' dropdown\r\n6. Scroll down with the mouse wheel until you can see 'Delta' and select the 'Only' button (note that this button appears when the cursor is hovering over the right side of the row)\r\n7. Click the 'X' to close the dropdown\r\n8. Select the first departure flight that is displayed\r\n9. Select the first return flight that is displayed\r\n10. Select the Terminal and input 'CTRL+C' to stop the recording\r\n11. After the recording has finished processing, input 'python -m openadapt.replay NaiveReplayStrategy'\r\n12. **BUG** - the replay only displays part of the recording and the Terminal displays 'TypeError' codes",
      "state": "open",
      "author": "flyguy712",
      "author_type": "User",
      "created_at": "2023-07-04T23:45:56Z",
      "updated_at": "2023-07-05T21:16:10Z",
      "closed_at": null,
      "labels": [
        "bug",
        "macOS"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/352/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 1,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "0dm"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/352",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/352",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:25.820443",
      "comments": [
        {
          "author": "0dm",
          "body": "Thanks for the detailed report, I think it should be fixed in #323 - `__NSCFData` was not supported ",
          "created_at": "2023-07-05T21:16:10Z"
        }
      ]
    },
    {
      "issue_number": 351,
      "title": "Test longer recordings",
      "body": "### Feature request\n\nThe README currently states:\r\n\r\n```\r\nrecording should be short (i.e. under a minute), as they are somewhat memory intensive, and there is currently an https://github.com/MLDSAI/OpenAdapt/issues/5 describing a possible memory leak\r\n```\r\n\r\nLet's test this to see if it's still the case, and if not let's remove this from the README.\n\n### Motivation\n\nSince https://github.com/OpenAdaptAI/OpenAdapt/pull/270 was merged this may no longer be the case.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-04T18:25:49Z",
      "updated_at": "2023-07-05T19:30:10Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/351/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/351",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/351",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:26.051693",
      "comments": [
        {
          "author": "0dm",
          "body": "tested 3 minutes - Apple M1 16GB - Ventura 13.3\r\n\r\n<img width=\"1316\" alt=\"image\" src=\"https://github.com/OpenAdaptAI/OpenAdapt/assets/57018940/ce7158db-2e15-4616-bdf2-30ac2d850789\">\r\n\r\nresult (visualize):\r\n```sh\r\n--- Logging error in Loguru Handler #1 ---\r\nRecord was: {'elapsed': datetime.timedelta(",
          "created_at": "2023-07-04T20:46:37Z"
        }
      ]
    },
    {
      "issue_number": 350,
      "title": "[Bug]: pyinstaller broken after scrubbing",
      "body": "### Describe the bug\n\n@0dm says pyinstaller is broken since scrubbing has been merged.\n\n### To Reproduce\n\n```\r\npython -m openadapt.app.build\r\n# then run by double-clicking\r\n```",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-04T17:44:18Z",
      "updated_at": "2023-07-05T08:18:51Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/350/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/350",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/350",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:26.218955",
      "comments": []
    },
    {
      "issue_number": 150,
      "title": "Add listener to stop recording",
      "body": "We should add a listener for a key combination that stops recordings (default to ctrl+c, but preferably configurable) so that users don’t have to send SIGINT by interacting with the terminal. This would remove an unnecessary last-step of recordings.\r\n\r\nI recommend we use pynput for this, since we already use it for other purposes - rough idea:\r\n```py\r\n# On Key Pressed Event                      \r\ndef on_press(key):\r\n   ...\r\n\r\nwith kb.Listener(\r\n        on_press=on_press) as listener:\r\n    listener.join()\r\n    ```\r\n",
      "state": "closed",
      "author": "0dm",
      "author_type": "User",
      "created_at": "2023-05-15T16:14:22Z",
      "updated_at": "2023-07-04T17:59:25Z",
      "closed_at": "2023-07-04T17:59:25Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/150/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "angelala3252"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/150",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/150",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:26.218981",
      "comments": [
        {
          "author": "0dm",
          "body": "It'd be best to run a check during recordings, while ActionEvents are being created.",
          "created_at": "2023-05-15T16:17:48Z"
        },
        {
          "author": "abrichr",
          "body": "Related: https://github.com/MLDSAI/OpenAdapt/pull/139",
          "created_at": "2023-05-29T17:16:55Z"
        }
      ]
    },
    {
      "issue_number": 249,
      "title": "Printer Integration",
      "body": "### Feature request\n\nWe want to support printing out of the box.\n\n### Motivation\n\nEnables https://github.com/MLDSAI/OpenAdapt/issues/202\n\n### Other\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-14T00:03:12Z",
      "updated_at": "2023-07-04T17:54:02Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "help wanted"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/249/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "jesicasusanto"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/249",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/249",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:26.397604",
      "comments": []
    },
    {
      "issue_number": 287,
      "title": "Explore Autoformer",
      "body": "### Feature request\n\nHow can we take advantage of https://huggingface.co/blog/autoformer ?\n\n### Motivation\n\nhttps://github.com/MLDSAI/OpenAdapt/pull/234",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-18T16:07:43Z",
      "updated_at": "2023-07-04T17:53:40Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/287/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "angelala3252"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/287",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/287",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:26.397632",
      "comments": []
    },
    {
      "issue_number": 281,
      "title": "Define minimum system requirements",
      "body": "### Feature request\n\nWith tiers\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-16T19:12:48Z",
      "updated_at": "2023-07-04T17:46:26Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/281/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/281",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/281",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:26.397639",
      "comments": [
        {
          "author": "0dm",
          "body": "we should keep in mind that our target users (doctors, accountants, etc.) are _likely_ using old / outdated technology. \r\nmaybe define a bare-minimum along with a recommended system requirements. Here's a rough outline:\r\n```\r\nMinimum:\r\nCPU: Intel Pentium G4400 (2015 processor)\r\nRam: 4GB\r\nGPU: None\r\n",
          "created_at": "2023-06-16T20:39:05Z"
        },
        {
          "author": "dianzrong",
          "body": "Since we use [Python 3.10](https://www.python.org/downloads/windows/), OpenAdapt can't be used on Windows 7 or earlier",
          "created_at": "2023-06-20T01:25:46Z"
        },
        {
          "author": "abrichr",
          "body": "TODO: consider downgrading to Python 3.9?",
          "created_at": "2023-07-04T17:46:26Z"
        }
      ]
    },
    {
      "issue_number": 348,
      "title": "Store screenshot diffs in database",
      "body": "### Feature request\n\nWe would like to store screenshot diffs in order to improve performance\n\n### Motivation\n\nhttps://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/crud.py#L232",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-04T13:21:07Z",
      "updated_at": "2023-07-04T17:36:37Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/348/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/348",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/348",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:26.647419",
      "comments": []
    },
    {
      "issue_number": 345,
      "title": "[Bug]: pympler and psutil not in pyproject.toml",
      "body": "### Describe the bug\n\nRunning `/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/dianzrong/OpenAdapt/mac-install/install/install_openadapt.sh)\"` in order to work around https://github.com/OpenAdaptAI/OpenAdapt/issues/342 results in missing packages, since they were added to `requirements.txt` but not `pyproject.toml`.\n\n### To Reproduce\n\n```\r\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/dianzrong/OpenAdapt/mac-install/install/install_openadapt.sh)\"\r\npython -m openadapt.record foo\r\n```",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-03T18:45:18Z",
      "updated_at": "2023-07-04T01:01:26Z",
      "closed_at": "2023-07-04T01:01:26Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/345/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/345",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/345",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:26.647502",
      "comments": []
    },
    {
      "issue_number": 316,
      "title": "Progress bar for recording and visualization",
      "body": "### Feature request\n\na progress bar after stopping a recording\r\n\r\nresources:\r\nhttps://github.com/tqdm/tqdm (used in scrub already)\r\nor\r\nhttps://github.com/rsalmei/alive-progress (could be better?)\r\n\n\n### Motivation\n\nAfter recording, I'd like to know when it'll be done writing to the db. I usually just find myself tabbing out and watching the file size grow to gain some sense of progress 😅",
      "state": "closed",
      "author": "0dm",
      "author_type": "User",
      "created_at": "2023-06-26T05:47:27Z",
      "updated_at": "2023-07-03T22:49:19Z",
      "closed_at": "2023-07-03T22:49:19Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 12,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/316/reactions",
        "total_count": 2,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 2,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KrishPatel13"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/316",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/316",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:26.647512",
      "comments": [
        {
          "author": "abrichr",
          "body": "Thanks @0dm 🙏  `alive-progress` looks sweet!",
          "created_at": "2023-06-26T13:59:25Z"
        },
        {
          "author": "KrishPatel13",
          "body": "@0dm Have you started to work on this ? Or should I take it over ? :)",
          "created_at": "2023-06-26T15:21:11Z"
        },
        {
          "author": "0dm",
          "body": "> @0dm Have you started to work on this ? Or should I take it over ? :)\n\nhaven't started, feel free to work on it!",
          "created_at": "2023-06-26T15:35:00Z"
        },
        {
          "author": "KrishPatel13",
          "body": "No worries, I will put a PR for it today! @abrichr ",
          "created_at": "2023-06-26T15:35:53Z"
        },
        {
          "author": "KrishPatel13",
          "body": "@abrichr /@0dm Should I also include the progress bar for Visualization ?",
          "created_at": "2023-06-26T15:41:10Z"
        }
      ]
    },
    {
      "issue_number": 57,
      "title": "Implement Loom.com integration",
      "body": "How can we make it extremely simple for people to create and share use cases?\r\n\r\n- Loom: https://support.loom.com/hc/en-us/articles/360002228458-Does-Loom-have-an-open-API-\r\n- others?\r\n\r\nCapture user narration via speech to text e.g. https://github.com/openai/whisper",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-01T16:24:31Z",
      "updated_at": "2023-07-03T21:07:17Z",
      "closed_at": "2023-07-03T21:07:17Z",
      "labels": [
        "help wanted"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 8,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/57/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "dianzrong"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/57",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/57",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:26.905192",
      "comments": [
        {
          "author": "abrichr",
          "body": "@micol-altomare you might enjoy this one 😄 ",
          "created_at": "2023-05-09T00:54:07Z"
        },
        {
          "author": "dianzrong",
          "body": "**Solution 1: Record videos with Loom**\r\n\r\nBenefits:\r\n- users don't need to create an account or download anything else to create recordings\r\n- recordings can be easily shared using a url\r\n\r\nImplementation:\r\n- starter code is given on [Loom](https://dev.loom.com/docs/record-sdk/getting-started?_gl=1",
          "created_at": "2023-05-10T22:34:48Z"
        },
        {
          "author": "dianzrong",
          "body": "**Solution 2: using a Python library**\r\n\r\nBenefits:\r\n- doesn't require another language\r\n\r\nImplementation:\r\n- most commonly, PyAutoGUI is used to take screenshots of the user's screen and OpenCV is used to take video from the user's camera\r\n\r\n\r\nLimitations:\r\n- needs the user to run the program in th",
          "created_at": "2023-05-10T23:07:43Z"
        },
        {
          "author": "dianzrong",
          "body": "**Solution 3: using [Ziggeo](https://ziggeo.com/docs/how-tos/general/webrtc-live-streaming-flash-native/) API**\r\n\r\nBenefits:\r\n\r\n- has a Python SDK\r\n- has built-in audio transcription capabilities\r\n- can easily upload to youtube\r\n- can put our own branding on it\r\n\r\nImplementation:\r\n\r\n- use their Pyth",
          "created_at": "2023-05-11T00:23:15Z"
        },
        {
          "author": "dianzrong",
          "body": "Can also use whisper in combination with the above solutions to communicate use-cases without having to demonstrate it\r\n\r\nBenefit: \r\n\r\n- more accessible (for those who can't or find typing/clicking painful)\r\n- also more human-friendly\r\n\r\nLimitation:\r\n\r\n- can be hard to line up audio and actions",
          "created_at": "2023-05-11T00:27:51Z"
        }
      ]
    },
    {
      "issue_number": 75,
      "title": "Add `WindowEvent.xml/json`",
      "body": "This task involves adding an `xml` and/or `json` attribute to `WindowEvent`, and storing a text representation of the user's current active window.\r\n\r\nThis is to intended to augment `ScreenShot`s where `xml`/`json` representations are available, e.g. for non-virtualized desktop applications, and web applications (see https://github.com/MLDSAI/PuterBot/issues/51)\r\n\r\nFor implementing on Windows, start here: \r\n\r\nhttps://github.com/pywinauto/pywinauto/blob/bf7f789d01b7c66ccd0c213db0a029da7e588c9e/pywinauto/base_application.py#L661\r\n\r\nhttps://github.com/pywinauto/pywinauto/blob/bf7f789d01b7c66ccd0c213db0a029da7e588c9e/pywinauto/base_application.py#L264\r\n\r\nFrom ChatGPT:\r\n\r\n> _What Python libraries and/or Windows/MacOS system APIs can I use to get the full UI state (e.g. as XML or json) of a third party desktop application while it is running?_\r\n> \r\n> To get the UI state of a third-party desktop application, you can use various libraries and system APIs depending on the platform. Here's a list of options for both Windows and macOS:\r\n> \r\n> Windows: \r\n> 1. UI Automation API: Windows provides a native API called UI Automation, which allows you to access and manipulate the UI elements of third-party applications. You can use it with Python by leveraging the `pywinauto` library. Documentation for UI Automation API can be found here: [https://docs.microsoft.com/en-us/windows/win32/winauto/entry-uiauto-win32](https://docs.microsoft.com/en-us/windows/win32/winauto/entry-uiauto-win32) \r\n> 2. Pywinauto: A popular Python library that enables you to automate GUI tasks on Windows. It provides an easy-to-use interface to access UI elements and supports both Win32 and UIA API. You can find more information and documentation on GitHub: [https://github.com/pywinauto/pywinauto](https://github.com/pywinauto/pywinauto)\r\n> \r\n> macOS: \r\n> 1. AppleScript: AppleScript is a scripting language provided by Apple, which allows you to control applications and their UI elements. You can execute AppleScript scripts from Python using the `osascript` command or the `appscript` library. For more information, check out the official AppleScript documentation: [https://developer.apple.com/library/archive/documentation/AppleScript/Conceptual/AppleScriptLangGuide/introduction/ASLR_intro.html](https://developer.apple.com/library/archive/documentation/AppleScript/Conceptual/AppleScriptLangGuide/introduction/ASLR_intro.html) \r\n> 2. PyObjC: PyObjC is a Python-to-Objective-C bridge that enables you to use macOS frameworks like Cocoa and Quartz in Python. You can use it to access and manipulate UI elements of third-party applications. Documentation and examples can be found here: [https://pythonhosted.org/pyobjc/](https://pythonhosted.org/pyobjc/) \r\n> 3. AXUIElement: macOS has a native Accessibility API called AXUIElement, which provides access to UI elements and their properties. You can use this API with Python by using the `pyobjc` library. Here's a helpful blog post on how to get started with AXUIElement: [https://www.raywenderlich.com/54876/accessibility-os-x-tutorial](https://www.raywenderlich.com/54876/accessibility-os-x-tutorial)\r\n\r\n\r\nFrom phind.com:\r\n\r\n> _How can I programatically get the state of a running desktop application?_\r\n>\r\n> Getting the state of a running desktop application programmatically can be approached in different ways depending on the operating system and the programming language being used. In this answer, we will explore some of the options available for Java developers on Windows and Linux.\r\n>\r\n> Starting with Windows, one way to get the state of a running desktop application is by using the tasklist command. This command provides a list of all running processes on the system, including the name and the process ID (PID) of each process. To run this command from Java, we can use the Runtime.exec method and pass the command as a string. Here is an example:\r\n>\r\n```\r\nProcess p = Runtime.getRuntime().exec(\"tasklist.exe /fo csv /nh\");\r\nBufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\r\nString line;\r\nwhile ((line = input.readLine()) != null) {\r\n    // Parse data here.\r\n}\r\ninput.close();\r\n```\r\n> This code runs the tasklist command with the /fo csv /nh options, which produce a CSV format output without the column headers. The output can be parsed to extract the information about the running processes. Note that the Runtime.exec method throws an IOException if the command fails to execute, so it's important to handle this exception.\r\n>\r\n>Another approach to getting the state of a running desktop application on Windows is by using the ProcessHandle class, which was introduced in Java 9. This class provides a way to access information about the processes currently running on the system, including their PIDs, parent processes, user, start time, and command line. Here is an example:\r\n>\r\n```\r\nProcessHandle.allProcesses()\r\n        .forEach(process -> System.out.println(processDetails(process)));\r\n\r\nprivate static String processDetails(ProcessHandle process) {\r\n    return String.format(\"%8d %8s %10s %26s %-40s\",\r\n            process.pid(),\r\n            text(process.parent().map(ProcessHandle::pid)),\r\n            text(process.info().user()),\r\n            text(process.info().startInstant()),\r\n            text(process.info().commandLine()));\r\n}\r\n\r\nprivate static String text(Optional<?> optional) {\r\n    return optional.map(Object::toString).orElse(\"-\");\r\n}\r\n```\r\n>This code uses the ProcessHandle.allProcesses() method to get a stream of all the processes currently running on the system. The forEach method is then used to process each process in the stream and print its details. The processDetails method formats the details of each process into a string that can be printed. Note that the text method is used to convert optional values to strings, and to handle null values.\r\n>\r\n>Moving on to Linux, one way to get the state of a running desktop application is by using the wmctrl command, which provides a list of all the windows currently open on the desktop, including their names and IDs. To run this command from Java, we can use the Runtime.exec method and pass the command as a string. Here is an example:\r\n>\r\n```\r\nProcess p = Runtime.getRuntime().exec(\"wmctrl -l\");\r\nBufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\r\nString line;\r\nwhile ((line = input.readLine()) != null) {\r\n    // Parse data here.\r\n}\r\ninput.close();\r\n```\r\n> This code runs the wmctrl command with the -l option, which lists all the windows currently open on the desktop. The output can be parsed to extract the information about the running applications. Note that the Runtime.exec method throws an IOException if the command fails to execute, so it's important to handle this exception.\r\n> \r\n> Another approach to getting the state of a running desktop application on Linux is by using the xprop command, which provides information about the properties of a window, including its class and title. To use this command, we need to first get the ID of the window we are interested in, and then pass this ID to the xprop command. Here is an example:\r\n> \r\n```\r\nProcess p = Runtime.getRuntime().exec(\"wmctrl -l\");\r\nBufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\r\nString line;\r\nwhile ((line = input.readLine()) != null) {\r\n    String[] parts = line.split(\"\\\\s+\", 4);\r\n    String winId = parts[0];\r\n    Process p2 = Runtime.getRuntime().exec(\"xprop -id \" + winId + \" WM_CLASS\");\r\n    BufferedReader input2 = new BufferedReader(new InputStreamReader(p2.getInputStream()));\r\n    String line2 = input2.readLine();\r\n    // Parse data here.\r\n    input2.close();\r\n}\r\ninput.close();\r\n```\r\n> This code first runs the wmctrl command to get a list of all the windows currently open on the desktop. It then loops through the output of this command, extracts the ID of each window, and passes this ID to the xprop command. The output of the xprop command can be parsed to extract the information about the running applications. Note that we need to handle the case where a window has no class information.",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-03T16:18:42Z",
      "updated_at": "2023-07-03T21:06:22Z",
      "closed_at": "2023-07-03T21:06:22Z",
      "labels": [
        "help wanted"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/75/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "abrichr",
        "jesicasusanto"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/75",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/75",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:28.899880",
      "comments": [
        {
          "author": "abrichr",
          "body": "1. Look at pywinauto and figure out what data is available, and when/how:\r\n\r\n\r\ndump_tree: https://github.com/pywinauto/pywinauto/blob/bf7f789d01b7c66ccd0c213db0a029da7e588c9e/pywinauto/base_application.py#L661\r\n\r\nhttps://github.com/pywinauto/pywinauto/blob/bf7f789d01b7c66ccd0c213db0a029da7e588c9e/py",
          "created_at": "2023-05-05T20:46:38Z"
        },
        {
          "author": "abrichr",
          "body": "Addressed in https://github.com/MLDSAI/OpenAdapt/pull/151",
          "created_at": "2023-05-23T15:47:04Z"
        }
      ]
    },
    {
      "issue_number": 149,
      "title": "Update install script for MacOS",
      "body": "The Windows install script currently automates the installation of Git and Python3.10 We would like to support the same functionality in MacOS.",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-15T16:09:05Z",
      "updated_at": "2023-07-03T19:55:08Z",
      "closed_at": "2023-07-03T19:55:08Z",
      "labels": [
        "help wanted"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/149/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "dianzrong"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/149",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/149",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:29.099417",
      "comments": [
        {
          "author": "abrichr",
          "body": "We also need to add pypotrace to support bitmap to SVG in https://github.com/MLDSAI/OpenAdapt/pull/198/files",
          "created_at": "2023-06-01T16:28:13Z"
        }
      ]
    },
    {
      "issue_number": 304,
      "title": "Design data entry",
      "body": "### Feature request\r\n\r\nIn recordings, actions are scrubbed such that PII is replaced with semantic meanings (e.g. \"Bob Smith\" -> \"Person A\").\r\n\r\nIn signals, we can access data from files and databases in a deterministic way.\r\n\r\nThis task involves designing approach to extracting the correct data from the signal based on the semantic meaning in the scrubbed recording.\r\n\r\n### Motivation\r\n\r\nhttps://github.com/MLDSAI/OpenAdapt/issues/43\r\n\r\nhttps://github.com/MLDSAI/OpenAdapt/pull/128",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-21T16:57:06Z",
      "updated_at": "2023-07-03T19:44:01Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/304/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "AvidEslami"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/304",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/304",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:29.329626",
      "comments": []
    },
    {
      "issue_number": 343,
      "title": "[Bug]: install script fails if setuptools is not installed ",
      "body": "### Describe the bug\r\n\r\nRunning instruction sat `openadapt.ai` fails if setuptools is not installed.\r\n\r\n```\r\nRequirement already satisfied: requests-file>=1.4 in ./.venv/lib/python3.10/site-packages (from tldextract->presidio_analyzer==2.2.32->openadapt==0.3.1) (1.5.1)\r\nBuilding wheels for collected packages: pynput\r\n  Building wheel for pynput (setup.py) ... done\r\n  Created wheel for pynput: filename=pynput-1.7.6-py2.py3-none-any.whl size=90482 sha256=42d6953cca39ec4b7abba35c042be2da3efe6d9c125075a4575244027eb47756\r\n  Stored in directory: /private/var/folders/kx/ldt2q_ks6kn370mkg2fryvvh0000gn/T/pip-ephem-wheel-cache-87kmk4_0/wheels/d2/c4/cf/b892b139e5a1c1990492f015ff22d5dcfaaf8c3a7a521d2541\r\nSuccessfully built pynput\r\nInstalling collected packages: torch, spacy-alignments, spacy-transformers, torchvision, segment-anything, pynput, en-core-web-trf, openadapt\r\n  Attempting uninstall: torch\r\n    Found existing installation: torch 2.0.0\r\n    Uninstalling torch-2.0.0:\r\n      Successfully uninstalled torch-2.0.0\r\n  Attempting uninstall: pynput\r\n    Found existing installation: pynput 1.7.6\r\n    Uninstalling pynput-1.7.6:\r\n      Successfully uninstalled pynput-1.7.6\r\n  Running setup.py develop for openadapt\r\n    ERROR: Command errored out with exit status 1:\r\n     command: /Users/taylorhorsager/OpenAdapt/.venv/bin/python3.10 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/Users/taylorhorsager/OpenAdapt/setup.py'\"'\"'; __file__='\"'\"'/Users/taylorhorsager/OpenAdapt/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' develop --no-deps\r\n         cwd: /Users/taylorhorsager/OpenAdapt/\r\n    Complete output (3 lines):\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n    ModuleNotFoundError: No module named 'setuptools'\r\n    ----------------------------------------\r\nERROR: Command errored out with exit status 1: /Users/taylorhorsager/OpenAdapt/.venv/bin/python3.10 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/Users/taylorhorsager/OpenAdapt/setup.py'\"'\"'; __file__='\"'\"'/Users/taylorhorsager/OpenAdapt/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' develop --no-deps Check the logs for full command output.\r\n```\r\n\r\n### To Reproduce\r\n\r\n```/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/MLDSAI/OpenAdapt/main/install/install_openadapt.sh)\"```\r\n",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-03T18:24:46Z",
      "updated_at": "2023-07-03T18:29:48Z",
      "closed_at": "2023-07-03T18:29:47Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/343/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/343",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/343",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:29.329642",
      "comments": [
        {
          "author": "abrichr",
          "body": "Fixed in https://github.com/OpenAdaptAI/OpenAdapt/pull/244/files",
          "created_at": "2023-07-03T18:29:47Z"
        }
      ]
    },
    {
      "issue_number": 338,
      "title": "[Bug]: mouse_controller.position is set even if mouse_[x|y] are None",
      "body": "### Describe the bug\n\nIn https://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/playback.py#L20 , `mouse_controller.position` is written without first checking whether the contents are valid.\r\n\r\nWe should check to see whether `mouse_x` and `mouse_y` are both not `None` before writing.\n\n### To Reproduce\n\nhttps://github.com/OpenAdaptAI/OpenAdapt/blob/main/openadapt/playback.py#L20",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-07-01T17:42:40Z",
      "updated_at": "2023-07-02T09:13:41Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/338/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/338",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/338",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:29.518086",
      "comments": [
        {
          "author": "FFFiend",
          "body": "are there potentially other failure cases apart from the ```if not(x is None and y is None)```? Is it possible to perhaps have some meaningful ```button_name``` and/or ```pressed``` values even though one of x or y is None?",
          "created_at": "2023-07-02T09:13:41Z"
        }
      ]
    },
    {
      "issue_number": 336,
      "title": "Automatic exception logging",
      "body": "### Feature request\n\nWe would like to automatically log when exceptions occur so that we can prioritize and fix them.\r\n\r\ne.g. https://glitchtip.com/\r\n\r\nHow does this compare to https://sentry.io/ ?\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-30T16:55:11Z",
      "updated_at": "2023-06-30T16:55:22Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/336/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "0dm"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/336",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/336",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:29.732766",
      "comments": []
    },
    {
      "issue_number": 291,
      "title": "Explore OpenLLM",
      "body": "### Feature request\n\nHow can we take advantage of https://github.com/bentoml/OpenLLM ?\n\n### Motivation\n\n_No response_",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-19T12:34:34Z",
      "updated_at": "2023-06-30T15:05:19Z",
      "closed_at": "2023-06-30T15:05:18Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/291/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "FFFiend"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/291",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/291",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:29.732802",
      "comments": [
        {
          "author": "FFFiend",
          "body": "So from what I've seen, OpenLLM is a library that makes it easier for you to host web apps and whatnot with language models, i.e querying and displaying on a web server and deploying apps that boast this and other generative tasks as a feature. I spoke to the author about the whole CPU and GPU loadi",
          "created_at": "2023-06-21T05:29:05Z"
        },
        {
          "author": "FFFiend",
          "body": "UPDATE: So I tested MPT-7B 4-bit quantized (https://huggingface.co/TheBloke/MPT-7B-GGML) on my Mac (M2 chip, 8GB CPU RAM) and it generated perfectly. I just used the ctransformer library, and I think we can generate completions for the MPTReplayStrat class in #226 and close it using something like t",
          "created_at": "2023-06-21T06:43:04Z"
        },
        {
          "author": "abrichr",
          "body": "Conclusion: implement https://github.com/OpenAdaptAI/OpenAdapt/pull/303",
          "created_at": "2023-06-30T15:05:18Z"
        }
      ]
    },
    {
      "issue_number": 83,
      "title": "Implement installation script for complete beginners",
      "body": "In order to support use cases for non-technical audiences, we need some extremely simple \"Getting started with OpenAdapt for Complete Beginners. e.g:\r\n\r\n1. Download and install Git: https://git-scm.com/download/\r\n2. Download and install Python: https://www.python.org/downloads/\r\n\r\nMac:\r\n3. press CMD+Space, type \"terminal\" and press Enter\r\n4. copy and paste the following command into the terminal, then press Enter:\r\n```\r\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/OpenAdaptAI/install/HEAD/install_puterbot.sh)\"\r\n```\r\n\r\nWindows:\r\n3. press WINKEY, type \"powershell\", and press Enter\r\n4. copy and paste the following command into the terminal, then press Enter:\r\n```\r\npowershell -ExecutionPolicy Bypass -Command \"iwr -UseBasicParsing -Uri 'https://raw.githubusercontent.com/OpenAdaptAI/install/HEAD/install_puterbot.ps1' | Invoke-Expression\"\r\n```\r\n\r\n(The contents of these instructions will be placed immediately below the email registration on https://openadapt.ai)\r\n\r\nThis task involves:\r\n- Implementing `install_puterbot.sh` and `install_puterbot.ps1` (see https://github.com/MLDSAI/puterbot#install)\r\n- Optional: modifying the implementation to automatically determine whether Git and Python3.10 are already installed, and download and install them if necessary\r\n\r\n",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-05T13:06:36Z",
      "updated_at": "2023-06-29T15:24:38Z",
      "closed_at": "2023-06-29T15:24:38Z",
      "labels": [
        "help wanted"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/83/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "apgorton"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/83",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/83",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:29.901875",
      "comments": [
        {
          "author": "apgorton",
          "body": "This is being done in https://github.com/OpenAdaptAI/install which will be linked with this later. Sorry for the confusion @KrishPatel13 ",
          "created_at": "2023-05-06T20:09:17Z"
        }
      ]
    },
    {
      "issue_number": 329,
      "title": "[Bug]: Error while parsing completion str in get_next_action_event in  StatefulReplayStrategy",
      "body": "### Describe the bug\n\nWhenever the output from GPT-3.5-Turbo or GPT-4 was being evaluated you would get the following error:\r\n```\r\n2023-06-28 15:43:59.742 | WARNING  | openadapt.strategies.stateful:get_action_dict_from_completion:139 - exc=SyntaxError('invalid syntax', ('<string>', 1, 20, \"active_action_dicts=[{'name': 'click', 'mouse_x': 514.92578125, 'mouse_y': 269.47265625, 'mouse_button_name': 'left', 'mouse_pressed': True, 'element_state': {}}, {'name': 'click', 'mouse_x': 514.92578125, 'mouse_y': 269.47265625, 'mouse_button_name': 'left', 'mouse_pressed': False, 'element_state': {}}]\", 1, 21))\r\n2023-06-28 15:43:59.742 | DEBUG    | openadapt.strategies.stateful:get_next_action_event:129 - =\r\nNone\r\nTraceback (most recent call last):\r\n  File \"/Users/owaiszahid/Desktop/state/OpenAdapt/tests/openadapt/test_stateful.py\", line 47, in <module>\r\n    test_active_window_no_diff()\r\n  File \"/Users/owaiszahid/Desktop/state/OpenAdapt/tests/openadapt/test_stateful.py\", line 38, in test_active_window_no_diff\r\n    test_action_dict = test_obj.get_next_action_event(Screenshot(),test_window_dict)\r\n  File \"/Users/owaiszahid/Desktop/state/OpenAdapt/openadapt/strategies/stateful.py\", line 130, in get_next_action_event\r\n    active_action = models.ActionEvent.from_children(active_action_dicts)\r\n  File \"/Users/owaiszahid/Desktop/state/OpenAdapt/openadapt/models.py\", line 206, in from_children\r\n    children = [\r\nTypeError: 'NoneType' object is not iterable\r\n```\n\n### To Reproduce\n\nStandard set up, simply initialize the StatefulReplayStrategy class in an object with a recording, and call ```get_next_action_event``` on a/multiple WindowEvents.\r\n",
      "state": "open",
      "author": "FFFiend",
      "author_type": "User",
      "created_at": "2023-06-28T19:46:27Z",
      "updated_at": "2023-06-29T15:23:13Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/329/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/329",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/329",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:30.215192",
      "comments": [
        {
          "author": "FFFiend",
          "body": "(addressed in #327) To fix: edit line ```127``` in ```stateful.py``` as follows:\r\n\r\n```\r\n        completion = self.get_completion(prompt, system_message)[21:-1]\r\n```\r\nThis ensures that instead of evaluating the equality within completion, it simply evaluates the raw dict within the string itself. So",
          "created_at": "2023-06-28T19:47:20Z"
        },
        {
          "author": "FFFiend",
          "body": "Actually this is not the right fix, sometimes the model may not adhere to the same format and it ends up slicing the string incorrectly.",
          "created_at": "2023-06-29T15:23:13Z"
        }
      ]
    },
    {
      "issue_number": 321,
      "title": "Implement more rigorous tests for scrubbing",
      "body": "### Feature request\n\nThis involves getting screenshots from Electronic Medical Record software that shows PHI, adding tests, and generating failures.\r\n\r\nOnce we have failing test cases we can investigate how to fix them.\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-26T17:44:44Z",
      "updated_at": "2023-06-29T04:53:06Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/321/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KrishPatel13"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/321",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/321",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:30.439375",
      "comments": [
        {
          "author": "KrishPatel13",
          "body": "Some screenshots for EMR with PII below:\r\n\r\n1.\r\n![image](https://github.com/MLDSAI/OpenAdapt/assets/65433817/8894222d-62fc-42fe-af69-f04ddd204d91)\r\n\r\n2.\r\n![doc3](https://github.com/MLDSAI/OpenAdapt/assets/65433817/8f0be341-bbb8-49c9-9983-7c8e0f7a6eea)\r\n\r\n3.\r\n![doc17](https://github.com/MLDSAI/OpenAd",
          "created_at": "2023-06-27T20:32:42Z"
        },
        {
          "author": "KrishPatel13",
          "body": "Further Discussion continued in: PR: https://github.com/MLDSAI/OpenAdapt/pull/328",
          "created_at": "2023-06-29T04:53:06Z"
        }
      ]
    },
    {
      "issue_number": 235,
      "title": "Usecase: collections automation",
      "body": "We would like to help collections agents automate their workflows.\r\n\r\nThese typically involve two high level tasks:\r\n\r\n1. Messaging with the business whose account is owing in order to determine the appropriate action (e.g. if the business says they don't currently have access to necessary funds, put the account on hold for a month). This typically happens in a combined Voice/SMS platform like [https://voip.ms/](https://www.line2.com/)\r\n\r\n2. Updating a collections tool with the state of the account. This typically happens in a platform like [https://juristech.net/juristech/juris-collect/](https://simplicitycollect.com)\r\n\r\nThis task involves detailing the subtasks required for each of these high level tasks, and creating corresponding recordings.",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-08T18:03:49Z",
      "updated_at": "2023-06-27T13:14:53Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/235/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/235",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/235",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:30.669349",
      "comments": []
    },
    {
      "issue_number": 317,
      "title": "Support other spacy models",
      "body": "### Feature request\n\nSetting `model_name` to `en_core_web_lg` in `config.py` yields the following error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/runpy.py\", line 196, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n  File \"/usr/local/Cellar/python@3.10/3.10.11/Frameworks/Python.framework/Versions/3.10/lib/python3.10/runpy.py\", line 86, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/scripts/scrub.py\", line 33, in <module>\r\n    from openadapt import config, scrub, utils\r\n  File \"/Users/abrichr/oa/OpenAdapt/openadapt/scrub.py\", line 27, in <module>\r\n    NLP_ENGINE_TRF = SCRUB_PROVIDER_TRF.create_engine()\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/presidio_analyzer/nlp_engine/nlp_engine_provider.py\", line 91, in create_engine\r\n    engine = nlp_engine_class(nlp_engine_opts)\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/presidio_analyzer/nlp_engine/spacy_nlp_engine.py\", line 36, in __init__\r\n    self.nlp = {\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/presidio_analyzer/nlp_engine/spacy_nlp_engine.py\", line 37, in <dictcomp>\r\n    lang_code: spacy.load(model_name, disable=[\"parser\"])\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/spacy/__init__.py\", line 54, in load\r\n    return util.load_model(\r\n  File \"/Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/spacy/util.py\", line 449, in load_model\r\n    raise IOError(Errors.E050.format(name=name))\r\nOSError: [E050] Can't find model 'en_core_web_lg'. It doesn't seem to be a Python package or a valid path to a data directory.\r\n```\n\n### Motivation\n\nScrubbing images can yield significant false negatives. As per https://github.com/microsoft/presidio/issues/862#issuecomment-1121135619 , this may be improved using `en_core_web_lg`.",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-26T14:13:55Z",
      "updated_at": "2023-06-26T17:45:12Z",
      "closed_at": "2023-06-26T17:43:42Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 8,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/317/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KrishPatel13"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/317",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/317",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:30.669367",
      "comments": [
        {
          "author": "KrishPatel13",
          "body": "@abrichr This is because it is not downloaded yet.\n\nPlease give me some time, I will respond why we need trf instead of lg model.",
          "created_at": "2023-06-26T14:17:33Z"
        },
        {
          "author": "KrishPatel13",
          "body": "Q: Why are we using `en_core_web_trf `instead of `en_core_web_lg` though we know lg is better performance wise ?\r\n\r\nA: `en_core_web_lg` model was NOT able to catch Address, location and Credit Card numbers properly. \r\nSee Tip box in: https://microsoft.github.io/presidio/analyzer/nlp_engines/spacy_st",
          "created_at": "2023-06-26T14:44:30Z"
        },
        {
          "author": "KrishPatel13",
          "body": "To support other model just by changing the model name, we would need to download all of the models in advance during setup of OpenAdapt. \r\n\r\nFor eg. if we want a system where we want to switch between en_core_web_lg and en_core_web_trf then we would need to download both of them during the poetry i",
          "created_at": "2023-06-26T14:59:36Z"
        },
        {
          "author": "KrishPatel13",
          "body": "@abrichr How do we want to proceed from here ?",
          "created_at": "2023-06-26T15:19:56Z"
        },
        {
          "author": "0dm",
          "body": "maybe we can install the models via subprocess command if the user specifies a different one?",
          "created_at": "2023-06-26T16:44:30Z"
        }
      ]
    },
    {
      "issue_number": 309,
      "title": "do not log OPENAI_API_KEY",
      "body": "### Feature request\n\nI think it’d be beneficial to not log the OPENAI_API_KEY from config.py/.env. Instead, we could just log that there exists a valid API key - or just something other than the default string placeholder. This would prevent accidental leaks of API keys as many users would probably not realize. \n\n### Motivation\n\nIt’s very easy to copy/paste the terminal output without realizing that the openai api key is displayed. Scrapers can pick up these keys quickly, allowing bad actors to rack up charges on miscellaneous tasks. ",
      "state": "closed",
      "author": "0dm",
      "author_type": "User",
      "created_at": "2023-06-22T21:05:47Z",
      "updated_at": "2023-06-25T21:17:46Z",
      "closed_at": "2023-06-25T21:17:46Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/309/reactions",
        "total_count": 3,
        "+1": 3,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/309",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/309",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:30.853075",
      "comments": []
    },
    {
      "issue_number": 308,
      "title": "[Bug]: Tesseract not installed",
      "body": "### Describe the bug\n\nRunning tests fails on a machine that does not already have tesseract installed.\n\n### To Reproduce\n\nhttps://github.com/MLDSAI/OpenAdapt/issues/295#issuecomment-1602616550",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-22T16:09:45Z",
      "updated_at": "2023-06-23T19:12:01Z",
      "closed_at": "2023-06-23T19:12:01Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/308/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KrishPatel13",
        "dianzrong"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/308",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/308",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:30.853113",
      "comments": [
        {
          "author": "KrishPatel13",
          "body": "the blocker for Windows is that there is on 1 line installation for Windows.\r\nWe have to download the binary file and then manual add the dir. to PATH variable.\r\n\r\n",
          "created_at": "2023-06-22T16:11:34Z"
        },
        {
          "author": "KrishPatel13",
          "body": "<img width=\"644\" alt=\"image\" src=\"https://github.com/MLDSAI/OpenAdapt/assets/65433817/7f73459c-394a-4175-9d7a-da13aeda3c3a\">\r\n\r\n\r\nI am encountering this strange error for Windows installation\r\n",
          "created_at": "2023-06-22T20:33:18Z"
        },
        {
          "author": "0dm",
          "body": "For mac, we could install tesseract through homebrew in the install script if there are difficulties installing through other means. This does require homebrew to be installed though. \n\nAlso, is it possible that there is a fork/mirror on pypi for tesseract? I noticed a few but I haven't tested them.",
          "created_at": "2023-06-22T21:13:48Z"
        },
        {
          "author": "dianzrong",
          "body": "@0dm I have currently implemented installing homebrew in the install script and tesseract",
          "created_at": "2023-06-22T21:15:04Z"
        },
        {
          "author": "KrishPatel13",
          "body": "@abrichr The Powershell script is ready to be merged",
          "created_at": "2023-06-22T21:27:38Z"
        }
      ]
    },
    {
      "issue_number": 274,
      "title": "Explore Falcon LLM",
      "body": "### Feature request\n\nhttps://falconllm.tii.ae/\n\n### Motivation\n\nhttps://news.ycombinator.com/item?id=36350137",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-16T03:30:35Z",
      "updated_at": "2023-06-23T15:09:00Z",
      "closed_at": "2023-06-23T15:09:00Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/274/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/274",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/274",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:31.056323",
      "comments": [
        {
          "author": "FFFiend",
          "body": "Since we're focusing on trying to get things to run offline and on the CPU (this is where things like LLAMA.cpp come in) there's a rather concerning point on the model card for the 40B model https://huggingface.co/tiiuae/falcon-40b:\r\n```\r\nYou will need at least 85-100GB of memory to swiftly run infe",
          "created_at": "2023-06-18T04:22:28Z"
        },
        {
          "author": "FFFiend",
          "body": "This is a HuggingFace Space for their 40B model finetuned for Instructions, https://huggingface.co/spaces/HuggingFaceH4/falcon-chat but the response length seems like its capped for the demo.\r\n\r\nEdit: ah yep it's limited to a total of 1000 words per session",
          "created_at": "2023-06-18T04:40:30Z"
        },
        {
          "author": "abrichr",
          "body": "Let's wait until the quantized version is available.",
          "created_at": "2023-06-23T15:09:00Z"
        }
      ]
    },
    {
      "issue_number": 284,
      "title": "Implement Video Scrubbing script",
      "body": "### Feature request\n\nWe would like to be able to scrub video files (e.g. MP4) showing PII/PHI.\r\n\r\nThis task involves creating a script under `/scripts/scrub.py` that takes a path to a media file (e.g. MP4, PNG, PDF), and generates a scrubbed version of that file.\r\n\r\nFor now let's just implement .mp4, and leave other formats as TODOs.\n\n### Motivation\n\nhttps://github.com/OpenAdaptAI/web/issues/22",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-17T16:27:55Z",
      "updated_at": "2023-06-23T14:35:40Z",
      "closed_at": "2023-06-23T14:35:40Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/284/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KrishPatel13"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/284",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/284",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:31.268383",
      "comments": [
        {
          "author": "KrishPatel13",
          "body": "For this should we move the current `openadapt/scrub.py` module to `openadapt/scripts/scrub.py` and then edit to accomplish this task ? \r\n\r\nSo rather we should make a new file ? ",
          "created_at": "2023-06-17T16:32:56Z"
        },
        {
          "author": "abrichr",
          "body": "Thank you @KrishPatel13 ! 🙏  We should not move the existing `scrub.py`. This is a separate file that will import `openadapt.scrub`.",
          "created_at": "2023-06-17T16:37:53Z"
        },
        {
          "author": "KrishPatel13",
          "body": "@abrichr  Noted!",
          "created_at": "2023-06-17T16:38:53Z"
        },
        {
          "author": "KrishPatel13",
          "body": "@abrichr \r\nhttps://dev.to/aws-heroes/blur-personal-identifiable-information-pii-in-text-images-and-videos-12j4\r\n\r\nI found the above article and it uses AWS to detect PII and blur them in video.\r\n\r\nShould I try to use this approach ?",
          "created_at": "2023-06-19T13:22:48Z"
        }
      ]
    },
    {
      "issue_number": 295,
      "title": "[Bug]: pytest fails on new install",
      "body": "### Describe the bug\n\n```\r\n(openadapt-py3.10) abrichr@MacBook-Pro-3 OpenAdapt % pytest\r\n=================================================================== test session starts ====================================================================\r\nplatform darwin -- Python 3.10.11, pytest-7.1.3, pluggy-1.0.0\r\nrootdir: /Users/abrichr/oa/OpenAdapt\r\nplugins: anyio-3.7.0\r\ncollected 23 items / 1 error                                                                                                                               \r\n\r\n========================================================================== ERRORS ==========================================================================\r\n__________________________________________________ ERROR collecting tests/openadapt/test_summary_mixin.py __________________________________________________\r\ntests/openadapt/test_summary_mixin.py:10: in <module>\r\n    REPLAY = DemoReplayStrategy(RECORDING)\r\nopenadapt/strategies/demo.py:39: in __init__\r\n    super().__init__(recording)\r\nopenadapt/strategies/mixins/huggingface.py:30: in __init__\r\n    super().__init__(recording)\r\nopenadapt/strategies/mixins/ocr.py:35: in __init__\r\n    super().__init__(recording)\r\nopenadapt/strategies/mixins/ascii.py:28: in __init__\r\n    super().__init__(recording)\r\nopenadapt/strategies/mixins/sam.py:48: in __init__\r\n    self.sam_model = self._initialize_model(model_name, checkpoint_dir_path)\r\nopenadapt/strategies/mixins/sam.py:60: in _initialize_model\r\n    return sam_model_registry[model_name](checkpoint=checkpoint_file_path)\r\n../../Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/segment_anything/build_sam.py:15: in build_sam_vit_h\r\n    return _build_sam(\r\n../../Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/segment_anything/build_sam.py:105: in _build_sam\r\n    state_dict = torch.load(f)\r\n../../Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/torch/serialization.py:797: in load\r\n    with _open_zipfile_reader(opened_file) as opened_zipfile:\r\n../../Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/torch/serialization.py:283: in __init__\r\n    super().__init__(torch._C.PyTorchFileReader(name_or_buffer))\r\nE   RuntimeError: PytorchStreamReader failed reading zip archive: failed finding central directory\r\n===================================================================== warnings summary =====================================================================\r\n../../Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/fuzzywuzzy/fuzz.py:11\r\n  /Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/fuzzywuzzy/fuzz.py:11: UserWarning: Using slow pure-python SequenceMatcher. Install python-Levenshtein to remove this warning\r\n    warnings.warn('Using slow pure-python SequenceMatcher. Install python-Levenshtein to remove this warning')\r\n\r\n../../Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/onnxruntime/capi/_pybind_state.py:28\r\n  /Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/onnxruntime/capi/_pybind_state.py:28: DeprecationWarning: invalid escape sequence '\\S'\r\n    \"(other than %SystemRoot%\\System32), \"\r\n\r\n../../Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/pkg_resources/__init__.py:121\r\n  /Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/pkg_resources/__init__.py:121: DeprecationWarning: pkg_resources is deprecated as an API\r\n    warnings.warn(\"pkg_resources is deprecated as an API\", DeprecationWarning)\r\n\r\n../../Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/pkg_resources/__init__.py:2870\r\n  /Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/pkg_resources/__init__.py:2870: DeprecationWarning: Deprecated call to `pkg_resources.declare_namespace('mpl_toolkits')`.\r\n  Implementing implicit namespace packages (as specified in PEP 420) is preferred to `pkg_resources.declare_namespace`. See https://setuptools.pypa.io/en/latest/references/keywords.html#keyword-namespace-packages\r\n    declare_namespace(pkg)\r\n\r\n../../Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/pkg_resources/__init__.py:2870\r\n../../Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/pkg_resources/__init__.py:2870\r\n../../Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/pkg_resources/__init__.py:2870\r\n../../Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/pkg_resources/__init__.py:2870\r\n  /Users/abrichr/Library/Caches/pypoetry/virtualenvs/openadapt-VBXg4jpm-py3.10/lib/python3.10/site-packages/pkg_resources/__init__.py:2870: DeprecationWarning: Deprecated call to `pkg_resources.declare_namespace('sphinxcontrib')`.\r\n  Implementing implicit namespace packages (as specified in PEP 420) is preferred to `pkg_resources.declare_namespace`. See https://setuptools.pypa.io/en/latest/references/keywords.html#keyword-namespace-packages\r\n    declare_namespace(pkg)\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\r\n================================================================= short test summary info ==================================================================\r\nERROR tests/openadapt/test_summary_mixin.py - RuntimeError: PytorchStreamReader failed reading zip archive: failed finding central directory\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n========================================================= 8 warnings, 1 error in 64.82s (0:01:04) ==========================================================\r\n```\n\n### To Reproduce\n\nFollow recommended installation instructions in README:\r\n```\r\ngit clone https://github.com/MLDSAI/OpenAdapt.git\r\ncd OpenAdapt\r\npip install poetry\r\npoetry install\r\npoetry shell\r\nalembic upgrade head\r\npytest\r\n```",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-20T15:14:02Z",
      "updated_at": "2023-06-22T13:39:45Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/295/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "jesicasusanto",
        "dianzrong"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/295",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/295",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:31.465484",
      "comments": [
        {
          "author": "abrichr",
          "body": "Two issues:\r\n\r\n1. In https://github.com/MLDSAI/OpenAdapt/blob/main/tests/openadapt/test_summary_mixin.py#LL10C10-L10C28:\r\n\r\n```\r\nREPLAY = DemoReplayStrategy(RECORDING)\r\n```\r\n\r\n@dianzrong can you please modify this to test only the summary mixin and not other functionality?\r\n\r\n2. In https://github.co",
          "created_at": "2023-06-20T15:17:18Z"
        },
        {
          "author": "KrishPatel13",
          "body": "@abrichr Even I got something similar on Windows: See below,\r\n```\r\n(openadapt-py3.10) PS P:\\OpenAdapt AI - MLDS AI\\cloned_repo\\OpenAdapt> pytest\r\n================================ test session starts =================================\r\nplatform win32 -- Python 3.10.11, pytest-7.1.3, pluggy-1.0.0\r\nroot",
          "created_at": "2023-06-20T17:59:22Z"
        },
        {
          "author": "KrishPatel13",
          "body": "This is what I get on running pytest on my newly cloned repo:\r\n\r\n\r\nAny thoughts why 2 tests are failing ? Note: I have not ran `record` yet.\r\n```\r\n(openadapt-py3.10) PS P:\\OpenAdapt AI - MLDS AI\\cloned_repo\\OpenAdapt> pytest\r\n==========================================================================",
          "created_at": "2023-06-21T16:06:45Z"
        },
        {
          "author": "jesicasusanto",
          "body": "When running pytest, I got this error :\r\n```\r\n`(.venv) C:\\Users\\jesic\\PycharmProjects\\PAT>pytest\r\n=========================================== test session starts ===========================================\r\nplatform win32 -- Python 3.10.10, pytest-7.1.3, pluggy-1.0.0\r\nrootdir: C:\\Users\\jesic\\Pycharm",
          "created_at": "2023-06-22T13:09:31Z"
        },
        {
          "author": "KrishPatel13",
          "body": "@jesicasusanto \r\n\r\nI think you do not have TesseractOCR installed. So that is why the first test fails in test_scrub.\r\n\r\n### For Windows: \r\n\r\n1. Downlaod  https://digi.bib.uni-mannheim.de/tesseract/tesseract-ocr-w64-setup-5.3.1.20230401.exe and then follow the steps below:\r\n2. Add TesseractOCR to PA",
          "created_at": "2023-06-22T13:12:22Z"
        }
      ]
    },
    {
      "issue_number": 288,
      "title": "Explore Grounding Dino",
      "body": "### Feature request\r\n\r\nHow can we take advantage of https://github.com/IDEA-Research/GroundingDINO ? How does it compare with SegmentAnything (https://github.com/MLDSAI/OpenAdapt/issues/15 / https://github.com/MLDSAI/OpenAdapt/blob/main/openadapt/strategies/mixins/sam.py ) ?\r\n\r\nhttps://arxiv.org/abs/2303.05499\r\n\r\nhttps://huggingface.co/spaces/ShilongLiu/Grounding_DINO_demo\r\n\r\n### Motivation\r\n\r\nhttps://github.com/MLDSAI/OpenAdapt/pull/174#issuecomment-1595852156",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-18T16:18:08Z",
      "updated_at": "2023-06-21T17:29:37Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 6,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/288/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/288",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/288",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:31.713547",
      "comments": [
        {
          "author": "FFFiend",
          "body": "Grounding DINO is trained on the [COCO](https://huggingface.co/datasets/detection-datasets/coco) dataset which comprises largely of open-world-centric images. From what I tried out when I used the space, object classification for GUI screenshots was poor.",
          "created_at": "2023-06-19T03:56:49Z"
        },
        {
          "author": "FFFiend",
          "body": "Grounding Dino on GUI data \r\n\r\n<img width=\"808\" alt=\"Screen Shot 2023-06-19 at 12 11 15 AM\" src=\"https://github.com/MLDSAI/OpenAdapt/assets/96851409/2e3e6fbe-1536-4b3b-b10d-f04a00c301d6\">\r\n\r\nResult:\r\n<img width=\"808\" alt=\"Screen Shot 2023-06-19 at 12 13 00 AM\" src=\"https://github.com/MLDSAI/OpenAdap",
          "created_at": "2023-06-19T04:13:09Z"
        },
        {
          "author": "abrichr",
          "body": "@FFFiend that's not bad for a first try out of the box!\r\n\r\nCan you please run this through some list of user interface component names? e.g. https://chat.openai.com/share/bcecf257-500e-446f-90ba-2ca5713de34d",
          "created_at": "2023-06-19T15:06:14Z"
        },
        {
          "author": "FFFiend",
          "body": "Prompt: \"window, tab, panel, menu, submenu, button, icon, text field, text area,  search bar,logo\"\r\nHere's a couple runs on the same image with their respective box and text threshold values:\r\n\r\n![image(2)](https://github.com/MLDSAI/OpenAdapt/assets/96851409/a4ac424d-11c8-46d4-9f27-49d24fd87092)\r\nBo",
          "created_at": "2023-06-19T15:36:44Z"
        },
        {
          "author": "abrichr",
          "body": "@FFFiend is it possible to modify the temperature, such that we can run inference multiple times expecting different results?",
          "created_at": "2023-06-21T00:27:17Z"
        }
      ]
    },
    {
      "issue_number": 296,
      "title": "[Bug]: 'pywinauto' module not found",
      "body": "### Describe the bug\n\n```terminal\r\n(openadapt-py3.10) PS C:\\Users\\mus20\\OneDrive\\Desktop\\Projects\\puterbot> alembic upgrade head\r\n2023-06-20 14:37:56.135 | INFO     | openadapt.config:<module>:110 - CACHE_DIR_PATH=.cache\r\n2023-06-20 14:37:56.138 | INFO     | openadapt.config:<module>:110 - CACHE_ENABLED=True\r\n2023-06-20 14:37:56.140 | INFO     | openadapt.config:<module>:110 - CACHE_VERBOSITY=0\r\n2023-06-20 14:37:56.142 | INFO     | openadapt.config:<module>:110 - DB_ECHO=False\r\n2023-06-20 14:37:56.144 | INFO     | openadapt.config:<module>:110 - DB_FNAME=openadapt.db\r\n2023-06-20 14:37:56.146 | INFO     | openadapt.config:<module>:110 - OPENAI_API_KEY=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\r\n2023-06-20 14:37:56.148 | INFO     | openadapt.config:<module>:110 - OPENAI_MODEL_NAME=gpt-3.5-turbo\r\n2023-06-20 14:37:56.151 | INFO     | openadapt.config:<module>:110 - RECORD_READ_ACTIVE_ELEMENT_STATE=False\r\n2023-06-20 14:37:56.153 | INFO     | openadapt.config:<module>:110 - REPLAY_STRIP_ELEMENT_STATE=True\r\n2023-06-20 14:37:56.155 | INFO     | openadapt.config:<module>:110 - IGNORE_WARNINGS=False\r\n2023-06-20 14:37:56.156 | INFO     | openadapt.config:<module>:110 - ACTION_TEXT_SEP=-\r\n2023-06-20 14:37:56.157 | INFO     | openadapt.config:<module>:110 - ACTION_TEXT_NAME_PREFIX=<\r\n2023-06-20 14:37:56.158 | INFO     | openadapt.config:<module>:110 - ACTION_TEXT_NAME_SUFFIX=>\r\n2023-06-20 14:37:56.159 | INFO     | openadapt.config:<module>:110 - SCRUB_ENABLED=True\r\n2023-06-20 14:37:56.161 | INFO     | openadapt.config:<module>:110 - SCRUB_CHAR=*\r\n2023-06-20 14:37:56.161 | INFO     | openadapt.config:<module>:110 - SCRUB_LANGUAGE=en\r\n2023-06-20 14:37:56.163 | INFO     | openadapt.config:<module>:110 - SCRUB_FILL_COLOR=255\r\n2023-06-20 14:37:56.164 | INFO     | openadapt.config:<module>:110 - SCRUB_CONFIG_TRF={'nlp_engine_name': 'spacy', 'models': [{'lang_code': 'en', 'model_name': 'en_core_web_trf'}]}\r\n2023-06-20 14:37:56.165 | INFO     | openadapt.config:<module>:110 - SCRUB_IGNORE_ENTITIES=['DATE_TIME', 'URL']\r\n2023-06-20 14:37:56.166 | INFO     | openadapt.config:<module>:110 - SCRUB_KEYS_HTML=['text', 'canonical_text', 'title', 'state', 'task_description', 'key_char', 'canonical_key_char', 'key_vk', 'children']\r\n2023-06-20 14:37:56.167 | INFO     | openadapt.config:<module>:110 - ROOT_DIRPATH=C:\\Users\\mus20\\OneDrive\\Desktop\\Projects\\puterbot\r\n2023-06-20 14:37:56.169 | INFO     | openadapt.config:<module>:110 - DB_FPATH=C:\\Users\\mus20\\OneDrive\\Desktop\\Projects\\puterbot\\openadapt.db\r\n2023-06-20 14:37:56.170 | INFO     | openadapt.config:<module>:110 - DB_URL=sqlite:///C:\\Users\\mus20\\OneDrive\\Desktop\\Projects\\puterbot\\openadapt.db\r\n2023-06-20 14:37:56.172 | INFO     | openadapt.config:<module>:110 - DIRNAME_PERFORMANCE_PLOTS=performance\r\nTraceback (most recent call last):\r\n  File \"C:\\Python310\\lib\\runpy.py\", line 196, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n  File \"C:\\Python310\\lib\\runpy.py\", line 86, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\Users\\mus20\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-Q68JF1vy-py3.10\\Scripts\\alembic.exe\\__main__.py\", line 7, in <module>\r\n  File \"C:\\Users\\mus20\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-Q68JF1vy-py3.10\\lib\\site-packages\\alembic\\config.py\", line 590, in main\r\n    CommandLine(prog=prog).main(argv=argv)\r\n  File \"C:\\Users\\mus20\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-Q68JF1vy-py3.10\\lib\\site-packages\\alembic\\config.py\", line 584, in main\r\n    self.run_cmd(cfg, options)\r\n    fn(\r\n  File \"C:\\Users\\mus20\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-Q68JF1vy-py3.10\\lib\\site-packages\\alembic\\command.py\", line 322, in upgrade\r\n    script.run_env()\r\n  File \"C:\\Users\\mus20\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-Q68JF1vy-py3.10\\lib\\site-packages\\alembic\\script\\base.py\", line 569, in run_env\r\n    util.load_python_file(self.dir, \"env.py\")\r\n  File \"C:\\Users\\mus20\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-Q68JF1vy-py3.10\\lib\\site-packages\\alembic\\util\\pyfiles.py\", line 94, in load_python_file\r\n    module = load_module_py(module_id, path)\r\n  File \"C:\\Users\\mus20\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\openadapt-Q68JF1vy-py3.10\\lib\\site-packages\\alembic\\util\\pyfiles.py\", line 110, in load_module_py\r\n    spec.loader.exec_module(module)  # type: ignore\r\n  File \"<frozen importlib._bootstrap_external>\", line 883, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 241, in _call_with_frames_removed\r\n    from openadapt.models import *\r\n  File \"C:\\Users\\mus20\\OneDrive\\Desktop\\Projects\\puterbot\\.\\openadapt\\models.py\", line 9, in <module>\r\n    from openadapt import config, db, utils, window\r\n  File \"C:\\Users\\mus20\\OneDrive\\Desktop\\Projects\\puterbot\\.\\openadapt\\window\\__init__.py\", line 10, in <module>\r\n    from . import _windows as impl\r\n  File \"C:\\Users\\mus20\\OneDrive\\Desktop\\Projects\\puterbot\\.\\openadapt\\window\\_windows.py\", line 4, in <module>\r\n    import pywinauto\r\nModuleNotFoundError: No module named 'pywinauto'\r\n```\n\n### To Reproduce\n\nI use Windows, follow instructions on readme\r\n```\r\ngit clone https://github.com/MLDSAI/OpenAdapt.git\r\ncd OpenAdapt\r\npip install poetry\r\npoetry install\r\npoetry shell\r\nalembic upgrade head\r\n```",
      "state": "closed",
      "author": "Mustaballer",
      "author_type": "User",
      "created_at": "2023-06-20T18:58:07Z",
      "updated_at": "2023-06-21T16:38:05Z",
      "closed_at": "2023-06-21T16:38:05Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/296/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KrishPatel13"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/296",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/296",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:31.925184",
      "comments": [
        {
          "author": "Mustaballer",
          "body": "To resolve this issue we can do `poetry add pywinauto`, and then commit the updated pyproject.toml and poetry.lock.",
          "created_at": "2023-06-20T18:59:09Z"
        }
      ]
    },
    {
      "issue_number": 277,
      "title": "Set up a HuggingFace space",
      "body": "### Feature request\n\nWe would like a place to put models which we want to host on HuggingFace which others have not done already.\n\n### Motivation\n\nhttps://github.com/MLDSAI/OpenAdapt/issues/276",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-16T18:43:14Z",
      "updated_at": "2023-06-21T00:30:40Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/277/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "FFFiend"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/277",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/277",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:32.116960",
      "comments": [
        {
          "author": "FFFiend",
          "body": "I think an organization account for OpenAdapt on HuggingFace that we can join, would be the way to go since Spaces themselves are just models equipped with API's for usage on the web, and we can upload multiple models as well as datasets onto the organization page. \r\n\r\nSee here to set up a new organ",
          "created_at": "2023-06-20T04:18:49Z"
        },
        {
          "author": "abrichr",
          "body": "@FFFiend https://huggingface.co/OpenAdapt",
          "created_at": "2023-06-21T00:30:39Z"
        }
      ]
    },
    {
      "issue_number": 294,
      "title": "[Bug]: Poetry install fails",
      "body": "### Describe the bug\n\nAfter running `pip install poetry`:\r\n```\r\nabrichr@MacBook-Pro-3 OpenAdapt % poetry install\r\n\r\ndyld[41834]: Library not loaded: /usr/local/Cellar/python@3.10/3.10.8/Frameworks/Python.framework/Versions/3.10/Python\r\n  Referenced from: <1E0708EA-DAC7-3EED-9755-EE85F923CB77> /Users/abrichr/Library/Application Support/pypoetry/venv/bin/python\r\n  Reason: tried: '/usr/local/Cellar/python@3.10/3.10.8/Frameworks/Python.framework/Versions/3.10/Python' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/usr/local/Cellar/python@3.10/3.10.8/Frameworks/Python.framework/Versions/3.10/Python' (no such file), '/usr/local/Cellar/python@3.10/3.10.8/Frameworks/Python.framework/Versions/3.10/Python' (no such file), '/Library/Frameworks/Python.framework/Versions/3.10/Python' (no such file), '/System/Library/Frameworks/Python.framework/Versions/3.10/Python' (no such file, not in dyld cache)\r\nzsh: abort      poetry install\r\n```\n\n### To Reproduce\n\nFollow installation instructions in README:\r\n\r\n```\r\ngit clone https://github.com/MLDSAI/OpenAdapt.git\r\ncd OpenAdapt\r\npip install poetry\r\npoetry install\r\n```",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-20T15:01:30Z",
      "updated_at": "2023-06-20T17:46:36Z",
      "closed_at": "2023-06-20T15:06:36Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/294/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/294",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/294",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:37.281624",
      "comments": [
        {
          "author": "abrichr",
          "body": "Attempted workaround:\r\n\r\n```\r\npip uninstall poetry\r\npython3.10 -m pip install poetry\r\npoetry install\r\n```\r\n\r\nSame error.",
          "created_at": "2023-06-20T15:03:01Z"
        },
        {
          "author": "abrichr",
          "body": "Fix, from https://stackoverflow.com/a/73654972/95989:\r\n\r\n```\r\ncurl -sSL https://install.python-poetry.org | python3 - --uninstall\r\n\r\nRemoving Poetry (1.2.2)\r\n```\r\n\r\nThen:\r\n```\r\npoetry install\r\n```\r\n👍 ",
          "created_at": "2023-06-20T15:06:27Z"
        }
      ]
    },
    {
      "issue_number": 286,
      "title": "Explore LLMs to Load on CPU for Offline Usage",
      "body": "### Feature request\r\n\r\nA really good example is https://github.com/ggerganov/llama.cpp \r\nhttps://finbarr.ca/how-is-llama-cpp-possible/ good supplemental read \r\n### Motivation\r\n\r\nfizzbuzz",
      "state": "closed",
      "author": "FFFiend",
      "author_type": "User",
      "created_at": "2023-06-18T04:31:02Z",
      "updated_at": "2023-06-19T17:06:25Z",
      "closed_at": "2023-06-19T17:06:25Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/286/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "FFFiend"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/286",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/286",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:37.487919",
      "comments": [
        {
          "author": "FFFiend",
          "body": "LLama.cpp seems super easy to load on mac, and the only requirement is enough disk space and RAM. Question now is: how do we want to integrate it into the repo?",
          "created_at": "2023-06-19T07:04:15Z"
        },
        {
          "author": "abrichr",
          "body": "> We want to be able to fall back on an LLM with no internet access we can load on anyone's computer that doesn't have a hard GPU requirement.",
          "created_at": "2023-06-19T13:12:47Z"
        },
        {
          "author": "abrichr",
          "body": "Thanks @FFFiend ! \r\n\r\n>  Question now is: how do we want to integrate it into the repo?\r\n\r\nLet's start by implementing a ReplayStrategy with a get_completion method, similar to https://github.com/MLDSAI/OpenAdapt/blob/main/openadapt/strategies/mixins/openai.py",
          "created_at": "2023-06-19T13:15:48Z"
        },
        {
          "author": "abrichr",
          "body": "Related: https://github.com/MLDSAI/OpenAdapt/issues/291\r\n\r\n@FFFiend should we merge these two issues?",
          "created_at": "2023-06-19T15:01:40Z"
        },
        {
          "author": "FFFiend",
          "body": "Yeah I thought that'd be a good idea :)",
          "created_at": "2023-06-19T15:17:21Z"
        }
      ]
    },
    {
      "issue_number": 54,
      "title": "Usecase: Business Manager",
      "body": "How can we enable business managers to automate their workflows?\r\n\r\nThis task involves creating recordings involving one or more relevant applications, and implementing tests for corresponding completions:\r\n\r\n- https://quickbooks.intuit.com\r\n- https://digthisdata.com/\r\n- Microsoft Excel",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-01T03:22:53Z",
      "updated_at": "2023-06-18T21:31:22Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/54/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 1
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/54",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/54",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:37.712522",
      "comments": []
    },
    {
      "issue_number": 279,
      "title": "GitBook DNS + linking",
      "body": "### Feature request\n\nWe want to host https://openadapt.gitbook.io/openadapt.ai/getting-started/welcome-to-openadapt at docs.openadapt.ai and link to it in the README.\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-16T19:03:18Z",
      "updated_at": "2023-06-17T16:42:39Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/279/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "Mustaballer"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/279",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/279",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:37.712544",
      "comments": [
        {
          "author": "abrichr",
          "body": "Thank you @Mustaballer !\r\n\r\nCan you also please take care of https://github.com/OpenAdaptAI/web/issues/23 while you're at it? 🙏 ",
          "created_at": "2023-06-17T16:42:32Z"
        }
      ]
    },
    {
      "issue_number": 63,
      "title": "Implement GPT3/GPT-4",
      "body": "We want to use the most powerful model on the planet via the [Openai API](https://platform.openai.com/docs/api-reference?lang=python)\r\n\r\nhttps://github.com/openai/openai-python",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-02T06:40:38Z",
      "updated_at": "2023-06-16T21:12:16Z",
      "closed_at": "2023-06-16T21:12:16Z",
      "labels": [
        "help wanted"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/63/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "abrichr",
        "dianzrong"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/63",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/63",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:37.997448",
      "comments": [
        {
          "author": "dianzrong",
          "body": "General OpenAI implementation requirements:\r\n\r\n- implement retrying requests with exponential backlog [(more info)](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_handle_rate_limits.ipynb)\r\n    - can use Backoff or Tenacity libraries\r\n- batching\r\n- [Guidance](https://github.com/",
          "created_at": "2023-05-11T02:04:25Z"
        },
        {
          "author": "dianzrong",
          "body": "Implementation:\r\n\r\n- Use the OpenAI or Azure OpenAI model to generate completions and prompts\r\n- Can transcribe the videos for ease of finding videos and to increase accessibility\r\n\r\nBenefits:\r\n- will learn quickly\r\n\r\nLimitations: \r\n- rate limited as outlined above\r\n- need to apply for access to Azu",
          "created_at": "2023-05-11T03:25:46Z"
        },
        {
          "author": "abrichr",
          "body": "@dianzrong any progress on this? No worries if not, I implemented it here: https://github.com/MLDSAI/OpenAdapt/pull/151\r\n\r\n",
          "created_at": "2023-05-23T14:38:08Z"
        },
        {
          "author": "dianzrong",
          "body": "@abrichr No, I hadn't started coding it yet",
          "created_at": "2023-05-23T16:38:25Z"
        },
        {
          "author": "abrichr",
          "body": "Implemented in https://github.com/MLDSAI/OpenAdapt/pull/151",
          "created_at": "2023-06-16T21:12:16Z"
        }
      ]
    },
    {
      "issue_number": 152,
      "title": "Usecase: insurance underwriter",
      "body": "How can we enable insurance underwriters to automate repetitive tasks?\r\n\r\nThis task involves creating recordings involving one or more relevant applications, and implementing tests for corresponding completions:\r\n\r\n- GuideWire PolicyCenter\r\n- Excel\r\n- SharePoint\r\n- PowerBI",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-15T20:29:00Z",
      "updated_at": "2023-06-16T20:54:13Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/152/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "jesicasusanto"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/152",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/152",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:38.262719",
      "comments": [
        {
          "author": "abrichr",
          "body": "@jesicasusanto what other applications are involved?",
          "created_at": "2023-05-15T20:31:12Z"
        },
        {
          "author": "jesicasusanto",
          "body": "1. Use Case: Policy Data Entry\r\n\r\n- Associated Tasks: Data input, verification, and validation\r\n- Relevant Software Applications: GuideWire PolicyCenter, Excel\r\n\r\n3. Use Case: Document Management and Collaboration\r\n\r\n- Associated Tasks: Document sharing, version control, collaboration\r\n- Relevant So",
          "created_at": "2023-05-18T03:23:39Z"
        },
        {
          "author": "abrichr",
          "body": "@flyguy712 would love your input here 🙏 ",
          "created_at": "2023-06-16T20:54:13Z"
        }
      ]
    },
    {
      "issue_number": 280,
      "title": "Research alternative training hosting solutions",
      "body": "### Feature request\n\nModal is easy but expensive (?)\r\n\r\nThere is HuggingFace as well https://github.com/MLDSAI/OpenAdapt/issues/277\r\n\r\nWhat else can we use? e.g https://www.hetzner.com/  , https://www.paperspace.com/ ...\r\n\n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-16T19:11:35Z",
      "updated_at": "2023-06-16T19:11:41Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/280/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "FFFiend"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/280",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/280",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:38.473627",
      "comments": []
    },
    {
      "issue_number": 273,
      "title": "[Bug]: fix DNS",
      "body": "### Describe the bug\n\nI expected puterbot.com to redirect to openadapt.ai but what actually happened was it timed out.\n\n### To Reproduce\n\ngo to puterbot.com",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-15T22:25:17Z",
      "updated_at": "2023-06-16T19:05:00Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/273/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "Mustaballer"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/273",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/273",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:38.473669",
      "comments": []
    },
    {
      "issue_number": 255,
      "title": "Implement Python Poetry",
      "body": "### Feature request\n\nLet's use modern Python tooling\n\n### Motivation\n\nLet's use modern Python tooling\n\n### Other\n\n_No response_",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-14T01:14:50Z",
      "updated_at": "2023-06-16T17:32:41Z",
      "closed_at": "2023-06-16T17:32:41Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/255/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "0dm"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/255",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/255",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:38.473682",
      "comments": []
    },
    {
      "issue_number": 22,
      "title": "Configure GitHub actions for automatic linting/testing/publishing",
      "body": "https://docs.github.com/en/actions/quickstart\r\n\r\nhttps://beta.ruff.rs/docs/usage/#github-action\r\n\r\nhttps://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-04-19T13:34:24Z",
      "updated_at": "2023-06-16T02:31:44Z",
      "closed_at": "2023-06-16T02:31:44Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/22/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "Mustaballer"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/22",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/22",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:38.473698",
      "comments": [
        {
          "author": "abrichr",
          "body": "https://github.com/MLDSAI/puterbot/new/main?filename=.github%2Fworkflows%2Fpython-publish.yml&workflow_template=ci%2Fpython-publish",
          "created_at": "2023-05-01T03:34:53Z"
        },
        {
          "author": "Mustaballer",
          "body": "@abrichr \r\n\r\nI created a PR to address this ticket. So far I have been able to successfullly install all dependencies and run black. However I am being blocked by the pytest test cases failing due to import errors. You can see the failed Github Action attempt here: https://github.com/Mustaballer/put",
          "created_at": "2023-05-11T21:13:58Z"
        }
      ]
    },
    {
      "issue_number": 134,
      "title": "Create a GUI for OpenAdapt",
      "body": "Story: As a user, I'd much rather prefer to have an interactive user interface instead of typing out commands for OpenAdapt. Using a terminal is too intimidating.\r\n\r\nA GUI would be a great way to attract new users, and we should display buttons for Record / Stop, Visualize, and Replay. ",
      "state": "closed",
      "author": "0dm",
      "author_type": "User",
      "created_at": "2023-05-11T02:00:31Z",
      "updated_at": "2023-06-15T23:33:48Z",
      "closed_at": "2023-06-15T23:33:48Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/134/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "0dm"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/134",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/134",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:38.675595",
      "comments": []
    },
    {
      "issue_number": 265,
      "title": "Add legal document scrubbing to test",
      "body": "### Feature request\n\nWe would like to test `openadapt.scrub` against a legal document (e.g. LLC ownership contract) and make sure that entities are being correctly scrubbed.\r\n\r\n@KrishPatel13 please prioritize this 🙏 \n\n### Motivation\n\n_No response_",
      "state": "open",
      "author": "atomicrichard",
      "author_type": "User",
      "created_at": "2023-06-14T23:52:12Z",
      "updated_at": "2023-06-15T19:04:51Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/265/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KrishPatel13"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/265",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/265",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:38.675617",
      "comments": [
        {
          "author": "KrishPatel13",
          "body": "I ran a sample script locally on branch:\r\n\r\nI have pip installed textract and imported ot my script.\r\n\r\n(ref: https://textract.readthedocs.io/en/stable/python_package.html)\r\n```\r\ntext = textract.process(\"./resources/sample_llc_1.pdf\")\r\nprint(text)\r\n```\r\n\r\nBut this gave some errors.\r\nOn researching I",
          "created_at": "2023-06-15T01:24:08Z"
        },
        {
          "author": "KrishPatel13",
          "body": "I am stuck at extracting text.\r\n\r\nI have tried textract and pdftotext, and I land in new and new errors every time i fix previous errors.\r\n\r\nlooks like for textracr we need different modules besides pip installing it. For other libraries, like poppler, pdftotext etc, I install them but still textrac",
          "created_at": "2023-06-15T03:09:35Z"
        },
        {
          "author": "abrichr",
          "body": "@KrishPatel13 What errors are you experiencing extracting text? Why doesn't this work for you:\r\n\r\n```\r\nfpath = './path/to/pdf'\r\ntext = textract.process(fpath).decode(\"utf-8\")\r\n```",
          "created_at": "2023-06-15T12:56:03Z"
        },
        {
          "author": "abrichr",
          "body": "If you aren't able to use `textract` just use PyPDF2:\r\n\r\n```\r\n$ pip install PyPDF2\r\n```\r\n```\r\nfrom PyPDF2 import PdfReader\r\n\r\nfpath = \"./path/to/file.pdf\"\r\nreader = PdfReader(fpath)\r\ntexts = [page.extract_text() for page in reader.pages]\r\ntext = \" \".join(texts)\r\n```",
          "created_at": "2023-06-15T12:59:52Z"
        },
        {
          "author": "KrishPatel13",
          "body": "Made a draft PR: https://github.com/MLDSAI/OpenAdapt/pull/267\r\nThe next conversation will be carried over there.",
          "created_at": "2023-06-15T19:04:50Z"
        }
      ]
    },
    {
      "issue_number": 271,
      "title": "Explore \"agency\"",
      "body": "### Feature request\r\n\r\nhttps://github.com/operand/agency\r\n\r\nhttps://news.ycombinator.com/item?id=36326587\r\n\r\n### Motivation\r\n\r\nI'm always frustrated when [...] so this feature would [...].",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-15T19:03:56Z",
      "updated_at": "2023-06-15T19:04:07Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/271/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/271",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/271",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:38.931046",
      "comments": []
    },
    {
      "issue_number": 269,
      "title": "Implement Github Action(s) for vulnerability scanning",
      "body": "### Feature request\n\nhttps://github.com/MLDSAI/OpenAdapt/actions/new?category=security\n\n### Motivation\n\nI'm always frustrated when [...] so this feature would [...].",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-15T06:07:07Z",
      "updated_at": "2023-06-15T06:07:07Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/269/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/269",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/269",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:38.931071",
      "comments": []
    },
    {
      "issue_number": 260,
      "title": "Joke",
      "body": "### Feature request\n\n@QAI.help add a joke to the readme\r\n\r\n\n\n### Motivation\n\n:)\n\n### Other\n\n_No response_",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-14T18:31:48Z",
      "updated_at": "2023-06-14T22:49:05Z",
      "closed_at": "2023-06-14T22:49:05Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/260/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/260",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/260",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:38.931083",
      "comments": [
        {
          "author": "ghost",
          "body": "Thanks for requesting QAI's help! A PR will be created shortly.",
          "created_at": "2023-06-14T18:31:50Z"
        },
        {
          "author": "ghost",
          "body": "Issue addressed in the following PR: https://github.com/MLDSAI/OpenAdapt/pull/261",
          "created_at": "2023-06-14T18:32:17Z"
        }
      ]
    },
    {
      "issue_number": 258,
      "title": "Joke",
      "body": "### Feature request\n\n@QAI.help add a joke to the readme\n\n### Motivation\n\nfun\n\n### Other\n\n_No response_",
      "state": "closed",
      "author": "atomicrichard",
      "author_type": "User",
      "created_at": "2023-06-14T16:42:05Z",
      "updated_at": "2023-06-14T22:49:00Z",
      "closed_at": "2023-06-14T22:49:00Z",
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/258/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/258",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/258",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:39.111137",
      "comments": [
        {
          "author": "ghost",
          "body": "Thanks for requesting QAI's help! A PR will be created shortly.",
          "created_at": "2023-06-14T16:42:08Z"
        }
      ]
    },
    {
      "issue_number": 257,
      "title": "Explore MLC-LLM",
      "body": "### Feature request\n\nHow can we take advantage of https://mlc.ai/mlc-llm/ ?\n\n### Motivation\n\n:)\n\n### Other\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-14T14:07:45Z",
      "updated_at": "2023-06-14T14:07:45Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/257/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/257",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/257",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:39.288891",
      "comments": []
    },
    {
      "issue_number": 251,
      "title": "Design \"Triggers\"",
      "body": "### Feature request\n\nFrom @flyguy712:\r\n\r\n> Something else I’ve been mulling over… I think we need to consider a “trigger”. There has to be a way to know when to run the automation. Maybe it’s a desktop app with a list of scenarios, we could consider voice prompts (e.g. “prepare for the next day”) or text prompts, leverage scheduled times and/or locations, or all of the above. I think once people get used to this, they won’t want to have to start doing the workflow for it to ask to takeover… there will need to be some kind of proactive capability to trigger the automation. I guess I think of it as the equivalent of a prompt but for this type of automation as opposed to LLMs.\r\n\r\nThis task involves suggesting a few high level implementation approaches, and evaluating them systematically.\n\n### Motivation\n\nRelated:\r\n\r\nhttps://github.com/MLDSAI/OpenAdapt/issues/197\r\n\r\nhttps://github.com/MLDSAI/OpenAdapt/issues/185\n\n### Other\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-14T00:20:08Z",
      "updated_at": "2023-06-14T00:20:08Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/251/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/251",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/251",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:39.288912",
      "comments": []
    },
    {
      "issue_number": 250,
      "title": "Scripting + Decompiling",
      "body": "### Feature request\n\nHow can we implement deeper integrations with automated scripting?\r\n\r\nDecompiling may be helpful here; see https://github.com/icsharpcode/ILSpy\n\n### Motivation\n\nExpand OS integration to implement shortcuts and reduce required context window size (see https://github.com/MLDSAI/OpenAdapt/issues/185)\n\n### Other\n\n_No response_",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-06-14T00:14:48Z",
      "updated_at": "2023-06-14T00:14:48Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/250/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/250",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/250",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:39.288917",
      "comments": []
    },
    {
      "issue_number": 237,
      "title": "Error `alembic upgrade head` gives error",
      "body": "Running `alembic upgrade head` gives this error: \r\n```\r\n(.venv) PS P:\\OpenAdapt AI - MLDS AI\\cloned_repo\\OpenAdapt> alembic upgrade head\r\n2023-06-08 19:43:46.740 | INFO     | openadapt.config:<module>:61 - CACHE_DIR_PATH=.cache\r\n2023-06-08 19:43:46.744 | INFO     | openadapt.config:<module>:61 - CACHE_ENABLED=True \r\n2023-06-08 19:43:46.747 | INFO     | openadapt.config:<module>:61 - CACHE_VERBOSITY=0  \r\n2023-06-08 19:43:46.749 | INFO     | openadapt.config:<module>:61 - DB_ECHO=False      \r\n2023-06-08 19:43:46.750 | INFO     | openadapt.config:<module>:61 - DB_FNAME=openadapt.db\r\n2023-06-08 19:43:46.751 | INFO     | openadapt.config:<module>:61 - OPENAI_API_KEY=<set your api key in .env>\r\n2023-06-08 19:43:46.753 | INFO     | openadapt.config:<module>:61 - OPENAI_MODEL_NAME=gpt-3.5-turbo\r\n2023-06-08 19:43:46.755 | INFO     | openadapt.config:<module>:61 - RECORD_READ_ACTIVE_ELEMENT_STATE=False\r\n2023-06-08 19:43:46.757 | INFO     | openadapt.config:<module>:61 - REPLAY_STRIP_ELEMENT_STATE=True\r\n2023-06-08 19:43:46.759 | INFO     | openadapt.config:<module>:61 - ACTION_TEXT_SEP=-\r\n2023-06-08 19:43:46.761 | INFO     | openadapt.config:<module>:61 - ACTION_TEXT_NAME_PREFIX=<\r\n2023-06-08 19:43:46.762 | INFO     | openadapt.config:<module>:61 - ACTION_TEXT_NAME_SUFFIX=>\r\n2023-06-08 19:43:46.763 | INFO     | openadapt.config:<module>:61 - ROOT_DIRPATH=P:\\OpenAdapt AI - MLDS AI\\cloned_repo\\OpenAdapt\r\n2023-06-08 19:43:46.765 | INFO     | openadapt.config:<module>:61 - DB_FPATH=P:\\OpenAdapt AI - MLDS AI\\cloned_repo\\OpenAdapt\\openadapt.db\r\n2023-06-08 19:43:46.766 | INFO     | openadapt.config:<module>:61 - DB_URL=sqlite:///P:\\OpenAdapt AI - MLDS AI\\cloned_repo\\OpenAdapt\\openadapt.db\r\n2023-06-08 19:43:46.767 | INFO     | openadapt.config:<module>:61 - DIRNAME_PERFORMANCE_PLOTS=performance\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\Python310\\lib\\runpy.py\", line 196, in _run_module_as_main     \r\n    return _run_code(code, main_globals, None,\r\n  File \"C:\\Program Files\\Python310\\lib\\runpy.py\", line 86, in _run_code\r\n    exec(code, run_globals)\r\n  File \"P:\\OpenAdapt AI - MLDS AI\\cloned_repo\\OpenAdapt\\.venv\\Scripts\\alembic.exe\\__main__.py\", line 7, in <module>\r\n  File \"P:\\OpenAdapt AI - MLDS AI\\cloned_repo\\OpenAdapt\\.venv\\lib\\site-packages\\alembic\\config.py\", line 590, in main\r\n    CommandLine(prog=prog).main(argv=argv)\r\n  File \"P:\\OpenAdapt AI - MLDS AI\\cloned_repo\\OpenAdapt\\.venv\\lib\\site-packages\\alembic\\config.py\", line 584, in main\r\n    self.run_cmd(cfg, options)\r\n  File \"P:\\OpenAdapt AI - MLDS AI\\cloned_repo\\OpenAdapt\\.venv\\lib\\site-packages\\alembic\\config.py\", line 561, in run_cmd\r\n    fn(\r\n  File \"P:\\OpenAdapt AI - MLDS AI\\cloned_repo\\OpenAdapt\\.venv\\lib\\site-packages\\alembic\\command.py\", line 322, in upgrade\r\n    script.run_env()\r\n  File \"P:\\OpenAdapt AI - MLDS AI\\cloned_repo\\OpenAdapt\\.venv\\lib\\site-packages\\alembic\\script\\base.py\", line 569, in run_env\r\n    util.load_python_file(self.dir, \"env.py\")\r\n  File \"P:\\OpenAdapt AI - MLDS AI\\cloned_repo\\OpenAdapt\\.venv\\lib\\site-packages\\alembic\\util\\pyfiles.py\", line 94, in load_python_file\r\n    module = load_module_py(module_id, path)\r\n  File \"P:\\OpenAdapt AI - MLDS AI\\cloned_repo\\OpenAdapt\\.venv\\lib\\site-packages\\alembic\\util\\pyfiles.py\", line 110, in load_module_py\r\n    spec.loader.exec_module(module)  # type: ignore\r\n  File \"<frozen importlib._bootstrap_external>\", line 883, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 241, in _call_with_frames_removed\r\n  File \"P:\\OpenAdapt AI - MLDS AI\\cloned_repo\\OpenAdapt\\alembic\\env.py\", line 92, in <module>\r\n    run_migrations_online()\r\n  File \"P:\\OpenAdapt AI - MLDS AI\\cloned_repo\\OpenAdapt\\alembic\\env.py\", line 70, in run_migrations_online\r\n    configuration = config.get_section(config.config_ini_section)\r\nAttributeError: module 'openadapt.config' has no attribute 'get_section'\r\n```",
      "state": "closed",
      "author": "KrishPatel13",
      "author_type": "User",
      "created_at": "2023-06-10T01:00:55Z",
      "updated_at": "2023-06-12T15:38:37Z",
      "closed_at": "2023-06-12T15:38:37Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/237/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/237",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/237",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:41.099192",
      "comments": [
        {
          "author": "0dm",
          "body": "fixed in #238 ",
          "created_at": "2023-06-12T02:08:50Z"
        },
        {
          "author": "KrishPatel13",
          "body": "@0dm I have reviewed the changes and approved for merging. \r\n\r\nNow waiting for @abrichr :).",
          "created_at": "2023-06-12T11:49:34Z"
        }
      ]
    },
    {
      "issue_number": 47,
      "title": "Implement Scrubbing",
      "body": "We would like to make it easy to scrub private information (e.g. PII/PHI):\r\n\r\n```\r\npython -m openadapt.scrub\r\n```",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-01T02:06:06Z",
      "updated_at": "2023-06-09T15:38:59Z",
      "closed_at": "2023-06-09T15:38:59Z",
      "labels": [
        "help wanted"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 9,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/47/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "KrishPatel13"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/47",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/47",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:41.290375",
      "comments": [
        {
          "author": "KrishPatel13",
          "body": "Dear @abrichr,\r\n\r\nI would like to work on implementing this issue. Just to confirm, my understanding is that we need to scrub private information from the input text such as:\r\n- Date of Births\r\n- Phone Numbers\r\n- Bank Card Numbers\r\n- Email Addresses\r\n\r\nPlease let me know if there are any **additiona",
          "created_at": "2023-05-06T01:48:42Z"
        },
        {
          "author": "abrichr",
          "body": "Excellent, thank you Krish! These are the top Google results for [pii python], this looks promising, please start here:\r\n\r\nhttps://pypi.org/project/piicatcher/\r\nhttps://pypi.org/project/pii-extract/\r\n\r\nHere is a Phind.com search that may be insructive:\r\n\r\nhttps://www.phind.com/search?q=how%20to%20im",
          "created_at": "2023-05-06T06:53:14Z"
        },
        {
          "author": "abrichr",
          "body": "Phind.com recommends https://github.com/microsoft/presidio. After a glance it seems the top candidate (please let me know if you identify any other candidates worth comparing).\r\n\r\nIn your analysis please include a short description of the available APIs, e.g. function signatures, data sources/format",
          "created_at": "2023-05-06T07:28:31Z"
        },
        {
          "author": "KrishPatel13",
          "body": "Here's my analysis of the three options you've mentioned for implementing a PII/PHI scrubber in Python, along with their tradeoffs:\r\n\r\n### **piicatcher:**\r\n\r\n- piicatcher is a Python package for detecting personally identifiable information (PII) in text using regular expressions.\r\n- It currently su",
          "created_at": "2023-05-06T12:12:13Z"
        },
        {
          "author": "KrishPatel13",
          "body": "> Please also consider where in the existing PuterBot code this should be implemented. Some options:\r\n> - before recording\r\n> - before visualizing\r\n> - before modelling/replay\r\n> - before sharing\r\n\r\n\r\n### **Analysis:**\r\n\r\n- before recording: \r\nIt would not benefit to Scrub before Recording, as we wi",
          "created_at": "2023-05-06T12:23:25Z"
        }
      ]
    },
    {
      "issue_number": 172,
      "title": "Creating a custom data set of 50-100 Screenshots",
      "body": "We would like to generate a custom data set containing 50-100 annotated screenshots",
      "state": "open",
      "author": "jesicasusanto",
      "author_type": "User",
      "created_at": "2023-05-26T00:38:12Z",
      "updated_at": "2023-06-05T15:24:01Z",
      "closed_at": null,
      "labels": [
        "help wanted"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/172/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "jesicasusanto"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/172",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/172",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:41.539330",
      "comments": [
        {
          "author": "jesicasusanto",
          "body": "I annotated the screensots with roboflow in this link :\r\nhttps://app.roboflow.com/jesica-gt1c6/screenshot-dataset/generate/preprocessing\r\n**Steps to download the screenshot data set :**\r\n1. Click on the link above\r\n2. Click \"Download this Dataset\"\r\n<img width=\"937\" alt=\"image\" src=\"https://github.co",
          "created_at": "2023-06-02T14:08:33Z"
        },
        {
          "author": "abrichr",
          "body": "Please add instructions for downloading 🙏 ",
          "created_at": "2023-06-02T14:25:01Z"
        },
        {
          "author": "jesicasusanto",
          "body": "I added the instructions in the comment above yours @abrichr ",
          "created_at": "2023-06-05T15:24:01Z"
        }
      ]
    },
    {
      "issue_number": 190,
      "title": "Bug: can't install dotenv",
      "body": "@0dm I believe you experienced this issue, can you please clarify how you resolved it?",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-28T16:55:32Z",
      "updated_at": "2023-05-29T16:14:08Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/190/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/190",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/190",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:41.719142",
      "comments": [
        {
          "author": "0dm",
          "body": "I opened a new terminal 😅",
          "created_at": "2023-05-28T16:56:19Z"
        },
        {
          "author": "abrichr",
          "body": "Let's document the workaround in the README troubleshooting.",
          "created_at": "2023-05-29T16:14:08Z"
        }
      ]
    },
    {
      "issue_number": 193,
      "title": "Define Developer API",
      "body": "We would like to enable developers to build on our primitives without exposing them to all the gory details.\r\n\r\nThis task involves specifying the high level abstractions that we want to expose to developers. Examples:\r\n\r\n```\r\nrecording = record()\r\nget_recording(recording_id)\r\n\r\nsignal = set_signal(\"<signal_definition>\")  # [1]\r\nlist_signals()  # [1]\r\ntest_signal(signal)  # [1]\r\n\r\ngenerate_tasks(recording)  # [2]\r\ngenerate_task_descriptions(recording)  # [2]\r\ngenerate_tasks_for_description(\"<task_description>\")  # [2]\r\n\r\nevaluate_productivity(recording)  # [3]\r\n```\r\n\r\n[1] related: https://github.com/MLDSAI/OpenAdapt/pull/160\r\n[2] related: https://github.com/MLDSAI/OpenAdapt/issues/185\r\n[3] related: https://github.com/MLDSAI/OpenAdapt/issues/173",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-28T20:57:28Z",
      "updated_at": "2023-05-28T21:00:03Z",
      "closed_at": null,
      "labels": [
        "help wanted"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/193/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "abrichr"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/193",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/193",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:41.910822",
      "comments": []
    },
    {
      "issue_number": 71,
      "title": "Usecase: Real Estate Agent",
      "body": "How can we enable real estate agents to automate repetitive tasks involving forms, emails, etc?\r\n\r\nThis task involves creating recordings involving one or more relevant applications, and implementing tests for corresponding completions:\r\n\r\n- Gmail\r\n- Google Calendar\r\n- WhatsApp\r\n\r\nWorkflow 1: property rental\r\n- Send natural language description of requirements to agent (WhatsApp/Gmail)\r\n- Natural language clarification (optional)\r\n- Receive links to list of listings\r\n- Review based on price, location, size, floor, direction, window sizes, views (https://github.com/abrichr/viewify), amenities, etc.\r\n- review agreement contents\r\n- natural language modifications (optional)\r\n\r\nWorkflow 2: furniture rental\r\n- EasyHome.ca phone call (related: https://github.com/MLDSAI/OpenAdapt/issues/188)",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-03T03:12:36Z",
      "updated_at": "2023-05-28T03:11:41Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/71/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/71",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/71",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:41.910839",
      "comments": []
    },
    {
      "issue_number": 93,
      "title": "Record hanging on windows instead of ending",
      "body": "Windows 10\r\n\r\nSometimes on windows record.py will hang after Ctrl-C with python processes left running.",
      "state": "closed",
      "author": "apgorton",
      "author_type": "User",
      "created_at": "2023-05-06T21:20:00Z",
      "updated_at": "2023-05-27T07:01:04Z",
      "closed_at": "2023-05-27T07:01:04Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/93/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "apgorton"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/93",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/93",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:41.910847",
      "comments": [
        {
          "author": "abrichr",
          "body": "Confirmed on MacOS.\r\n\r\n@apgorton any ideas on approaches? I believe we ruled out logging. Could it be the `pynput` listeners are not terminating?\r\n\r\nI think the next course of action will be to add copious `logger.trace` statements, what do you think?\r\n\r\nEdit: even better: https://github.com/MLDSAI/",
          "created_at": "2023-05-27T05:19:13Z"
        }
      ]
    },
    {
      "issue_number": 82,
      "title": "Usecase: Pharmacist",
      "body": "How can we enable musicians to automate repetitive tasks?\r\n\r\nThis task involves creating recordings involving one or more relevant applications, and implementing tests for corresponding completions:\r\n\r\n- Krol (Telus)\r\n- Filware\r\n- Healthwatch\r\n- others?",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-04T19:54:41Z",
      "updated_at": "2023-05-21T04:42:11Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/82/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "abrichr"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/82",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/82",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:42.198867",
      "comments": []
    },
    {
      "issue_number": 156,
      "title": "Industry: green energy",
      "body": "How can we enable the green energy industry to automate repetitive tasks?\r\n\r\nThis involves:\r\n\r\n1. Identifying specific use cases relevant to the green energy industry (i.e. job positions, associated tasks, and relevant software applications)\r\n2. Creating recordings involving one or more relevant applications, and implementing tests for corresponding completions:\r\n\r\n- Microsoft Excel\r\n- AutoDesk AutoCAD\r\n- others?",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-17T12:55:20Z",
      "updated_at": "2023-05-18T23:47:16Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/156/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "dianzrong"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/156",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/156",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:42.198886",
      "comments": [
        {
          "author": "dianzrong",
          "body": "Use cases:\r\n\r\n1. Solar/Turbine Technician\r\n     - Tasks: \r\n          - keep accurate reports of work performed\r\n          - refer complex customer inquiries to higher level technical staff or manager\r\n     - Relevant software applications: Microsoft Office (Word, Excel, Outlook)\r\n2. Data Analyst\r\n  ",
          "created_at": "2023-05-18T23:47:16Z"
        }
      ]
    },
    {
      "issue_number": 155,
      "title": "Industry: electrical power",
      "body": "How can we enable the electrical power industry to automate repetitive tasks?\r\n\r\nThis involves:\r\n\r\n1. Identifying specific use cases relevant to the power generation/transmission/distribution industry (i.e. job positions, associated tasks, and relevant software applications)\r\n2. Creating recordings involving one or more relevant applications, and implementing tests for corresponding completions:\r\n\r\n- Microsoft Excel\r\n- AutoDesk AutoCAD\r\n- others?",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-17T12:54:00Z",
      "updated_at": "2023-05-18T03:02:10Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/155/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "jesicasusanto"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/155",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/155",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:42.448677",
      "comments": []
    },
    {
      "issue_number": 145,
      "title": "Mac trackpad gestures are unsupported",
      "body": "I'm not sure if there are similar issues with other trackpads but currently some [macbook trackpad gestures](https://support.apple.com/en-us/HT204895) aren't logged or logged incorrectly.",
      "state": "open",
      "author": "dianzrong",
      "author_type": "User",
      "created_at": "2023-05-13T00:32:57Z",
      "updated_at": "2023-05-17T22:36:18Z",
      "closed_at": null,
      "labels": [
        "enhancement"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/145/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "dianzrong"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/145",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/145",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:42.448695",
      "comments": [
        {
          "author": "abrichr",
          "body": "Thanks for flagging @dianzrong ! We use https://github.com/moses-palmer/pynput to record and replay actions. Here are a couple of issues that seem relevant:\r\n\r\nhttps://github.com/moses-palmer/pynput/issues/513\r\n\r\nhttps://github.com/moses-palmer/pynput/issues/327\r\n\r\nEither we should implement a fix i",
          "created_at": "2023-05-13T19:50:53Z"
        },
        {
          "author": "dianzrong",
          "body": "After looking into this issue, I think our time would be best used elsewhere, so our README should be updated. I also discovered that touchpad gestures (with Windows 10) are also not supported",
          "created_at": "2023-05-17T21:41:30Z"
        },
        {
          "author": "dianzrong",
          "body": "Note:\r\n\r\n- we would probably want a touchpad folder in pynput/lib where we could put the code for the different operating systems\r\n     - if we wanted to windows touchpad gestures ([list](https://learn.microsoft.com/en-us/windows/apps/design/input/touchpad-interactions))to be logged, we can use thei",
          "created_at": "2023-05-17T22:36:17Z"
        }
      ]
    },
    {
      "issue_number": 153,
      "title": "Industry: mining",
      "body": "How can we enable the mining industry to automate repetitive tasks?\r\n\r\nThis involves:\r\n\r\n1. Identifying specific use cases relevant to mining industry (i.e. job positions, associated tasks, and relevant software applications)\r\n2. Creating recordings involving one or more relevant applications, and implementing tests for corresponding completions:\r\n\r\n- Microsoft Excel\r\n- others?\r\n\r\n",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-17T12:50:11Z",
      "updated_at": "2023-05-17T18:43:25Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/153/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "Mustaballer"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/153",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/153",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:42.631110",
      "comments": [
        {
          "author": "Mustaballer",
          "body": "Below I'll list job titles and associated tasks in the mining industry we can automate with OpenAdapt.\r\n\r\n- **Mining Data Analyst**: Data Analysis and Reporting\r\n  - Record users demonstrating the process of importing and consolidating data from multiple sources into Excel.\r\n  - Use the recorded dat",
          "created_at": "2023-05-17T18:43:25Z"
        }
      ]
    },
    {
      "issue_number": 43,
      "title": "Implement Signals",
      "body": "We would like to provide strategies with known targets in order to measure their performance and help users guide their agents (see https://github.com/MLDSAI/puterbot/issues/42).\r\n\r\nTherefore we would like to implement \"signals\". Example:\r\n\r\n```\r\nfrom openadapt import signals\r\n\r\n# file\r\nsignals.add_signal(file_path=\"<path>/<to>/<file>.[json|csv|...])\r\n\r\n# database\r\nsignals.add_signal(db_url=\"pgsql://<username>:<password>@<host>:<port>/[<name>]\")\r\n\r\n# url\r\nsignals.add_signal(http_url=\"https://...\")  # e.g. platform.openai.com/...\r\n\r\n# python function\r\nsignals.add_signal(\"openadapt.signal.openai.<...>\")\r\nsignals.add_signal(\"openadapt.signal.contrib.<...>\")\r\n```",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-01T01:10:50Z",
      "updated_at": "2023-05-17T01:44:06Z",
      "closed_at": null,
      "labels": [
        "help wanted"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/43/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "AvidEslami"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/43",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/43",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:42.823715",
      "comments": [
        {
          "author": "AvidEslami",
          "body": "Hi, I just wanted to clarify, is the task here creating a signals feature which allows the user to provide the replay strategies with additional information, whether that be in the form of files, databases, urls (api data), or functions?",
          "created_at": "2023-05-10T16:12:16Z"
        },
        {
          "author": "abrichr",
          "body": "Hi @AvidEslami , thanks for asking!\r\n\r\nFirst step would be to support this at a low level, e.g. to implement the APIs outlined above and figure out how to supply the results to a large language model in a way that makes sense.\r\n\r\nNext up would be to figure out what is the appropriate means for the u",
          "created_at": "2023-05-15T16:44:07Z"
        }
      ]
    },
    {
      "issue_number": 32,
      "title": "Bug: Exception during replay or visualization",
      "body": "Occasionally, attempting to `replay` or `visualize` a recording will result in the following error:\r\n\r\n```\r\n2023-04-22 19:23:42.140 | INFO     | puterbot.events:merge_consecutive_input_events:570 - name='mouse_move' num_events_removed=370\r\n2023-04-22 19:23:42.140 | ERROR    | puterbot.events:process_events:621 - (<function merge_consecutive_mouse_move_events at 0x13632f0a0>, InputEvent(id=2778, name='type', timestamp=1683820640.0885906, recording_timestamp=1682204625.970328, screenshot_timestamp=1683820641.2495313, window_event_timestamp=1683820634.120639, text='h-i-s', canonical_text='h-i-s'), InputEvent(id=2779, name='type', timestamp=1683820639.0881405, recording_timestamp=1682204625.970328, screenshot_timestamp=1683820641.4406426, window_event_timestamp=1683820634.120639, text='<space>-i-s', canonical_text='<49>-i-s'))\r\nTraceback (most recent call last):\r\n\r\n  File \"/Users/abrichr/MLDSAI/src/puterbot/puterbot/visualize.py\", line 226, in <module>\r\n    main()\r\n    └ <function main at 0x13b1f7520>\r\n\r\n  File \"/Users/abrichr/MLDSAI/src/puterbot/puterbot/visualize.py\", line 135, in main\r\n    input_events = get_events(recording, process=PROCESS_EVENTS, meta=meta)\r\n                   │          │                  │                    └ {}\r\n                   │          │                  └ True\r\n                   │          └ Recording(id=14, timestamp=1682204625.970328, monitor_width=1512, monitor_height=982, double_click_interval_seconds=0.5, doub...\r\n                   └ <function get_events at 0x13632ed40>\r\n\r\n  File \"/Users/abrichr/MLDSAI/src/puterbot/puterbot/events.py\", line 53, in get_events\r\n    input_events, window_events, screenshots = process_events(\r\n    │             │                            └ <function process_events at 0x13b1f72e0>\r\n    │             └ [WindowEvent(id=24, recording_timestamp=1682204625.970328, timestamp=1683820634.120639, title='Terminal puterbot — Python ◂ P...\r\n    └ [InputEvent(id=2366, name='move', timestamp=1683820639.0447876, recording_timestamp=1682204625.970328, screenshot_timestamp=1...\r\n\r\n> File \"/Users/abrichr/MLDSAI/src/puterbot/puterbot/events.py\", line 617, in process_events\r\n    assert prev_event.timestamp <= event.timestamp, (\r\n           │          │            │     └ <sqlalchemy.orm.attributes.InstrumentedAttribute object at 0x13633b830>\r\n           │          │            └ InputEvent(id=2779, name='type', timestamp=1683820639.0881405, recording_timestamp=1682204625.970328, screenshot_timestamp=16...\r\n           │          └ <sqlalchemy.orm.attributes.InstrumentedAttribute object at 0x13633b830>\r\n           └ InputEvent(id=2778, name='type', timestamp=1683820640.0885906, recording_timestamp=1682204625.970328, screenshot_timestamp=16...\r\n\r\nAssertionError: (<function merge_consecutive_mouse_move_events at 0x13632f0a0>, InputEvent(id=2778, name='type', timestamp=1683820640.0885906, recording_timestamp=1682204625.970328, screenshot_timestamp=1683820641.2495313, window_event_timestamp=1683820634.120639, text='h-i-s', canonical_text='h-i-s'), InputEvent(id=2779, name='type', timestamp=1683820639.0881405, recording_timestamp=1682204625.970328, screenshot_timestamp=1683820641.4406426, window_event_timestamp=1683820634.120639, text='<space>-i-s', canonical_text='<49>-i-s'))\r\n> /Users/abrichr/MLDSAI/src/puterbot/puterbot/events.py(615)process_events()\r\n    614         # TODO: keep events in which window_event_timestamp is updated\r\n--> 615         for prev_event, event in zip(input_events, input_events[1:]):\r\n    616             try:\r\n\r\nipdb> \r\n```\r\n\r\nSteps to reproduce:\r\n\r\n1. Run `python puterbot/record.py \"testing out puterbot\"`\r\n2. Type some text, move the mouse, resize a window\r\n3. Hit CTRL+C and wait for the events to flush\r\n4. Run `python puterbot/visualize.py` or `python puterbot/replay.py NaiveReplayStratevy`",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-04-22T23:23:58Z",
      "updated_at": "2023-05-15T17:35:15Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/32/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "dianzrong"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/32",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/32",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:43.050386",
      "comments": []
    },
    {
      "issue_number": 26,
      "title": "Implement Guardrails",
      "body": "How can we extend DemoReplayStrategy to use https://github.com/ShreyaR/guardrails ?",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-04-19T23:39:15Z",
      "updated_at": "2023-05-15T16:20:59Z",
      "closed_at": null,
      "labels": [
        "enhancement",
        "help wanted"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/26/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "Mustaballer"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/26",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/26",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:43.050404",
      "comments": []
    },
    {
      "issue_number": 42,
      "title": "Implement ChatGPT Plugin",
      "body": "# Let ChatGPT control the user's keyboard and mouse\r\n\r\n- add fastapi endpoint\r\n- host in AWS labmda\r\n- `.env` to configure programmatically e.g. via terraform and/or Python wrapped aws cli\r\n- OpenAI manifest:\r\n\r\nhttps://platform.openai.com/docs/plugins/getting-started\r\n\r\n> The minimal definition of the required ai-plugin.json file will look like the following:\r\n```\r\n{\r\n    \"schema_version\": \"v1\",\r\n    \"name_for_human\": \"TODO Plugin\",\r\n    \"name_for_model\": \"todo\",\r\n    \"description_for_human\": \"Plugin for managing a TODO list. You can add, remove and view your TODOs.\",\r\n    \"description_for_model\": \"Plugin for managing a TODO list. You can add, remove and view your TODOs.\",\r\n    \"auth\": {\r\n        \"type\": \"none\"\r\n    },\r\n    \"api\": {\r\n        \"type\": \"openapi\",\r\n        \"url\": \"http://localhost:3333/openapi.yaml\",\r\n        \"is_user_authenticated\": false\r\n    },\r\n    \"logo_url\": \"http://localhost:3333/logo.png\",\r\n    \"contact_email\": \"support@example.com\",\r\n    \"legal_info_url\": \"http://www.example.com/legal\"\r\n}\r\n```\r\n\r\n> The OpenAPI specification is the wrapper that sits on top of your API. A basic OpenAPI specification will look like the following:\r\n```\r\nopenapi: 3.0.1\r\ninfo:\r\n  title: TODO Plugin\r\n  description: A plugin that allows the user to create and manage a TODO list using ChatGPT.\r\n  version: 'v1'\r\nservers:\r\n  - url: http://localhost:3333\r\npaths:\r\n  /todos:\r\n    get:\r\n      operationId: getTodos\r\n      summary: Get the list of todos\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/getTodosResponse'\r\ncomponents:\r\n  schemas:\r\n    getTodosResponse:\r\n      type: object\r\n      properties:\r\n        todos:\r\n          type: array\r\n          items:\r\n            type: string\r\n          description: The list of todos.\r\n```\r\n\r\n> The following Python code is an example of how you can set up a simple proxy of your public facing API.\r\n\r\n```\r\nimport requests\r\nimport os\r\n\r\nimport yaml\r\nfrom flask import Flask, jsonify, Response, request, send_from_directory\r\nfrom flask_cors import CORS\r\n\r\napp = Flask(__name__)\r\n\r\nPORT = 3333\r\n\r\n# Note: Setting CORS to allow chat.openapi.com is required for ChatGPT to access your plugin\r\nCORS(app, origins=[f\"http://localhost:{PORT}\", \"https://chat.openai.com\"])\r\n\r\napi_url = 'https://example.com'\r\n\r\n\r\n@app.route('/.well-known/ai-plugin.json')\r\ndef serve_manifest():\r\n    return send_from_directory(os.path.dirname(__file__), 'ai-plugin.json')\r\n\r\n\r\n@app.route('/openapi.yaml')\r\ndef serve_openapi_yaml():\r\n    with open(os.path.join(os.path.dirname(__file__), 'openapi.yaml'), 'r') as f:\r\n        yaml_data = f.read()\r\n    yaml_data = yaml.load(yaml_data, Loader=yaml.FullLoader)\r\n    return jsonify(yaml_data)\r\n\r\n\r\n@app.route('/openapi.json')\r\ndef serve_openapi_json():\r\n    return send_from_directory(os.path.dirname(__file__), 'openapi.json')\r\n\r\n\r\n@app.route('/<path:path>', methods=['GET', 'POST'])\r\ndef wrapper(path):\r\n\r\n    headers = {\r\n    'Content-Type': 'application/json',\r\n    }\r\n\r\n    url = f'{api_url}/{path}'\r\n    print(f'Forwarding call: {request.method} {path} -> {url}')\r\n\r\n    if request.method == 'GET':\r\n        response = requests.get(url, headers=headers, params=request.args)\r\n    elif request.method == 'POST':\r\n        print(request.headers)\r\n        response = requests.post(url, headers=headers, params=request.args, json=request.json)\r\n    else:\r\n        raise NotImplementedError(f'Method {request.method} not implemented in wrapper for {path=}')\r\n    return response.content\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run(port=PORT)\r\n```\r\n\r\n> Plugin API responses should return raw data instead of natural language responses unless it’s necessary. ChatGPT will provide its own natural language response using the returned data.\r\n\r\n```\r\n{ \"todos\": [ \"get groceries\", \"walk the dog\" ] }\r\n```",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-01T01:06:16Z",
      "updated_at": "2023-05-15T16:14:18Z",
      "closed_at": null,
      "labels": [
        "help wanted"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/42/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "0dm"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/42",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/42",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:43.050410",
      "comments": []
    },
    {
      "issue_number": 48,
      "title": "Usecase: Sales Development Representative",
      "body": "How can we enable SDRs to automate their workflows?\r\n\r\nThis task involves creating recordings involving one or more relevant applications, and implementing tests for corresponding completions:\r\n\r\n- LinkedIn\r\n- SalesForce\r\n- Gmail\r\n- Others (please suggest as comments)\r\n\r\n\r\n\r\n",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-01T02:24:19Z",
      "updated_at": "2023-05-15T16:14:15Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/48/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/48",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/48",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:43.050414",
      "comments": []
    },
    {
      "issue_number": 49,
      "title": "Usecase: Customer Support Representative",
      "body": "How can we enable CSRs to automate their workflows?\r\n\r\nThis task involves creating recordings involving one or more relevant applications, and implementing tests for corresponding completions:\r\n\r\n- OracleHCM\r\n- WorkDay\r\n- SAP\r\n- Excel\r\n- Sharepoint\r\n- Outlook\r\n- LinkedIn\r\n- Teams\r\n- PowerBI",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-01T02:26:38Z",
      "updated_at": "2023-05-15T16:14:14Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/49/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/49",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/49",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:43.050419",
      "comments": []
    },
    {
      "issue_number": 50,
      "title": "Usecase: taxes",
      "body": "How can we enable individuals and/or businesses to automate their taxes:\r\n\r\nThis task involves creating recordings involving one or more relevant applications, and implementing tests for corresponding completions:\r\n\r\n- Bank website (e.g. RBC)\r\n- Accountant website\r\n- Custom forms in PDF editor\r\n- others?",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-01T02:27:55Z",
      "updated_at": "2023-05-15T16:14:13Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/50/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/50",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/50",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:43.050423",
      "comments": []
    },
    {
      "issue_number": 52,
      "title": "Usecase: Patient Advocate",
      "body": "How can we enable patients and/or patient advocates to automate their workflows?\r\n\r\nThis task involves creating recordings involving one or more relevant applications, and implementing tests for corresponding completions:\r\n\r\n- https://pafcm.my.site.com/cm/s/intake?language=en_US\r\n- https://canadianhealthadvocatesinc.ca/contact/",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-01T02:44:33Z",
      "updated_at": "2023-05-15T16:14:12Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/52/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/52",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/52",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:43.050426",
      "comments": []
    },
    {
      "issue_number": 53,
      "title": "Usecase: Marketer",
      "body": "How can we enable marketers to automate their workflows?\r\n\r\nThis task involves creating recordings involving one or more relevant applications, and implementing tests for corresponding completions:\r\n\r\n- Marketo\r\n- Salesforce\r\n- Thrift\r\n- Hubspot\r\n- Active campaigns\r\n\r\n- Facebook Messenger\r\n",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-01T03:20:35Z",
      "updated_at": "2023-05-15T16:14:11Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/53/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/53",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/53",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:43.050430",
      "comments": []
    },
    {
      "issue_number": 59,
      "title": "Usecase: Product Manger",
      "body": "How can we enable Product Managers to automate their workflows?\r\n\r\nThis task involves creating recordings involving one or more relevant applications, and implementing tests for corresponding completions:\r\n\r\n- Asana\r\n- Google docs\r\n- Figma\r\n- Hubspot\r\n- others?",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-01T19:46:56Z",
      "updated_at": "2023-05-15T16:14:08Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/59/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/59",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/59",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:43.050433",
      "comments": [
        {
          "author": "Jonathan-Sendsen",
          "body": "[Here](https://www.loom.com/share/e952d75f5a97432ebf088e463541d7b8) is a video to explain the use cases I want to automate. Also what do you mean by \"implementing tests for corresponding completions?\"  ",
          "created_at": "2023-05-06T20:45:12Z"
        },
        {
          "author": "abrichr",
          "body": "Amazing thank you! The next step is to install PuterBot and create a recording as per the instructions at openadapt.ai.\n\nPlease give it a shot and leave a comment here describing your experience!",
          "created_at": "2023-05-06T21:15:29Z"
        }
      ]
    },
    {
      "issue_number": 66,
      "title": "Usecase: scheduling",
      "body": "How can we enable people to automate their calendars?\r\n\r\nThis task involves creating recordings involving one or more relevant applications, and implementing tests for corresponding completions:\r\n\r\n- Gmail/Google Calendar\r\n- Outlook\r\n- what else?\r\n",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-02T22:45:45Z",
      "updated_at": "2023-05-15T16:14:04Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 2,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/66/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/66",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/66",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:43.219158",
      "comments": [
        {
          "author": "micol-altomare",
          "body": "Many of the [current](https://zapier.com/blog/best-ai-scheduling/) \"AI-powered calendars\" interface with the user's existing calendar and automatically schedule events given user preferences, considering buffer times, traffic, etc. I wanted to find automation opportunities that are currently not bei",
          "created_at": "2023-05-11T17:47:01Z"
        },
        {
          "author": "micol-altomare",
          "body": "@abrichr What would be your thoughts on the functionality for how OpenAdapt would automate the scheduling process (especially with potentially competing apps)?",
          "created_at": "2023-05-11T18:09:38Z"
        }
      ]
    },
    {
      "issue_number": 74,
      "title": "Usecase: Recruiter",
      "body": "How can we enable recruiters to automate repetitive tasks involving sourcing candidates?\r\n\r\nThis task involves creating recordings involving one or more relevant applications, and implementing tests for corresponding completions:\r\n\r\n- [LinkedIn Recruiter](https://business.linkedin.com/talent-solutions/recruiter)\r\n- [LinkedIn Talent Solutions](https://business.linkedin.com/talent-solutions)\r\n- [GetProspect](https://getprospect.com/)\r\n- [Reply.io](https://reply.io/)\r\n- [outreach.io](http://outreach.io/)\r\n- Gmail/Outlook\r\n- others?",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-03T14:53:07Z",
      "updated_at": "2023-05-15T16:13:59Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/74/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/74",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/74",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:43.379089",
      "comments": []
    },
    {
      "issue_number": 77,
      "title": "Usecase: Physician Documentation",
      "body": "How can we alleviate the drudgery of documentation for physicians?\r\n\r\nThis task involves creating recordings involving one or more relevant applications, and implementing tests for corresponding completions:\r\n\r\n- Cerner\r\n- Epic\r\n- others?\r\n\r\nClosely related: https://github.com/MLDSAI/PuterBot/issues/47\r\n\r\nCustom referral forms\r\n- specialist's office has a form. if you want to refer to them, you need to fill out that form. it's not standardized\r\n- e.g. if you're referring for an e.g. hand clinic have you done x-ray, so and so, in a specific format, takes lots of energy to fill out custom ones instead of a general thing\r\n- no central system to keep track of bookings",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-03T18:57:25Z",
      "updated_at": "2023-05-15T16:13:57Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/77/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/77",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/77",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:43.379105",
      "comments": []
    },
    {
      "issue_number": 79,
      "title": "Usecase: Options Trader",
      "body": "How can we enable options traders to automate repetitive tasks?\r\n\r\nThis task involves creating recordings involving one or more relevant applications, and implementing tests for corresponding completions:\r\n\r\n- Bloomberg\r\n- Excel\r\n- others?\r\n",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-03T21:14:03Z",
      "updated_at": "2023-05-15T16:13:56Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/79/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/79",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/79",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:43.379109",
      "comments": []
    },
    {
      "issue_number": 78,
      "title": "Usecase: Musician",
      "body": "How can we enable musicians to automate repetitive tasks?\r\n\r\nThis task involves creating recordings involving one or more relevant applications, and implementing tests for corresponding completions:\r\n\r\n- Ableton Live\r\n- Cubase\r\n- Audacity?\r\n- FL Studio\r\n- others?\r\n\r\n\r\nClosely related:\r\n\r\nhttps://github.com/voicepaw/so-vits-svc-fork\r\nhttps://www.youtube.com/watch?v=-9Ado8D3A-w&t=24s\r\n\r\n",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-03T21:11:23Z",
      "updated_at": "2023-05-15T16:13:56Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/78/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/78",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/78",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:43.379114",
      "comments": []
    },
    {
      "issue_number": 38,
      "title": "Bug: Decord for Mac ",
      "body": "Hello, I was trying to install MiniGPT 4, for that I had the run the command \"conda env create -f environment.yml\". This tried to install decord which gave me the error: \"\r\nPip subprocess error:\r\nERROR: Could not find a version that satisfies the requirement decord==0.6.0 (from versions: none)\r\nERROR: No matching distribution found for decord==0.6.0\r\n\r\nfailed\r\n\r\nCondaEnvException: Pip failed\r\n\r\n(base) ahmethamamcioglu@Ahmet-MacBook-Air MiniGPT-4 % pip install --upgrade pip\r\n\r\nRequirement already satisfied: pip in /Users/ahmethamamcioglu/anaconda3/lib/python3.10/site-packages (22.3.1)\r\nCollecting pip\r\n  Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\r\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 2.1/2.1 MB 14.2 MB/s eta 0:00:00\r\nInstalling collected packages: pip\r\n  Attempting uninstall: pip\r\n    Found existing installation: pip 22.3.1\r\n    Uninstalling pip-22.3.1:\r\n      Successfully uninstalled pip-22.3.1\r\nSuccessfully installed pip-23.1.2\r\n(base) ahmethamamcioglu@Ahmet-MacBook-Air MiniGPT-4 % pip install decord==0.6.0\r\n\r\nERROR: Could not find a version that satisfies the requirement decord==0.6.0 (from versions: none)\r\nERROR: No matching distribution found for decord==0.6.0\r\n(base) ahmethamamcioglu@Ahmet-MacBook-Air MiniGPT-4 % pip install decord\r\n\r\nERROR: Could not find a version that satisfies the requirement decord (from versions: none)\r\nERROR: No matching distribution found for decord\" I also tried to install it separately but it did not work.  I found this thread online: https://github.com/dmlc/decord/issues/213 which did not have a solution for the same problem. I was wondering if anybody could help?",
      "state": "closed",
      "author": "ahmetutku",
      "author_type": "User",
      "created_at": "2023-04-27T23:46:51Z",
      "updated_at": "2023-05-13T02:17:38Z",
      "closed_at": "2023-05-13T02:17:38Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/38/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/38",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/38",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:43.379120",
      "comments": [
        {
          "author": "abrichr",
          "body": "Hi @ahmetutku ,\r\n\r\nThere appears to be an issue and solution in the MiniGPT-4 repo: https://github.com/Vision-CAIR/MiniGPT-4/issues/64#issuecomment-1524987088\r\n\r\nCan you please try it and let us know if it resolves the issue? Thank you!",
          "created_at": "2023-04-28T16:11:54Z"
        },
        {
          "author": "abrichr",
          "body": "@ahmetutku any update on this?",
          "created_at": "2023-05-03T04:27:37Z"
        },
        {
          "author": "ahmetutku",
          "body": "@abrichr Using the comment I was able to download Decord. So it is solved; thank you! ",
          "created_at": "2023-05-04T15:30:51Z"
        }
      ]
    },
    {
      "issue_number": 92,
      "title": "Usecase: paralegal",
      "body": "How can we enable paralegals to automate repetitive tasks?\n\nThis task involves creating recordings involving one or more relevant applications, and implementing tests for corresponding completions:\n\n- Word\n- PDF viewer\n- Excel\n- others?",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-06T17:47:44Z",
      "updated_at": "2023-05-11T17:56:46Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/92/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/92",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/92",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:43.596152",
      "comments": []
    },
    {
      "issue_number": 118,
      "title": "Update logging for multiprocess",
      "body": "Python logging is not multiprocess-safe so another logging approach is needed.\r\n\r\nSome ideas/insight might be found here: https://docs.python.org/3/howto/logging-cookbook.html#logging-to-a-single-file-from-multiple-processes\r\n\r\nThis may involve a similar approach or something else, keep in mind our use is not as straight-forward as the example above. The solution should facilitate later saving and sharing of logs. The current use of loguru is not required.\r\n\r\nPlease discuss potential solutions here.\r\n\r\n",
      "state": "open",
      "author": "apgorton",
      "author_type": "User",
      "created_at": "2023-05-08T05:22:04Z",
      "updated_at": "2023-05-11T04:01:11Z",
      "closed_at": null,
      "labels": [
        "help wanted"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 3,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/118/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [
        "dianzrong"
      ],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/118",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/118",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:43.596205",
      "comments": [
        {
          "author": "dianzrong",
          "body": "**Solution 1: logging/loguru**\r\nImplementation:\r\n\r\n- Use multiprocessing and logging and one of the 3 sub-options as outlined in that link:\r\n\r\n  1. Use a SocketHandler and socket server\r\n  2. Can write a customized handler using the [Lock](https://docs.python.org/3/library/multiprocessing.html#multi",
          "created_at": "2023-05-11T03:59:39Z"
        },
        {
          "author": "dianzrong",
          "body": "**Solution 2: Logbook**\r\nImplementation:\r\n\r\n- Use multiprocessing and logbook\r\n\r\nBenefits:\r\n- easily saves multiprocess messages into a file\r\n\r\nLimitations:\r\n- Hasn’t been updated in 7 years so may not be compatible with Python 3.10",
          "created_at": "2023-05-11T03:59:57Z"
        },
        {
          "author": "dianzrong",
          "body": "**Solution 3: Fluentd**\r\nImplementation:\r\n\r\n- Use the multi-process feature of fluent-logger-python and multiprocessing\r\n\r\nBenefits:\r\n\r\n- easily saves multiprocess messages into a file\r\n- Can be used with logging/loguru\r\n\r\nLimitations:\r\n\r\n- Python version isn’t as much of a priority for the company ",
          "created_at": "2023-05-11T04:01:03Z"
        }
      ]
    },
    {
      "issue_number": 114,
      "title": "Usecase: Affiliate Marketer",
      "body": "How can we enable affiliate marketers to automate repetitive tasks and scale their online presence?\r\n\r\nThis task involves creating recordings involving one or more relevant applications, and implementing tests for corresponding completions:\r\n\r\n- Amazon Associates program login\r\n- Content sourcing (e.g. notebooks, phone screen protectors, etc.) and affiliate link generation\r\n- Video content creation\r\n- Copy content creation (i.e. written and audio) \r\n- Posting (i.e. YouTube, Pinterest, TikTok, etc.)\r\n",
      "state": "open",
      "author": "flyguy712",
      "author_type": "User",
      "created_at": "2023-05-08T00:23:52Z",
      "updated_at": "2023-05-08T05:30:37Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/114/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/114",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/114",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:45.345637",
      "comments": []
    },
    {
      "issue_number": 29,
      "title": "Bug: Setting Up In MacOS",
      "body": "Hello,\r\nI was trying to set up everything in MacOS. I removed \"pywin32==306\" from the requirements.txt file instead of the readme file since it is not compatible with my Mac. However, I have been getting errors (as seen in the images attached).\r\n<img width=\"1440\" alt=\"Screen Shot 2023-04-21 at 19 25 05\" src=\"https://user-images.githubusercontent.com/82727731/233760368-c1ceba08-8243-4bc0-8ccf-e0def99337c6.png\">\r\n<img width=\"1440\" alt=\"Screen Shot 2023-04-21 at 19 25 22\" src=\"https://user-images.githubusercontent.com/82727731/233760369-a41487ba-083f-44a8-84c2-102fd7eee898.png\">\r\n",
      "state": "closed",
      "author": "ahmetutku",
      "author_type": "User",
      "created_at": "2023-04-22T03:41:38Z",
      "updated_at": "2023-05-07T05:15:30Z",
      "closed_at": "2023-05-07T05:15:30Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/29/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/29",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/29",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:45.345686",
      "comments": [
        {
          "author": "0dm",
          "body": "Hi @ahmetutku,\r\n\r\nI also had to remove the pywin32 requirement on MacOS. I recommend removing your files and trying again, with these exact steps (from the README):\r\n\r\n```\r\n git clone https://github.com/MLDSAI/puterbot.git\r\n cd puterbot\r\n python3.10 -m venv .venv\r\n source .venv/bin/activate\r\n pip in",
          "created_at": "2023-04-22T07:49:29Z"
        },
        {
          "author": "abrichr",
          "body": "Thank you @ahmetutku and @0dm ! \r\n\r\n> I also had to remove the pywin32 requirement on MacOS. I\r\n\r\nFixed in https://github.com/MLDSAI/puterbot/pull/31\r\n\r\n> Longer recordings tend to cause more issues on my end.\r\n\r\nThank you for flagging, there is an open issue here: https://github.com/MLDSAI/puterbot",
          "created_at": "2023-04-22T23:19:15Z"
        },
        {
          "author": "abrichr",
          "body": "@ahmetutku can we close this?",
          "created_at": "2023-05-03T04:28:51Z"
        },
        {
          "author": "ahmetutku",
          "body": "@abrichr  Yup, problem solved! Thank you.",
          "created_at": "2023-05-04T15:19:18Z"
        }
      ]
    },
    {
      "issue_number": 87,
      "title": "Usecase: human genetics researcher",
      "body": "Scenario:\r\n\r\n- obtain patient id from spreadsheet (first column, bunch of numbers)\r\n- copy paste into epic patient lookup (citrix)\r\n- patient lookup, paste mrn\r\n- chart review tab, labs subtab\r\n- check if any presence of genome diagnostics\r\n- click \"genome diagnostics\"\r\n- click \"external genetic test stored\"\r\n- scroll down to where it says \"scans on order\"\r\n- click on blue link with scan title\r\n- if no genome diagnostic, click \"Encounters\" tab, \"ChartMaxx\" button\r\n- click patient name to expand tree\r\n- click \"genetic testing\"\r\n- click \"sent out genetic testing\" (may be mulitple)\r\n- press down button until page says \"genetic testing report\" (or similar)\r\n- extract gene name and mutation (e.g. RS1 gene, c.589 C>T mutation) (may be multiple)\r\n- paste into excel\r\n- then go to clinvar (database of clinical variants)\r\n- google \"clinvar\" open first link\r\n- paste from excel into search: <gene name> <variant>\r\n- copy and paste interpretation (e.g. \"pathogenic\")\r\n- paste into excel spreadsheet \"categorization\"\r\n\r\nScenario:\r\n- parse electrophysiology results from pdf in citrix\r\n- insert into excel",
      "state": "open",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-05T23:59:48Z",
      "updated_at": "2023-05-06T14:47:38Z",
      "closed_at": null,
      "labels": [
        "usecase"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 0,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/87/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/87",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/87",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:45.530268",
      "comments": []
    },
    {
      "issue_number": 80,
      "title": "Refactor Website",
      "body": "Re-purpose code from http://mldsai.com/ to build OpenAdapt.ai/OpenAdapt.io\r\n\r\nMLDSAI -> OAAI\r\n\r\nhttps://github.com/MLDSAI/puterbot_web/issues/1\r\n\r\nNew repo",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-05-03T22:32:32Z",
      "updated_at": "2023-05-04T14:44:45Z",
      "closed_at": "2023-05-04T14:44:45Z",
      "labels": [
        "help wanted"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/80/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/80",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/80",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:45.530302",
      "comments": [
        {
          "author": "abrichr",
          "body": "https://openadapt.ai/",
          "created_at": "2023-05-04T14:44:44Z"
        }
      ]
    },
    {
      "issue_number": 7,
      "title": "Bug: possible exceeding memory limit?",
      "body": "when I run gui_process_automation.py\r\n\r\ncommand line (steps to reproduce)\r\n/Users/puterbot/.venv/bin/python /Users/puterbot/puterbot/gui_process_automation.py\r\n\r\nException\r\n/Users/puterbot/.venv/lib/python3.10/site-packages/pkg_resources/__init__.py:121: DeprecationWarning: pkg_resources is deprecated as an API warnings.warn(\"pkg_resources is deprecated as an API\", DeprecationWarning)\r\n/Users/puterbot/.venv/lib/python3.10/site-packages/pkg_resources/__init__.py:2870: DeprecationWarning: Deprecated call to `pkg_resources.declare_namespace('mpl_toolkits')`.\r\nImplementing implicit namespace packages (as specified in PEP 420) is preferred to `pkg_resources.declare_namespace`. See https://setuptools.pypa.io/en/latest/references/keywords.html#keyword-namespace-packages\r\n  declare_namespace(pkg)\r\n/Users/puterbot/.venv/lib/python3.10/site-packages/pkg_resources/__init__.py:2870: DeprecationWarning: Deprecated call to `pkg_resources.declare_namespace('google')`.\r\nImplementing implicit namespace packages (as specified in PEP 420) is preferred to `pkg_resources.declare_namespace`. See https://setuptools.pypa.io/en/latest/references/keywords.html#keyword-namespace-packages\r\n  declare_namespace(pkg)\r\n/Users/puterbot/.venv/lib/python3.10/site-packages/pkg_resources/__init__.py:2870: DeprecationWarning: Deprecated call to `pkg_resources.declare_namespace('zope')`.\r\nImplementing implicit namespace packages (as specified in PEP 420) is preferred to `pkg_resources.declare_namespace`. See https://setuptools.pypa.io/en/latest/references/keywords.html#keyword-namespace-packages\r\n  declare_namespace(pkg)\r\nDownloading (…)olve/main/vocab.json: 100%|███| 798k/798k [00:00<00:00, 36.9MB/s]\r\nDownloading (…)olve/main/merges.txt: 100%|███| 456k/456k [00:00<00:00, 11.8MB/s]\r\nDownloading (…)in/added_tokens.json: 100%|█| 4.04k/4.04k [00:00<00:00, 1.83MB/s]\r\nDownloading (…)cial_tokens_map.json: 100%|██████| 357/357 [00:00<00:00, 181kB/s]\r\nDownloading (…)okenizer_config.json: 100%|██████| 619/619 [00:00<00:00, 249kB/s]\r\nDownloading (…)lve/main/config.json: 100%|██████| 930/930 [00:00<00:00, 107kB/s]\r\nDownloading pytorch_model.bin: 100%|███████| 24.2G/24.2G [22:01<00:00, 18.3MB/s]\r\n. zsh: killed     /Users/puterbot/.venv/bin/python\r\n",
      "state": "open",
      "author": "alvolate",
      "author_type": "User",
      "created_at": "2023-04-13T19:56:17Z",
      "updated_at": "2023-05-03T04:29:14Z",
      "closed_at": null,
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 14,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/7/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/7",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/7",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:45.739238",
      "comments": [
        {
          "author": "abrichr",
          "body": "@alvolate:\r\n\r\nThank you for submitting an issue. Please modify it to follow the format specified at the bottom of the Readme, under \"Submitting an Issue\":\r\n\r\n> Please submit any issues to https://github.com/MLDSAI/puterbot/issues with the following information:\r\n> Problem description (please include",
          "created_at": "2023-04-13T20:05:36Z"
        },
        {
          "author": "alvolate",
          "body": "/Users/puterbot/.venv/bin/python /Users/puterbot/puterbot/gui_process_automation.py\r\n\r\nI simply ran the code using this command line in the terminal.",
          "created_at": "2023-04-13T20:06:52Z"
        },
        {
          "author": "abrichr",
          "body": "Which code?",
          "created_at": "2023-04-13T20:07:04Z"
        },
        {
          "author": "alvolate",
          "body": "/Users/puterbot/.venv/bin/python /Users/puterbot/puterbot/gui_process_automation.py\r\n\r\nthis one ",
          "created_at": "2023-04-13T20:07:31Z"
        },
        {
          "author": "abrichr",
          "body": "@alvolate I don't have this file, it's on your computer, not anywhere else. Please upload it somewhere accessible and provide step by step instructions for reproducing your error. Make it easy for others to help you.",
          "created_at": "2023-04-13T20:08:16Z"
        }
      ]
    },
    {
      "issue_number": 41,
      "title": "Unable to play back recordings",
      "body": "Whenever I try to play back a recording, I get this error. I'm not sure what the playbacks are supposed to look like since I can't test them. Any help is appreciated! \r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Angel\\Desktop\\puterbot\\puterbot\\replay.py\", line 43, in <module>\r\n    fire.Fire(replay)\r\n  File \"C:\\Users\\Angel\\Desktop\\puterbot\\venv\\lib\\site-packages\\fire\\core.py\", line 141, in Fire\r\n    component_trace = _Fire(component, args, parsed_flag_args, context, name)\r\n  File \"C:\\Users\\Angel\\Desktop\\puterbot\\venv\\lib\\site-packages\\fire\\core.py\", line 466, in _Fire\r\n    component, remaining_args = _CallAndUpdateTrace(\r\n  File \"C:\\Users\\Angel\\Desktop\\puterbot\\venv\\lib\\site-packages\\fire\\core.py\", line 681, in _CallAndUpdateTrace\r\n    component = fn(*varargs, **kwargs)\r\n  File \"C:\\Users\\Angel\\Desktop\\puterbot\\puterbot\\replay.py\", line 21, in replay\r\n    strategy_class_by_name = get_strategy_class_by_name()\r\n  File \"C:\\Users\\Angel\\Desktop\\puterbot\\puterbot\\utils.py\", line 375, in get_strategy_class_by_name\r\n    from strategies import BaseReplayStrategy\r\n  File \"C:\\Users\\Angel\\Desktop\\puterbot\\puterbot\\strategies\\__init__.py\", line 1, in <module>\r\n    from strategies.base import BaseReplayStrategy\r\n  File \"C:\\Users\\Angel\\Desktop\\puterbot\\puterbot\\strategies\\base.py\", line 15, in <module>\r\n    from puterbot.models import InputEvent, Recording, Screenshot\r\n  File \"C:\\Users\\Angel\\Desktop\\puterbot\\../puterbot\\puterbot\\models.py\", line 13, in <module>\r\n    class Recording(Base):\r\n  File \"C:\\Users\\Angel\\Desktop\\puterbot\\venv\\lib\\site-packages\\sqlalchemy\\orm\\decl_api.py\", line 76, in __init__\r\n    _as_declarative(reg, cls, dict_)\r\n  File \"C:\\Users\\Angel\\Desktop\\puterbot\\venv\\lib\\site-packages\\sqlalchemy\\orm\\decl_base.py\", line 126, in _as_declarative\r\n    return _MapperConfig.setup_mapping(registry, cls, dict_, None, {})\r\n  File \"C:\\Users\\Angel\\Desktop\\puterbot\\venv\\lib\\site-packages\\sqlalchemy\\orm\\decl_base.py\", line 183, in setup_mapping\r\n    return cfg_cls(registry, cls_, dict_, table, mapper_kw)\r\n  File \"C:\\Users\\Angel\\Desktop\\puterbot\\venv\\lib\\site-packages\\sqlalchemy\\orm\\decl_base.py\", line 331, in __init__\r\n    self._setup_table(table)\r\n  File \"C:\\Users\\Angel\\Desktop\\puterbot\\venv\\lib\\site-packages\\sqlalchemy\\orm\\decl_base.py\", line 854, in _setup_table\r\n    table_cls(\r\n  File \"<string>\", line 2, in __new__\r\n  File \"C:\\Users\\Angel\\Desktop\\puterbot\\venv\\lib\\site-packages\\sqlalchemy\\util\\deprecations.py\", line 309, in warned\r\n    return fn(*args, **kwargs)\r\n  File \"C:\\Users\\Angel\\Desktop\\puterbot\\venv\\lib\\site-packages\\sqlalchemy\\sql\\schema.py\", line 594, in __new__\r\n    raise exc.InvalidRequestError(\r\nsqlalchemy.exc.InvalidRequestError: Table 'recording' is already defined for this MetaData instance.  Specify 'extend_existing=True' to redefine options and columns on an existing Table object.\r\n```\r\n",
      "state": "closed",
      "author": "angelala3252",
      "author_type": "User",
      "created_at": "2023-04-30T00:53:00Z",
      "updated_at": "2023-05-02T20:44:09Z",
      "closed_at": "2023-05-02T20:44:08Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 5,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/41/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/41",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/41",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:45.950513",
      "comments": [
        {
          "author": "angelala3252",
          "body": "I was able to resolve the above error by adding ```  __table_args__ = {'extend_existing': True} ``` under every ```__tablename__``` line. Now, I'm getting this error:\r\n`ImportError: cannot import name 'NaiveReplayStrategy' from partially initialized module 'strategies.naive' (most likely due to a ci",
          "created_at": "2023-04-30T01:15:27Z"
        },
        {
          "author": "abrichr",
          "body": "Thanks @angelala3252 ! Can you please provide the output of the following commands?\r\n\r\n- `python --version`\r\n- `python -c \"import sqlalchemy; print(sqlalchemy.__version__)\"`\r\n- `git status`\r\n\r\nThank you!",
          "created_at": "2023-04-30T18:28:13Z"
        },
        {
          "author": "angelala3252",
          "body": "Here's the output:\r\n\r\n- ``` Python 3.10.1```\r\n- ``` 1.4.43```\r\n- \r\n```\r\n\r\nOn branch main\r\nYour branch is up to date with 'origin/main'.\r\n\r\nChanges to be committed:\r\n  (use \"git restore --staged <file>...\" to unstage)\r\n        new file:   puterbot/strategies/minigpt4.py\r\n\r\nChanges not staged for comm",
          "created_at": "2023-05-01T01:19:27Z"
        },
        {
          "author": "abrichr",
          "body": "Thanks @angelala3252! Please try this:\r\n\r\n1. Create a new branch:\r\n\r\n```\r\ngit checkout -b feat/my-feature\r\n```\r\n\r\n2. Commit all your changes and push them:\r\n\r\n```\r\ngit commit -am \"work in progress\"\r\ngit push\r\n```\r\n\r\n3. Check out the main branch:\r\n\r\n```\r\ngit checkout main\r\n```\r\n\r\n4. Pull the latest c",
          "created_at": "2023-05-01T01:45:27Z"
        },
        {
          "author": "angelala3252",
          "body": "The bug was an issue on my end that I was able to resolve by only keeping my relevant changes. Thanks for the help!",
          "created_at": "2023-05-02T20:44:08Z"
        }
      ]
    },
    {
      "issue_number": 11,
      "title": "Error in importing models module",
      "body": "<img width=\"521\" alt=\"image\" src=\"https://user-images.githubusercontent.com/65433817/232506628-3be150d2-16a6-4dbd-be71-42eb451a4e06.png\">\r\n\r\nI want to import models to have the access to the `InputEvent` object. Please let me know if this is how we have import or InputEvent.\r\n\r\nAnother way i can think of is creating namedTuple as seen record.py as well:\r\n```python\r\nfrom typing import List\r\nfrom collections import namedtuple\r\n\r\nInputEvent = namedtuple('InputEvent', ['type', 'properties'])\r\nScreenshot = namedtuple('Screenshot', ['png_data'])\r\nWindowEvent = namedtuple('WindowEvent', ['type', 'properties'])\r\n```\r\n\r\nPlease guide me. Thank you.",
      "state": "closed",
      "author": "KrishPatel13",
      "author_type": "User",
      "created_at": "2023-04-17T14:03:42Z",
      "updated_at": "2023-04-23T00:08:06Z",
      "closed_at": "2023-04-23T00:08:06Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 4,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/11/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 1,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/11",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/11",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:46.128834",
      "comments": [
        {
          "author": "abrichr",
          "body": "Hi @KrishPatel13 ,\r\n\r\nTry This:\r\n\r\n```\r\nfrom puterbot.models import InputEvent\r\n```\r\n\r\n(You should not need to create any `namedtuples`.)",
          "created_at": "2023-04-17T14:44:02Z"
        },
        {
          "author": "abrichr",
          "body": "@KrishPatel13 please have a look at the updated instructions in the README: https://github.com/MLDSAI/puterbot/tree/main#instructions",
          "created_at": "2023-04-17T23:18:22Z"
        },
        {
          "author": "abrichr",
          "body": "Hi @KrishPatel13 , were you able to resolve the issue you described at the top of this thread?",
          "created_at": "2023-04-23T00:06:02Z"
        },
        {
          "author": "KrishPatel13",
          "body": "Yes, I was able to resolve it.",
          "created_at": "2023-04-23T00:07:09Z"
        }
      ]
    },
    {
      "issue_number": 19,
      "title": "Tests failing on Windows 10 due to timestamp mismatch",
      "body": "When run with pytest, most tests are failing on Windows 10 due to the timestamps not matching.\r\n\r\nWindows 10\r\npython 3.10.11\r\n\r\nExample mismatch in test assert:\r\n```\r\nE             'timestamp': 5.775},\r\nE         -  {'children': [{'mouse_pressed': True, 'timestamp': 11.88},\r\nE         +  {'children': [{'mouse_pressed': True, 'timestamp': 11.880000000000003},\r\nE         ?                                                          +++++++++++++\r\nE         -                {'mouse_pressed': False, 'timestamp': 12.155000000000001},\r\nE         ?                                                                       ^\r\nE         +                {'mouse_pressed': False, 'timestamp': 12.155000000000003},\r\nE         ?                                                                       ^\r\nE         -                {'mouse_pressed': True, 'timestamp': 12.21},\r\nE         +                {'mouse_pressed': True, 'timestamp': 12.210000000000003},\r\nE         ?                                                          +++++++++++++\r\nE         -                {'mouse_pressed': False, 'timestamp': 12.485000000000001}],\r\nE         ?                                                                       ^\r\nE         +                {'mouse_pressed': False, 'timestamp': 12.485000000000003}],\r\nE         ?                                                                       ^\r\nE             'mouse_button_name': 'left',\r\nE             'name': 'doubleclick',\r\nE             'timestamp': 11.275},\r\nE            {'mouse_button_name': 'right',\r\nE             'mouse_pressed': True,\r\nE             'name': 'click',\r\nE             'timestamp': 16.775},\r\nE            {'mouse_button_name': 'right',\r\nE             'mouse_pressed': False,\r\nE             'name': 'click',\r\nE             'timestamp': 17.049999999999997},\r\nE         -  {'children': [{'mouse_pressed': True, 'timestamp': 23.759999999999998},\r\nE         ?                                                         ^^^^^^^^^^^^^^\r\nE         +  {'children': [{'mouse_pressed': True, 'timestamp': 23.76},\r\nE         ?                                                         ^\r\nE         -                {'mouse_pressed': False, 'timestamp': 24.034999999999997}],\r\nE         ?                                                           ^^^^^^^^^^^^^\r\nE         +                {'mouse_pressed': False, 'timestamp': 24.035}],\r\nE         ?       \r\n``` ",
      "state": "closed",
      "author": "apgorton",
      "author_type": "User",
      "created_at": "2023-04-17T22:59:45Z",
      "updated_at": "2023-04-18T18:33:03Z",
      "closed_at": "2023-04-18T18:33:02Z",
      "labels": [
        "bug"
      ],
      "label_count": 1,
      "has_labels": true,
      "comments_count": 8,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/19/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/19",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/19",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:46.318293",
      "comments": [
        {
          "author": "abrichr",
          "body": "Thanks @apgorton ! Can you please include the complete output so that we can see which tests are failing?\r\n\r\nAs a workaround try setting `OVERRIDE_DOUBLE_CLICK_INTERVAL_SECONDS = 10` in https://github.com/MLDSAI/puterbot/blob/main/tests/puterbot/test_events.py#L30",
          "created_at": "2023-04-17T23:02:14Z"
        },
        {
          "author": "apgorton",
          "body": "The output is rather long. Here is the output up to the first assert error when run with ```pytest -vv```\r\n```\r\n============================= test session starts =============================\r\nplatform win32 -- Python 3.11.3, pytest-7.1.3, pluggy-1.0.0 -- puterbot\\.venv\\Scripts\\python.exe\r\ncachedir:",
          "created_at": "2023-04-17T23:08:05Z"
        },
        {
          "author": "apgorton",
          "body": "> Thanks @apgorton ! Can you please include the complete output so that we can see which tests are failing?\r\n> \r\n> As a workaround try setting `OVERRIDE_DOUBLE_CLICK_INTERVAL_SECONDS = 10` in https://github.com/MLDSAI/puterbot/blob/main/tests/puterbot/test_events.py#L30\r\n\r\nI tried this, same result.",
          "created_at": "2023-04-17T23:10:35Z"
        },
        {
          "author": "abrichr",
          "body": "Can you please clarify what you mean by \"same result\"? i.e. do you mean just that the tests are still failing, or that the log output is exactly the same?\r\n\r\nCan you please set `OVERRIDE_DOUBLE_CLICK_INTERVAL_SECONDS = 10`, run `pytest`, and paste the results here?",
          "created_at": "2023-04-17T23:16:00Z"
        },
        {
          "author": "apgorton",
          "body": "The timestamps are larger but the failure is the same. The difference between the timestamps being compared is roughly the same.\r\n```\r\n>       assert expected_events == actual_events\r\nE       AssertionError: assert [{'mouse_button_name': 'right',\\n  'mouse_pressed': True,\\n  'name': 'click',\\n  'tim",
          "created_at": "2023-04-17T23:21:09Z"
        }
      ]
    },
    {
      "issue_number": 4,
      "title": "Modify record.py to accept a command line description of the task that is being performed",
      "body": "We would like to implement the following functionality:\r\n\r\n```\r\npython puterbot/record.py \"<description of the task to be recorded>\"\r\n```\r\n\r\nFor example:\r\n\r\n```\r\npython puterbot/record.py \"a physician auditing billing codes (excel and powerchart)\"\r\n```\r\n\r\nThis should be saved to the `Recording` table, and passed into large language model as context.",
      "state": "closed",
      "author": "abrichr",
      "author_type": "User",
      "created_at": "2023-04-12T22:42:11Z",
      "updated_at": "2023-04-17T17:49:43Z",
      "closed_at": "2023-04-17T17:49:42Z",
      "labels": [
        "enhancement",
        "help wanted"
      ],
      "label_count": 2,
      "has_labels": true,
      "comments_count": 1,
      "reactions": {
        "url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/4/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "assignees": [],
      "milestone": null,
      "html_url": "https://github.com/OpenAdaptAI/OpenAdapt/issues/4",
      "api_url": "https://api.github.com/repos/OpenAdaptAI/OpenAdapt/issues/4",
      "repository": "OpenAdaptAI/OpenAdapt",
      "extraction_date": "2025-06-22T09:50:46.526313",
      "comments": [
        {
          "author": "abrichr",
          "body": "Implemented in https://github.com/MLDSAI/puterbot/pull/16",
          "created_at": "2023-04-17T17:49:42Z"
        }
      ]
    }
  ]
}